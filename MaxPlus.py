# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.5
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_MaxPlus', [dirname(__file__)])
        except ImportError:
            import _MaxPlus
            return _MaxPlus
        if fp is not None:
            try:
                _mod = imp.load_module('_MaxPlus', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _MaxPlus = swig_import_helper()
    del swig_import_helper
else:
    import _MaxPlus
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


try:
    import weakref
    weakref_proxy = weakref.proxy
except:
    weakref_proxy = lambda x: x


class SwigPyIterator(object):
    """Proxy of C++ swig::SwigPyIterator class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _MaxPlus.delete_SwigPyIterator
    __del__ = lambda self : None;
    def value(self):
        """value(SwigPyIterator self) -> PyObject *"""
        return _MaxPlus.SwigPyIterator_value(self)

    def incr(self, n=1):
        """
        incr(SwigPyIterator self, size_t n=1) -> SwigPyIterator
        incr(SwigPyIterator self) -> SwigPyIterator
        """
        return _MaxPlus.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        """
        decr(SwigPyIterator self, size_t n=1) -> SwigPyIterator
        decr(SwigPyIterator self) -> SwigPyIterator
        """
        return _MaxPlus.SwigPyIterator_decr(self, n)

    def distance(self, *args):
        """distance(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t"""
        return _MaxPlus.SwigPyIterator_distance(self, *args)

    def equal(self, *args):
        """equal(SwigPyIterator self, SwigPyIterator x) -> bool"""
        return _MaxPlus.SwigPyIterator_equal(self, *args)

    def copy(self):
        """copy(SwigPyIterator self) -> SwigPyIterator"""
        return _MaxPlus.SwigPyIterator_copy(self)

    def next(self):
        """next(SwigPyIterator self) -> PyObject *"""
        return _MaxPlus.SwigPyIterator_next(self)

    def __next__(self):
        """__next__(SwigPyIterator self) -> PyObject *"""
        return _MaxPlus.SwigPyIterator___next__(self)

    def previous(self):
        """previous(SwigPyIterator self) -> PyObject *"""
        return _MaxPlus.SwigPyIterator_previous(self)

    def advance(self, *args):
        """advance(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _MaxPlus.SwigPyIterator_advance(self, *args)

    def __eq__(self, *args):
        """__eq__(SwigPyIterator self, SwigPyIterator x) -> bool"""
        return _MaxPlus.SwigPyIterator___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(SwigPyIterator self, SwigPyIterator x) -> bool"""
        return _MaxPlus.SwigPyIterator___ne__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _MaxPlus.SwigPyIterator___iadd__(self, *args)

    def __isub__(self, *args):
        """__isub__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _MaxPlus.SwigPyIterator___isub__(self, *args)

    def __add__(self, *args):
        """__add__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"""
        return _MaxPlus.SwigPyIterator___add__(self, *args)

    def __sub__(self, *args):
        """
        __sub__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator
        __sub__(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t
        """
        return _MaxPlus.SwigPyIterator___sub__(self, *args)

    def __iter__(self): return self
SwigPyIterator_swigregister = _MaxPlus.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

SHARED_PTR_DISOWN = _MaxPlus.SHARED_PTR_DISOWN
__version__ = "1.0"

class _static_generator_property(object):
    ''' Descriptor class used for declaring computed generator properties that don't require a class instance. '''
    def __init__(self, count_method, getter_method):
        self.count_method = count_method
        self.getter_method = getter_method
    def __get__(self, instance, owner):
        return (self.getter_method.__get__(None, owner)(i) for i in xrange(self.count_method.__get__(None, owner)()))


def Now():
  """Now() -> TimeValue"""
  return _MaxPlus.Now()

def Identity():
  """Identity() -> Matrix3"""
  return _MaxPlus.Identity()

def NegInfinity():
  """NegInfinity() -> TimeValue"""
  return _MaxPlus.NegInfinity()

def PosInfinity():
  """PosInfinity() -> TimeValue"""
  return _MaxPlus.PosInfinity()

def Forever():
  """Forever() -> Interval"""
  return _MaxPlus.Forever()

def Never():
  """Never() -> Interval"""
  return _MaxPlus.Never()

def TicksToSecs(*args):
  """TicksToSecs(int ticks) -> float"""
  return _MaxPlus.TicksToSecs(*args)

def SecsToTicks(*args):
  """SecsToTicks(float secs) -> int"""
  return _MaxPlus.SecsToTicks(*args)

def MakeNameScripterCompatible(*args):
  """MakeNameScripterCompatible(::MSTR & name)"""
  return _MaxPlus.MakeNameScripterCompatible(*args)
class Wrapper(object):
    """The base class of all MaxPlus objects that wrap an object derived from ::MaxHeapOperators in the 3ds Max C++ SDK."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _Clone(self):
        """_Clone(Wrapper self) -> Wrapper"""
        return _MaxPlus.Wrapper__Clone(self)

    def _ToString(self):
        """_ToString(Wrapper self) -> ::WStr"""
        return _MaxPlus.Wrapper__ToString(self)

    def _IsValidWrapper(self):
        """_IsValidWrapper(Wrapper self) -> bool"""
        return _MaxPlus.Wrapper__IsValidWrapper(self)

    def __str__(self):
        """__str__(Wrapper self) -> char const *"""
        return _MaxPlus.Wrapper___str__(self)

    def __nonzero__(self):
        """__nonzero__(Wrapper self) -> bool"""
        return _MaxPlus.Wrapper___nonzero__(self)

    def _IsSamePtr(self, *args):
        """_IsSamePtr(Wrapper self, Wrapper w) -> bool"""
        return _MaxPlus.Wrapper__IsSamePtr(self, *args)

    def _TypeName(self):
        """_TypeName(Wrapper self) -> char const *"""
        return _MaxPlus.Wrapper__TypeName(self)

    def GetUnwrappedPtr(self):
        """GetUnwrappedPtr(Wrapper self) -> void *"""
        return _MaxPlus.Wrapper_GetUnwrappedPtr(self)

    __swig_destroy__ = _MaxPlus.delete_Wrapper
    __del__ = lambda self : None;
Wrapper_swigregister = _MaxPlus.Wrapper_swigregister
Wrapper_swigregister(Wrapper)

class Class_ID(Wrapper):
    """Represents the unique class ID for a 3ds Max plug-in. Plus-ins with different SuperClassIds may have the same class-id."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Class_ID self) -> Class_ID
        __init__(Autodesk::Max::Class_ID self, Class_ID cid) -> Class_ID
        __init__(Autodesk::Max::Class_ID self, ulong aa, ulong bb) -> Class_ID
        """
        this = _MaxPlus.new_Class_ID(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetPartA(self):
        """GetPartA(Class_ID self) -> ULONG"""
        return _MaxPlus.Class_ID_GetPartA(self)

    def GetPartB(self):
        """GetPartB(Class_ID self) -> ULONG"""
        return _MaxPlus.Class_ID_GetPartB(self)

    def SetPartA(self, *args):
        """SetPartA(Class_ID self, ulong aa)"""
        return _MaxPlus.Class_ID_SetPartA(self, *args)

    def SetPartB(self, *args):
        """SetPartB(Class_ID self, ulong bb)"""
        return _MaxPlus.Class_ID_SetPartB(self, *args)

    def __eq__(self, *args):
        """__eq__(Class_ID self, Class_ID cid) -> bool"""
        return _MaxPlus.Class_ID___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Class_ID self, Class_ID cid) -> bool"""
        return _MaxPlus.Class_ID___ne__(self, *args)

    def __lt__(self, *args):
        """__lt__(Class_ID self, Class_ID rhs) -> bool"""
        return _MaxPlus.Class_ID___lt__(self, *args)

    def _ToString(self):
        """_ToString(Class_ID self) -> ::WStr"""
        return _MaxPlus.Class_ID__ToString(self)

    __swig_destroy__ = _MaxPlus.delete_Class_ID
    __del__ = lambda self : None;
Class_ID_swigregister = _MaxPlus.Class_ID_swigregister
Class_ID_swigregister(Class_ID)

class InterfaceServer(Wrapper):
    """Proxy of C++ Autodesk::Max::InterfaceServer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> InterfaceServer"""
        return _MaxPlus.InterfaceServer__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(InterfaceServer self, Wrapper w) -> bool"""
        return _MaxPlus.InterfaceServer___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(InterfaceServer self, Wrapper w) -> bool"""
        return _MaxPlus.InterfaceServer___ne__(self, *args)

    def GetInterface(self, *args):
        """GetInterface(InterfaceServer self, Interface_ID id) -> BaseInterface"""
        return _MaxPlus.InterfaceServer_GetInterface(self, *args)

    __swig_destroy__ = _MaxPlus.delete_InterfaceServer
    __del__ = lambda self : None;
InterfaceServer_swigregister = _MaxPlus.InterfaceServer_swigregister
InterfaceServer_swigregister(InterfaceServer)

def InterfaceServer__CastFrom(*args):
  """InterfaceServer__CastFrom(InterfaceServer b) -> InterfaceServer"""
  return _MaxPlus.InterfaceServer__CastFrom(*args)

class ResCode(object):
    """Return codes for modifier operations."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    kRES_INTERNAL_ERROR = _MaxPlus.ResCode_kRES_INTERNAL_ERROR
    kRES_MOD_NOT_FOUND = _MaxPlus.ResCode_kRES_MOD_NOT_FOUND
    kRES_MOD_NOT_APPLICABLE = _MaxPlus.ResCode_kRES_MOD_NOT_APPLICABLE
    kRES_SUCCESS = _MaxPlus.ResCode_kRES_SUCCESS
    __swig_destroy__ = _MaxPlus.delete_ResCode
    __del__ = lambda self : None;
ResCode_swigregister = _MaxPlus.ResCode_swigregister
ResCode_swigregister(ResCode)

class WStr(Wrapper):
    """A wide character string class. This class uses 16 bits to hold each character."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::WStr self) -> WStr
        __init__(Autodesk::Max::WStr self, wchar_t const * wcstr) -> WStr
        __init__(Autodesk::Max::WStr self, WStr ws) -> WStr
        """
        this = _MaxPlus.new_WStr(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * wstr_pointer) -> WStr"""
        return _MaxPlus.WStr__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> WStr"""
        return _MaxPlus.WStr__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(WStr self, void * wstr_pointer)"""
        return _MaxPlus.WStr__SetValue(self, *args)

    def Contents(self):
        """Contents(WStr self) -> wchar_t const *"""
        return _MaxPlus.WStr_Contents(self)

    def _ToString(self):
        """_ToString(WStr self) -> ::WStr"""
        return _MaxPlus.WStr__ToString(self)

    def MatchPattern(*args):
        """
        MatchPattern(WStr s, WStr ptrn, bool ignoreCase=TRUE) -> bool
        MatchPattern(WStr s, WStr ptrn) -> bool
        """
        return _MaxPlus.WStr_MatchPattern(*args)

    MatchPattern = staticmethod(MatchPattern)
    def MaxAlphaNumCompare(*args):
        """MaxAlphaNumCompare(wchar_t const * a, wchar_t const * b) -> bool"""
        return _MaxPlus.WStr_MaxAlphaNumCompare(*args)

    MaxAlphaNumCompare = staticmethod(MaxAlphaNumCompare)
    def MaxAlphaNumCompareNoCase(*args):
        """MaxAlphaNumCompareNoCase(wchar_t const * a, wchar_t const * b) -> bool"""
        return _MaxPlus.WStr_MaxAlphaNumCompareNoCase(*args)

    MaxAlphaNumCompareNoCase = staticmethod(MaxAlphaNumCompareNoCase)
    __swig_destroy__ = _MaxPlus.delete_WStr
    __del__ = lambda self : None;
WStr_swigregister = _MaxPlus.WStr_swigregister
WStr_swigregister(WStr)

def WStr__CreateWrapper(*args):
  """WStr__CreateWrapper(void * wstr_pointer) -> WStr"""
  return _MaxPlus.WStr__CreateWrapper(*args)

def WStr__CreateWrapperFromFPValue(*args):
  """WStr__CreateWrapperFromFPValue(void * fpvalue_pointer) -> WStr"""
  return _MaxPlus.WStr__CreateWrapperFromFPValue(*args)

def WStr_MatchPattern(*args):
  """
    MatchPattern(WStr s, WStr ptrn, bool ignoreCase=TRUE) -> bool
    WStr_MatchPattern(WStr s, WStr ptrn) -> bool
    """
  return _MaxPlus.WStr_MatchPattern(*args)

def WStr_MaxAlphaNumCompare(*args):
  """WStr_MaxAlphaNumCompare(wchar_t const * a, wchar_t const * b) -> bool"""
  return _MaxPlus.WStr_MaxAlphaNumCompare(*args)

def WStr_MaxAlphaNumCompareNoCase(*args):
  """WStr_MaxAlphaNumCompareNoCase(wchar_t const * a, wchar_t const * b) -> bool"""
  return _MaxPlus.WStr_MaxAlphaNumCompareNoCase(*args)

class Interface_ID(Wrapper):
    """An identifier for an interface."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Interface_ID self) -> Interface_ID
        __init__(Autodesk::Max::Interface_ID self, Interface_ID iid) -> Interface_ID
        __init__(Autodesk::Max::Interface_ID self, ulong aa, ulong bb) -> Interface_ID
        """
        this = _MaxPlus.new_Interface_ID(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetPartA(self):
        """GetPartA(Interface_ID self) -> ULONG"""
        return _MaxPlus.Interface_ID_GetPartA(self)

    def GetPartB(self):
        """GetPartB(Interface_ID self) -> ULONG"""
        return _MaxPlus.Interface_ID_GetPartB(self)

    def SetPartA(self, *args):
        """SetPartA(Interface_ID self, ulong aa)"""
        return _MaxPlus.Interface_ID_SetPartA(self, *args)

    def SetPartB(self, *args):
        """SetPartB(Interface_ID self, ulong bb)"""
        return _MaxPlus.Interface_ID_SetPartB(self, *args)

    def __eq__(self, *args):
        """__eq__(Interface_ID self, Interface_ID iid) -> bool"""
        return _MaxPlus.Interface_ID___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Interface_ID self, Interface_ID iid) -> bool"""
        return _MaxPlus.Interface_ID___ne__(self, *args)

    def __lt__(self, *args):
        """__lt__(Interface_ID self, Interface_ID rhs) -> bool"""
        return _MaxPlus.Interface_ID___lt__(self, *args)

    def _ToString(self):
        """_ToString(Interface_ID self) -> ::WStr"""
        return _MaxPlus.Interface_ID__ToString(self)

    __swig_destroy__ = _MaxPlus.delete_Interface_ID
    __del__ = lambda self : None;
Interface_ID_swigregister = _MaxPlus.Interface_ID_swigregister
Interface_ID_swigregister(Interface_ID)

class Interval(Wrapper):
    """Represents a length of time."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Interval self, TimeValue s, TimeValue e) -> Interval
        __init__(Autodesk::Max::Interval self) -> Interval
        """
        this = _MaxPlus.new_Interval(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * interval_pointer) -> Interval"""
        return _MaxPlus.Interval__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Interval"""
        return _MaxPlus.Interval__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Interval self, void * interval_pointer)"""
        return _MaxPlus.Interval__SetValue(self, *args)

    def __eq__(self, *args):
        """__eq__(Interval self, Interval i) -> bool"""
        return _MaxPlus.Interval___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Interval self, Interval i) -> bool"""
        return _MaxPlus.Interval___ne__(self, *args)

    def InInterval(self, *args):
        """
        InInterval(Interval self, TimeValue const t) -> bool
        InInterval(Interval self, Interval interval) -> bool
        """
        return _MaxPlus.Interval_InInterval(self, *args)

    def Empty(self):
        """Empty(Interval self) -> bool"""
        return _MaxPlus.Interval_Empty(self)

    def Set(self, *args):
        """Set(Interval self, TimeValue s, TimeValue e)"""
        return _MaxPlus.Interval_Set(self, *args)

    def SetStart(self, *args):
        """SetStart(Interval self, TimeValue s)"""
        return _MaxPlus.Interval_SetStart(self, *args)

    def SetEnd(self, *args):
        """SetEnd(Interval self, TimeValue e)"""
        return _MaxPlus.Interval_SetEnd(self, *args)

    def SetEmpty(self):
        """SetEmpty(Interval self)"""
        return _MaxPlus.Interval_SetEmpty(self)

    def SetInfinite(self):
        """SetInfinite(Interval self)"""
        return _MaxPlus.Interval_SetInfinite(self)

    def SetInstant(self, *args):
        """SetInstant(Interval self, TimeValue const t)"""
        return _MaxPlus.Interval_SetInstant(self, *args)

    def Start(self):
        """Start(Interval self) -> TimeValue"""
        return _MaxPlus.Interval_Start(self)

    def End(self):
        """End(Interval self) -> TimeValue"""
        return _MaxPlus.Interval_End(self)

    def Duration(self):
        """Duration(Interval self) -> TimeValue"""
        return _MaxPlus.Interval_Duration(self)

    def __iand__(self, *args):
        """__iand__(Interval self, Interval i) -> Interval"""
        return _MaxPlus.Interval___iand__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(Interval self, TimeValue const t) -> Interval"""
        return _MaxPlus.Interval___iadd__(self, *args)

    __swig_destroy__ = _MaxPlus.delete_Interval
    __del__ = lambda self : None;
Interval_swigregister = _MaxPlus.Interval_swigregister
Interval_swigregister(Interval)

def Interval__CreateWrapper(*args):
  """Interval__CreateWrapper(void * interval_pointer) -> Interval"""
  return _MaxPlus.Interval__CreateWrapper(*args)

def Interval__CreateWrapperFromFPValue(*args):
  """Interval__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Interval"""
  return _MaxPlus.Interval__CreateWrapperFromFPValue(*args)

class BitArray(Wrapper):
    """A set of bit flags that may be treated as a virtual array and are stored in an efficient manner."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def kMAX_LOCALBITS():
        """kMAX_LOCALBITS() -> int const"""
        return _MaxPlus.BitArray_kMAX_LOCALBITS()

    kMAX_LOCALBITS = staticmethod(kMAX_LOCALBITS)
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::BitArray self) -> BitArray
        __init__(Autodesk::Max::BitArray self, int n) -> BitArray
        __init__(Autodesk::Max::BitArray self, BitArray b) -> BitArray
        """
        this = _MaxPlus.new_BitArray(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * bitarray_pointer) -> BitArray"""
        return _MaxPlus.BitArray__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> BitArray"""
        return _MaxPlus.BitArray__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(BitArray self, void * bitarray_pointer)"""
        return _MaxPlus.BitArray__SetValue(self, *args)

    def SetSize(self, *args):
        """
        SetSize(BitArray self, int n, int save=0)
        SetSize(BitArray self, int n)
        """
        return _MaxPlus.BitArray_SetSize(self, *args)

    def GetSize(self):
        """GetSize(BitArray self) -> int"""
        return _MaxPlus.BitArray_GetSize(self)

    def ClearAll(self):
        """ClearAll(BitArray self)"""
        return _MaxPlus.BitArray_ClearAll(self)

    def SetAll(self):
        """SetAll(BitArray self)"""
        return _MaxPlus.BitArray_SetAll(self)

    def Clear(self, *args):
        """Clear(BitArray self, int i)"""
        return _MaxPlus.BitArray_Clear(self, *args)

    def Set(self, *args):
        """
        Set(BitArray self, int i)
        Set(BitArray self, int i, bool b)
        """
        return _MaxPlus.BitArray_Set(self, *args)

    def __len__(self):
        """__len__(BitArray self) -> int"""
        return _MaxPlus.BitArray___len__(self)

    def __getitem__(self, *args):
        """__getitem__(BitArray self, int i) -> bool"""
        return _MaxPlus.BitArray___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(BitArray self, int i, bool b)"""
        return _MaxPlus.BitArray___setitem__(self, *args)

    def IsEmpty(self):
        """IsEmpty(BitArray self) -> bool"""
        return _MaxPlus.BitArray_IsEmpty(self)

    def AnyBitSet(self):
        """AnyBitSet(BitArray self) -> bool"""
        return _MaxPlus.BitArray_AnyBitSet(self)

    def Compress(self):
        """Compress(BitArray self)"""
        return _MaxPlus.BitArray_Compress(self)

    def Expand(self):
        """Expand(BitArray self)"""
        return _MaxPlus.BitArray_Expand(self)

    def Reverse(self, keepZero=True):
        """
        Reverse(BitArray self, bool keepZero=True)
        Reverse(BitArray self)
        """
        return _MaxPlus.BitArray_Reverse(self, keepZero)

    def Rotate(self, *args):
        """Rotate(BitArray self, int direction, int count)"""
        return _MaxPlus.BitArray_Rotate(self, *args)

    def Shift(self, *args):
        """
        Shift(BitArray self, int direction, int count, int where=0)
        Shift(BitArray self, int direction, int count)
        """
        return _MaxPlus.BitArray_Shift(self, *args)

    def DeleteSet(self, *args):
        """
        DeleteSet(BitArray self, BitArray dset, int mult=1)
        DeleteSet(BitArray self, BitArray dset)
        """
        return _MaxPlus.BitArray_DeleteSet(self, *args)

    def __eq__(self, *args):
        """__eq__(BitArray self, BitArray b) -> bool"""
        return _MaxPlus.BitArray___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(BitArray self, BitArray b) -> bool"""
        return _MaxPlus.BitArray___ne__(self, *args)

    def __iand__(self, *args):
        """__iand__(BitArray self, BitArray b) -> BitArray"""
        return _MaxPlus.BitArray___iand__(self, *args)

    def __ior__(self, *args):
        """__ior__(BitArray self, BitArray b) -> BitArray"""
        return _MaxPlus.BitArray___ior__(self, *args)

    def __ixor__(self, *args):
        """__ixor__(BitArray self, BitArray b) -> BitArray"""
        return _MaxPlus.BitArray___ixor__(self, *args)

    def __invert__(self):
        """__invert__(BitArray self) -> BitArray"""
        return _MaxPlus.BitArray___invert__(self)

    def Swap(self, *args):
        """Swap(BitArray self, BitArray other)"""
        return _MaxPlus.BitArray_Swap(self, *args)

    __swig_destroy__ = _MaxPlus.delete_BitArray
    __del__ = lambda self : None;
BitArray_swigregister = _MaxPlus.BitArray_swigregister
BitArray_swigregister(BitArray)

def BitArray_kMAX_LOCALBITS():
  """BitArray_kMAX_LOCALBITS() -> int const"""
  return _MaxPlus.BitArray_kMAX_LOCALBITS()

def BitArray__CreateWrapper(*args):
  """BitArray__CreateWrapper(void * bitarray_pointer) -> BitArray"""
  return _MaxPlus.BitArray__CreateWrapper(*args)

def BitArray__CreateWrapperFromFPValue(*args):
  """BitArray__CreateWrapperFromFPValue(void * fpvalue_pointer) -> BitArray"""
  return _MaxPlus.BitArray__CreateWrapperFromFPValue(*args)

class DimType(object):
    """Representations of a dimension type."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    World = _MaxPlus.DimType_World
    Angle = _MaxPlus.DimType_Angle
    Color = _MaxPlus.DimType_Color
    Color255 = _MaxPlus.DimType_Color255
    Percent = _MaxPlus.DimType_Percent
    Normalized = _MaxPlus.DimType_Normalized
    Segments = _MaxPlus.DimType_Segments
    Time = _MaxPlus.DimType_Time
    Custom = _MaxPlus.DimType_Custom
    Dimensionless = _MaxPlus.DimType_Dimensionless
    __swig_destroy__ = _MaxPlus.delete_DimType
    __del__ = lambda self : None;
DimType_swigregister = _MaxPlus.DimType_swigregister
DimType_swigregister(DimType)

class ParamDimensionBase(Wrapper):
    """Describes the dimension of a parameter, which acts as a unit of measure."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ParamDimensionBase"""
        return _MaxPlus.ParamDimensionBase__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ParamDimensionBase self, Wrapper w) -> bool"""
        return _MaxPlus.ParamDimensionBase___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ParamDimensionBase self, Wrapper w) -> bool"""
        return _MaxPlus.ParamDimensionBase___ne__(self, *args)

    def GetDimensionType(self):
        """GetDimensionType(ParamDimensionBase self) -> Autodesk::Max::DimType::Type"""
        return _MaxPlus.ParamDimensionBase_GetDimensionType(self)

    def Convert(self, *args):
        """Convert(ParamDimensionBase self, float value) -> float"""
        return _MaxPlus.ParamDimensionBase_Convert(self, *args)

    def UnConvert(self, *args):
        """UnConvert(ParamDimensionBase self, float value) -> float"""
        return _MaxPlus.ParamDimensionBase_UnConvert(self, *args)

    __swig_destroy__ = _MaxPlus.delete_ParamDimensionBase
    __del__ = lambda self : None;
ParamDimensionBase_swigregister = _MaxPlus.ParamDimensionBase_swigregister
ParamDimensionBase_swigregister(ParamDimensionBase)

def ParamDimensionBase__CastFrom(*args):
  """ParamDimensionBase__CastFrom(InterfaceServer b) -> ParamDimensionBase"""
  return _MaxPlus.ParamDimensionBase__CastFrom(*args)

class ParamDimension(ParamDimensionBase):
    """Extends the ParamDimensionBase """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ParamDimension"""
        return _MaxPlus.ParamDimension__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ParamDimension self, Wrapper w) -> bool"""
        return _MaxPlus.ParamDimension___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ParamDimension self, Wrapper w) -> bool"""
        return _MaxPlus.ParamDimension___ne__(self, *args)

    def GetDimScale(self):
        """GetDimScale(ParamDimension self) -> float"""
        return _MaxPlus.ParamDimension_GetDimScale(self)

    def SetDimScale(self):
        """SetDimScale(ParamDimension self)"""
        return _MaxPlus.ParamDimension_SetDimScale(self)

    def GetDimensionName(self):
        """GetDimensionName(ParamDimension self) -> wchar_t *"""
        return _MaxPlus.ParamDimension_GetDimensionName(self)

    def GetStdWorldDim():
        """GetStdWorldDim() -> ParamDimension"""
        return _MaxPlus.ParamDimension_GetStdWorldDim()

    GetStdWorldDim = staticmethod(GetStdWorldDim)
    def GetStdAngleDim():
        """GetStdAngleDim() -> ParamDimension"""
        return _MaxPlus.ParamDimension_GetStdAngleDim()

    GetStdAngleDim = staticmethod(GetStdAngleDim)
    def GetStdColorDim():
        """GetStdColorDim() -> ParamDimension"""
        return _MaxPlus.ParamDimension_GetStdColorDim()

    GetStdColorDim = staticmethod(GetStdColorDim)
    def GetStdColor255Dim():
        """GetStdColor255Dim() -> ParamDimension"""
        return _MaxPlus.ParamDimension_GetStdColor255Dim()

    GetStdColor255Dim = staticmethod(GetStdColor255Dim)
    def GetStdPercentDim():
        """GetStdPercentDim() -> ParamDimension"""
        return _MaxPlus.ParamDimension_GetStdPercentDim()

    GetStdPercentDim = staticmethod(GetStdPercentDim)
    def GetStdNormalizedDim():
        """GetStdNormalizedDim() -> ParamDimension"""
        return _MaxPlus.ParamDimension_GetStdNormalizedDim()

    GetStdNormalizedDim = staticmethod(GetStdNormalizedDim)
    def GetStdSegmentsDim():
        """GetStdSegmentsDim() -> ParamDimension"""
        return _MaxPlus.ParamDimension_GetStdSegmentsDim()

    GetStdSegmentsDim = staticmethod(GetStdSegmentsDim)
    def GetStdTimeDim():
        """GetStdTimeDim() -> ParamDimension"""
        return _MaxPlus.ParamDimension_GetStdTimeDim()

    GetStdTimeDim = staticmethod(GetStdTimeDim)
    def GetDefaultDim():
        """GetDefaultDim() -> ParamDimension"""
        return _MaxPlus.ParamDimension_GetDefaultDim()

    GetDefaultDim = staticmethod(GetDefaultDim)
    __swig_destroy__ = _MaxPlus.delete_ParamDimension
    __del__ = lambda self : None;
ParamDimension_swigregister = _MaxPlus.ParamDimension_swigregister
ParamDimension_swigregister(ParamDimension)

def ParamDimension__CastFrom(*args):
  """ParamDimension__CastFrom(InterfaceServer b) -> ParamDimension"""
  return _MaxPlus.ParamDimension__CastFrom(*args)

def ParamDimension_GetStdWorldDim():
  """ParamDimension_GetStdWorldDim() -> ParamDimension"""
  return _MaxPlus.ParamDimension_GetStdWorldDim()

def ParamDimension_GetStdAngleDim():
  """ParamDimension_GetStdAngleDim() -> ParamDimension"""
  return _MaxPlus.ParamDimension_GetStdAngleDim()

def ParamDimension_GetStdColorDim():
  """ParamDimension_GetStdColorDim() -> ParamDimension"""
  return _MaxPlus.ParamDimension_GetStdColorDim()

def ParamDimension_GetStdColor255Dim():
  """ParamDimension_GetStdColor255Dim() -> ParamDimension"""
  return _MaxPlus.ParamDimension_GetStdColor255Dim()

def ParamDimension_GetStdPercentDim():
  """ParamDimension_GetStdPercentDim() -> ParamDimension"""
  return _MaxPlus.ParamDimension_GetStdPercentDim()

def ParamDimension_GetStdNormalizedDim():
  """ParamDimension_GetStdNormalizedDim() -> ParamDimension"""
  return _MaxPlus.ParamDimension_GetStdNormalizedDim()

def ParamDimension_GetStdSegmentsDim():
  """ParamDimension_GetStdSegmentsDim() -> ParamDimension"""
  return _MaxPlus.ParamDimension_GetStdSegmentsDim()

def ParamDimension_GetStdTimeDim():
  """ParamDimension_GetStdTimeDim() -> ParamDimension"""
  return _MaxPlus.ParamDimension_GetStdTimeDim()

def ParamDimension_GetDefaultDim():
  """ParamDimension_GetDefaultDim() -> ParamDimension"""
  return _MaxPlus.ParamDimension_GetDefaultDim()

class Point2(Wrapper):
    """Describes a 2D point using float x and y coordinates."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Point2 self) -> Point2
        __init__(Autodesk::Max::Point2 self, float X, float Y) -> Point2
        __init__(Autodesk::Max::Point2 self, double X, double Y) -> Point2
        __init__(Autodesk::Max::Point2 self, int X, int Y) -> Point2
        __init__(Autodesk::Max::Point2 self, Point2 a) -> Point2
        """
        this = _MaxPlus.new_Point2(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * point2_pointer) -> Point2"""
        return _MaxPlus.Point2__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Point2"""
        return _MaxPlus.Point2__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Point2 self, void * point2_pointer)"""
        return _MaxPlus.Point2__SetValue(self, *args)

    def __len__(self):
        """__len__(Point2 self) -> int"""
        return _MaxPlus.Point2___len__(self)

    def __getitem__(self, *args):
        """__getitem__(Point2 self, int i) -> float"""
        return _MaxPlus.Point2___getitem__(self, *args)

    def __neg__(self):
        """__neg__(Point2 self) -> Point2"""
        return _MaxPlus.Point2___neg__(self)

    def __pos__(self):
        """__pos__(Point2 self) -> Point2"""
        return _MaxPlus.Point2___pos__(self)

    def GetLength(self):
        """GetLength(Point2 self) -> float"""
        return _MaxPlus.Point2_GetLength(self)

    def GetMaxComponent(self):
        """GetMaxComponent(Point2 self) -> int"""
        return _MaxPlus.Point2_GetMaxComponent(self)

    def GetMinComponent(self):
        """GetMinComponent(Point2 self) -> int"""
        return _MaxPlus.Point2_GetMinComponent(self)

    def Normalize(self):
        """Normalize(Point2 self) -> Point2"""
        return _MaxPlus.Point2_Normalize(self)

    def __isub__(self, *args):
        """__isub__(Point2 self, Point2 p) -> Point2"""
        return _MaxPlus.Point2___isub__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(Point2 self, Point2 p) -> Point2"""
        return _MaxPlus.Point2___iadd__(self, *args)

    def __imul__(self, *args):
        """__imul__(Point2 self, float f) -> Point2"""
        return _MaxPlus.Point2___imul__(self, *args)

    def __idiv__(self, *args):
        """__idiv__(Point2 self, float f) -> Point2"""
        return _MaxPlus.Point2___idiv__(self, *args)

    def Set(self, *args):
        """Set(Point2 self, float X, float Y) -> Point2"""
        return _MaxPlus.Point2_Set(self, *args)

    def __sub__(self, *args):
        """__sub__(Point2 self, Point2 arg2) -> Point2"""
        return _MaxPlus.Point2___sub__(self, *args)

    def __add__(self, *args):
        """__add__(Point2 self, Point2 arg2) -> Point2"""
        return _MaxPlus.Point2___add__(self, *args)

    def DotProd(self, *args):
        """DotProd(Point2 self, Point2 p) -> float"""
        return _MaxPlus.Point2_DotProd(self, *args)

    def __mul__(self, *args):
        """__mul__(Point2 self, Point2 p) -> float"""
        return _MaxPlus.Point2___mul__(self, *args)

    def __eq__(self, *args):
        """__eq__(Point2 self, Point2 p) -> bool"""
        return _MaxPlus.Point2___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Point2 self, Point2 p) -> bool"""
        return _MaxPlus.Point2___ne__(self, *args)

    def Equals(self, *args):
        """
        Equals(Point2 self, Point2 p, float epsilon=1E-6) -> bool
        Equals(Point2 self, Point2 p) -> bool
        """
        return _MaxPlus.Point2_Equals(self, *args)

    def Unify(self):
        """Unify(Point2 self) -> Point2"""
        return _MaxPlus.Point2_Unify(self)

    def LengthUnify(self):
        """LengthUnify(Point2 self) -> float"""
        return _MaxPlus.Point2_LengthUnify(self)

    def GetX(self):
        """GetX(Point2 self) -> float"""
        return _MaxPlus.Point2_GetX(self)

    def GetY(self):
        """GetY(Point2 self) -> float"""
        return _MaxPlus.Point2_GetY(self)

    def GetOrigin():
        """GetOrigin() -> Point2"""
        return _MaxPlus.Point2_GetOrigin()

    GetOrigin = staticmethod(GetOrigin)
    def GetXAxis():
        """GetXAxis() -> Point2"""
        return _MaxPlus.Point2_GetXAxis()

    GetXAxis = staticmethod(GetXAxis)
    def GetYAxis():
        """GetYAxis() -> Point2"""
        return _MaxPlus.Point2_GetYAxis()

    GetYAxis = staticmethod(GetYAxis)
    def SetX(self, *args):
        """SetX(Point2 self, float value)"""
        return _MaxPlus.Point2_SetX(self, *args)

    def SetY(self, *args):
        """SetY(Point2 self, float value)"""
        return _MaxPlus.Point2_SetY(self, *args)

    def _ToString(self):
        """_ToString(Point2 self) -> ::WStr"""
        return _MaxPlus.Point2__ToString(self)

    X = _swig_property(GetX, SetX)
    Y = _swig_property(GetY, SetY)

    __swig_destroy__ = _MaxPlus.delete_Point2
    __del__ = lambda self : None;
Point2_swigregister = _MaxPlus.Point2_swigregister
Point2_swigregister(Point2)

def Point2__CreateWrapper(*args):
  """Point2__CreateWrapper(void * point2_pointer) -> Point2"""
  return _MaxPlus.Point2__CreateWrapper(*args)

def Point2__CreateWrapperFromFPValue(*args):
  """Point2__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Point2"""
  return _MaxPlus.Point2__CreateWrapperFromFPValue(*args)

def Point2_GetOrigin():
  """Point2_GetOrigin() -> Point2"""
  return _MaxPlus.Point2_GetOrigin()

def Point2_GetXAxis():
  """Point2_GetXAxis() -> Point2"""
  return _MaxPlus.Point2_GetXAxis()

def Point2_GetYAxis():
  """Point2_GetYAxis() -> Point2"""
  return _MaxPlus.Point2_GetYAxis()

class Point3(Wrapper):
    """Proxy of C++ Autodesk::Max::Point3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Point3 self) -> Point3
        __init__(Autodesk::Max::Point3 self, float X, float Y, float Z) -> Point3
        __init__(Autodesk::Max::Point3 self, double X, double Y, double Z) -> Point3
        __init__(Autodesk::Max::Point3 self, int X, int Y, int Z) -> Point3
        __init__(Autodesk::Max::Point3 self, Point2 a, float Z=0.0) -> Point3
        __init__(Autodesk::Max::Point3 self, Point2 a) -> Point3
        __init__(Autodesk::Max::Point3 self, Point3 a) -> Point3
        __init__(Autodesk::Max::Point3 self, float [3] af) -> Point3
        """
        this = _MaxPlus.new_Point3(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * point3_pointer) -> Point3"""
        return _MaxPlus.Point3__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Point3"""
        return _MaxPlus.Point3__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Point3 self, void * point3_pointer)"""
        return _MaxPlus.Point3__SetValue(self, *args)

    def __getitem__(self, *args):
        """__getitem__(Point3 self, int i) -> float &"""
        return _MaxPlus.Point3___getitem__(self, *args)

    def __len__(self):
        """__len__(Point3 self) -> int"""
        return _MaxPlus.Point3___len__(self)

    def __neg__(self):
        """__neg__(Point3 self) -> Point3"""
        return _MaxPlus.Point3___neg__(self)

    def __pos__(self):
        """__pos__(Point3 self) -> Point3"""
        return _MaxPlus.Point3___pos__(self)

    def GetLength(self):
        """GetLength(Point3 self) -> float"""
        return _MaxPlus.Point3_GetLength(self)

    def GetFLength(self):
        """GetFLength(Point3 self) -> float"""
        return _MaxPlus.Point3_GetFLength(self)

    def GetLengthSquared(self):
        """GetLengthSquared(Point3 self) -> float"""
        return _MaxPlus.Point3_GetLengthSquared(self)

    def GetMaxComponent(self):
        """GetMaxComponent(Point3 self) -> int"""
        return _MaxPlus.Point3_GetMaxComponent(self)

    def GetMinComponent(self):
        """GetMinComponent(Point3 self) -> int"""
        return _MaxPlus.Point3_GetMinComponent(self)

    def Normalize(self):
        """Normalize(Point3 self) -> Point3"""
        return _MaxPlus.Point3_Normalize(self)

    def FNormalize(self):
        """FNormalize(Point3 self) -> Point3"""
        return _MaxPlus.Point3_FNormalize(self)

    def __isub__(self, *args):
        """__isub__(Point3 self, Point3 p) -> Point3"""
        return _MaxPlus.Point3___isub__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(Point3 self, Point3 p) -> Point3"""
        return _MaxPlus.Point3___iadd__(self, *args)

    def __idiv__(self, *args):
        """__idiv__(Point3 self, float f) -> Point3"""
        return _MaxPlus.Point3___idiv__(self, *args)

    def __imul__(self, *args):
        """
        __imul__(Point3 self, float f) -> Point3
        __imul__(Point3 self, Point3 p) -> Point3
        """
        return _MaxPlus.Point3___imul__(self, *args)

    def Set(self, *args):
        """Set(Point3 self, float X, float Y, float Z) -> Point3"""
        return _MaxPlus.Point3_Set(self, *args)

    def __eq__(self, *args):
        """__eq__(Point3 self, Point3 p) -> bool"""
        return _MaxPlus.Point3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Point3 self, Point3 p) -> bool"""
        return _MaxPlus.Point3___ne__(self, *args)

    def Equals(self, *args):
        """
        Equals(Point3 self, Point3 p, float epsilon=1E-6) -> bool
        Equals(Point3 self, Point3 p) -> bool
        """
        return _MaxPlus.Point3_Equals(self, *args)

    def Unify(self):
        """Unify(Point3 self) -> Point3"""
        return _MaxPlus.Point3_Unify(self)

    def LengthUnify(self):
        """LengthUnify(Point3 self) -> float"""
        return _MaxPlus.Point3_LengthUnify(self)

    def __sub__(self, *args):
        """__sub__(Point3 self, Point3 p) -> Point3"""
        return _MaxPlus.Point3___sub__(self, *args)

    def __add__(self, *args):
        """__add__(Point3 self, Point3 p) -> Point3"""
        return _MaxPlus.Point3___add__(self, *args)

    def __div__(self, *args):
        """__div__(Point3 self, Point3 p) -> Point3"""
        return _MaxPlus.Point3___div__(self, *args)

    def __mul__(self, *args):
        """__mul__(Point3 self, Point3 p) -> Point3"""
        return _MaxPlus.Point3___mul__(self, *args)

    def __xor__(self, *args):
        """__xor__(Point3 self, Point3 p) -> Point3"""
        return _MaxPlus.Point3___xor__(self, *args)

    def __mod__(self, *args):
        """__mod__(Point3 self, Point3 p) -> float"""
        return _MaxPlus.Point3___mod__(self, *args)

    def GetX(self):
        """GetX(Point3 self) -> float"""
        return _MaxPlus.Point3_GetX(self)

    def GetY(self):
        """GetY(Point3 self) -> float"""
        return _MaxPlus.Point3_GetY(self)

    def GetZ(self):
        """GetZ(Point3 self) -> float"""
        return _MaxPlus.Point3_GetZ(self)

    def GetOrigin():
        """GetOrigin() -> Point3"""
        return _MaxPlus.Point3_GetOrigin()

    GetOrigin = staticmethod(GetOrigin)
    def GetXAxis():
        """GetXAxis() -> Point3"""
        return _MaxPlus.Point3_GetXAxis()

    GetXAxis = staticmethod(GetXAxis)
    def GetYAxis():
        """GetYAxis() -> Point3"""
        return _MaxPlus.Point3_GetYAxis()

    GetYAxis = staticmethod(GetYAxis)
    def GetZAxis():
        """GetZAxis() -> Point3"""
        return _MaxPlus.Point3_GetZAxis()

    GetZAxis = staticmethod(GetZAxis)
    def SetX(self, *args):
        """SetX(Point3 self, float value)"""
        return _MaxPlus.Point3_SetX(self, *args)

    def SetY(self, *args):
        """SetY(Point3 self, float value)"""
        return _MaxPlus.Point3_SetY(self, *args)

    def SetZ(self, *args):
        """SetZ(Point3 self, float value)"""
        return _MaxPlus.Point3_SetZ(self, *args)

    def _ToString(self):
        """_ToString(Point3 self) -> ::WStr"""
        return _MaxPlus.Point3__ToString(self)

    X = _swig_property(GetX, SetX)
    Y = _swig_property(GetY, SetY)
    Z = _swig_property(GetZ, SetZ)

    __swig_destroy__ = _MaxPlus.delete_Point3
    __del__ = lambda self : None;
Point3_swigregister = _MaxPlus.Point3_swigregister
Point3_swigregister(Point3)

def Point3__CreateWrapper(*args):
  """Point3__CreateWrapper(void * point3_pointer) -> Point3"""
  return _MaxPlus.Point3__CreateWrapper(*args)

def Point3__CreateWrapperFromFPValue(*args):
  """Point3__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Point3"""
  return _MaxPlus.Point3__CreateWrapperFromFPValue(*args)

def Point3_GetOrigin():
  """Point3_GetOrigin() -> Point3"""
  return _MaxPlus.Point3_GetOrigin()

def Point3_GetXAxis():
  """Point3_GetXAxis() -> Point3"""
  return _MaxPlus.Point3_GetXAxis()

def Point3_GetYAxis():
  """Point3_GetYAxis() -> Point3"""
  return _MaxPlus.Point3_GetYAxis()

def Point3_GetZAxis():
  """Point3_GetZAxis() -> Point3"""
  return _MaxPlus.Point3_GetZAxis()

class Point4(Wrapper):
    """Describes a point using float x, y, z, and w coordinates."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Point4 self) -> Point4
        __init__(Autodesk::Max::Point4 self, float X, float Y, float Z, float W) -> Point4
        __init__(Autodesk::Max::Point4 self, double X, double Y, double Z, double W) -> Point4
        __init__(Autodesk::Max::Point4 self, int X, int Y, int Z, int W) -> Point4
        __init__(Autodesk::Max::Point4 self, Point3 a, float W=0.0) -> Point4
        __init__(Autodesk::Max::Point4 self, Point3 a) -> Point4
        __init__(Autodesk::Max::Point4 self, Point4 a) -> Point4
        __init__(Autodesk::Max::Point4 self, float [4] af) -> Point4
        """
        this = _MaxPlus.new_Point4(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * point4_pointer) -> Point4"""
        return _MaxPlus.Point4__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Point4"""
        return _MaxPlus.Point4__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Point4 self, void * point4_pointer)"""
        return _MaxPlus.Point4__SetValue(self, *args)

    def __len__(self):
        """__len__(Point4 self) -> int"""
        return _MaxPlus.Point4___len__(self)

    def __getitem__(self, *args):
        """__getitem__(Point4 self, int i) -> float"""
        return _MaxPlus.Point4___getitem__(self, *args)

    def __neg__(self):
        """__neg__(Point4 self) -> Point4"""
        return _MaxPlus.Point4___neg__(self)

    def __pos__(self):
        """__pos__(Point4 self) -> Point4"""
        return _MaxPlus.Point4___pos__(self)

    def GetLength(self):
        """GetLength(Point4 self) -> float"""
        return _MaxPlus.Point4_GetLength(self)

    def GetFLength(self):
        """GetFLength(Point4 self) -> float"""
        return _MaxPlus.Point4_GetFLength(self)

    def GetLengthSquared(self):
        """GetLengthSquared(Point4 self) -> float"""
        return _MaxPlus.Point4_GetLengthSquared(self)

    def GetMaxComponent(self):
        """GetMaxComponent(Point4 self) -> int"""
        return _MaxPlus.Point4_GetMaxComponent(self)

    def GetMinComponent(self):
        """GetMinComponent(Point4 self) -> int"""
        return _MaxPlus.Point4_GetMinComponent(self)

    def Normalize(self):
        """Normalize(Point4 self) -> Point4"""
        return _MaxPlus.Point4_Normalize(self)

    def FNormalize(self):
        """FNormalize(Point4 self) -> Point4"""
        return _MaxPlus.Point4_FNormalize(self)

    def __isub__(self, *args):
        """__isub__(Point4 self, Point4 p) -> Point4"""
        return _MaxPlus.Point4___isub__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(Point4 self, Point4 p) -> Point4"""
        return _MaxPlus.Point4___iadd__(self, *args)

    def __idiv__(self, *args):
        """__idiv__(Point4 self, float f) -> Point4"""
        return _MaxPlus.Point4___idiv__(self, *args)

    def __imul__(self, *args):
        """
        __imul__(Point4 self, float f) -> Point4
        __imul__(Point4 self, Point4 p) -> Point4
        """
        return _MaxPlus.Point4___imul__(self, *args)

    def Set(self, *args):
        """Set(Point4 self, float X, float Y, float Z, float W) -> Point4"""
        return _MaxPlus.Point4_Set(self, *args)

    def __eq__(self, *args):
        """__eq__(Point4 self, Point4 p) -> bool"""
        return _MaxPlus.Point4___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Point4 self, Point4 p) -> bool"""
        return _MaxPlus.Point4___ne__(self, *args)

    def Equals(self, *args):
        """
        Equals(Point4 self, Point4 p, float epsilon=1E-6) -> bool
        Equals(Point4 self, Point4 p) -> bool
        """
        return _MaxPlus.Point4_Equals(self, *args)

    def Unify(self):
        """Unify(Point4 self) -> Point4"""
        return _MaxPlus.Point4_Unify(self)

    def LengthUnify(self):
        """LengthUnify(Point4 self) -> float"""
        return _MaxPlus.Point4_LengthUnify(self)

    def __sub__(self, *args):
        """__sub__(Point4 self, Point4 p) -> Point4"""
        return _MaxPlus.Point4___sub__(self, *args)

    def __add__(self, *args):
        """__add__(Point4 self, Point4 p) -> Point4"""
        return _MaxPlus.Point4___add__(self, *args)

    def __div__(self, *args):
        """__div__(Point4 self, Point4 p) -> Point4"""
        return _MaxPlus.Point4___div__(self, *args)

    def __mul__(self, *args):
        """__mul__(Point4 self, Point4 p) -> Point4"""
        return _MaxPlus.Point4___mul__(self, *args)

    def __mod__(self, *args):
        """__mod__(Point4 self, Point4 p) -> float"""
        return _MaxPlus.Point4___mod__(self, *args)

    def GetX(self):
        """GetX(Point4 self) -> float"""
        return _MaxPlus.Point4_GetX(self)

    def GetY(self):
        """GetY(Point4 self) -> float"""
        return _MaxPlus.Point4_GetY(self)

    def GetZ(self):
        """GetZ(Point4 self) -> float"""
        return _MaxPlus.Point4_GetZ(self)

    def GetW(self):
        """GetW(Point4 self) -> float"""
        return _MaxPlus.Point4_GetW(self)

    def GetOrigin():
        """GetOrigin() -> Point4"""
        return _MaxPlus.Point4_GetOrigin()

    GetOrigin = staticmethod(GetOrigin)
    def GetXAxis():
        """GetXAxis() -> Point4"""
        return _MaxPlus.Point4_GetXAxis()

    GetXAxis = staticmethod(GetXAxis)
    def GetYAxis():
        """GetYAxis() -> Point4"""
        return _MaxPlus.Point4_GetYAxis()

    GetYAxis = staticmethod(GetYAxis)
    def GetZAxis():
        """GetZAxis() -> Point4"""
        return _MaxPlus.Point4_GetZAxis()

    GetZAxis = staticmethod(GetZAxis)
    def GetWAxis():
        """GetWAxis() -> Point4"""
        return _MaxPlus.Point4_GetWAxis()

    GetWAxis = staticmethod(GetWAxis)
    def SetX(self, *args):
        """SetX(Point4 self, float value)"""
        return _MaxPlus.Point4_SetX(self, *args)

    def SetY(self, *args):
        """SetY(Point4 self, float value)"""
        return _MaxPlus.Point4_SetY(self, *args)

    def SetZ(self, *args):
        """SetZ(Point4 self, float value)"""
        return _MaxPlus.Point4_SetZ(self, *args)

    def SetW(self, *args):
        """SetW(Point4 self, float value)"""
        return _MaxPlus.Point4_SetW(self, *args)

    def _ToString(self):
        """_ToString(Point4 self) -> ::WStr"""
        return _MaxPlus.Point4__ToString(self)

    X = _swig_property(GetX, SetX)
    Y = _swig_property(GetY, SetY)
    Z = _swig_property(GetZ, SetZ)
    W = _swig_property(GetW, SetW)

    __swig_destroy__ = _MaxPlus.delete_Point4
    __del__ = lambda self : None;
Point4_swigregister = _MaxPlus.Point4_swigregister
Point4_swigregister(Point4)

def Point4__CreateWrapper(*args):
  """Point4__CreateWrapper(void * point4_pointer) -> Point4"""
  return _MaxPlus.Point4__CreateWrapper(*args)

def Point4__CreateWrapperFromFPValue(*args):
  """Point4__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Point4"""
  return _MaxPlus.Point4__CreateWrapperFromFPValue(*args)

def Point4_GetOrigin():
  """Point4_GetOrigin() -> Point4"""
  return _MaxPlus.Point4_GetOrigin()

def Point4_GetXAxis():
  """Point4_GetXAxis() -> Point4"""
  return _MaxPlus.Point4_GetXAxis()

def Point4_GetYAxis():
  """Point4_GetYAxis() -> Point4"""
  return _MaxPlus.Point4_GetYAxis()

def Point4_GetZAxis():
  """Point4_GetZAxis() -> Point4"""
  return _MaxPlus.Point4_GetZAxis()

def Point4_GetWAxis():
  """Point4_GetWAxis() -> Point4"""
  return _MaxPlus.Point4_GetWAxis()

class Quat(Wrapper):
    """Provides a compact representation for orientation in three space and provides methods to perform Quaternion algebra."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Quat self) -> Quat
        __init__(Autodesk::Max::Quat self, float X, float Y, float Z, float W) -> Quat
        __init__(Autodesk::Max::Quat self, double X, double Y, double Z, double W) -> Quat
        __init__(Autodesk::Max::Quat self, Quat a) -> Quat
        __init__(Autodesk::Max::Quat self, AngAxis aa) -> Quat
        __init__(Autodesk::Max::Quat self, Matrix3 m) -> Quat
        __init__(Autodesk::Max::Quat self, Point3 V, float W) -> Quat
        """
        this = _MaxPlus.new_Quat(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * quat_pointer) -> Quat"""
        return _MaxPlus.Quat__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Quat"""
        return _MaxPlus.Quat__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Quat self, void * quat_pointer)"""
        return _MaxPlus.Quat__SetValue(self, *args)

    def __len__(self):
        """__len__(Quat self) -> int"""
        return _MaxPlus.Quat___len__(self)

    def __getitem__(self, *args):
        """__getitem__(Quat self, int i) -> float"""
        return _MaxPlus.Quat___getitem__(self, *args)

    def Scalar(self):
        """Scalar(Quat self) -> float"""
        return _MaxPlus.Quat_Scalar(self)

    def Vector(self):
        """Vector(Quat self) -> Point3"""
        return _MaxPlus.Quat_Vector(self)

    def __neg__(self):
        """__neg__(Quat self) -> Quat"""
        return _MaxPlus.Quat___neg__(self)

    def __pos__(self):
        """__pos__(Quat self) -> Quat"""
        return _MaxPlus.Quat___pos__(self)

    def Inverse(self):
        """Inverse(Quat self) -> Quat"""
        return _MaxPlus.Quat_Inverse(self)

    def Conjugate(self):
        """Conjugate(Quat self) -> Quat"""
        return _MaxPlus.Quat_Conjugate(self)

    def LogN(self):
        """LogN(Quat self) -> Quat"""
        return _MaxPlus.Quat_LogN(self)

    def Exp(self):
        """Exp(Quat self) -> Quat"""
        return _MaxPlus.Quat_Exp(self)

    def __isub__(self, *args):
        """__isub__(Quat self, Quat q) -> Quat"""
        return _MaxPlus.Quat___isub__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(Quat self, Quat q) -> Quat"""
        return _MaxPlus.Quat___iadd__(self, *args)

    def __imul__(self, *args):
        """
        __imul__(Quat self, Quat q) -> Quat
        __imul__(Quat self, float f) -> Quat
        """
        return _MaxPlus.Quat___imul__(self, *args)

    def __idiv__(self, *args):
        """__idiv__(Quat self, float f) -> Quat"""
        return _MaxPlus.Quat___idiv__(self, *args)

    def Set(self, *args):
        """
        Set(Quat self, float X, float Y, float Z, float W) -> Quat
        Set(Quat self, double X, double Y, double Z, double W) -> Quat
        Set(Quat self, Point3 V, float W) -> Quat
        Set(Quat self, Matrix3 mat) -> Quat
        Set(Quat self, AngAxis aa) -> Quat
        """
        return _MaxPlus.Quat_Set(self, *args)

    def SetEuler(self, *args):
        """SetEuler(Quat self, float X, float Y, float Z) -> Quat"""
        return _MaxPlus.Quat_SetEuler(self, *args)

    def Invert(self):
        """Invert(Quat self) -> Quat"""
        return _MaxPlus.Quat_Invert(self)

    def MakeClosest(self, *args):
        """MakeClosest(Quat self, Quat qto) -> Quat"""
        return _MaxPlus.Quat_MakeClosest(self, *args)

    def __eq__(self, *args):
        """__eq__(Quat self, Quat a) -> bool"""
        return _MaxPlus.Quat___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Quat self, Quat a) -> bool"""
        return _MaxPlus.Quat___ne__(self, *args)

    def Equals(self, *args):
        """
        Equals(Quat self, Quat a, float epsilon=1E-6) -> bool
        Equals(Quat self, Quat a) -> bool
        """
        return _MaxPlus.Quat_Equals(self, *args)

    def Identity(self):
        """Identity(Quat self)"""
        return _MaxPlus.Quat_Identity(self)

    def IsIdentity(self):
        """IsIdentity(Quat self) -> int"""
        return _MaxPlus.Quat_IsIdentity(self)

    def Normalize(self):
        """Normalize(Quat self)"""
        return _MaxPlus.Quat_Normalize(self)

    def GetEuler(self, *args):
        """GetEuler(Quat self, float * X, float * Y, float * Z)"""
        return _MaxPlus.Quat_GetEuler(self, *args)

    def __sub__(self, *args):
        """__sub__(Quat self, Quat q) -> Quat"""
        return _MaxPlus.Quat___sub__(self, *args)

    def __add__(self, *args):
        """__add__(Quat self, Quat q) -> Quat"""
        return _MaxPlus.Quat___add__(self, *args)

    def __mul__(self, *args):
        """__mul__(Quat self, Quat q) -> Quat"""
        return _MaxPlus.Quat___mul__(self, *args)

    def __div__(self, *args):
        """__div__(Quat self, Quat q) -> Quat"""
        return _MaxPlus.Quat___div__(self, *args)

    def __mod__(self, *args):
        """__mod__(Quat self, Quat q) -> float"""
        return _MaxPlus.Quat___mod__(self, *args)

    def Plus(self, *args):
        """Plus(Quat self, Quat q) -> Quat"""
        return _MaxPlus.Quat_Plus(self, *args)

    def Minus(self, *args):
        """Minus(Quat self, Quat q) -> Quat"""
        return _MaxPlus.Quat_Minus(self, *args)

    def GetX(self):
        """GetX(Quat self) -> float"""
        return _MaxPlus.Quat_GetX(self)

    def GetY(self):
        """GetY(Quat self) -> float"""
        return _MaxPlus.Quat_GetY(self)

    def GetZ(self):
        """GetZ(Quat self) -> float"""
        return _MaxPlus.Quat_GetZ(self)

    def GetW(self):
        """GetW(Quat self) -> float"""
        return _MaxPlus.Quat_GetW(self)

    def SetX(self, *args):
        """SetX(Quat self, float value)"""
        return _MaxPlus.Quat_SetX(self, *args)

    def SetY(self, *args):
        """SetY(Quat self, float value)"""
        return _MaxPlus.Quat_SetY(self, *args)

    def SetZ(self, *args):
        """SetZ(Quat self, float value)"""
        return _MaxPlus.Quat_SetZ(self, *args)

    def SetW(self, *args):
        """SetW(Quat self, float value)"""
        return _MaxPlus.Quat_SetW(self, *args)

    def _ToString(self):
        """_ToString(Quat self) -> ::WStr"""
        return _MaxPlus.Quat__ToString(self)

    X = _swig_property(GetX, SetX)
    Y = _swig_property(GetY, SetY)
    Z = _swig_property(GetZ, SetZ)
    W = _swig_property(GetW, SetW)

    __swig_destroy__ = _MaxPlus.delete_Quat
    __del__ = lambda self : None;
Quat_swigregister = _MaxPlus.Quat_swigregister
Quat_swigregister(Quat)

def Quat__CreateWrapper(*args):
  """Quat__CreateWrapper(void * quat_pointer) -> Quat"""
  return _MaxPlus.Quat__CreateWrapper(*args)

def Quat__CreateWrapperFromFPValue(*args):
  """Quat__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Quat"""
  return _MaxPlus.Quat__CreateWrapperFromFPValue(*args)

class ScaleValue(Wrapper):
    """Describes an arbitrary non-uniform scaling in an arbitrary axis system."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::ScaleValue self) -> ScaleValue
        __init__(Autodesk::Max::ScaleValue self, Point3 as) -> ScaleValue
        __init__(Autodesk::Max::ScaleValue self, Point3 as, Quat aq) -> ScaleValue
        """
        this = _MaxPlus.new_ScaleValue(*args)
        try: self.this.append(this)
        except: self.this = this
    def __iadd__(self, *args):
        """__iadd__(ScaleValue self, ScaleValue s) -> ScaleValue"""
        return _MaxPlus.ScaleValue___iadd__(self, *args)

    def __imul__(self, *args):
        """__imul__(ScaleValue self, float const s) -> ScaleValue"""
        return _MaxPlus.ScaleValue___imul__(self, *args)

    def GetS(self):
        """GetS(ScaleValue self) -> Point3"""
        return _MaxPlus.ScaleValue_GetS(self)

    def GetQ(self):
        """GetQ(ScaleValue self) -> Quat"""
        return _MaxPlus.ScaleValue_GetQ(self)

    def SetS(self, *args):
        """SetS(ScaleValue self, Point3 value)"""
        return _MaxPlus.ScaleValue_SetS(self, *args)

    def SetQ(self, *args):
        """SetQ(ScaleValue self, Quat value)"""
        return _MaxPlus.ScaleValue_SetQ(self, *args)

    def _ToString(self):
        """_ToString(ScaleValue self) -> ::WStr"""
        return _MaxPlus.ScaleValue__ToString(self)

    S = _swig_property(GetS, SetS)
    Q = _swig_property(GetQ, SetQ)

    __swig_destroy__ = _MaxPlus.delete_ScaleValue
    __del__ = lambda self : None;
ScaleValue_swigregister = _MaxPlus.ScaleValue_swigregister
ScaleValue_swigregister(ScaleValue)

class Matrix3(Wrapper):
    """Implements a 4x3 3D transformation matrix object."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Matrix3 self) -> Matrix3
        __init__(Autodesk::Max::Matrix3 self, bool b) -> Matrix3
        __init__(Autodesk::Max::Matrix3 self, Quat q) -> Matrix3
        __init__(Autodesk::Max::Matrix3 self, Point3 U, Point3 V, Point3 N, Point3 T) -> Matrix3
        """
        this = _MaxPlus.new_Matrix3(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * matrix3_pointer) -> Matrix3"""
        return _MaxPlus.Matrix3__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Matrix3"""
        return _MaxPlus.Matrix3__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Matrix3 self, void * matrix3_pointer)"""
        return _MaxPlus.Matrix3__SetValue(self, *args)

    def __len__(self):
        """__len__(Matrix3 self) -> int"""
        return _MaxPlus.Matrix3___len__(self)

    def __getitem__(self, *args):
        """__getitem__(Matrix3 self, int i) -> Point3"""
        return _MaxPlus.Matrix3___getitem__(self, *args)

    def IsIdentity(self):
        """IsIdentity(Matrix3 self) -> bool"""
        return _MaxPlus.Matrix3_IsIdentity(self)

    def ValidateFlags(self):
        """ValidateFlags(Matrix3 self)"""
        return _MaxPlus.Matrix3_ValidateFlags(self)

    def Set(self, *args):
        """Set(Matrix3 self, Point3 U, Point3 V, Point3 N, Point3 T) -> Matrix3"""
        return _MaxPlus.Matrix3_Set(self, *args)

    def __eq__(self, *args):
        """__eq__(Matrix3 self, Matrix3 M) -> bool"""
        return _MaxPlus.Matrix3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Matrix3 self, Matrix3 M) -> bool"""
        return _MaxPlus.Matrix3___ne__(self, *args)

    def Equals(self, *args):
        """
        Equals(Matrix3 self, Matrix3 M, float epsilon=1E-6) -> bool
        Equals(Matrix3 self, Matrix3 M) -> bool
        """
        return _MaxPlus.Matrix3_Equals(self, *args)

    def __isub__(self, *args):
        """__isub__(Matrix3 self, Matrix3 M) -> Matrix3"""
        return _MaxPlus.Matrix3___isub__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(Matrix3 self, Matrix3 M) -> Matrix3"""
        return _MaxPlus.Matrix3___iadd__(self, *args)

    def __imul__(self, *args):
        """
        __imul__(Matrix3 self, Matrix3 M) -> Matrix3
        __imul__(Matrix3 self, float a) -> Matrix3
        """
        return _MaxPlus.Matrix3___imul__(self, *args)

    def ToIdentity(self):
        """ToIdentity(Matrix3 self)"""
        return _MaxPlus.Matrix3_ToIdentity(self)

    def Zero(self):
        """Zero(Matrix3 self)"""
        return _MaxPlus.Matrix3_Zero(self)

    def GetNumRows(self):
        """GetNumRows(Matrix3 self) -> int"""
        return _MaxPlus.Matrix3_GetNumRows(self)

    def GetNumColumns(self):
        """GetNumColumns(Matrix3 self) -> int"""
        return _MaxPlus.Matrix3_GetNumColumns(self)

    def GetRow(self, *args):
        """GetRow(Matrix3 self, int i) -> Point3"""
        return _MaxPlus.Matrix3_GetRow(self, *args)

    def SetRow(self, *args):
        """SetRow(Matrix3 self, int i, Point3 p)"""
        return _MaxPlus.Matrix3_SetRow(self, *args)

    def GetColumn(self, *args):
        """GetColumn(Matrix3 self, int i) -> Point4"""
        return _MaxPlus.Matrix3_GetColumn(self, *args)

    def SetColumn(self, *args):
        """SetColumn(Matrix3 self, int i, Point4 col)"""
        return _MaxPlus.Matrix3_SetColumn(self, *args)

    def GetColumn3(self, *args):
        """GetColumn3(Matrix3 self, int i) -> Point3"""
        return _MaxPlus.Matrix3_GetColumn3(self, *args)

    def NoTrans(self):
        """NoTrans(Matrix3 self)"""
        return _MaxPlus.Matrix3_NoTrans(self)

    def NoRot(self):
        """NoRot(Matrix3 self)"""
        return _MaxPlus.Matrix3_NoRot(self)

    def NoScale(self):
        """NoScale(Matrix3 self)"""
        return _MaxPlus.Matrix3_NoScale(self)

    def Orthogonalize(self):
        """Orthogonalize(Matrix3 self)"""
        return _MaxPlus.Matrix3_Orthogonalize(self)

    def SetTranslation(self, *args):
        """SetTranslation(Matrix3 self, Point3 p)"""
        return _MaxPlus.Matrix3_SetTranslation(self, *args)

    def GetTranslation(self):
        """GetTranslation(Matrix3 self) -> Point3"""
        return _MaxPlus.Matrix3_GetTranslation(self)

    def GetRotation(self):
        """GetRotation(Matrix3 self) -> Quat"""
        return _MaxPlus.Matrix3_GetRotation(self)

    def GetScale(self):
        """GetScale(Matrix3 self) -> Point3"""
        return _MaxPlus.Matrix3_GetScale(self)

    def SetRotation(self, *args):
        """SetRotation(Matrix3 self, Quat q)"""
        return _MaxPlus.Matrix3_SetRotation(self, *args)

    def SetScale(self, *args):
        """SetScale(Matrix3 self, Point3 s)"""
        return _MaxPlus.Matrix3_SetScale(self, *args)

    def SetToRotation(self, *args):
        """
        SetToRotation(Matrix3 self, Quat q)
        SetToRotation(Matrix3 self, AngAxis aa)
        SetToRotation(Matrix3 self, float yaw, float pitch, float rotation)
        """
        return _MaxPlus.Matrix3_SetToRotation(self, *args)

    def Translate(self, *args):
        """Translate(Matrix3 self, Point3 p)"""
        return _MaxPlus.Matrix3_Translate(self, *args)

    def Rotate(self, *args):
        """Rotate(Matrix3 self, Quat q)"""
        return _MaxPlus.Matrix3_Rotate(self, *args)

    def RotateX(self, *args):
        """RotateX(Matrix3 self, float angle)"""
        return _MaxPlus.Matrix3_RotateX(self, *args)

    def RotateY(self, *args):
        """RotateY(Matrix3 self, float angle)"""
        return _MaxPlus.Matrix3_RotateY(self, *args)

    def RotateZ(self, *args):
        """RotateZ(Matrix3 self, float angle)"""
        return _MaxPlus.Matrix3_RotateZ(self, *args)

    def ScaleEx(self, *args):
        """
        ScaleEx(Matrix3 self, Point3 s, bool trans=True)
        ScaleEx(Matrix3 self, Point3 s)
        """
        return _MaxPlus.Matrix3_ScaleEx(self, *args)

    def PreTranslate(self, *args):
        """PreTranslate(Matrix3 self, Point3 p)"""
        return _MaxPlus.Matrix3_PreTranslate(self, *args)

    def PreRotate(self, *args):
        """PreRotate(Matrix3 self, Quat q)"""
        return _MaxPlus.Matrix3_PreRotate(self, *args)

    def PreRotateX(self, *args):
        """PreRotateX(Matrix3 self, float angle)"""
        return _MaxPlus.Matrix3_PreRotateX(self, *args)

    def PreRotateY(self, *args):
        """PreRotateY(Matrix3 self, float angle)"""
        return _MaxPlus.Matrix3_PreRotateY(self, *args)

    def PreRotateZ(self, *args):
        """PreRotateZ(Matrix3 self, float angle)"""
        return _MaxPlus.Matrix3_PreRotateZ(self, *args)

    def PreScale(self, *args):
        """
        PreScale(Matrix3 self, Point3 s, bool trans=True)
        PreScale(Matrix3 self, Point3 s)
        """
        return _MaxPlus.Matrix3_PreScale(self, *args)

    def SetTranslate(self, *args):
        """SetTranslate(Matrix3 self, Point3 p)"""
        return _MaxPlus.Matrix3_SetTranslate(self, *args)

    def SetRotateX(self, *args):
        """SetRotateX(Matrix3 self, float angle)"""
        return _MaxPlus.Matrix3_SetRotateX(self, *args)

    def SetRotateY(self, *args):
        """SetRotateY(Matrix3 self, float angle)"""
        return _MaxPlus.Matrix3_SetRotateY(self, *args)

    def SetRotateZ(self, *args):
        """SetRotateZ(Matrix3 self, float angle)"""
        return _MaxPlus.Matrix3_SetRotateZ(self, *args)

    def SetAngleAxis(self, *args):
        """SetAngleAxis(Matrix3 self, Point3 axis, float angle)"""
        return _MaxPlus.Matrix3_SetAngleAxis(self, *args)

    def SetToScale(self, *args):
        """SetToScale(Matrix3 self, Point3 s)"""
        return _MaxPlus.Matrix3_SetToScale(self, *args)

    def SetFromToUp(self, *args):
        """SetFromToUp(Matrix3 self, Point3 other, Point3 _to, Point3 up)"""
        return _MaxPlus.Matrix3_SetFromToUp(self, *args)

    def Invert(self):
        """Invert(Matrix3 self)"""
        return _MaxPlus.Matrix3_Invert(self)

    def __mul__(self, *args):
        """__mul__(Matrix3 self, Matrix3 m) -> Matrix3"""
        return _MaxPlus.Matrix3___mul__(self, *args)

    def __add__(self, *args):
        """__add__(Matrix3 self, Matrix3 m) -> Matrix3"""
        return _MaxPlus.Matrix3___add__(self, *args)

    def __sub__(self, *args):
        """__sub__(Matrix3 self, Matrix3 m) -> Matrix3"""
        return _MaxPlus.Matrix3___sub__(self, *args)

    def PointTransform(self, *args):
        """PointTransform(Matrix3 self, Point3 p) -> Point3"""
        return _MaxPlus.Matrix3_PointTransform(self, *args)

    def VectorTransform(self, *args):
        """VectorTransform(Matrix3 self, Point3 p) -> Point3"""
        return _MaxPlus.Matrix3_VectorTransform(self, *args)

    def GetYaw(self):
        """GetYaw(Matrix3 self) -> float"""
        return _MaxPlus.Matrix3_GetYaw(self)

    def GetPitch(self):
        """GetPitch(Matrix3 self) -> float"""
        return _MaxPlus.Matrix3_GetPitch(self)

    def GetRoll(self):
        """GetRoll(Matrix3 self) -> float"""
        return _MaxPlus.Matrix3_GetRoll(self)

    def GetParity(self):
        """GetParity(Matrix3 self) -> bool"""
        return _MaxPlus.Matrix3_GetParity(self)

    def GetIdentity():
        """GetIdentity() -> Matrix3"""
        return _MaxPlus.Matrix3_GetIdentity()

    GetIdentity = staticmethod(GetIdentity)
    def _ToString(self):
        """_ToString(Matrix3 self) -> ::WStr"""
        return _MaxPlus.Matrix3__ToString(self)

    Columns = _swig_property(lambda self: (self.GetColumn(i) for i in xrange(self.GetNumColumns())))
    Rows = _swig_property(lambda self: (self.GetRow(i) for i in xrange(self.GetNumRows())))
    Translation = _swig_property(GetTranslation, SetTranslation)
    Rotation = _swig_property(GetRotation, SetRotation)
    Scale = _swig_property(GetScale, SetScale)

    __swig_destroy__ = _MaxPlus.delete_Matrix3
    __del__ = lambda self : None;
Matrix3_swigregister = _MaxPlus.Matrix3_swigregister
Matrix3_swigregister(Matrix3)

def Matrix3__CreateWrapper(*args):
  """Matrix3__CreateWrapper(void * matrix3_pointer) -> Matrix3"""
  return _MaxPlus.Matrix3__CreateWrapper(*args)

def Matrix3__CreateWrapperFromFPValue(*args):
  """Matrix3__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Matrix3"""
  return _MaxPlus.Matrix3__CreateWrapperFromFPValue(*args)

def Matrix3_GetIdentity():
  """Matrix3_GetIdentity() -> Matrix3"""
  return _MaxPlus.Matrix3_GetIdentity()

class AngAxis(Wrapper):
    """Orientation in 3D space using an angle and axis. This is similar to a quaternion, except that a normalized quaternion only represents -PI to +PI rotation and AngAxis will have the number of revolutions stored. """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::AngAxis self) -> AngAxis
        __init__(Autodesk::Max::AngAxis self, float x, float y, float z, float ang) -> AngAxis
        __init__(Autodesk::Max::AngAxis self, Point3 axis, float angle) -> AngAxis
        __init__(Autodesk::Max::AngAxis self, Quat q) -> AngAxis
        __init__(Autodesk::Max::AngAxis self, Matrix3 m) -> AngAxis
        """
        this = _MaxPlus.new_AngAxis(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * angaxis_pointer) -> AngAxis"""
        return _MaxPlus.AngAxis__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> AngAxis"""
        return _MaxPlus.AngAxis__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(AngAxis self, void * angaxis_pointer)"""
        return _MaxPlus.AngAxis__SetValue(self, *args)

    def Set(self, *args):
        """
        Set(AngAxis self, float x, float y, float z, float ang) -> AngAxis
        Set(AngAxis self, Point3 ax, float ang) -> AngAxis
        Set(AngAxis self, Quat q) -> AngAxis
        Set(AngAxis self, Matrix3 m) -> AngAxis
        """
        return _MaxPlus.AngAxis_Set(self, *args)

    def GetNumRevs(self):
        """GetNumRevs(AngAxis self) -> int"""
        return _MaxPlus.AngAxis_GetNumRevs(self)

    def SetNumRevs(self, *args):
        """SetNumRevs(AngAxis self, int num)"""
        return _MaxPlus.AngAxis_SetNumRevs(self, *args)

    def GetAxis(self):
        """GetAxis(AngAxis self) -> Point3"""
        return _MaxPlus.AngAxis_GetAxis(self)

    def GetAngle(self):
        """GetAngle(AngAxis self) -> float"""
        return _MaxPlus.AngAxis_GetAngle(self)

    def SetAxis(self, *args):
        """SetAxis(AngAxis self, Point3 value)"""
        return _MaxPlus.AngAxis_SetAxis(self, *args)

    def SetAngle(self, *args):
        """SetAngle(AngAxis self, float value)"""
        return _MaxPlus.AngAxis_SetAngle(self, *args)

    def _ToString(self):
        """_ToString(AngAxis self) -> ::WStr"""
        return _MaxPlus.AngAxis__ToString(self)

    Axis = _swig_property(GetAxis, SetAxis)
    Angle = _swig_property(GetAngle, SetAngle)
    NumRevs = _swig_property(GetNumRevs, SetNumRevs)

    __swig_destroy__ = _MaxPlus.delete_AngAxis
    __del__ = lambda self : None;
AngAxis_swigregister = _MaxPlus.AngAxis_swigregister
AngAxis_swigregister(AngAxis)

def AngAxis__CreateWrapper(*args):
  """AngAxis__CreateWrapper(void * angaxis_pointer) -> AngAxis"""
  return _MaxPlus.AngAxis__CreateWrapper(*args)

def AngAxis__CreateWrapperFromFPValue(*args):
  """AngAxis__CreateWrapperFromFPValue(void * fpvalue_pointer) -> AngAxis"""
  return _MaxPlus.AngAxis__CreateWrapperFromFPValue(*args)

class Ray(Wrapper):
    """Describes a vector in space using an origin point and a unit direction vector."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Ray self) -> Ray
        __init__(Autodesk::Max::Ray self, Point3 point, Point3 dir) -> Ray
        """
        this = _MaxPlus.new_Ray(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * ray_pointer) -> Ray"""
        return _MaxPlus.Ray__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Ray"""
        return _MaxPlus.Ray__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Ray self, void * ray_pointer)"""
        return _MaxPlus.Ray__SetValue(self, *args)

    def GetPoint(self):
        """GetPoint(Ray self) -> Point3"""
        return _MaxPlus.Ray_GetPoint(self)

    def GetDirection(self):
        """GetDirection(Ray self) -> Point3"""
        return _MaxPlus.Ray_GetDirection(self)

    def SetPoint(self, *args):
        """SetPoint(Ray self, Point3 value)"""
        return _MaxPlus.Ray_SetPoint(self, *args)

    def SetDirection(self, *args):
        """SetDirection(Ray self, Point3 value)"""
        return _MaxPlus.Ray_SetDirection(self, *args)

    def _ToString(self):
        """_ToString(Ray self) -> ::WStr"""
        return _MaxPlus.Ray__ToString(self)

    Point = _swig_property(GetPoint, SetPoint)
    Direction = _swig_property(GetDirection, SetDirection)

    __swig_destroy__ = _MaxPlus.delete_Ray
    __del__ = lambda self : None;
Ray_swigregister = _MaxPlus.Ray_swigregister
Ray_swigregister(Ray)

def Ray__CreateWrapper(*args):
  """Ray__CreateWrapper(void * ray_pointer) -> Ray"""
  return _MaxPlus.Ray__CreateWrapper(*args)

def Ray__CreateWrapperFromFPValue(*args):
  """Ray__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Ray"""
  return _MaxPlus.Ray__CreateWrapperFromFPValue(*args)

class IPoint2(Wrapper):
    """A 2D point using int x and y coordinates."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::IPoint2 self) -> IPoint2
        __init__(Autodesk::Max::IPoint2 self, int X, int Y) -> IPoint2
        __init__(Autodesk::Max::IPoint2 self, IPoint2 a) -> IPoint2
        """
        this = _MaxPlus.new_IPoint2(*args)
        try: self.this.append(this)
        except: self.this = this
    def __neg__(self):
        """__neg__(IPoint2 self) -> IPoint2"""
        return _MaxPlus.IPoint2___neg__(self)

    def __pos__(self):
        """__pos__(IPoint2 self) -> IPoint2"""
        return _MaxPlus.IPoint2___pos__(self)

    def __isub__(self, *args):
        """__isub__(IPoint2 self, IPoint2 p) -> IPoint2"""
        return _MaxPlus.IPoint2___isub__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(IPoint2 self, IPoint2 p) -> IPoint2"""
        return _MaxPlus.IPoint2___iadd__(self, *args)

    def __imul__(self, *args):
        """__imul__(IPoint2 self, int i) -> IPoint2"""
        return _MaxPlus.IPoint2___imul__(self, *args)

    def __idiv__(self, *args):
        """__idiv__(IPoint2 self, int i) -> IPoint2"""
        return _MaxPlus.IPoint2___idiv__(self, *args)

    def __sub__(self, *args):
        """__sub__(IPoint2 self, IPoint2 p) -> IPoint2"""
        return _MaxPlus.IPoint2___sub__(self, *args)

    def __add__(self, *args):
        """__add__(IPoint2 self, IPoint2 p) -> IPoint2"""
        return _MaxPlus.IPoint2___add__(self, *args)

    def __len__(self):
        """__len__(IPoint2 self) -> int"""
        return _MaxPlus.IPoint2___len__(self)

    def __getitem__(self, *args):
        """__getitem__(IPoint2 self, int i) -> int"""
        return _MaxPlus.IPoint2___getitem__(self, *args)

    def DotProd(self, *args):
        """DotProd(IPoint2 self, IPoint2 p) -> int"""
        return _MaxPlus.IPoint2_DotProd(self, *args)

    def __mul__(self, *args):
        """__mul__(IPoint2 self, IPoint2 p) -> int"""
        return _MaxPlus.IPoint2___mul__(self, *args)

    def __eq__(self, *args):
        """__eq__(IPoint2 self, IPoint2 p) -> bool"""
        return _MaxPlus.IPoint2___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(IPoint2 self, IPoint2 p) -> bool"""
        return _MaxPlus.IPoint2___ne__(self, *args)

    def GetX(self):
        """GetX(IPoint2 self) -> int"""
        return _MaxPlus.IPoint2_GetX(self)

    def GetY(self):
        """GetY(IPoint2 self) -> int"""
        return _MaxPlus.IPoint2_GetY(self)

    def SetX(self, *args):
        """SetX(IPoint2 self, int value)"""
        return _MaxPlus.IPoint2_SetX(self, *args)

    def SetY(self, *args):
        """SetY(IPoint2 self, int value)"""
        return _MaxPlus.IPoint2_SetY(self, *args)

    def _ToString(self):
        """_ToString(IPoint2 self) -> ::WStr"""
        return _MaxPlus.IPoint2__ToString(self)

    def GetMaxComponent(self):
        """GetMaxComponent(IPoint2 self) -> int"""
        return _MaxPlus.IPoint2_GetMaxComponent(self)

    def GetMinComponent(self):
        """GetMinComponent(IPoint2 self) -> int"""
        return _MaxPlus.IPoint2_GetMinComponent(self)

    def GetLength(self):
        """GetLength(IPoint2 self) -> float"""
        return _MaxPlus.IPoint2_GetLength(self)

    X = _swig_property(GetX, SetX)
    Y = _swig_property(GetY, SetY)

    __swig_destroy__ = _MaxPlus.delete_IPoint2
    __del__ = lambda self : None;
IPoint2_swigregister = _MaxPlus.IPoint2_swigregister
IPoint2_swigregister(IPoint2)

class IPoint3(Wrapper):
    """A 3D point using integer x, y and z coordinates."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::IPoint3 self) -> IPoint3
        __init__(Autodesk::Max::IPoint3 self, int X, int Y, int Z) -> IPoint3
        __init__(Autodesk::Max::IPoint3 self, IPoint3 a) -> IPoint3
        """
        this = _MaxPlus.new_IPoint3(*args)
        try: self.this.append(this)
        except: self.this = this
    def __neg__(self):
        """__neg__(IPoint3 self) -> IPoint3"""
        return _MaxPlus.IPoint3___neg__(self)

    def __pos__(self):
        """__pos__(IPoint3 self) -> IPoint3"""
        return _MaxPlus.IPoint3___pos__(self)

    def __isub__(self, *args):
        """__isub__(IPoint3 self, IPoint3 p) -> IPoint3"""
        return _MaxPlus.IPoint3___isub__(self, *args)

    def __iadd__(self, *args):
        """__iadd__(IPoint3 self, IPoint3 p) -> IPoint3"""
        return _MaxPlus.IPoint3___iadd__(self, *args)

    def __sub__(self, *args):
        """__sub__(IPoint3 self, IPoint3 p) -> IPoint3"""
        return _MaxPlus.IPoint3___sub__(self, *args)

    def __add__(self, *args):
        """__add__(IPoint3 self, IPoint3 p) -> IPoint3"""
        return _MaxPlus.IPoint3___add__(self, *args)

    def __len__(self):
        """__len__(IPoint3 self) -> int"""
        return _MaxPlus.IPoint3___len__(self)

    def __getitem__(self, *args):
        """__getitem__(IPoint3 self, int i) -> int"""
        return _MaxPlus.IPoint3___getitem__(self, *args)

    def __mul__(self, *args):
        """__mul__(IPoint3 self, IPoint3 p) -> int"""
        return _MaxPlus.IPoint3___mul__(self, *args)

    def DotProd(self, *args):
        """DotProd(IPoint3 self, IPoint3 p) -> int"""
        return _MaxPlus.IPoint3_DotProd(self, *args)

    def __xor__(self, *args):
        """__xor__(IPoint3 self, IPoint3 p) -> IPoint3"""
        return _MaxPlus.IPoint3___xor__(self, *args)

    def CrossProd(self, *args):
        """CrossProd(IPoint3 self, IPoint3 p) -> IPoint3"""
        return _MaxPlus.IPoint3_CrossProd(self, *args)

    def __eq__(self, *args):
        """__eq__(IPoint3 self, IPoint3 p) -> bool"""
        return _MaxPlus.IPoint3___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(IPoint3 self, IPoint3 p) -> bool"""
        return _MaxPlus.IPoint3___ne__(self, *args)

    def GetX(self):
        """GetX(IPoint3 self) -> int"""
        return _MaxPlus.IPoint3_GetX(self)

    def GetY(self):
        """GetY(IPoint3 self) -> int"""
        return _MaxPlus.IPoint3_GetY(self)

    def GetZ(self):
        """GetZ(IPoint3 self) -> int"""
        return _MaxPlus.IPoint3_GetZ(self)

    def SetX(self, *args):
        """SetX(IPoint3 self, int value)"""
        return _MaxPlus.IPoint3_SetX(self, *args)

    def SetY(self, *args):
        """SetY(IPoint3 self, int value)"""
        return _MaxPlus.IPoint3_SetY(self, *args)

    def SetZ(self, *args):
        """SetZ(IPoint3 self, int value)"""
        return _MaxPlus.IPoint3_SetZ(self, *args)

    def GetMinComponent(self):
        """GetMinComponent(IPoint3 self) -> int"""
        return _MaxPlus.IPoint3_GetMinComponent(self)

    def GetMaxComponent(self):
        """GetMaxComponent(IPoint3 self) -> int"""
        return _MaxPlus.IPoint3_GetMaxComponent(self)

    def _ToString(self):
        """_ToString(IPoint3 self) -> ::WStr"""
        return _MaxPlus.IPoint3__ToString(self)

    def GetLength(self):
        """GetLength(IPoint3 self) -> float"""
        return _MaxPlus.IPoint3_GetLength(self)

    X = _swig_property(GetX, SetX)
    Y = _swig_property(GetY, SetY)
    Z = _swig_property(GetZ, SetZ)

    __swig_destroy__ = _MaxPlus.delete_IPoint3
    __del__ = lambda self : None;
IPoint3_swigregister = _MaxPlus.IPoint3_swigregister
IPoint3_swigregister(IPoint3)

class Box2(Wrapper):
    """Describes a 2D rectangular region using integer coordinates."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Box2 self) -> Box2
        __init__(Autodesk::Max::Box2 self, int x1, int y1, int x2, int y2) -> Box2
        __init__(Autodesk::Max::Box2 self, IPoint2 a, IPoint2 b) -> Box2
        """
        this = _MaxPlus.new_Box2(*args)
        try: self.this.append(this)
        except: self.this = this
    def IsEmpty(self):
        """IsEmpty(Box2 self) -> int"""
        return _MaxPlus.Box2_IsEmpty(self)

    def SetEmpty(self):
        """SetEmpty(Box2 self)"""
        return _MaxPlus.Box2_SetEmpty(self)

    def Rectify(self):
        """Rectify(Box2 self)"""
        return _MaxPlus.Box2_Rectify(self)

    def Scale(self, *args):
        """Scale(Box2 self, float f)"""
        return _MaxPlus.Box2_Scale(self, *args)

    def Translate(self, *args):
        """Translate(Box2 self, IPoint2 t)"""
        return _MaxPlus.Box2_Translate(self, *args)

    def GetCenter(self):
        """GetCenter(Box2 self) -> IPoint2"""
        return _MaxPlus.Box2_GetCenter(self)

    def GetX(self):
        """GetX(Box2 self) -> int"""
        return _MaxPlus.Box2_GetX(self)

    def GetY(self):
        """GetY(Box2 self) -> int"""
        return _MaxPlus.Box2_GetY(self)

    def GetW(self):
        """GetW(Box2 self) -> int"""
        return _MaxPlus.Box2_GetW(self)

    def GetH(self):
        """GetH(Box2 self) -> int"""
        return _MaxPlus.Box2_GetH(self)

    def GetMin(self):
        """GetMin(Box2 self) -> IPoint2"""
        return _MaxPlus.Box2_GetMin(self)

    def GetMax(self):
        """GetMax(Box2 self) -> IPoint2"""
        return _MaxPlus.Box2_GetMax(self)

    def SetW(self, *args):
        """SetW(Box2 self, int w)"""
        return _MaxPlus.Box2_SetW(self, *args)

    def SetH(self, *args):
        """SetH(Box2 self, int h)"""
        return _MaxPlus.Box2_SetH(self, *args)

    def SetX(self, *args):
        """SetX(Box2 self, int x)"""
        return _MaxPlus.Box2_SetX(self, *args)

    def SetY(self, *args):
        """SetY(Box2 self, int y)"""
        return _MaxPlus.Box2_SetY(self, *args)

    def SetWH(self, *args):
        """SetWH(Box2 self, int w, int h)"""
        return _MaxPlus.Box2_SetWH(self, *args)

    def SetXY(self, *args):
        """SetXY(Box2 self, int x, int y)"""
        return _MaxPlus.Box2_SetXY(self, *args)

    def __iadd__(self, *args):
        """
        __iadd__(Box2 self, Box2 b) -> Box2
        __iadd__(Box2 self, IPoint2 p) -> Box2
        """
        return _MaxPlus.Box2___iadd__(self, *args)

    def __eq__(self, *args):
        """__eq__(Box2 self, Box2 b) -> bool"""
        return _MaxPlus.Box2___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Box2 self, Box2 b) -> bool"""
        return _MaxPlus.Box2___ne__(self, *args)

    def Contains(self, *args):
        """Contains(Box2 self, IPoint2 p) -> bool"""
        return _MaxPlus.Box2_Contains(self, *args)

    def _ToString(self):
        """_ToString(Box2 self) -> ::WStr"""
        return _MaxPlus.Box2__ToString(self)

    X = _swig_property(GetX, SetX)
    Y = _swig_property(GetY, SetY)
    W = _swig_property(GetW, SetW)
    H = _swig_property(GetH, SetH)

    __swig_destroy__ = _MaxPlus.delete_Box2
    __del__ = lambda self : None;
Box2_swigregister = _MaxPlus.Box2_swigregister
Box2_swigregister(Box2)

class Box3(Wrapper):
    """Represents a 3D box described by two 3D corner coordinates."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Box3 self) -> Box3
        __init__(Autodesk::Max::Box3 self, Point3 p, Point3 q) -> Box3
        """
        this = _MaxPlus.new_Box3(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * box3_pointer) -> Box3"""
        return _MaxPlus.Box3__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Box3"""
        return _MaxPlus.Box3__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Box3 self, void * box3_pointer)"""
        return _MaxPlus.Box3__SetValue(self, *args)

    def Init(self):
        """Init(Box3 self)"""
        return _MaxPlus.Box3_Init(self)

    def MakeCube(self, *args):
        """MakeCube(Box3 self, Point3 p, float side)"""
        return _MaxPlus.Box3_MakeCube(self, *args)

    def GetMin(self):
        """GetMin(Box3 self) -> Point3"""
        return _MaxPlus.Box3_GetMin(self)

    def GetMax(self):
        """GetMax(Box3 self) -> Point3"""
        return _MaxPlus.Box3_GetMax(self)

    def GetCenter(self):
        """GetCenter(Box3 self) -> Point3"""
        return _MaxPlus.Box3_GetCenter(self)

    def GetWidth(self):
        """GetWidth(Box3 self) -> Point3"""
        return _MaxPlus.Box3_GetWidth(self)

    def __iadd__(self, *args):
        """
        __iadd__(Box3 self, Point3 p) -> Box3
        __iadd__(Box3 self, Box3 b) -> Box3
        """
        return _MaxPlus.Box3___iadd__(self, *args)

    def Scale(self, *args):
        """Scale(Box3 self, float s)"""
        return _MaxPlus.Box3_Scale(self, *args)

    def Translate(self, *args):
        """Translate(Box3 self, Point3 p)"""
        return _MaxPlus.Box3_Translate(self, *args)

    def EnlargeBy(self, *args):
        """EnlargeBy(Box3 self, float s)"""
        return _MaxPlus.Box3_EnlargeBy(self, *args)

    def IncludePoint(self, *args):
        """
        IncludePoint(Box3 self, Point3 pt, Matrix3 tm)
        IncludePoint(Box3 self, Point3 pt)
        """
        return _MaxPlus.Box3_IncludePoint(self, *args)

    def Transform(self, *args):
        """Transform(Box3 self, Matrix3 tm) -> Box3"""
        return _MaxPlus.Box3_Transform(self, *args)

    def IsEmpty(self):
        """IsEmpty(Box3 self) -> bool"""
        return _MaxPlus.Box3_IsEmpty(self)

    def Contains(self, *args):
        """
        Contains(Box3 self, Point3 p) -> bool
        Contains(Box3 self, Box3 b) -> bool
        """
        return _MaxPlus.Box3_Contains(self, *args)

    def Intersects(self, *args):
        """Intersects(Box3 self, Box3 b) -> bool"""
        return _MaxPlus.Box3_Intersects(self, *args)

    def _ToString(self):
        """_ToString(Box3 self) -> ::WStr"""
        return _MaxPlus.Box3__ToString(self)

    Min = _swig_property(GetMin)
    Max = _swig_property(GetMax)
    Center = _swig_property(GetCenter)
    Width = _swig_property(GetWidth)

    __swig_destroy__ = _MaxPlus.delete_Box3
    __del__ = lambda self : None;
Box3_swigregister = _MaxPlus.Box3_swigregister
Box3_swigregister(Box3)

def Box3__CreateWrapper(*args):
  """Box3__CreateWrapper(void * box3_pointer) -> Box3"""
  return _MaxPlus.Box3__CreateWrapper(*args)

def Box3__CreateWrapperFromFPValue(*args):
  """Box3__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Box3"""
  return _MaxPlus.Box3__CreateWrapperFromFPValue(*args)

class AffineParts(Wrapper):
    """Used for decomposition of an arbitrary Matrix3 into its translation, rotation, and scale components."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """__init__(Autodesk::Max::AffineParts self, Matrix3 matrix) -> AffineParts"""
        this = _MaxPlus.new_AffineParts(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetT(self):
        """GetT(AffineParts self) -> Point3"""
        return _MaxPlus.AffineParts_GetT(self)

    def GetQ(self):
        """GetQ(AffineParts self) -> Quat"""
        return _MaxPlus.AffineParts_GetQ(self)

    def GetU(self):
        """GetU(AffineParts self) -> Quat"""
        return _MaxPlus.AffineParts_GetU(self)

    def GetK(self):
        """GetK(AffineParts self) -> Point3"""
        return _MaxPlus.AffineParts_GetK(self)

    def GetF(self):
        """GetF(AffineParts self) -> float"""
        return _MaxPlus.AffineParts_GetF(self)

    __swig_destroy__ = _MaxPlus.delete_AffineParts
    __del__ = lambda self : None;
AffineParts_swigregister = _MaxPlus.AffineParts_swigregister
AffineParts_swigregister(AffineParts)

class Math(object):
    """Math utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def BasisFromZDir(*args):
        """BasisFromZDir(Point3 zDir, Point3 xDir, Point3 yDir)"""
        return _MaxPlus.Math_BasisFromZDir(*args)

    BasisFromZDir = staticmethod(BasisFromZDir)
    def Bias(*args):
        """Bias(float a, float b) -> float"""
        return _MaxPlus.Math_Bias(*args)

    Bias = staticmethod(Bias)
    def Gain(*args):
        """Gain(float a, float b) -> float"""
        return _MaxPlus.Math_Gain(*args)

    Gain = staticmethod(Gain)
    def Clamp(*args):
        """Clamp(float x, float a, float b) -> float"""
        return _MaxPlus.Math_Clamp(*args)

    Clamp = staticmethod(Clamp)
    def BoxStep(*args):
        """BoxStep(float a, float b, float x) -> float"""
        return _MaxPlus.Math_BoxStep(*args)

    BoxStep = staticmethod(BoxStep)
    def SmoothStep(*args):
        """SmoothStep(float a, float b, float x) -> float"""
        return _MaxPlus.Math_SmoothStep(*args)

    SmoothStep = staticmethod(SmoothStep)
    def SRamp(*args):
        """SRamp(float x, float a, float b, float d) -> float"""
        return _MaxPlus.Math_SRamp(*args)

    SRamp = staticmethod(SRamp)
    def Threshold(*args):
        """Threshold(float x, float a, float b) -> float"""
        return _MaxPlus.Math_Threshold(*args)

    Threshold = staticmethod(Threshold)
    def Noise1(*args):
        """Noise1(float arg) -> float"""
        return _MaxPlus.Math_Noise1(*args)

    Noise1 = staticmethod(Noise1)
    def Noise2(*args):
        """Noise2(Point2 p) -> float"""
        return _MaxPlus.Math_Noise2(*args)

    Noise2 = staticmethod(Noise2)
    def Noise3(*args):
        """Noise3(Point3 p) -> float"""
        return _MaxPlus.Math_Noise3(*args)

    Noise3 = staticmethod(Noise3)
    def Noise4(*args):
        """Noise4(Point3 p, float time) -> float"""
        return _MaxPlus.Math_Noise4(*args)

    Noise4 = staticmethod(Noise4)
    def Noise3DS(*args):
        """Noise3DS(Point3 p) -> float"""
        return _MaxPlus.Math_Noise3DS(*args)

    Noise3DS = staticmethod(Noise3DS)
    def Turbulence(*args):
        """Turbulence(Point3 p, float freq) -> float"""
        return _MaxPlus.Math_Turbulence(*args)

    Turbulence = staticmethod(Turbulence)
    __swig_destroy__ = _MaxPlus.delete_Math
    __del__ = lambda self : None;
Math_swigregister = _MaxPlus.Math_swigregister
Math_swigregister(Math)

def Math_BasisFromZDir(*args):
  """Math_BasisFromZDir(Point3 zDir, Point3 xDir, Point3 yDir)"""
  return _MaxPlus.Math_BasisFromZDir(*args)

def Math_Bias(*args):
  """Math_Bias(float a, float b) -> float"""
  return _MaxPlus.Math_Bias(*args)

def Math_Gain(*args):
  """Math_Gain(float a, float b) -> float"""
  return _MaxPlus.Math_Gain(*args)

def Math_Clamp(*args):
  """Math_Clamp(float x, float a, float b) -> float"""
  return _MaxPlus.Math_Clamp(*args)

def Math_BoxStep(*args):
  """Math_BoxStep(float a, float b, float x) -> float"""
  return _MaxPlus.Math_BoxStep(*args)

def Math_SmoothStep(*args):
  """Math_SmoothStep(float a, float b, float x) -> float"""
  return _MaxPlus.Math_SmoothStep(*args)

def Math_SRamp(*args):
  """Math_SRamp(float x, float a, float b, float d) -> float"""
  return _MaxPlus.Math_SRamp(*args)

def Math_Threshold(*args):
  """Math_Threshold(float x, float a, float b) -> float"""
  return _MaxPlus.Math_Threshold(*args)

def Math_Noise1(*args):
  """Math_Noise1(float arg) -> float"""
  return _MaxPlus.Math_Noise1(*args)

def Math_Noise2(*args):
  """Math_Noise2(Point2 p) -> float"""
  return _MaxPlus.Math_Noise2(*args)

def Math_Noise3(*args):
  """Math_Noise3(Point3 p) -> float"""
  return _MaxPlus.Math_Noise3(*args)

def Math_Noise4(*args):
  """Math_Noise4(Point3 p, float time) -> float"""
  return _MaxPlus.Math_Noise4(*args)

def Math_Noise3DS(*args):
  """Math_Noise3DS(Point3 p) -> float"""
  return _MaxPlus.Math_Noise3DS(*args)

def Math_Turbulence(*args):
  """Math_Turbulence(Point3 p, float freq) -> float"""
  return _MaxPlus.Math_Turbulence(*args)

class Color64(Wrapper):
    """64 bit color: 16 bits each for Red, Green, Blue, and Alpha."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, vr=0, vg=0, vb=0, va=0): 
        """
        __init__(Autodesk::Max::Color64 self, WORD vr=0, WORD vg=0, WORD vb=0, WORD va=0) -> Color64
        __init__(Autodesk::Max::Color64 self, WORD vr=0, WORD vg=0, WORD vb=0) -> Color64
        __init__(Autodesk::Max::Color64 self, WORD vr=0, WORD vg=0) -> Color64
        __init__(Autodesk::Max::Color64 self, WORD vr=0) -> Color64
        __init__(Autodesk::Max::Color64 self) -> Color64
        """
        this = _MaxPlus.new_Color64(vr, vg, vb, va)
        try: self.this.append(this)
        except: self.this = this
    def GetR(self):
        """GetR(Color64 self) -> WORD"""
        return _MaxPlus.Color64_GetR(self)

    def GetG(self):
        """GetG(Color64 self) -> WORD"""
        return _MaxPlus.Color64_GetG(self)

    def GetB(self):
        """GetB(Color64 self) -> WORD"""
        return _MaxPlus.Color64_GetB(self)

    def GetA(self):
        """GetA(Color64 self) -> WORD"""
        return _MaxPlus.Color64_GetA(self)

    def SetR(self, *args):
        """SetR(Color64 self, WORD value)"""
        return _MaxPlus.Color64_SetR(self, *args)

    def SetG(self, *args):
        """SetG(Color64 self, WORD value)"""
        return _MaxPlus.Color64_SetG(self, *args)

    def SetB(self, *args):
        """SetB(Color64 self, WORD value)"""
        return _MaxPlus.Color64_SetB(self, *args)

    def SetA(self, *args):
        """SetA(Color64 self, WORD value)"""
        return _MaxPlus.Color64_SetA(self, *args)

    def _ToString(self):
        """_ToString(Color64 self) -> ::WStr"""
        return _MaxPlus.Color64__ToString(self)

    __swig_destroy__ = _MaxPlus.delete_Color64
    __del__ = lambda self : None;
Color64_swigregister = _MaxPlus.Color64_swigregister
Color64_swigregister(Color64)

class HDRColor(Wrapper):
    """High Dynamic Range bitmaps make use of this class to store color information using floating point values."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, vr=0.0, vg=0.0, vb=0.0, va=0.0): 
        """
        __init__(Autodesk::Max::HDRColor self, float vr=0.0, float vg=0.0, float vb=0.0, float va=0.0) -> HDRColor
        __init__(Autodesk::Max::HDRColor self, float vr=0.0, float vg=0.0, float vb=0.0) -> HDRColor
        __init__(Autodesk::Max::HDRColor self, float vr=0.0, float vg=0.0) -> HDRColor
        __init__(Autodesk::Max::HDRColor self, float vr=0.0) -> HDRColor
        __init__(Autodesk::Max::HDRColor self) -> HDRColor
        """
        this = _MaxPlus.new_HDRColor(vr, vg, vb, va)
        try: self.this.append(this)
        except: self.this = this
    def ClipColor(*args):
        """ClipColor(float c) -> WORD"""
        return _MaxPlus.HDRColor_ClipColor(*args)

    ClipColor = staticmethod(ClipColor)
    def GetR(self):
        """GetR(HDRColor self) -> float"""
        return _MaxPlus.HDRColor_GetR(self)

    def GetG(self):
        """GetG(HDRColor self) -> float"""
        return _MaxPlus.HDRColor_GetG(self)

    def GetB(self):
        """GetB(HDRColor self) -> float"""
        return _MaxPlus.HDRColor_GetB(self)

    def GetA(self):
        """GetA(HDRColor self) -> float"""
        return _MaxPlus.HDRColor_GetA(self)

    def SetR(self, *args):
        """SetR(HDRColor self, float value)"""
        return _MaxPlus.HDRColor_SetR(self, *args)

    def SetG(self, *args):
        """SetG(HDRColor self, float value)"""
        return _MaxPlus.HDRColor_SetG(self, *args)

    def SetB(self, *args):
        """SetB(HDRColor self, float value)"""
        return _MaxPlus.HDRColor_SetB(self, *args)

    def SetA(self, *args):
        """SetA(HDRColor self, float value)"""
        return _MaxPlus.HDRColor_SetA(self, *args)

    def _ToString(self):
        """_ToString(HDRColor self) -> ::WStr"""
        return _MaxPlus.HDRColor__ToString(self)

    __swig_destroy__ = _MaxPlus.delete_HDRColor
    __del__ = lambda self : None;
HDRColor_swigregister = _MaxPlus.HDRColor_swigregister
HDRColor_swigregister(HDRColor)

def HDRColor_ClipColor(*args):
  """HDRColor_ClipColor(float c) -> WORD"""
  return _MaxPlus.HDRColor_ClipColor(*args)

class Color(Wrapper):
    """Represents color as three floating point values: red, green, and blue."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::Color self) -> Color
        __init__(Autodesk::Max::Color self, float R, float G, float B) -> Color
        __init__(Autodesk::Max::Color self, double R, double G, double B) -> Color
        __init__(Autodesk::Max::Color self, int R, int G, int B) -> Color
        __init__(Autodesk::Max::Color self, Color a) -> Color
        __init__(Autodesk::Max::Color self, DWORD rgb) -> Color
        __init__(Autodesk::Max::Color self, Color64 c) -> Color
        __init__(Autodesk::Max::Color self, HDRColor c) -> Color
        """
        this = _MaxPlus.new_Color(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * color_pointer) -> Color"""
        return _MaxPlus.Color__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Color"""
        return _MaxPlus.Color__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Color self, void * color_pointer)"""
        return _MaxPlus.Color__SetValue(self, *args)

    def Black(self):
        """Black(Color self)"""
        return _MaxPlus.Color_Black(self)

    def White(self):
        """White(Color self)"""
        return _MaxPlus.Color_White(self)

    def ClampMax(self):
        """ClampMax(Color self)"""
        return _MaxPlus.Color_ClampMax(self)

    def ClampMin(self):
        """ClampMin(Color self)"""
        return _MaxPlus.Color_ClampMin(self)

    def ClampMinMax(self):
        """ClampMinMax(Color self)"""
        return _MaxPlus.Color_ClampMinMax(self)

    def ToRGB(self):
        """ToRGB(Color self) -> DWORD"""
        return _MaxPlus.Color_ToRGB(self)

    def __neg__(self):
        """__neg__(Color self) -> Color"""
        return _MaxPlus.Color___neg__(self)

    def __pos__(self):
        """__pos__(Color self) -> Color"""
        return _MaxPlus.Color___pos__(self)

    def __eq__(self, *args):
        """__eq__(Color self, Color p) -> bool"""
        return _MaxPlus.Color___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Color self, Color p) -> bool"""
        return _MaxPlus.Color___ne__(self, *args)

    def GetR(self):
        """GetR(Color self) -> float"""
        return _MaxPlus.Color_GetR(self)

    def GetG(self):
        """GetG(Color self) -> float"""
        return _MaxPlus.Color_GetG(self)

    def GetB(self):
        """GetB(Color self) -> float"""
        return _MaxPlus.Color_GetB(self)

    def SetR(self, *args):
        """SetR(Color self, float value)"""
        return _MaxPlus.Color_SetR(self, *args)

    def SetG(self, *args):
        """SetG(Color self, float value)"""
        return _MaxPlus.Color_SetG(self, *args)

    def SetB(self, *args):
        """SetB(Color self, float value)"""
        return _MaxPlus.Color_SetB(self, *args)

    def GetIntensity(self):
        """GetIntensity(Color self) -> float"""
        return _MaxPlus.Color_GetIntensity(self)

    def to_COLORREF(*args):
        """to_COLORREF(Color c) -> COLORREF"""
        return _MaxPlus.Color_to_COLORREF(*args)

    to_COLORREF = staticmethod(to_COLORREF)
    def color_spline(*args):
        """color_spline(float x, int nknots, Color knot) -> Color"""
        return _MaxPlus.Color_color_spline(*args)

    color_spline = staticmethod(color_spline)
    def _ToString(self):
        """_ToString(Color self) -> ::WStr"""
        return _MaxPlus.Color__ToString(self)

    __swig_destroy__ = _MaxPlus.delete_Color
    __del__ = lambda self : None;
Color_swigregister = _MaxPlus.Color_swigregister
Color_swigregister(Color)

def Color__CreateWrapper(*args):
  """Color__CreateWrapper(void * color_pointer) -> Color"""
  return _MaxPlus.Color__CreateWrapper(*args)

def Color__CreateWrapperFromFPValue(*args):
  """Color__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Color"""
  return _MaxPlus.Color__CreateWrapperFromFPValue(*args)

def Color_to_COLORREF(*args):
  """Color_to_COLORREF(Color c) -> COLORREF"""
  return _MaxPlus.Color_to_COLORREF(*args)

def Color_color_spline(*args):
  """Color_color_spline(float x, int nknots, Color knot) -> Color"""
  return _MaxPlus.Color_color_spline(*args)

class AColor(Wrapper):
    """Represents color as four floating point values: red, green, blue, and alpha."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::AColor self) -> AColor
        __init__(Autodesk::Max::AColor self, float R, float G, float B, float A=1.0) -> AColor
        __init__(Autodesk::Max::AColor self, float R, float G, float B) -> AColor
        __init__(Autodesk::Max::AColor self, double R, double G, double B, double A=1.0) -> AColor
        __init__(Autodesk::Max::AColor self, double R, double G, double B) -> AColor
        __init__(Autodesk::Max::AColor self, int R, int G, int B, int A=0) -> AColor
        __init__(Autodesk::Max::AColor self, int R, int G, int B) -> AColor
        __init__(Autodesk::Max::AColor self, AColor c) -> AColor
        __init__(Autodesk::Max::AColor self, Color c, float alph=1.0) -> AColor
        __init__(Autodesk::Max::AColor self, Color c) -> AColor
        __init__(Autodesk::Max::AColor self, DWORD rgb, float alph=1.0) -> AColor
        __init__(Autodesk::Max::AColor self, DWORD rgb) -> AColor
        __init__(Autodesk::Max::AColor self, Point4 p) -> AColor
        """
        this = _MaxPlus.new_AColor(*args)
        try: self.this.append(this)
        except: self.this = this
    def _CreateWrapper(*args):
        """_CreateWrapper(void * acolor_pointer) -> AColor"""
        return _MaxPlus.AColor__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> AColor"""
        return _MaxPlus.AColor__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(AColor self, void * acolor_pointer)"""
        return _MaxPlus.AColor__SetValue(self, *args)

    def Black(self):
        """Black(AColor self)"""
        return _MaxPlus.AColor_Black(self)

    def White(self):
        """White(AColor self)"""
        return _MaxPlus.AColor_White(self)

    def ClampMax(self):
        """ClampMax(AColor self)"""
        return _MaxPlus.AColor_ClampMax(self)

    def ClampMin(self):
        """ClampMin(AColor self)"""
        return _MaxPlus.AColor_ClampMin(self)

    def ClampMinMax(self):
        """ClampMinMax(AColor self)"""
        return _MaxPlus.AColor_ClampMinMax(self)

    def ToRGB(self):
        """ToRGB(AColor self) -> DWORD"""
        return _MaxPlus.AColor_ToRGB(self)

    def __neg__(self):
        """__neg__(AColor self) -> AColor"""
        return _MaxPlus.AColor___neg__(self)

    def __pos__(self):
        """__pos__(AColor self) -> AColor"""
        return _MaxPlus.AColor___pos__(self)

    def __eq__(self, *args):
        """__eq__(AColor self, AColor p) -> bool"""
        return _MaxPlus.AColor___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(AColor self, AColor p) -> bool"""
        return _MaxPlus.AColor___ne__(self, *args)

    def GetR(self):
        """GetR(AColor self) -> float"""
        return _MaxPlus.AColor_GetR(self)

    def GetG(self):
        """GetG(AColor self) -> float"""
        return _MaxPlus.AColor_GetG(self)

    def GetB(self):
        """GetB(AColor self) -> float"""
        return _MaxPlus.AColor_GetB(self)

    def GetA(self):
        """GetA(AColor self) -> float"""
        return _MaxPlus.AColor_GetA(self)

    def SetR(self, *args):
        """SetR(AColor self, float value)"""
        return _MaxPlus.AColor_SetR(self, *args)

    def SetG(self, *args):
        """SetG(AColor self, float value)"""
        return _MaxPlus.AColor_SetG(self, *args)

    def SetB(self, *args):
        """SetB(AColor self, float value)"""
        return _MaxPlus.AColor_SetB(self, *args)

    def SetA(self, *args):
        """SetA(AColor self, float value)"""
        return _MaxPlus.AColor_SetA(self, *args)

    def GetIntensity(self):
        """GetIntensity(AColor self) -> float"""
        return _MaxPlus.AColor_GetIntensity(self)

    def CompositeOver(*args):
        """CompositeOver(AColor fg, AColor bg) -> AColor"""
        return _MaxPlus.AColor_CompositeOver(*args)

    CompositeOver = staticmethod(CompositeOver)
    def AComp(*args):
        """AComp(AColor cbot, AColor ctop) -> AColor"""
        return _MaxPlus.AColor_AComp(*args)

    AComp = staticmethod(AComp)
    def _ToString(self):
        """_ToString(AColor self) -> ::WStr"""
        return _MaxPlus.AColor__ToString(self)

    __swig_destroy__ = _MaxPlus.delete_AColor
    __del__ = lambda self : None;
AColor_swigregister = _MaxPlus.AColor_swigregister
AColor_swigregister(AColor)

def AColor__CreateWrapper(*args):
  """AColor__CreateWrapper(void * acolor_pointer) -> AColor"""
  return _MaxPlus.AColor__CreateWrapper(*args)

def AColor__CreateWrapperFromFPValue(*args):
  """AColor__CreateWrapperFromFPValue(void * fpvalue_pointer) -> AColor"""
  return _MaxPlus.AColor__CreateWrapperFromFPValue(*args)

def AColor_CompositeOver(*args):
  """AColor_CompositeOver(AColor fg, AColor bg) -> AColor"""
  return _MaxPlus.AColor_CompositeOver(*args)

def AColor_AComp(*args):
  """AColor_AComp(AColor cbot, AColor ctop) -> AColor"""
  return _MaxPlus.AColor_AComp(*args)

class GammaMgr(object):
    """Used to gamma correct and de-gamma colors in various formats."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def DisplayGammaCorrect(*args):
        """
        DisplayGammaCorrect(COLORREF col) -> COLORREF
        DisplayGammaCorrect(Color c) -> Color
        """
        return _MaxPlus.GammaMgr_DisplayGammaCorrect(*args)

    DisplayGammaCorrect = staticmethod(DisplayGammaCorrect)
    def IsEnabled():
        """IsEnabled() -> bool"""
        return _MaxPlus.GammaMgr_IsEnabled()

    IsEnabled = staticmethod(IsEnabled)
    def Enable(b=True):
        """
        Enable(bool b=True)
        Enable()
        """
        return _MaxPlus.GammaMgr_Enable(b)

    Enable = staticmethod(Enable)
    def GetDisplayGamma():
        """GetDisplayGamma() -> float"""
        return _MaxPlus.GammaMgr_GetDisplayGamma()

    GetDisplayGamma = staticmethod(GetDisplayGamma)
    def GetFileInGamma():
        """GetFileInGamma() -> float"""
        return _MaxPlus.GammaMgr_GetFileInGamma()

    GetFileInGamma = staticmethod(GetFileInGamma)
    def GetFileOutGamma():
        """GetFileOutGamma() -> float"""
        return _MaxPlus.GammaMgr_GetFileOutGamma()

    GetFileOutGamma = staticmethod(GetFileOutGamma)
    def GetDitherTrue():
        """GetDitherTrue() -> bool"""
        return _MaxPlus.GammaMgr_GetDitherTrue()

    GetDitherTrue = staticmethod(GetDitherTrue)
    def GetDitherPaletted():
        """GetDitherPaletted() -> bool"""
        return _MaxPlus.GammaMgr_GetDitherPaletted()

    GetDitherPaletted = staticmethod(GetDitherPaletted)
    def SetDisplayGamma(*args):
        """SetDisplayGamma(float x)"""
        return _MaxPlus.GammaMgr_SetDisplayGamma(*args)

    SetDisplayGamma = staticmethod(SetDisplayGamma)
    def SetFileInGamma(*args):
        """SetFileInGamma(float x)"""
        return _MaxPlus.GammaMgr_SetFileInGamma(*args)

    SetFileInGamma = staticmethod(SetFileInGamma)
    def SetFileOutGamma(*args):
        """SetFileOutGamma(float x)"""
        return _MaxPlus.GammaMgr_SetFileOutGamma(*args)

    SetFileOutGamma = staticmethod(SetFileOutGamma)
    def SetDitherTrue(*args):
        """SetDitherTrue(bool x)"""
        return _MaxPlus.GammaMgr_SetDitherTrue(*args)

    SetDitherTrue = staticmethod(SetDitherTrue)
    def SetDitherPaletted(*args):
        """SetDitherPaletted(bool x)"""
        return _MaxPlus.GammaMgr_SetDitherPaletted(*args)

    SetDitherPaletted = staticmethod(SetDitherPaletted)
    def GammaCorrect(*args):
        """
        GammaCorrect(DWORD c) -> COLORREF
        GammaCorrect(UBYTE b) -> UBYTE
        GammaCorrect(float v, float gamma) -> float
        GammaCorrect(UBYTE v, float gamma) -> UBYTE
        GammaCorrect(UWORD c, float gamma) -> UWORD
        """
        return _MaxPlus.GammaMgr_GammaCorrect(*args)

    GammaCorrect = staticmethod(GammaCorrect)
    def DeGammaCorrect(*args):
        """
        DeGammaCorrect(float v, float gamma) -> float
        DeGammaCorrect(UBYTE v, float gamma) -> UBYTE
        DeGammaCorrect(UWORD c, float gamma) -> UWORD
        """
        return _MaxPlus.GammaMgr_DeGammaCorrect(*args)

    DeGammaCorrect = staticmethod(DeGammaCorrect)
    __swig_destroy__ = _MaxPlus.delete_GammaMgr
    __del__ = lambda self : None;
GammaMgr_swigregister = _MaxPlus.GammaMgr_swigregister
GammaMgr_swigregister(GammaMgr)

def GammaMgr_DisplayGammaCorrect(*args):
  """
    DisplayGammaCorrect(COLORREF col) -> COLORREF
    GammaMgr_DisplayGammaCorrect(Color c) -> Color
    """
  return _MaxPlus.GammaMgr_DisplayGammaCorrect(*args)

def GammaMgr_IsEnabled():
  """GammaMgr_IsEnabled() -> bool"""
  return _MaxPlus.GammaMgr_IsEnabled()

def GammaMgr_Enable(b=True):
  """
    Enable(bool b=True)
    GammaMgr_Enable()
    """
  return _MaxPlus.GammaMgr_Enable(b)

def GammaMgr_GetDisplayGamma():
  """GammaMgr_GetDisplayGamma() -> float"""
  return _MaxPlus.GammaMgr_GetDisplayGamma()

def GammaMgr_GetFileInGamma():
  """GammaMgr_GetFileInGamma() -> float"""
  return _MaxPlus.GammaMgr_GetFileInGamma()

def GammaMgr_GetFileOutGamma():
  """GammaMgr_GetFileOutGamma() -> float"""
  return _MaxPlus.GammaMgr_GetFileOutGamma()

def GammaMgr_GetDitherTrue():
  """GammaMgr_GetDitherTrue() -> bool"""
  return _MaxPlus.GammaMgr_GetDitherTrue()

def GammaMgr_GetDitherPaletted():
  """GammaMgr_GetDitherPaletted() -> bool"""
  return _MaxPlus.GammaMgr_GetDitherPaletted()

def GammaMgr_SetDisplayGamma(*args):
  """GammaMgr_SetDisplayGamma(float x)"""
  return _MaxPlus.GammaMgr_SetDisplayGamma(*args)

def GammaMgr_SetFileInGamma(*args):
  """GammaMgr_SetFileInGamma(float x)"""
  return _MaxPlus.GammaMgr_SetFileInGamma(*args)

def GammaMgr_SetFileOutGamma(*args):
  """GammaMgr_SetFileOutGamma(float x)"""
  return _MaxPlus.GammaMgr_SetFileOutGamma(*args)

def GammaMgr_SetDitherTrue(*args):
  """GammaMgr_SetDitherTrue(bool x)"""
  return _MaxPlus.GammaMgr_SetDitherTrue(*args)

def GammaMgr_SetDitherPaletted(*args):
  """GammaMgr_SetDitherPaletted(bool x)"""
  return _MaxPlus.GammaMgr_SetDitherPaletted(*args)

def GammaMgr_GammaCorrect(*args):
  """
    GammaCorrect(DWORD c) -> COLORREF
    GammaCorrect(UBYTE b) -> UBYTE
    GammaCorrect(float v, float gamma) -> float
    GammaCorrect(UBYTE v, float gamma) -> UBYTE
    GammaMgr_GammaCorrect(UWORD c, float gamma) -> UWORD
    """
  return _MaxPlus.GammaMgr_GammaCorrect(*args)

def GammaMgr_DeGammaCorrect(*args):
  """
    DeGammaCorrect(float v, float gamma) -> float
    DeGammaCorrect(UBYTE v, float gamma) -> UBYTE
    GammaMgr_DeGammaCorrect(UWORD c, float gamma) -> UWORD
    """
  return _MaxPlus.GammaMgr_DeGammaCorrect(*args)

class Colors(object):
    """Proxy of C++ Autodesk::Max::Colors class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ColorSelection = _MaxPlus.Colors_ColorSelection
    ColorSubselection = _MaxPlus.Colors_ColorSubselection
    ColorFreeze = _MaxPlus.Colors_ColorFreeze
    ColorGrid = _MaxPlus.Colors_ColorGrid
    ColorGridIntens = _MaxPlus.Colors_ColorGridIntens
    ColorSfLive = _MaxPlus.Colors_ColorSfLive
    ColorSfAction = _MaxPlus.Colors_ColorSfAction
    ColorSfTitle = _MaxPlus.Colors_ColorSfTitle
    ColorVpLabels = _MaxPlus.Colors_ColorVpLabels
    ColorVpInactive = _MaxPlus.Colors_ColorVpInactive
    ColorArcball = _MaxPlus.Colors_ColorArcball
    ColorArcballHilite = _MaxPlus.Colors_ColorArcballHilite
    ColorAnimButton = _MaxPlus.Colors_ColorAnimButton
    ColorSelBoxes = _MaxPlus.Colors_ColorSelBoxes
    ColorLinkLines = _MaxPlus.Colors_ColorLinkLines
    ColorTrajectory = _MaxPlus.Colors_ColorTrajectory
    ColorActiveAxis = _MaxPlus.Colors_ColorActiveAxis
    ColorInactiveAxis = _MaxPlus.Colors_ColorInactiveAxis
    ColorSpaceWarps = _MaxPlus.Colors_ColorSpaceWarps
    ColorDummyObj = _MaxPlus.Colors_ColorDummyObj
    ColorPointObj = _MaxPlus.Colors_ColorPointObj
    ColorPointAxes = _MaxPlus.Colors_ColorPointAxes
    ColorTapeObj = _MaxPlus.Colors_ColorTapeObj
    ColorBones = _MaxPlus.Colors_ColorBones
    ColorGizmos = _MaxPlus.Colors_ColorGizmos
    ColorSelGizmos = _MaxPlus.Colors_ColorSelGizmos
    ColorSplineVecs = _MaxPlus.Colors_ColorSplineVecs
    ColorSplineHandles = _MaxPlus.Colors_ColorSplineHandles
    ColorPatchLattice = _MaxPlus.Colors_ColorPatchLattice
    ColorParticleEm = _MaxPlus.Colors_ColorParticleEm
    ColorCameraObj = _MaxPlus.Colors_ColorCameraObj
    ColorCameraCone = _MaxPlus.Colors_ColorCameraCone
    ColorCameraHoriz = _MaxPlus.Colors_ColorCameraHoriz
    ColorNearRange = _MaxPlus.Colors_ColorNearRange
    ColorFarRange = _MaxPlus.Colors_ColorFarRange
    ColorLightObj = _MaxPlus.Colors_ColorLightObj
    ColorTargetLine = _MaxPlus.Colors_ColorTargetLine
    ColorHotspot = _MaxPlus.Colors_ColorHotspot
    ColorFalloff = _MaxPlus.Colors_ColorFalloff
    ColorStartRange = _MaxPlus.Colors_ColorStartRange
    ColorEndRange = _MaxPlus.Colors_ColorEndRange
    ColorViewportBkg = _MaxPlus.Colors_ColorViewportBkg
    ColorTrajTics1 = _MaxPlus.Colors_ColorTrajTics1
    ColorTrajTics2 = _MaxPlus.Colors_ColorTrajTics2
    ColorTrajTics3 = _MaxPlus.Colors_ColorTrajTics3
    ColorGhostBefore = _MaxPlus.Colors_ColorGhostBefore
    ColorGhostAfter = _MaxPlus.Colors_ColorGhostAfter
    Color12fieldGrid = _MaxPlus.Colors_Color12fieldGrid
    ColorStartRange1 = _MaxPlus.Colors_ColorStartRange1
    ColorEndRange1 = _MaxPlus.Colors_ColorEndRange1
    ColorCameraClip = _MaxPlus.Colors_ColorCameraClip
    ColorNurbsCv = _MaxPlus.Colors_ColorNurbsCv
    ColorNurbsLattice = _MaxPlus.Colors_ColorNurbsLattice
    ColorNurbsCp = _MaxPlus.Colors_ColorNurbsCp
    ColorNurbsFp = _MaxPlus.Colors_ColorNurbsFp
    ColorNurbsDep = _MaxPlus.Colors_ColorNurbsDep
    ColorNurbsError = _MaxPlus.Colors_ColorNurbsError
    ColorNurbsHilite = _MaxPlus.Colors_ColorNurbsHilite
    ColorNurbsFuse = _MaxPlus.Colors_ColorNurbsFuse
    ColorEndEffector = _MaxPlus.Colors_ColorEndEffector
    ColorEndEffectorString = _MaxPlus.Colors_ColorEndEffectorString
    ColorJointLimitSel = _MaxPlus.Colors_ColorJointLimitSel
    ColorJointLimitUnsel = _MaxPlus.Colors_ColorJointLimitUnsel
    ColorIkTerminator = _MaxPlus.Colors_ColorIkTerminator
    ColorSfUser = _MaxPlus.Colors_ColorSfUser
    ColorVertTicks = _MaxPlus.Colors_ColorVertTicks
    ColorXray = _MaxPlus.Colors_ColorXray
    ColorGroupObj = _MaxPlus.Colors_ColorGroupObj
    ColorManipulatorX = _MaxPlus.Colors_ColorManipulatorX
    ColorManipulatorY = _MaxPlus.Colors_ColorManipulatorY
    ColorManipulatorZ = _MaxPlus.Colors_ColorManipulatorZ
    ColorManipulatorActive = _MaxPlus.Colors_ColorManipulatorActive
    ColorVptClipping = _MaxPlus.Colors_ColorVptClipping
    ColorDecayRadius = _MaxPlus.Colors_ColorDecayRadius
    ColorVertNumbers = _MaxPlus.Colors_ColorVertNumbers
    ColorCrosshairCursor = _MaxPlus.Colors_ColorCrosshairCursor
    ColorSvWinbk = _MaxPlus.Colors_ColorSvWinbk
    ColorSvNodebk = _MaxPlus.Colors_ColorSvNodebk
    ColorSvSelnodebk = _MaxPlus.Colors_ColorSvSelnodebk
    ColorSvNodeHighlight = _MaxPlus.Colors_ColorSvNodeHighlight
    ColorSvMaterialHighlight = _MaxPlus.Colors_ColorSvMaterialHighlight
    ColorSvModifierHighlight = _MaxPlus.Colors_ColorSvModifierHighlight
    ColorSvPluginHighlight = _MaxPlus.Colors_ColorSvPluginHighlight
    ColorSvSubanimLine = _MaxPlus.Colors_ColorSvSubanimLine
    ColorSvChildLine = _MaxPlus.Colors_ColorSvChildLine
    ColorSvFrame = _MaxPlus.Colors_ColorSvFrame
    ColorSvSeltext = _MaxPlus.Colors_ColorSvSeltext
    ColorSvText = _MaxPlus.Colors_ColorSvText
    ColorUnselTab = _MaxPlus.Colors_ColorUnselTab
    ColorAtmosApparatus = _MaxPlus.Colors_ColorAtmosApparatus
    ColorSubselectionHard = _MaxPlus.Colors_ColorSubselectionHard
    ColorSubselectionMedium = _MaxPlus.Colors_ColorSubselectionMedium
    ColorSubselectionSoft = _MaxPlus.Colors_ColorSubselectionSoft
    ColorSvUnfoldButton = _MaxPlus.Colors_ColorSvUnfoldButton
    ColorSvGeomobjectBk = _MaxPlus.Colors_ColorSvGeomobjectBk
    ColorSvLightBk = _MaxPlus.Colors_ColorSvLightBk
    ColorSvCameraBk = _MaxPlus.Colors_ColorSvCameraBk
    ColorSvShapeBk = _MaxPlus.Colors_ColorSvShapeBk
    ColorSvHelperBk = _MaxPlus.Colors_ColorSvHelperBk
    ColorSvSystemBk = _MaxPlus.Colors_ColorSvSystemBk
    ColorSvControllerBk = _MaxPlus.Colors_ColorSvControllerBk
    ColorSvModifierBk = _MaxPlus.Colors_ColorSvModifierBk
    ColorSvMaterialBk = _MaxPlus.Colors_ColorSvMaterialBk
    ColorSvMapBk = _MaxPlus.Colors_ColorSvMapBk
    ColorSetkeyButton = _MaxPlus.Colors_ColorSetkeyButton
    ColorBackLines = _MaxPlus.Colors_ColorBackLines
    ColorBackVerts = _MaxPlus.Colors_ColorBackVerts
    ColorManipulatorContour = _MaxPlus.Colors_ColorManipulatorContour
    ColorManipulatorScreen = _MaxPlus.Colors_ColorManipulatorScreen
    ColorManipulatorTrail = _MaxPlus.Colors_ColorManipulatorTrail
    ColorSvGrid = _MaxPlus.Colors_ColorSvGrid
    ColorSvRelInstance = _MaxPlus.Colors_ColorSvRelInstance
    ColorSvRelConstraint = _MaxPlus.Colors_ColorSvRelConstraint
    ColorSvRelParamwire = _MaxPlus.Colors_ColorSvRelParamwire
    ColorSvRelLight = _MaxPlus.Colors_ColorSvRelLight
    ColorSvRelModifier = _MaxPlus.Colors_ColorSvRelModifier
    ColorSvRelController = _MaxPlus.Colors_ColorSvRelController
    ColorSvRelOther = _MaxPlus.Colors_ColorSvRelOther
    ColorSvSpacewarpBk = _MaxPlus.Colors_ColorSvSpacewarpBk
    ColorSvBaseobjectBk = _MaxPlus.Colors_ColorSvBaseobjectBk
    ColorVpStatistics = _MaxPlus.Colors_ColorVpStatistics
    ColorSplineKnotUnselected = _MaxPlus.Colors_ColorSplineKnotUnselected
    ColorSplineKnotFirst = _MaxPlus.Colors_ColorSplineKnotFirst
    ColorHiddenlineUnselected = _MaxPlus.Colors_ColorHiddenlineUnselected
    ColorVpLabelHighlight = _MaxPlus.Colors_ColorVpLabelHighlight
    ColorSnapAxisCenterHandle = _MaxPlus.Colors_ColorSnapAxisCenterHandle
    ColorSnapPointActive = _MaxPlus.Colors_ColorSnapPointActive
    ColorSnapPointSnapped = _MaxPlus.Colors_ColorSnapPointSnapped
    ColorTotal = _MaxPlus.Colors_ColorTotal
    __swig_destroy__ = _MaxPlus.delete_Colors
    __del__ = lambda self : None;
Colors_swigregister = _MaxPlus.Colors_swigregister
Colors_swigregister(Colors)

class BaseInterface(InterfaceServer):
    """Provides access to the identity of a 3ds Max interface"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> BaseInterface"""
        return _MaxPlus.BaseInterface__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(BaseInterface self, Wrapper w) -> bool"""
        return _MaxPlus.BaseInterface___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(BaseInterface self, Wrapper w) -> bool"""
        return _MaxPlus.BaseInterface___ne__(self, *args)

    def GetID(self):
        """GetID(BaseInterface self) -> Interface_ID"""
        return _MaxPlus.BaseInterface_GetID(self)

    def _ToString(self):
        """_ToString(BaseInterface self) -> ::WStr"""
        return _MaxPlus.BaseInterface__ToString(self)

    InterfaceId = _swig_property(GetID)

    __swig_destroy__ = _MaxPlus.delete_BaseInterface
    __del__ = lambda self : None;
BaseInterface_swigregister = _MaxPlus.BaseInterface_swigregister
BaseInterface_swigregister(BaseInterface)

def BaseInterface__CastFrom(*args):
  """BaseInterface__CastFrom(InterfaceServer b) -> BaseInterface"""
  return _MaxPlus.BaseInterface__CastFrom(*args)

class Animatable(InterfaceServer):
    """The base class for most scene entity and plugin types."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Animatable"""
        return _MaxPlus.Animatable__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Animatable self, Wrapper w) -> bool"""
        return _MaxPlus.Animatable___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Animatable self, Wrapper w) -> bool"""
        return _MaxPlus.Animatable___ne__(self, *args)

    def GetClassName(self):
        """GetClassName(Animatable self) -> WStr"""
        return _MaxPlus.Animatable_GetClassName(self)

    def GetSuperClassID(self):
        """GetSuperClassID(Animatable self) -> SClass_ID"""
        return _MaxPlus.Animatable_GetSuperClassID(self)

    def GetClassID(self):
        """GetClassID(Animatable self) -> Class_ID"""
        return _MaxPlus.Animatable_GetClassID(self)

    def GetParameterBlock(self):
        """GetParameterBlock(Animatable self) -> ParameterBlock"""
        return _MaxPlus.Animatable_GetParameterBlock(self)

    def SetAFlag(self, *args):
        """SetAFlag(Animatable self, DWORD mask)"""
        return _MaxPlus.Animatable_SetAFlag(self, *args)

    def ClearAFlag(self, *args):
        """ClearAFlag(Animatable self, DWORD mask)"""
        return _MaxPlus.Animatable_ClearAFlag(self, *args)

    def TestAFlag(self, *args):
        """TestAFlag(Animatable self, DWORD mask) -> bool"""
        return _MaxPlus.Animatable_TestAFlag(self, *args)

    def SetAFlagEx(self, *args):
        """SetAFlagEx(Animatable self, DWORD mask)"""
        return _MaxPlus.Animatable_SetAFlagEx(self, *args)

    def ClearAFlagEx(self, *args):
        """ClearAFlagEx(Animatable self, DWORD mask)"""
        return _MaxPlus.Animatable_ClearAFlagEx(self, *args)

    def TestAFlagEx(self, *args):
        """TestAFlagEx(Animatable self, DWORD mask) -> bool"""
        return _MaxPlus.Animatable_TestAFlagEx(self, *args)

    def TestFlagBit(self, *args):
        """TestFlagBit(Animatable self, int index) -> bool"""
        return _MaxPlus.Animatable_TestFlagBit(self, *args)

    def SetFlagBit(self, *args):
        """
        SetFlagBit(Animatable self, int index, bool newValue=True)
        SetFlagBit(Animatable self, int index)
        """
        return _MaxPlus.Animatable_SetFlagBit(self, *args)

    def ClearFlagBit(self, *args):
        """ClearFlagBit(Animatable self, int index)"""
        return _MaxPlus.Animatable_ClearFlagBit(self, *args)

    def FreeCaches(self):
        """FreeCaches(Animatable self)"""
        return _MaxPlus.Animatable_FreeCaches(self)

    def GetNumSubAnims(self):
        """GetNumSubAnims(Animatable self) -> int"""
        return _MaxPlus.Animatable_GetNumSubAnims(self)

    def __len__(self):
        """__len__(Animatable self) -> int"""
        return _MaxPlus.Animatable___len__(self)

    def __getitem__(self, *args):
        """__getitem__(Animatable self, int i) -> Animatable"""
        return _MaxPlus.Animatable___getitem__(self, *args)

    def GetSubAnim(self, *args):
        """GetSubAnim(Animatable self, int i) -> Animatable"""
        return _MaxPlus.Animatable_GetSubAnim(self, *args)

    def GetSubAnimName(self, *args):
        """GetSubAnimName(Animatable self, int i) -> WStr"""
        return _MaxPlus.Animatable_GetSubAnimName(self, *args)

    def AssignController(self, *args):
        """AssignController(Animatable self, Animatable control, int subAnim) -> bool"""
        return _MaxPlus.Animatable_AssignController(self, *args)

    def CanAssignController(self, *args):
        """CanAssignController(Animatable self, int i) -> bool"""
        return _MaxPlus.Animatable_CanAssignController(self, *args)

    def CanDeleteSubAnim(self, *args):
        """CanDeleteSubAnim(Animatable self, int i) -> bool"""
        return _MaxPlus.Animatable_CanDeleteSubAnim(self, *args)

    def DeleteSubAnim(self, *args):
        """DeleteSubAnim(Animatable self, int i)"""
        return _MaxPlus.Animatable_DeleteSubAnim(self, *args)

    def SubNumToRefNum(self, *args):
        """SubNumToRefNum(Animatable self, int subNum) -> int"""
        return _MaxPlus.Animatable_SubNumToRefNum(self, *args)

    def CanCopyAnim(self):
        """CanCopyAnim(Animatable self) -> bool"""
        return _MaxPlus.Animatable_CanCopyAnim(self)

    def CanMakeUnique(self):
        """CanMakeUnique(Animatable self) -> bool"""
        return _MaxPlus.Animatable_CanMakeUnique(self)

    def GetNodeName(self):
        """GetNodeName(Animatable self) -> WStr"""
        return _MaxPlus.Animatable_GetNodeName(self)

    def GetHasSubElements(self, type=0):
        """
        GetHasSubElements(Animatable self, int type=0) -> bool
        GetHasSubElements(Animatable self) -> bool
        """
        return _MaxPlus.Animatable_GetHasSubElements(self, type)

    def GetNumKeys(self):
        """GetNumKeys(Animatable self) -> int"""
        return _MaxPlus.Animatable_GetNumKeys(self)

    def GetKeyTime(self, *args):
        """GetKeyTime(Animatable self, int index) -> TimeValue"""
        return _MaxPlus.Animatable_GetKeyTime(self, *args)

    def GetKeyIndex(self, *args):
        """GetKeyIndex(Animatable self, TimeValue t) -> int"""
        return _MaxPlus.Animatable_GetKeyIndex(self, *args)

    def GetNextKeyTime(self, *args):
        """GetNextKeyTime(Animatable self, TimeValue t, DWORD flags, TimeValue & nt) -> bool"""
        return _MaxPlus.Animatable_GetNextKeyTime(self, *args)

    def CopyKeysFromTime(self, *args):
        """CopyKeysFromTime(Animatable self, TimeValue src, TimeValue dst, DWORD flags)"""
        return _MaxPlus.Animatable_CopyKeysFromTime(self, *args)

    def DeleteKeyAtTime(self, *args):
        """DeleteKeyAtTime(Animatable self, TimeValue t)"""
        return _MaxPlus.Animatable_DeleteKeyAtTime(self, *args)

    def IsKeyAtTime(self, *args):
        """IsKeyAtTime(Animatable self, TimeValue t, DWORD flags) -> bool"""
        return _MaxPlus.Animatable_IsKeyAtTime(self, *args)

    def GetTimeRange(self, *args):
        """GetTimeRange(Animatable self, DWORD flags) -> Interval"""
        return _MaxPlus.Animatable_GetTimeRange(self, *args)

    def EditTimeRange(self, *args):
        """EditTimeRange(Animatable self, Interval range, DWORD flags)"""
        return _MaxPlus.Animatable_EditTimeRange(self, *args)

    def DeleteTime(self, *args):
        """DeleteTime(Animatable self, Interval iv, DWORD flags)"""
        return _MaxPlus.Animatable_DeleteTime(self, *args)

    def ReverseTime(self, *args):
        """ReverseTime(Animatable self, Interval iv, DWORD flags)"""
        return _MaxPlus.Animatable_ReverseTime(self, *args)

    def ScaleTime(self, *args):
        """ScaleTime(Animatable self, Interval iv, float s)"""
        return _MaxPlus.Animatable_ScaleTime(self, *args)

    def InsertTime(self, *args):
        """InsertTime(Animatable self, TimeValue ins, TimeValue amount)"""
        return _MaxPlus.Animatable_InsertTime(self, *args)

    def DoesSupportTimeOperations(self):
        """DoesSupportTimeOperations(Animatable self) -> bool"""
        return _MaxPlus.Animatable_DoesSupportTimeOperations(self)

    def DeleteKeys(self, *args):
        """DeleteKeys(Animatable self, DWORD flags)"""
        return _MaxPlus.Animatable_DeleteKeys(self, *args)

    def DeleteKeyByIndex(self, *args):
        """DeleteKeyByIndex(Animatable self, int index)"""
        return _MaxPlus.Animatable_DeleteKeyByIndex(self, *args)

    def AddNewKey(self, *args):
        """AddNewKey(Animatable self, TimeValue t, DWORD flags)"""
        return _MaxPlus.Animatable_AddNewKey(self, *args)

    def MoveKeys(self, *args):
        """MoveKeys(Animatable self, ParamDimensionBase dim, float delta, DWORD flags)"""
        return _MaxPlus.Animatable_MoveKeys(self, *args)

    def ScaleKeyValues(self, *args):
        """ScaleKeyValues(Animatable self, ParamDimensionBase dim, float origin, float scale, DWORD flags)"""
        return _MaxPlus.Animatable_ScaleKeyValues(self, *args)

    def IsAnimated(self):
        """IsAnimated(Animatable self) -> bool"""
        return _MaxPlus.Animatable_IsAnimated(self)

    def CanCopyTrack(self, *args):
        """CanCopyTrack(Animatable self, Interval iv, DWORD flags) -> bool"""
        return _MaxPlus.Animatable_CanCopyTrack(self, *args)

    def IsSubClassOf(self, *args):
        """IsSubClassOf(Animatable self, Class_ID classID) -> bool"""
        return _MaxPlus.Animatable_IsSubClassOf(self, *args)

    def ClearFlagInAllAnimatables(*args):
        """ClearFlagInAllAnimatables(DWORD mask)"""
        return _MaxPlus.Animatable_ClearFlagInAllAnimatables(*args)

    ClearFlagInAllAnimatables = staticmethod(ClearFlagInAllAnimatables)
    def GetCustomAttributeContainer(self):
        """GetCustomAttributeContainer(Animatable self) -> CustomAttributeContainer"""
        return _MaxPlus.Animatable_GetCustomAttributeContainer(self)

    def _ToString(self):
        """_ToString(Animatable self) -> ::WStr"""
        return _MaxPlus.Animatable__ToString(self)

    def GetAnimHandle(self):
        """GetAnimHandle(Animatable self) -> AnimHandle"""
        return _MaxPlus.Animatable_GetAnimHandle(self)

    def GetAnimByHandle(*args):
        """GetAnimByHandle(AnimHandle animHandle) -> Animatable"""
        return _MaxPlus.Animatable_GetAnimByHandle(*args)

    GetAnimByHandle = staticmethod(GetAnimByHandle)
    NumSubAnims = _swig_property(GetNumSubAnims)
    ClassID = _swig_property(GetClassID)
    SuperClassID = _swig_property(GetSuperClassID)
    SubAnims = _swig_property(lambda self: (self.GetSubAnim(i) for i in xrange(self.GetNumSubAnims())))
    SubAnimNames = _swig_property(lambda self: (self.GetSubAnimName(i) for i in xrange(self.GetNumSubAnims())))
    KeyTimes = _swig_property(lambda self: (self.GetKeyTime(i) for i in xrange(self.GetNumKeys())))
    ParameterBlock = _swig_property(GetParameterBlock)
    NodeName = _swig_property(GetNodeName)
    AnimHandle = _swig_property(GetAnimHandle)

    __swig_destroy__ = _MaxPlus.delete_Animatable
    __del__ = lambda self : None;
Animatable_swigregister = _MaxPlus.Animatable_swigregister
Animatable_swigregister(Animatable)

def Animatable__CastFrom(*args):
  """Animatable__CastFrom(InterfaceServer b) -> Animatable"""
  return _MaxPlus.Animatable__CastFrom(*args)

def Animatable_ClearFlagInAllAnimatables(*args):
  """Animatable_ClearFlagInAllAnimatables(DWORD mask)"""
  return _MaxPlus.Animatable_ClearFlagInAllAnimatables(*args)

def Animatable_GetAnimByHandle(*args):
  """Animatable_GetAnimByHandle(AnimHandle animHandle) -> Animatable"""
  return _MaxPlus.Animatable_GetAnimByHandle(*args)

class ReferenceMaker(Animatable):
    """A scene entity that owns other scene entities and listens to messages from them."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ReferenceMaker"""
        return _MaxPlus.ReferenceMaker__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ReferenceMaker self, Wrapper w) -> bool"""
        return _MaxPlus.ReferenceMaker___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ReferenceMaker self, Wrapper w) -> bool"""
        return _MaxPlus.ReferenceMaker___ne__(self, *args)

    def _CreateWrapper(*args):
        """_CreateWrapper(void * referencemaker_pointer) -> ReferenceMaker"""
        return _MaxPlus.ReferenceMaker__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> ReferenceMaker"""
        return _MaxPlus.ReferenceMaker__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(ReferenceMaker self, void * referencemaker_pointer)"""
        return _MaxPlus.ReferenceMaker__SetValue(self, *args)

    def DeleteMe(self):
        """DeleteMe(ReferenceMaker self)"""
        return _MaxPlus.ReferenceMaker_DeleteMe(self)

    def GetNumRefs(self):
        """GetNumRefs(ReferenceMaker self) -> int"""
        return _MaxPlus.ReferenceMaker_GetNumRefs(self)

    def GetReference(self, *args):
        """GetReference(ReferenceMaker self, int i) -> ReferenceTarget"""
        return _MaxPlus.ReferenceMaker_GetReference(self, *args)

    def NotifyChanged(self):
        """NotifyChanged(ReferenceMaker self) -> RefResult"""
        return _MaxPlus.ReferenceMaker_NotifyChanged(self)

    def NotifyDependents(self, *args):
        """
        NotifyDependents(ReferenceMaker self, int message, Interval changeInt=Autodesk::Max::Forever(), int partID=PART_ALL, SClass_ID sclass=NOTIFY_ALL, 
            bool propagate=TRUE) -> RefResult
        NotifyDependents(ReferenceMaker self, int message, Interval changeInt=Autodesk::Max::Forever(), int partID=PART_ALL, SClass_ID sclass=NOTIFY_ALL) -> RefResult
        NotifyDependents(ReferenceMaker self, int message, Interval changeInt=Autodesk::Max::Forever(), int partID=PART_ALL) -> RefResult
        NotifyDependents(ReferenceMaker self, int message, Interval changeInt=Autodesk::Max::Forever()) -> RefResult
        NotifyDependents(ReferenceMaker self, int message) -> RefResult
        """
        return _MaxPlus.ReferenceMaker_NotifyDependents(self, *args)

    def FindRef(self, *args):
        """FindRef(ReferenceMaker self, ReferenceTarget rtarg) -> int"""
        return _MaxPlus.ReferenceMaker_FindRef(self, *args)

    def DeleteReference(self, *args):
        """DeleteReference(ReferenceMaker self, int i) -> RefResult"""
        return _MaxPlus.ReferenceMaker_DeleteReference(self, *args)

    def ReplaceReference(self, *args):
        """
        ReplaceReference(ReferenceMaker self, int i, ReferenceTarget target, bool delOld=TRUE) -> RefResult
        ReplaceReference(ReferenceMaker self, int i, ReferenceTarget target) -> RefResult
        """
        return _MaxPlus.ReferenceMaker_ReplaceReference(self, *args)

    def RescaleWorldUnits(self, *args):
        """RescaleWorldUnits(ReferenceMaker self, float f)"""
        return _MaxPlus.ReferenceMaker_RescaleWorldUnits(self, *args)

    def ClearFlagInHierarchy(self, *args):
        """ClearFlagInHierarchy(ReferenceMaker self, DWORD mask)"""
        return _MaxPlus.ReferenceMaker_ClearFlagInHierarchy(self, *args)

    NumRefs = _swig_property(GetNumRefs)
    Refs = _swig_property(lambda self: (self.GetReference(i) for i in xrange(self.GetNumRefs())))

    __swig_destroy__ = _MaxPlus.delete_ReferenceMaker
    __del__ = lambda self : None;
ReferenceMaker_swigregister = _MaxPlus.ReferenceMaker_swigregister
ReferenceMaker_swigregister(ReferenceMaker)

def ReferenceMaker__CastFrom(*args):
  """ReferenceMaker__CastFrom(InterfaceServer b) -> ReferenceMaker"""
  return _MaxPlus.ReferenceMaker__CastFrom(*args)

def ReferenceMaker__CreateWrapper(*args):
  """ReferenceMaker__CreateWrapper(void * referencemaker_pointer) -> ReferenceMaker"""
  return _MaxPlus.ReferenceMaker__CreateWrapper(*args)

def ReferenceMaker__CreateWrapperFromFPValue(*args):
  """ReferenceMaker__CreateWrapperFromFPValue(void * fpvalue_pointer) -> ReferenceMaker"""
  return _MaxPlus.ReferenceMaker__CreateWrapperFromFPValue(*args)

class ReferenceTarget(ReferenceMaker):
    """A scene entity that is being observed by other scene entities."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ReferenceTarget"""
        return _MaxPlus.ReferenceTarget__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ReferenceTarget self, Wrapper w) -> bool"""
        return _MaxPlus.ReferenceTarget___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ReferenceTarget self, Wrapper w) -> bool"""
        return _MaxPlus.ReferenceTarget___ne__(self, *args)

    def _CreateWrapper(*args):
        """_CreateWrapper(void * referencetarget_pointer) -> ReferenceTarget"""
        return _MaxPlus.ReferenceTarget__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> ReferenceTarget"""
        return _MaxPlus.ReferenceTarget__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(ReferenceTarget self, void * referencetarget_pointer)"""
        return _MaxPlus.ReferenceTarget__SetValue(self, *args)

    def NotifyTarget(self, *args):
        """NotifyTarget(ReferenceTarget self, int message, ReferenceMaker hMaker)"""
        return _MaxPlus.ReferenceTarget_NotifyTarget(self, *args)

    def FindDependentNode(self):
        """FindDependentNode(ReferenceTarget self) -> INode"""
        return _MaxPlus.ReferenceTarget_FindDependentNode(self)

    __swig_destroy__ = _MaxPlus.delete_ReferenceTarget
    __del__ = lambda self : None;
ReferenceTarget_swigregister = _MaxPlus.ReferenceTarget_swigregister
ReferenceTarget_swigregister(ReferenceTarget)

def ReferenceTarget__CastFrom(*args):
  """ReferenceTarget__CastFrom(InterfaceServer b) -> ReferenceTarget"""
  return _MaxPlus.ReferenceTarget__CastFrom(*args)

def ReferenceTarget__CreateWrapper(*args):
  """ReferenceTarget__CreateWrapper(void * referencetarget_pointer) -> ReferenceTarget"""
  return _MaxPlus.ReferenceTarget__CreateWrapper(*args)

def ReferenceTarget__CreateWrapperFromFPValue(*args):
  """ReferenceTarget__CreateWrapperFromFPValue(void * fpvalue_pointer) -> ReferenceTarget"""
  return _MaxPlus.ReferenceTarget__CreateWrapperFromFPValue(*args)

class BaseInterfaceServer(InterfaceServer):
    """Enables enumeration of interfaces supported by an object."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> BaseInterfaceServer"""
        return _MaxPlus.BaseInterfaceServer__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(BaseInterfaceServer self, Wrapper w) -> bool"""
        return _MaxPlus.BaseInterfaceServer___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(BaseInterfaceServer self, Wrapper w) -> bool"""
        return _MaxPlus.BaseInterfaceServer___ne__(self, *args)

    def GetNumInterfaces(self):
        """GetNumInterfaces(BaseInterfaceServer self) -> int"""
        return _MaxPlus.BaseInterfaceServer_GetNumInterfaces(self)

    def GetInterfaceAt(self, *args):
        """GetInterfaceAt(BaseInterfaceServer self, int i) -> BaseInterface"""
        return _MaxPlus.BaseInterfaceServer_GetInterfaceAt(self, *args)

    NumInterfaces = _swig_property(GetNumInterfaces)
    Interfaces = _swig_property(lambda self: (self.GetInterfaceAt(i) for i in xrange(self.GetNumInterfaces())))

    __swig_destroy__ = _MaxPlus.delete_BaseInterfaceServer
    __del__ = lambda self : None;
BaseInterfaceServer_swigregister = _MaxPlus.BaseInterfaceServer_swigregister
BaseInterfaceServer_swigregister(BaseInterfaceServer)

def BaseInterfaceServer__CastFrom(*args):
  """BaseInterfaceServer__CastFrom(InterfaceServer b) -> BaseInterfaceServer"""
  return _MaxPlus.BaseInterfaceServer__CastFrom(*args)

class IObject(BaseInterfaceServer):
    """The base class used to publish functions from those objects not derived from Animatable."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> IObject"""
        return _MaxPlus.IObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(IObject self, Wrapper w) -> bool"""
        return _MaxPlus.IObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(IObject self, Wrapper w) -> bool"""
        return _MaxPlus.IObject___ne__(self, *args)

    def Init(self):
        """Init(IObject self)"""
        return _MaxPlus.IObject_Init(self)

    __swig_destroy__ = _MaxPlus.delete_IObject
    __del__ = lambda self : None;
    def GetIObjectName(self):
        """GetIObjectName(IObject self) -> wchar_t const *"""
        return _MaxPlus.IObject_GetIObjectName(self)

IObject_swigregister = _MaxPlus.IObject_swigregister
IObject_swigregister(IObject)

def IObject__CastFrom(*args):
  """IObject__CastFrom(InterfaceServer b) -> IObject"""
  return _MaxPlus.IObject__CastFrom(*args)

class FPInterface(BaseInterface):
    """The base class for defining function published interface classes. Function published interfaces are exposed automatically to MAXScript"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> FPInterface"""
        return _MaxPlus.FPInterface__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(FPInterface self, Wrapper w) -> bool"""
        return _MaxPlus.FPInterface___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(FPInterface self, Wrapper w) -> bool"""
        return _MaxPlus.FPInterface___ne__(self, *args)

    def GetDesc(self):
        """GetDesc(FPInterface self) -> FPInterfaceDesc"""
        return _MaxPlus.FPInterface_GetDesc(self)

    def Invoke(self, *args):
        """
        Invoke(FPInterface self, FunctionID fid, TimeValue t=0) -> int
        Invoke(FPInterface self, FunctionID fid) -> int
        """
        return _MaxPlus.FPInterface_Invoke(self, *args)

    def FindFn(self, *args):
        """FindFn(FPInterface self, wchar_t const * name) -> FunctionID"""
        return _MaxPlus.FPInterface_FindFn(self, *args)

    def IsEnabled(self, *args):
        """IsEnabled(FPInterface self, FunctionID actionID) -> bool"""
        return _MaxPlus.FPInterface_IsEnabled(self, *args)

    def IsChecked(self, *args):
        """IsChecked(FPInterface self, FunctionID actionID) -> bool"""
        return _MaxPlus.FPInterface_IsChecked(self, *args)

    def IsVisible(self, *args):
        """IsVisible(FPInterface self, FunctionID actionID) -> bool"""
        return _MaxPlus.FPInterface_IsVisible(self, *args)

    def EnableActions(self, *args):
        """EnableActions(FPInterface self, bool onOff)"""
        return _MaxPlus.FPInterface_EnableActions(self, *args)

    __swig_destroy__ = _MaxPlus.delete_FPInterface
    __del__ = lambda self : None;
FPInterface_swigregister = _MaxPlus.FPInterface_swigregister
FPInterface_swigregister(FPInterface)

def FPInterface__CastFrom(*args):
  """FPInterface__CastFrom(InterfaceServer b) -> FPInterface"""
  return _MaxPlus.FPInterface__CastFrom(*args)

class ClassDesc(Wrapper):
    """Provide information about a plug-in class."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ClassDesc"""
        return _MaxPlus.ClassDesc__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ClassDesc self, Wrapper w) -> bool"""
        return _MaxPlus.ClassDesc___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ClassDesc self, Wrapper w) -> bool"""
        return _MaxPlus.ClassDesc___ne__(self, *args)

    def GetNumActionTables(self):
        """GetNumActionTables(ClassDesc self) -> int"""
        return _MaxPlus.ClassDesc_GetNumActionTables(self)

    def GetNeedsToSave(self):
        """GetNeedsToSave(ClassDesc self) -> bool"""
        return _MaxPlus.ClassDesc_GetNeedsToSave(self)

    def GetNumParamBlockDescs(self):
        """GetNumParamBlockDescs(ClassDesc self) -> int"""
        return _MaxPlus.ClassDesc_GetNumParamBlockDescs(self)

    def GetParamBlockDesc(self, *args):
        """GetParamBlockDesc(ClassDesc self, int i) -> ParamBlockDesc2"""
        return _MaxPlus.ClassDesc_GetParamBlockDesc(self, *args)

    def GetNumInterfaces(self):
        """GetNumInterfaces(ClassDesc self) -> int"""
        return _MaxPlus.ClassDesc_GetNumInterfaces(self)

    def GetInterfaceAt(self, *args):
        """GetInterfaceAt(ClassDesc self, int i) -> FPInterface"""
        return _MaxPlus.ClassDesc_GetInterfaceAt(self, *args)

    def GetInterface(self, *args):
        """
        GetInterface(ClassDesc self, Interface_ID id) -> FPInterface
        GetInterface(ClassDesc self, wchar_t const * name) -> FPInterface
        """
        return _MaxPlus.ClassDesc_GetInterface(self, *args)

    def AddInterface(self, *args):
        """AddInterface(ClassDesc self, FPInterface fpi)"""
        return _MaxPlus.ClassDesc_AddInterface(self, *args)

    def ClearInterfaces(self):
        """ClearInterfaces(ClassDesc self)"""
        return _MaxPlus.ClassDesc_ClearInterfaces(self)

    def IsPublic(self):
        """IsPublic(ClassDesc self) -> bool"""
        return _MaxPlus.ClassDesc_IsPublic(self)

    def GetClassName(self):
        """GetClassName(ClassDesc self) -> wchar_t const *"""
        return _MaxPlus.ClassDesc_GetClassName(self)

    def GetSuperClassID(self):
        """GetSuperClassID(ClassDesc self) -> SClass_ID"""
        return _MaxPlus.ClassDesc_GetSuperClassID(self)

    def GetClassID(self):
        """GetClassID(ClassDesc self) -> Class_ID"""
        return _MaxPlus.ClassDesc_GetClassID(self)

    def GetCategory(self):
        """GetCategory(ClassDesc self) -> wchar_t const *"""
        return _MaxPlus.ClassDesc_GetCategory(self)

    def HasClassParams(self):
        """HasClassParams(ClassDesc self) -> bool"""
        return _MaxPlus.ClassDesc_HasClassParams(self)

    def EditClassParams(self, *args):
        """EditClassParams(ClassDesc self, HWND hParent)"""
        return _MaxPlus.ClassDesc_EditClassParams(self, *args)

    def ResetClassParams(self, fileReset=True):
        """
        ResetClassParams(ClassDesc self, bool fileReset=True)
        ResetClassParams(ClassDesc self)
        """
        return _MaxPlus.ClassDesc_ResetClassParams(self, fileReset)

    def GetInternalName(self):
        """GetInternalName(ClassDesc self) -> wchar_t const *"""
        return _MaxPlus.ClassDesc_GetInternalName(self)

    def GetResourceString(self, *args):
        """GetResourceString(ClassDesc self, int id) -> wchar_t const *"""
        return _MaxPlus.ClassDesc_GetResourceString(self, *args)

    def GetSubClassID(self):
        """GetSubClassID(ClassDesc self) -> Class_ID"""
        return _MaxPlus.ClassDesc_GetSubClassID(self)

    __swig_destroy__ = _MaxPlus.delete_ClassDesc
    __del__ = lambda self : None;
ClassDesc_swigregister = _MaxPlus.ClassDesc_swigregister
ClassDesc_swigregister(ClassDesc)

def ClassDesc__CastFrom(*args):
  """ClassDesc__CastFrom(InterfaceServer b) -> ClassDesc"""
  return _MaxPlus.ClassDesc__CastFrom(*args)

class FPInterfaceDesc(FPInterface):
    """Function Publishing interface descriptor."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> FPInterfaceDesc"""
        return _MaxPlus.FPInterfaceDesc__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(FPInterfaceDesc self, Wrapper w) -> bool"""
        return _MaxPlus.FPInterfaceDesc___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(FPInterfaceDesc self, Wrapper w) -> bool"""
        return _MaxPlus.FPInterfaceDesc___ne__(self, *args)

    def GetFPDesc(self):
        """GetFPDesc(FPInterfaceDesc self) -> FPInterfaceDesc"""
        return _MaxPlus.FPInterfaceDesc_GetFPDesc(self)

    def GetActionTable(self):
        """GetActionTable(FPInterfaceDesc self) -> ActionTable"""
        return _MaxPlus.FPInterfaceDesc_GetActionTable(self)

    def GetRsrcString(self, *args):
        """GetRsrcString(FPInterfaceDesc self, int id) -> wchar_t const *"""
        return _MaxPlus.FPInterfaceDesc_GetRsrcString(self, *args)

    def GetInternalName(self):
        """GetInternalName(FPInterfaceDesc self) -> wchar_t const *"""
        return _MaxPlus.FPInterfaceDesc_GetInternalName(self)

    def GetDescription(self):
        """GetDescription(FPInterfaceDesc self) -> wchar_t const *"""
        return _MaxPlus.FPInterfaceDesc_GetDescription(self)

    def GetClassDesc(self):
        """GetClassDesc(FPInterfaceDesc self) -> ClassDesc"""
        return _MaxPlus.FPInterfaceDesc_GetClassDesc(self)

    def GetFlags(self):
        """GetFlags(FPInterfaceDesc self) -> USHORT"""
        return _MaxPlus.FPInterfaceDesc_GetFlags(self)

    __swig_destroy__ = _MaxPlus.delete_FPInterfaceDesc
    __del__ = lambda self : None;
FPInterfaceDesc_swigregister = _MaxPlus.FPInterfaceDesc_swigregister
FPInterfaceDesc_swigregister(FPInterfaceDesc)

def FPInterfaceDesc__CastFrom(*args):
  """FPInterfaceDesc__CastFrom(InterfaceServer b) -> FPInterfaceDesc"""
  return _MaxPlus.FPInterfaceDesc__CastFrom(*args)

class FPStaticInterface(FPInterfaceDesc):
    """A specialization of FPInterfaceDesc for static function-published interfaces."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> FPStaticInterface"""
        return _MaxPlus.FPStaticInterface__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(FPStaticInterface self, Wrapper w) -> bool"""
        return _MaxPlus.FPStaticInterface___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(FPStaticInterface self, Wrapper w) -> bool"""
        return _MaxPlus.FPStaticInterface___ne__(self, *args)

    __swig_destroy__ = _MaxPlus.delete_FPStaticInterface
    __del__ = lambda self : None;
FPStaticInterface_swigregister = _MaxPlus.FPStaticInterface_swigregister
FPStaticInterface_swigregister(FPStaticInterface)

def FPStaticInterface__CastFrom(*args):
  """FPStaticInterface__CastFrom(InterfaceServer b) -> FPStaticInterface"""
  return _MaxPlus.FPStaticInterface__CastFrom(*args)

class ModContext(BaseInterfaceServer):
    """Stores information about the space the modifier was applied in and allows the modifier to store data is needs for its operation."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ModContext"""
        return _MaxPlus.ModContext__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ModContext self, Wrapper w) -> bool"""
        return _MaxPlus.ModContext___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ModContext self, Wrapper w) -> bool"""
        return _MaxPlus.ModContext___ne__(self, *args)

    def GetTM(self):
        """GetTM(ModContext self) -> Matrix3"""
        return _MaxPlus.ModContext_GetTM(self)

    def GetBox(self):
        """GetBox(ModContext self) -> Box3"""
        return _MaxPlus.ModContext_GetBox(self)

    __swig_destroy__ = _MaxPlus.delete_ModContext
    __del__ = lambda self : None;
ModContext_swigregister = _MaxPlus.ModContext_swigregister
ModContext_swigregister(ModContext)

def ModContext__CastFrom(*args):
  """ModContext__CastFrom(InterfaceServer b) -> ModContext"""
  return _MaxPlus.ModContext__CastFrom(*args)

class CustomAttribute(ReferenceTarget):
    """Used to attach additional parameters to scene elements."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> CustomAttribute"""
        return _MaxPlus.CustomAttribute__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(CustomAttribute self, Wrapper w) -> bool"""
        return _MaxPlus.CustomAttribute___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(CustomAttribute self, Wrapper w) -> bool"""
        return _MaxPlus.CustomAttribute___ne__(self, *args)

    def GetName(self):
        """GetName(CustomAttribute self) -> wchar_t const *"""
        return _MaxPlus.CustomAttribute_GetName(self)

    __swig_destroy__ = _MaxPlus.delete_CustomAttribute
    __del__ = lambda self : None;
CustomAttribute_swigregister = _MaxPlus.CustomAttribute_swigregister
CustomAttribute_swigregister(CustomAttribute)

def CustomAttribute__CastFrom(*args):
  """CustomAttribute__CastFrom(InterfaceServer b) -> CustomAttribute"""
  return _MaxPlus.CustomAttribute__CastFrom(*args)

class CustomAttributeContainer(ReferenceTarget):
    """A list of custom attributes."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> CustomAttributeContainer"""
        return _MaxPlus.CustomAttributeContainer__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(CustomAttributeContainer self, Wrapper w) -> bool"""
        return _MaxPlus.CustomAttributeContainer___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(CustomAttributeContainer self, Wrapper w) -> bool"""
        return _MaxPlus.CustomAttributeContainer___ne__(self, *args)

    def CanAccept(self, *args):
        """CanAccept(CustomAttributeContainer self, CustomAttribute attr) -> bool"""
        return _MaxPlus.CustomAttributeContainer_CanAccept(self, *args)

    def __len__(self):
        """__len__(CustomAttributeContainer self) -> int"""
        return _MaxPlus.CustomAttributeContainer___len__(self)

    def __getitem__(self, *args):
        """__getitem__(CustomAttributeContainer self, int i) -> CustomAttribute"""
        return _MaxPlus.CustomAttributeContainer___getitem__(self, *args)

    def Append(self, *args):
        """Append(CustomAttributeContainer self, CustomAttribute attribute)"""
        return _MaxPlus.CustomAttributeContainer_Append(self, *args)

    def __setitem__(self, *args):
        """__setitem__(CustomAttributeContainer self, int i, CustomAttribute attribute)"""
        return _MaxPlus.CustomAttributeContainer___setitem__(self, *args)

    def Insert(self, *args):
        """Insert(CustomAttributeContainer self, int i, CustomAttribute attribute)"""
        return _MaxPlus.CustomAttributeContainer_Insert(self, *args)

    def Remove(self, *args):
        """Remove(CustomAttributeContainer self, int i)"""
        return _MaxPlus.CustomAttributeContainer_Remove(self, *args)

    def GetOwner(self):
        """GetOwner(CustomAttributeContainer self) -> Animatable"""
        return _MaxPlus.CustomAttributeContainer_GetOwner(self)

    def FindInterface(self, *args):
        """FindInterface(CustomAttributeContainer self, Interface_ID iid) -> BaseInterface"""
        return _MaxPlus.CustomAttributeContainer_FindInterface(self, *args)

    __swig_destroy__ = _MaxPlus.delete_CustomAttributeContainer
    __del__ = lambda self : None;
CustomAttributeContainer_swigregister = _MaxPlus.CustomAttributeContainer_swigregister
CustomAttributeContainer_swigregister(CustomAttributeContainer)

def CustomAttributeContainer__CastFrom(*args):
  """CustomAttributeContainer__CastFrom(InterfaceServer b) -> CustomAttributeContainer"""
  return _MaxPlus.CustomAttributeContainer__CastFrom(*args)

class INodeTab(object):
    """A list of INode instances."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::INodeTab self) -> INodeTab"""
        this = _MaxPlus.new_INodeTab()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_INodeTab
    __del__ = lambda self : None;
    def Append(self, *args):
        """
        Append(INodeTab self, INode x, bool allowDups=False)
        Append(INodeTab self, INode x)
        """
        return _MaxPlus.INodeTab_Append(self, *args)

    def Insert(self, *args):
        """
        Insert(INodeTab self, INode x, int at, bool allowDups=False) -> int
        Insert(INodeTab self, INode x, int at) -> int
        """
        return _MaxPlus.INodeTab_Insert(self, *args)

    def Remove(self, *args):
        """Remove(INodeTab self, INode x) -> bool"""
        return _MaxPlus.INodeTab_Remove(self, *args)

    def IndexOf(self, *args):
        """IndexOf(INodeTab self, INode x) -> int"""
        return _MaxPlus.INodeTab_IndexOf(self, *args)

    def GetCount(self):
        """GetCount(INodeTab self) -> int"""
        return _MaxPlus.INodeTab_GetCount(self)

    def GetItem(self, *args):
        """GetItem(INodeTab self, int n) -> INode"""
        return _MaxPlus.INodeTab_GetItem(self, *args)

    def __len__(self):
        """__len__(INodeTab self) -> int"""
        return _MaxPlus.INodeTab___len__(self)

    def __getitem__(self, *args):
        """__getitem__(INodeTab self, int n) -> INode"""
        return _MaxPlus.INodeTab___getitem__(self, *args)

INodeTab_swigregister = _MaxPlus.INodeTab_swigregister
INodeTab_swigregister(INodeTab)

class IntList(object):
    """Proxy of C++ Autodesk::Max::PrimitiveList<(int)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PrimitiveList<(int)> self) -> IntList"""
        this = _MaxPlus.new_IntList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_IntList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(IntList self, int x)"""
        return _MaxPlus.IntList_Append(self, *args)

    def Insert(self, *args):
        """Insert(IntList self, int x, int at)"""
        return _MaxPlus.IntList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(IntList self, int n)"""
        return _MaxPlus.IntList_Delete(self, *args)

    def GetCount(self):
        """GetCount(IntList self) -> int"""
        return _MaxPlus.IntList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(IntList self, int n)"""
        return _MaxPlus.IntList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(IntList self, int n) -> int"""
        return _MaxPlus.IntList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(IntList self, int n, int x)"""
        return _MaxPlus.IntList_SetItem(self, *args)

    def __len__(self):
        """__len__(IntList self) -> int"""
        return _MaxPlus.IntList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(IntList self, int n) -> int"""
        return _MaxPlus.IntList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(IntList self, int n, int x)"""
        return _MaxPlus.IntList___setitem__(self, *args)

IntList_swigregister = _MaxPlus.IntList_swigregister
IntList_swigregister(IntList)

class FloatList(object):
    """Proxy of C++ Autodesk::Max::PrimitiveList<(float)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PrimitiveList<(float)> self) -> FloatList"""
        this = _MaxPlus.new_FloatList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_FloatList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(FloatList self, float x)"""
        return _MaxPlus.FloatList_Append(self, *args)

    def Insert(self, *args):
        """Insert(FloatList self, float x, int at)"""
        return _MaxPlus.FloatList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(FloatList self, int n)"""
        return _MaxPlus.FloatList_Delete(self, *args)

    def GetCount(self):
        """GetCount(FloatList self) -> int"""
        return _MaxPlus.FloatList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(FloatList self, int n)"""
        return _MaxPlus.FloatList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(FloatList self, int n) -> float"""
        return _MaxPlus.FloatList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(FloatList self, int n, float x)"""
        return _MaxPlus.FloatList_SetItem(self, *args)

    def __len__(self):
        """__len__(FloatList self) -> int"""
        return _MaxPlus.FloatList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(FloatList self, int n) -> float"""
        return _MaxPlus.FloatList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(FloatList self, int n, float x)"""
        return _MaxPlus.FloatList___setitem__(self, *args)

FloatList_swigregister = _MaxPlus.FloatList_swigregister
FloatList_swigregister(FloatList)

class DWORDList(object):
    """Proxy of C++ Autodesk::Max::PrimitiveList<(DWORD)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PrimitiveList<(DWORD)> self) -> DWORDList"""
        this = _MaxPlus.new_DWORDList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_DWORDList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(DWORDList self, unsigned long x)"""
        return _MaxPlus.DWORDList_Append(self, *args)

    def Insert(self, *args):
        """Insert(DWORDList self, unsigned long x, int at)"""
        return _MaxPlus.DWORDList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(DWORDList self, int n)"""
        return _MaxPlus.DWORDList_Delete(self, *args)

    def GetCount(self):
        """GetCount(DWORDList self) -> int"""
        return _MaxPlus.DWORDList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(DWORDList self, int n)"""
        return _MaxPlus.DWORDList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(DWORDList self, int n) -> unsigned long"""
        return _MaxPlus.DWORDList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(DWORDList self, int n, unsigned long x)"""
        return _MaxPlus.DWORDList_SetItem(self, *args)

    def __len__(self):
        """__len__(DWORDList self) -> int"""
        return _MaxPlus.DWORDList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(DWORDList self, int n) -> unsigned long"""
        return _MaxPlus.DWORDList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(DWORDList self, int n, unsigned long x)"""
        return _MaxPlus.DWORDList___setitem__(self, *args)

DWORDList_swigregister = _MaxPlus.DWORDList_swigregister
DWORDList_swigregister(DWORDList)

class Int64List(object):
    """Proxy of C++ Autodesk::Max::PrimitiveList<(INT64)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PrimitiveList<(INT64)> self) -> Int64List"""
        this = _MaxPlus.new_Int64List()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_Int64List
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(Int64List self, signed __int64 x)"""
        return _MaxPlus.Int64List_Append(self, *args)

    def Insert(self, *args):
        """Insert(Int64List self, signed __int64 x, int at)"""
        return _MaxPlus.Int64List_Insert(self, *args)

    def Delete(self, *args):
        """Delete(Int64List self, int n)"""
        return _MaxPlus.Int64List_Delete(self, *args)

    def GetCount(self):
        """GetCount(Int64List self) -> int"""
        return _MaxPlus.Int64List_GetCount(self)

    def SetCount(self, *args):
        """SetCount(Int64List self, int n)"""
        return _MaxPlus.Int64List_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(Int64List self, int n) -> signed __int64"""
        return _MaxPlus.Int64List_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(Int64List self, int n, signed __int64 x)"""
        return _MaxPlus.Int64List_SetItem(self, *args)

    def __len__(self):
        """__len__(Int64List self) -> int"""
        return _MaxPlus.Int64List___len__(self)

    def __getitem__(self, *args):
        """__getitem__(Int64List self, int n) -> signed __int64"""
        return _MaxPlus.Int64List___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(Int64List self, int n, signed __int64 x)"""
        return _MaxPlus.Int64List___setitem__(self, *args)

Int64List_swigregister = _MaxPlus.Int64List_swigregister
Int64List_swigregister(Int64List)

class DoubleList(object):
    """Proxy of C++ Autodesk::Max::PrimitiveList<(double)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PrimitiveList<(double)> self) -> DoubleList"""
        this = _MaxPlus.new_DoubleList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_DoubleList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(DoubleList self, double x)"""
        return _MaxPlus.DoubleList_Append(self, *args)

    def Insert(self, *args):
        """Insert(DoubleList self, double x, int at)"""
        return _MaxPlus.DoubleList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(DoubleList self, int n)"""
        return _MaxPlus.DoubleList_Delete(self, *args)

    def GetCount(self):
        """GetCount(DoubleList self) -> int"""
        return _MaxPlus.DoubleList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(DoubleList self, int n)"""
        return _MaxPlus.DoubleList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(DoubleList self, int n) -> double"""
        return _MaxPlus.DoubleList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(DoubleList self, int n, double x)"""
        return _MaxPlus.DoubleList_SetItem(self, *args)

    def __len__(self):
        """__len__(DoubleList self) -> int"""
        return _MaxPlus.DoubleList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(DoubleList self, int n) -> double"""
        return _MaxPlus.DoubleList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(DoubleList self, int n, double x)"""
        return _MaxPlus.DoubleList___setitem__(self, *args)

DoubleList_swigregister = _MaxPlus.DoubleList_swigregister
DoubleList_swigregister(DoubleList)

class BoolList(object):
    """Proxy of C++ Autodesk::Max::PrimitiveList<(bool)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PrimitiveList<(bool)> self) -> BoolList"""
        this = _MaxPlus.new_BoolList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_BoolList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(BoolList self, bool x)"""
        return _MaxPlus.BoolList_Append(self, *args)

    def Insert(self, *args):
        """Insert(BoolList self, bool x, int at)"""
        return _MaxPlus.BoolList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(BoolList self, int n)"""
        return _MaxPlus.BoolList_Delete(self, *args)

    def GetCount(self):
        """GetCount(BoolList self) -> int"""
        return _MaxPlus.BoolList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(BoolList self, int n)"""
        return _MaxPlus.BoolList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(BoolList self, int n) -> bool"""
        return _MaxPlus.BoolList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(BoolList self, int n, bool x)"""
        return _MaxPlus.BoolList_SetItem(self, *args)

    def __len__(self):
        """__len__(BoolList self) -> int"""
        return _MaxPlus.BoolList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(BoolList self, int n) -> bool"""
        return _MaxPlus.BoolList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(BoolList self, int n, bool x)"""
        return _MaxPlus.BoolList___setitem__(self, *args)

BoolList_swigregister = _MaxPlus.BoolList_swigregister
BoolList_swigregister(BoolList)

class Point3List(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::Point3,::Point3)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::Point3,::Point3)> self) -> Point3List"""
        this = _MaxPlus.new_Point3List()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_Point3List
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(Point3List self, Point3 x)"""
        return _MaxPlus.Point3List_Append(self, *args)

    def Insert(self, *args):
        """Insert(Point3List self, Point3 x, int at)"""
        return _MaxPlus.Point3List_Insert(self, *args)

    def Delete(self, *args):
        """Delete(Point3List self, int n)"""
        return _MaxPlus.Point3List_Delete(self, *args)

    def GetCount(self):
        """GetCount(Point3List self) -> int"""
        return _MaxPlus.Point3List_GetCount(self)

    def SetCount(self, *args):
        """SetCount(Point3List self, int n)"""
        return _MaxPlus.Point3List_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(Point3List self, int n) -> Point3"""
        return _MaxPlus.Point3List_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(Point3List self, int n, Point3 x)"""
        return _MaxPlus.Point3List_SetItem(self, *args)

    def __len__(self):
        """__len__(Point3List self) -> int"""
        return _MaxPlus.Point3List___len__(self)

    def __getitem__(self, *args):
        """__getitem__(Point3List self, int n) -> Point3"""
        return _MaxPlus.Point3List___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(Point3List self, int n, Point3 x)"""
        return _MaxPlus.Point3List___setitem__(self, *args)

Point3List_swigregister = _MaxPlus.Point3List_swigregister
Point3List_swigregister(Point3List)

class Point4List(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::Point4,::Point4)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::Point4,::Point4)> self) -> Point4List"""
        this = _MaxPlus.new_Point4List()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_Point4List
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(Point4List self, Point4 x)"""
        return _MaxPlus.Point4List_Append(self, *args)

    def Insert(self, *args):
        """Insert(Point4List self, Point4 x, int at)"""
        return _MaxPlus.Point4List_Insert(self, *args)

    def Delete(self, *args):
        """Delete(Point4List self, int n)"""
        return _MaxPlus.Point4List_Delete(self, *args)

    def GetCount(self):
        """GetCount(Point4List self) -> int"""
        return _MaxPlus.Point4List_GetCount(self)

    def SetCount(self, *args):
        """SetCount(Point4List self, int n)"""
        return _MaxPlus.Point4List_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(Point4List self, int n) -> Point4"""
        return _MaxPlus.Point4List_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(Point4List self, int n, Point4 x)"""
        return _MaxPlus.Point4List_SetItem(self, *args)

    def __len__(self):
        """__len__(Point4List self) -> int"""
        return _MaxPlus.Point4List___len__(self)

    def __getitem__(self, *args):
        """__getitem__(Point4List self, int n) -> Point4"""
        return _MaxPlus.Point4List___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(Point4List self, int n, Point4 x)"""
        return _MaxPlus.Point4List___setitem__(self, *args)

Point4List_swigregister = _MaxPlus.Point4List_swigregister
Point4List_swigregister(Point4List)

class StrList(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::WStr,::WStr)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::WStr,::WStr)> self) -> StrList"""
        this = _MaxPlus.new_StrList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_StrList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(StrList self, WStr x)"""
        return _MaxPlus.StrList_Append(self, *args)

    def Insert(self, *args):
        """Insert(StrList self, WStr x, int at)"""
        return _MaxPlus.StrList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(StrList self, int n)"""
        return _MaxPlus.StrList_Delete(self, *args)

    def GetCount(self):
        """GetCount(StrList self) -> int"""
        return _MaxPlus.StrList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(StrList self, int n)"""
        return _MaxPlus.StrList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(StrList self, int n) -> WStr"""
        return _MaxPlus.StrList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(StrList self, int n, WStr x)"""
        return _MaxPlus.StrList_SetItem(self, *args)

    def __len__(self):
        """__len__(StrList self) -> int"""
        return _MaxPlus.StrList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(StrList self, int n) -> WStr"""
        return _MaxPlus.StrList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(StrList self, int n, WStr x)"""
        return _MaxPlus.StrList___setitem__(self, *args)

StrList_swigregister = _MaxPlus.StrList_swigregister
StrList_swigregister(StrList)

class Matrix3List(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::Matrix3,::Matrix3)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::Matrix3,::Matrix3)> self) -> Matrix3List"""
        this = _MaxPlus.new_Matrix3List()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_Matrix3List
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(Matrix3List self, Matrix3 x)"""
        return _MaxPlus.Matrix3List_Append(self, *args)

    def Insert(self, *args):
        """Insert(Matrix3List self, Matrix3 x, int at)"""
        return _MaxPlus.Matrix3List_Insert(self, *args)

    def Delete(self, *args):
        """Delete(Matrix3List self, int n)"""
        return _MaxPlus.Matrix3List_Delete(self, *args)

    def GetCount(self):
        """GetCount(Matrix3List self) -> int"""
        return _MaxPlus.Matrix3List_GetCount(self)

    def SetCount(self, *args):
        """SetCount(Matrix3List self, int n)"""
        return _MaxPlus.Matrix3List_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(Matrix3List self, int n) -> Matrix3"""
        return _MaxPlus.Matrix3List_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(Matrix3List self, int n, Matrix3 x)"""
        return _MaxPlus.Matrix3List_SetItem(self, *args)

    def __len__(self):
        """__len__(Matrix3List self) -> int"""
        return _MaxPlus.Matrix3List___len__(self)

    def __getitem__(self, *args):
        """__getitem__(Matrix3List self, int n) -> Matrix3"""
        return _MaxPlus.Matrix3List___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(Matrix3List self, int n, Matrix3 x)"""
        return _MaxPlus.Matrix3List___setitem__(self, *args)

Matrix3List_swigregister = _MaxPlus.Matrix3List_swigregister
Matrix3List_swigregister(Matrix3List)

class AngAxisList(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::AngAxis,::AngAxis)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::AngAxis,::AngAxis)> self) -> AngAxisList"""
        this = _MaxPlus.new_AngAxisList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_AngAxisList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(AngAxisList self, AngAxis x)"""
        return _MaxPlus.AngAxisList_Append(self, *args)

    def Insert(self, *args):
        """Insert(AngAxisList self, AngAxis x, int at)"""
        return _MaxPlus.AngAxisList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(AngAxisList self, int n)"""
        return _MaxPlus.AngAxisList_Delete(self, *args)

    def GetCount(self):
        """GetCount(AngAxisList self) -> int"""
        return _MaxPlus.AngAxisList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(AngAxisList self, int n)"""
        return _MaxPlus.AngAxisList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(AngAxisList self, int n) -> AngAxis"""
        return _MaxPlus.AngAxisList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(AngAxisList self, int n, AngAxis x)"""
        return _MaxPlus.AngAxisList_SetItem(self, *args)

    def __len__(self):
        """__len__(AngAxisList self) -> int"""
        return _MaxPlus.AngAxisList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(AngAxisList self, int n) -> AngAxis"""
        return _MaxPlus.AngAxisList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(AngAxisList self, int n, AngAxis x)"""
        return _MaxPlus.AngAxisList___setitem__(self, *args)

AngAxisList_swigregister = _MaxPlus.AngAxisList_swigregister
AngAxisList_swigregister(AngAxisList)

class QuatList(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::Quat,::Quat)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::Quat,::Quat)> self) -> QuatList"""
        this = _MaxPlus.new_QuatList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_QuatList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(QuatList self, Quat x)"""
        return _MaxPlus.QuatList_Append(self, *args)

    def Insert(self, *args):
        """Insert(QuatList self, Quat x, int at)"""
        return _MaxPlus.QuatList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(QuatList self, int n)"""
        return _MaxPlus.QuatList_Delete(self, *args)

    def GetCount(self):
        """GetCount(QuatList self) -> int"""
        return _MaxPlus.QuatList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(QuatList self, int n)"""
        return _MaxPlus.QuatList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(QuatList self, int n) -> Quat"""
        return _MaxPlus.QuatList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(QuatList self, int n, Quat x)"""
        return _MaxPlus.QuatList_SetItem(self, *args)

    def __len__(self):
        """__len__(QuatList self) -> int"""
        return _MaxPlus.QuatList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(QuatList self, int n) -> Quat"""
        return _MaxPlus.QuatList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(QuatList self, int n, Quat x)"""
        return _MaxPlus.QuatList___setitem__(self, *args)

QuatList_swigregister = _MaxPlus.QuatList_swigregister
QuatList_swigregister(QuatList)

class RayList(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::Ray,::Ray)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::Ray,::Ray)> self) -> RayList"""
        this = _MaxPlus.new_RayList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_RayList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(RayList self, Ray x)"""
        return _MaxPlus.RayList_Append(self, *args)

    def Insert(self, *args):
        """Insert(RayList self, Ray x, int at)"""
        return _MaxPlus.RayList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(RayList self, int n)"""
        return _MaxPlus.RayList_Delete(self, *args)

    def GetCount(self):
        """GetCount(RayList self) -> int"""
        return _MaxPlus.RayList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(RayList self, int n)"""
        return _MaxPlus.RayList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(RayList self, int n) -> Ray"""
        return _MaxPlus.RayList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(RayList self, int n, Ray x)"""
        return _MaxPlus.RayList_SetItem(self, *args)

    def __len__(self):
        """__len__(RayList self) -> int"""
        return _MaxPlus.RayList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(RayList self, int n) -> Ray"""
        return _MaxPlus.RayList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(RayList self, int n, Ray x)"""
        return _MaxPlus.RayList___setitem__(self, *args)

RayList_swigregister = _MaxPlus.RayList_swigregister
RayList_swigregister(RayList)

class Point2List(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::Point2,::Point2)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::Point2,::Point2)> self) -> Point2List"""
        this = _MaxPlus.new_Point2List()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_Point2List
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(Point2List self, Point2 x)"""
        return _MaxPlus.Point2List_Append(self, *args)

    def Insert(self, *args):
        """Insert(Point2List self, Point2 x, int at)"""
        return _MaxPlus.Point2List_Insert(self, *args)

    def Delete(self, *args):
        """Delete(Point2List self, int n)"""
        return _MaxPlus.Point2List_Delete(self, *args)

    def GetCount(self):
        """GetCount(Point2List self) -> int"""
        return _MaxPlus.Point2List_GetCount(self)

    def SetCount(self, *args):
        """SetCount(Point2List self, int n)"""
        return _MaxPlus.Point2List_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(Point2List self, int n) -> Point2"""
        return _MaxPlus.Point2List_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(Point2List self, int n, Point2 x)"""
        return _MaxPlus.Point2List_SetItem(self, *args)

    def __len__(self):
        """__len__(Point2List self) -> int"""
        return _MaxPlus.Point2List___len__(self)

    def __getitem__(self, *args):
        """__getitem__(Point2List self, int n) -> Point2"""
        return _MaxPlus.Point2List___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(Point2List self, int n, Point2 x)"""
        return _MaxPlus.Point2List___setitem__(self, *args)

Point2List_swigregister = _MaxPlus.Point2List_swigregister
Point2List_swigregister(Point2List)

class BitArrayList(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::BitArray,::BitArray)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::BitArray,::BitArray)> self) -> BitArrayList"""
        this = _MaxPlus.new_BitArrayList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_BitArrayList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(BitArrayList self, BitArray x)"""
        return _MaxPlus.BitArrayList_Append(self, *args)

    def Insert(self, *args):
        """Insert(BitArrayList self, BitArray x, int at)"""
        return _MaxPlus.BitArrayList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(BitArrayList self, int n)"""
        return _MaxPlus.BitArrayList_Delete(self, *args)

    def GetCount(self):
        """GetCount(BitArrayList self) -> int"""
        return _MaxPlus.BitArrayList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(BitArrayList self, int n)"""
        return _MaxPlus.BitArrayList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(BitArrayList self, int n) -> BitArray"""
        return _MaxPlus.BitArrayList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(BitArrayList self, int n, BitArray x)"""
        return _MaxPlus.BitArrayList_SetItem(self, *args)

    def __len__(self):
        """__len__(BitArrayList self) -> int"""
        return _MaxPlus.BitArrayList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(BitArrayList self, int n) -> BitArray"""
        return _MaxPlus.BitArrayList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(BitArrayList self, int n, BitArray x)"""
        return _MaxPlus.BitArrayList___setitem__(self, *args)

BitArrayList_swigregister = _MaxPlus.BitArrayList_swigregister
BitArrayList_swigregister(BitArrayList)

class IntervalList(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::Interval,::Interval)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::Interval,::Interval)> self) -> IntervalList"""
        this = _MaxPlus.new_IntervalList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_IntervalList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(IntervalList self, Interval x)"""
        return _MaxPlus.IntervalList_Append(self, *args)

    def Insert(self, *args):
        """Insert(IntervalList self, Interval x, int at)"""
        return _MaxPlus.IntervalList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(IntervalList self, int n)"""
        return _MaxPlus.IntervalList_Delete(self, *args)

    def GetCount(self):
        """GetCount(IntervalList self) -> int"""
        return _MaxPlus.IntervalList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(IntervalList self, int n)"""
        return _MaxPlus.IntervalList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(IntervalList self, int n) -> Interval"""
        return _MaxPlus.IntervalList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(IntervalList self, int n, Interval x)"""
        return _MaxPlus.IntervalList_SetItem(self, *args)

    def __len__(self):
        """__len__(IntervalList self) -> int"""
        return _MaxPlus.IntervalList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(IntervalList self, int n) -> Interval"""
        return _MaxPlus.IntervalList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(IntervalList self, int n, Interval x)"""
        return _MaxPlus.IntervalList___setitem__(self, *args)

IntervalList_swigregister = _MaxPlus.IntervalList_swigregister
IntervalList_swigregister(IntervalList)

class IPoint2List(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::IPoint2,::IPoint2)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::IPoint2,::IPoint2)> self) -> IPoint2List"""
        this = _MaxPlus.new_IPoint2List()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_IPoint2List
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(IPoint2List self, IPoint2 x)"""
        return _MaxPlus.IPoint2List_Append(self, *args)

    def Insert(self, *args):
        """Insert(IPoint2List self, IPoint2 x, int at)"""
        return _MaxPlus.IPoint2List_Insert(self, *args)

    def Delete(self, *args):
        """Delete(IPoint2List self, int n)"""
        return _MaxPlus.IPoint2List_Delete(self, *args)

    def GetCount(self):
        """GetCount(IPoint2List self) -> int"""
        return _MaxPlus.IPoint2List_GetCount(self)

    def SetCount(self, *args):
        """SetCount(IPoint2List self, int n)"""
        return _MaxPlus.IPoint2List_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(IPoint2List self, int n) -> IPoint2"""
        return _MaxPlus.IPoint2List_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(IPoint2List self, int n, IPoint2 x)"""
        return _MaxPlus.IPoint2List_SetItem(self, *args)

    def __len__(self):
        """__len__(IPoint2List self) -> int"""
        return _MaxPlus.IPoint2List___len__(self)

    def __getitem__(self, *args):
        """__getitem__(IPoint2List self, int n) -> IPoint2"""
        return _MaxPlus.IPoint2List___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(IPoint2List self, int n, IPoint2 x)"""
        return _MaxPlus.IPoint2List___setitem__(self, *args)

IPoint2List_swigregister = _MaxPlus.IPoint2List_swigregister
IPoint2List_swigregister(IPoint2List)

class ColorList(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::Color,::Color)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::Color,::Color)> self) -> ColorList"""
        this = _MaxPlus.new_ColorList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_ColorList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(ColorList self, Color x)"""
        return _MaxPlus.ColorList_Append(self, *args)

    def Insert(self, *args):
        """Insert(ColorList self, Color x, int at)"""
        return _MaxPlus.ColorList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(ColorList self, int n)"""
        return _MaxPlus.ColorList_Delete(self, *args)

    def GetCount(self):
        """GetCount(ColorList self) -> int"""
        return _MaxPlus.ColorList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(ColorList self, int n)"""
        return _MaxPlus.ColorList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(ColorList self, int n) -> Color"""
        return _MaxPlus.ColorList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(ColorList self, int n, Color x)"""
        return _MaxPlus.ColorList_SetItem(self, *args)

    def __len__(self):
        """__len__(ColorList self) -> int"""
        return _MaxPlus.ColorList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(ColorList self, int n) -> Color"""
        return _MaxPlus.ColorList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(ColorList self, int n, Color x)"""
        return _MaxPlus.ColorList___setitem__(self, *args)

ColorList_swigregister = _MaxPlus.ColorList_swigregister
ColorList_swigregister(ColorList)

class AColorList(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::AColor,::AColor)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::AColor,::AColor)> self) -> AColorList"""
        this = _MaxPlus.new_AColorList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_AColorList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(AColorList self, AColor x)"""
        return _MaxPlus.AColorList_Append(self, *args)

    def Insert(self, *args):
        """Insert(AColorList self, AColor x, int at)"""
        return _MaxPlus.AColorList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(AColorList self, int n)"""
        return _MaxPlus.AColorList_Delete(self, *args)

    def GetCount(self):
        """GetCount(AColorList self) -> int"""
        return _MaxPlus.AColorList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(AColorList self, int n)"""
        return _MaxPlus.AColorList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(AColorList self, int n) -> AColor"""
        return _MaxPlus.AColorList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(AColorList self, int n, AColor x)"""
        return _MaxPlus.AColorList_SetItem(self, *args)

    def __len__(self):
        """__len__(AColorList self) -> int"""
        return _MaxPlus.AColorList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(AColorList self, int n) -> AColor"""
        return _MaxPlus.AColorList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(AColorList self, int n, AColor x)"""
        return _MaxPlus.AColorList___setitem__(self, *args)

AColorList_swigregister = _MaxPlus.AColorList_swigregister
AColorList_swigregister(AColorList)

class BitmapList(object):
    """Proxy of C++ Autodesk::Max::List<(Autodesk::Max::PBBitmap,::PBBitmap)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::List<(Autodesk::Max::PBBitmap,::PBBitmap)> self) -> BitmapList"""
        this = _MaxPlus.new_BitmapList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_BitmapList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(BitmapList self, PBBitmap x)"""
        return _MaxPlus.BitmapList_Append(self, *args)

    def Insert(self, *args):
        """Insert(BitmapList self, PBBitmap x, int at)"""
        return _MaxPlus.BitmapList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(BitmapList self, int n)"""
        return _MaxPlus.BitmapList_Delete(self, *args)

    def GetCount(self):
        """GetCount(BitmapList self) -> int"""
        return _MaxPlus.BitmapList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(BitmapList self, int n)"""
        return _MaxPlus.BitmapList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(BitmapList self, int n) -> PBBitmap"""
        return _MaxPlus.BitmapList_GetItem(self, *args)

    def SetItem(self, *args):
        """SetItem(BitmapList self, int n, PBBitmap x)"""
        return _MaxPlus.BitmapList_SetItem(self, *args)

    def __len__(self):
        """__len__(BitmapList self) -> int"""
        return _MaxPlus.BitmapList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(BitmapList self, int n) -> PBBitmap"""
        return _MaxPlus.BitmapList___getitem__(self, *args)

    def __setitem__(self, *args):
        """__setitem__(BitmapList self, int n, PBBitmap x)"""
        return _MaxPlus.BitmapList___setitem__(self, *args)

BitmapList_swigregister = _MaxPlus.BitmapList_swigregister
BitmapList_swigregister(BitmapList)

class PCharList(object):
    """Proxy of C++ Autodesk::Max::NativePointerList<(::WStr,q(const).wchar_t,p.q(const).wchar_t)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::NativePointerList<(::WStr,q(const).wchar_t,p.q(const).wchar_t)> self) -> PCharList"""
        this = _MaxPlus.new_PCharList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_PCharList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(PCharList self, ::WStr const & x)"""
        return _MaxPlus.PCharList_Append(self, *args)

    def Insert(self, *args):
        """Insert(PCharList self, ::WStr const & x, int at)"""
        return _MaxPlus.PCharList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(PCharList self, int n)"""
        return _MaxPlus.PCharList_Delete(self, *args)

    def GetCount(self):
        """GetCount(PCharList self) -> int"""
        return _MaxPlus.PCharList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(PCharList self, int n)"""
        return _MaxPlus.PCharList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(PCharList self, int n) -> wchar_t const *"""
        return _MaxPlus.PCharList_GetItem(self, *args)

    def __len__(self):
        """__len__(PCharList self) -> int"""
        return _MaxPlus.PCharList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(PCharList self, int n) -> wchar_t const *"""
        return _MaxPlus.PCharList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(PCharList self, int n, wchar_t const *const & x)"""
        return _MaxPlus.PCharList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(PCharList self, int n, wchar_t const * x)"""
        return _MaxPlus.PCharList___setitem__(self, *args)

PCharList_swigregister = _MaxPlus.PCharList_swigregister
PCharList_swigregister(PCharList)

class IParamBlock2List(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::IParamBlock2,::IParamBlock2)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::IParamBlock2,::IParamBlock2)> self) -> IParamBlock2List"""
        this = _MaxPlus.new_IParamBlock2List()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_IParamBlock2List
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(IParamBlock2List self, IParamBlock2 x)"""
        return _MaxPlus.IParamBlock2List_Append(self, *args)

    def Insert(self, *args):
        """Insert(IParamBlock2List self, IParamBlock2 x, int at)"""
        return _MaxPlus.IParamBlock2List_Insert(self, *args)

    def Delete(self, *args):
        """Delete(IParamBlock2List self, int n)"""
        return _MaxPlus.IParamBlock2List_Delete(self, *args)

    def GetCount(self):
        """GetCount(IParamBlock2List self) -> int"""
        return _MaxPlus.IParamBlock2List_GetCount(self)

    def SetCount(self, *args):
        """SetCount(IParamBlock2List self, int n)"""
        return _MaxPlus.IParamBlock2List_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(IParamBlock2List self, int n) -> IParamBlock2"""
        return _MaxPlus.IParamBlock2List_GetItem(self, *args)

    def __len__(self):
        """__len__(IParamBlock2List self) -> int"""
        return _MaxPlus.IParamBlock2List___len__(self)

    def __getitem__(self, *args):
        """__getitem__(IParamBlock2List self, int n) -> IParamBlock2"""
        return _MaxPlus.IParamBlock2List___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(IParamBlock2List self, int n, IParamBlock2 x)"""
        return _MaxPlus.IParamBlock2List_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(IParamBlock2List self, int n, IParamBlock2 x)"""
        return _MaxPlus.IParamBlock2List___setitem__(self, *args)

IParamBlock2List_swigregister = _MaxPlus.IParamBlock2List_swigregister
IParamBlock2List_swigregister(IParamBlock2List)

class MtlList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::Mtl,::Mtl)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::Mtl,::Mtl)> self) -> MtlList"""
        this = _MaxPlus.new_MtlList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_MtlList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(MtlList self, Mtl x)"""
        return _MaxPlus.MtlList_Append(self, *args)

    def Insert(self, *args):
        """Insert(MtlList self, Mtl x, int at)"""
        return _MaxPlus.MtlList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(MtlList self, int n)"""
        return _MaxPlus.MtlList_Delete(self, *args)

    def GetCount(self):
        """GetCount(MtlList self) -> int"""
        return _MaxPlus.MtlList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(MtlList self, int n)"""
        return _MaxPlus.MtlList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(MtlList self, int n) -> Mtl"""
        return _MaxPlus.MtlList_GetItem(self, *args)

    def __len__(self):
        """__len__(MtlList self) -> int"""
        return _MaxPlus.MtlList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(MtlList self, int n) -> Mtl"""
        return _MaxPlus.MtlList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(MtlList self, int n, Mtl x)"""
        return _MaxPlus.MtlList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(MtlList self, int n, Mtl x)"""
        return _MaxPlus.MtlList___setitem__(self, *args)

MtlList_swigregister = _MaxPlus.MtlList_swigregister
MtlList_swigregister(MtlList)

class TexmapList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::Texmap,::Texmap)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::Texmap,::Texmap)> self) -> TexmapList"""
        this = _MaxPlus.new_TexmapList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_TexmapList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(TexmapList self, Texmap x)"""
        return _MaxPlus.TexmapList_Append(self, *args)

    def Insert(self, *args):
        """Insert(TexmapList self, Texmap x, int at)"""
        return _MaxPlus.TexmapList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(TexmapList self, int n)"""
        return _MaxPlus.TexmapList_Delete(self, *args)

    def GetCount(self):
        """GetCount(TexmapList self) -> int"""
        return _MaxPlus.TexmapList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(TexmapList self, int n)"""
        return _MaxPlus.TexmapList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(TexmapList self, int n) -> Texmap"""
        return _MaxPlus.TexmapList_GetItem(self, *args)

    def __len__(self):
        """__len__(TexmapList self) -> int"""
        return _MaxPlus.TexmapList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(TexmapList self, int n) -> Texmap"""
        return _MaxPlus.TexmapList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(TexmapList self, int n, Texmap x)"""
        return _MaxPlus.TexmapList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(TexmapList self, int n, Texmap x)"""
        return _MaxPlus.TexmapList___setitem__(self, *args)

TexmapList_swigregister = _MaxPlus.TexmapList_swigregister
TexmapList_swigregister(TexmapList)

class INodeList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::INode,::INode)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::INode,::INode)> self) -> INodeList"""
        this = _MaxPlus.new_INodeList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_INodeList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(INodeList self, INode x)"""
        return _MaxPlus.INodeList_Append(self, *args)

    def Insert(self, *args):
        """Insert(INodeList self, INode x, int at)"""
        return _MaxPlus.INodeList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(INodeList self, int n)"""
        return _MaxPlus.INodeList_Delete(self, *args)

    def GetCount(self):
        """GetCount(INodeList self) -> int"""
        return _MaxPlus.INodeList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(INodeList self, int n)"""
        return _MaxPlus.INodeList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(INodeList self, int n) -> INode"""
        return _MaxPlus.INodeList_GetItem(self, *args)

    def __len__(self):
        """__len__(INodeList self) -> int"""
        return _MaxPlus.INodeList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(INodeList self, int n) -> INode"""
        return _MaxPlus.INodeList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(INodeList self, int n, INode x)"""
        return _MaxPlus.INodeList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(INodeList self, int n, INode x)"""
        return _MaxPlus.INodeList___setitem__(self, *args)

INodeList_swigregister = _MaxPlus.INodeList_swigregister
INodeList_swigregister(INodeList)

class ReferenceTargetList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::ReferenceTarget,::ReferenceTarget)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::ReferenceTarget,::ReferenceTarget)> self) -> ReferenceTargetList"""
        this = _MaxPlus.new_ReferenceTargetList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_ReferenceTargetList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(ReferenceTargetList self, ReferenceTarget x)"""
        return _MaxPlus.ReferenceTargetList_Append(self, *args)

    def Insert(self, *args):
        """Insert(ReferenceTargetList self, ReferenceTarget x, int at)"""
        return _MaxPlus.ReferenceTargetList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(ReferenceTargetList self, int n)"""
        return _MaxPlus.ReferenceTargetList_Delete(self, *args)

    def GetCount(self):
        """GetCount(ReferenceTargetList self) -> int"""
        return _MaxPlus.ReferenceTargetList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(ReferenceTargetList self, int n)"""
        return _MaxPlus.ReferenceTargetList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(ReferenceTargetList self, int n) -> ReferenceTarget"""
        return _MaxPlus.ReferenceTargetList_GetItem(self, *args)

    def __len__(self):
        """__len__(ReferenceTargetList self) -> int"""
        return _MaxPlus.ReferenceTargetList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(ReferenceTargetList self, int n) -> ReferenceTarget"""
        return _MaxPlus.ReferenceTargetList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(ReferenceTargetList self, int n, ReferenceTarget x)"""
        return _MaxPlus.ReferenceTargetList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(ReferenceTargetList self, int n, ReferenceTarget x)"""
        return _MaxPlus.ReferenceTargetList___setitem__(self, *args)

ReferenceTargetList_swigregister = _MaxPlus.ReferenceTargetList_swigregister
ReferenceTargetList_swigregister(ReferenceTargetList)

class ClassDescList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::ClassDesc,::ClassDesc)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::ClassDesc,::ClassDesc)> self) -> ClassDescList"""
        this = _MaxPlus.new_ClassDescList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_ClassDescList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(ClassDescList self, ClassDesc x)"""
        return _MaxPlus.ClassDescList_Append(self, *args)

    def Insert(self, *args):
        """Insert(ClassDescList self, ClassDesc x, int at)"""
        return _MaxPlus.ClassDescList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(ClassDescList self, int n)"""
        return _MaxPlus.ClassDescList_Delete(self, *args)

    def GetCount(self):
        """GetCount(ClassDescList self) -> int"""
        return _MaxPlus.ClassDescList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(ClassDescList self, int n)"""
        return _MaxPlus.ClassDescList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(ClassDescList self, int n) -> ClassDesc"""
        return _MaxPlus.ClassDescList_GetItem(self, *args)

    def __len__(self):
        """__len__(ClassDescList self) -> int"""
        return _MaxPlus.ClassDescList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(ClassDescList self, int n) -> ClassDesc"""
        return _MaxPlus.ClassDescList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(ClassDescList self, int n, ClassDesc x)"""
        return _MaxPlus.ClassDescList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(ClassDescList self, int n, ClassDesc x)"""
        return _MaxPlus.ClassDescList___setitem__(self, *args)

ClassDescList_swigregister = _MaxPlus.ClassDescList_swigregister
ClassDescList_swigregister(ClassDescList)

class MeshList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::Mesh,::Mesh)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::Mesh,::Mesh)> self) -> MeshList"""
        this = _MaxPlus.new_MeshList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_MeshList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(MeshList self, Mesh x)"""
        return _MaxPlus.MeshList_Append(self, *args)

    def Insert(self, *args):
        """Insert(MeshList self, Mesh x, int at)"""
        return _MaxPlus.MeshList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(MeshList self, int n)"""
        return _MaxPlus.MeshList_Delete(self, *args)

    def GetCount(self):
        """GetCount(MeshList self) -> int"""
        return _MaxPlus.MeshList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(MeshList self, int n)"""
        return _MaxPlus.MeshList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(MeshList self, int n) -> Mesh"""
        return _MaxPlus.MeshList_GetItem(self, *args)

    def __len__(self):
        """__len__(MeshList self) -> int"""
        return _MaxPlus.MeshList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(MeshList self, int n) -> Mesh"""
        return _MaxPlus.MeshList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(MeshList self, int n, Mesh x)"""
        return _MaxPlus.MeshList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(MeshList self, int n, Mesh x)"""
        return _MaxPlus.MeshList___setitem__(self, *args)

MeshList_swigregister = _MaxPlus.MeshList_swigregister
MeshList_swigregister(MeshList)

class ObjectList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::Object,::Object)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::Object,::Object)> self) -> ObjectList"""
        this = _MaxPlus.new_ObjectList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_ObjectList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(ObjectList self, Object x)"""
        return _MaxPlus.ObjectList_Append(self, *args)

    def Insert(self, *args):
        """Insert(ObjectList self, Object x, int at)"""
        return _MaxPlus.ObjectList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(ObjectList self, int n)"""
        return _MaxPlus.ObjectList_Delete(self, *args)

    def GetCount(self):
        """GetCount(ObjectList self) -> int"""
        return _MaxPlus.ObjectList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(ObjectList self, int n)"""
        return _MaxPlus.ObjectList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(ObjectList self, int n) -> Object"""
        return _MaxPlus.ObjectList_GetItem(self, *args)

    def __len__(self):
        """__len__(ObjectList self) -> int"""
        return _MaxPlus.ObjectList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(ObjectList self, int n) -> Object"""
        return _MaxPlus.ObjectList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(ObjectList self, int n, Object x)"""
        return _MaxPlus.ObjectList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(ObjectList self, int n, Object x)"""
        return _MaxPlus.ObjectList___setitem__(self, *args)

ObjectList_swigregister = _MaxPlus.ObjectList_swigregister
ObjectList_swigregister(ObjectList)

class ControlList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::Control,::Control)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::Control,::Control)> self) -> ControlList"""
        this = _MaxPlus.new_ControlList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_ControlList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(ControlList self, Control x)"""
        return _MaxPlus.ControlList_Append(self, *args)

    def Insert(self, *args):
        """Insert(ControlList self, Control x, int at)"""
        return _MaxPlus.ControlList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(ControlList self, int n)"""
        return _MaxPlus.ControlList_Delete(self, *args)

    def GetCount(self):
        """GetCount(ControlList self) -> int"""
        return _MaxPlus.ControlList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(ControlList self, int n)"""
        return _MaxPlus.ControlList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(ControlList self, int n) -> Control"""
        return _MaxPlus.ControlList_GetItem(self, *args)

    def __len__(self):
        """__len__(ControlList self) -> int"""
        return _MaxPlus.ControlList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(ControlList self, int n) -> Control"""
        return _MaxPlus.ControlList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(ControlList self, int n, Control x)"""
        return _MaxPlus.ControlList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(ControlList self, int n, Control x)"""
        return _MaxPlus.ControlList___setitem__(self, *args)

ControlList_swigregister = _MaxPlus.ControlList_swigregister
ControlList_swigregister(ControlList)

class IObjectList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::IObject,::IObject)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::IObject,::IObject)> self) -> IObjectList"""
        this = _MaxPlus.new_IObjectList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_IObjectList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(IObjectList self, IObject x)"""
        return _MaxPlus.IObjectList_Append(self, *args)

    def Insert(self, *args):
        """Insert(IObjectList self, IObject x, int at)"""
        return _MaxPlus.IObjectList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(IObjectList self, int n)"""
        return _MaxPlus.IObjectList_Delete(self, *args)

    def GetCount(self):
        """GetCount(IObjectList self) -> int"""
        return _MaxPlus.IObjectList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(IObjectList self, int n)"""
        return _MaxPlus.IObjectList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(IObjectList self, int n) -> IObject"""
        return _MaxPlus.IObjectList_GetItem(self, *args)

    def __len__(self):
        """__len__(IObjectList self) -> int"""
        return _MaxPlus.IObjectList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(IObjectList self, int n) -> IObject"""
        return _MaxPlus.IObjectList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(IObjectList self, int n, IObject x)"""
        return _MaxPlus.IObjectList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(IObjectList self, int n, IObject x)"""
        return _MaxPlus.IObjectList___setitem__(self, *args)

IObjectList_swigregister = _MaxPlus.IObjectList_swigregister
IObjectList_swigregister(IObjectList)

class FPInterfaceList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::FPInterface,::FPInterface)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::FPInterface,::FPInterface)> self) -> FPInterfaceList"""
        this = _MaxPlus.new_FPInterfaceList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_FPInterfaceList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(FPInterfaceList self, FPInterface x)"""
        return _MaxPlus.FPInterfaceList_Append(self, *args)

    def Insert(self, *args):
        """Insert(FPInterfaceList self, FPInterface x, int at)"""
        return _MaxPlus.FPInterfaceList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(FPInterfaceList self, int n)"""
        return _MaxPlus.FPInterfaceList_Delete(self, *args)

    def GetCount(self):
        """GetCount(FPInterfaceList self) -> int"""
        return _MaxPlus.FPInterfaceList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(FPInterfaceList self, int n)"""
        return _MaxPlus.FPInterfaceList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(FPInterfaceList self, int n) -> FPInterface"""
        return _MaxPlus.FPInterfaceList_GetItem(self, *args)

    def __len__(self):
        """__len__(FPInterfaceList self) -> int"""
        return _MaxPlus.FPInterfaceList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(FPInterfaceList self, int n) -> FPInterface"""
        return _MaxPlus.FPInterfaceList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(FPInterfaceList self, int n, FPInterface x)"""
        return _MaxPlus.FPInterfaceList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(FPInterfaceList self, int n, FPInterface x)"""
        return _MaxPlus.FPInterfaceList___setitem__(self, *args)

FPInterfaceList_swigregister = _MaxPlus.FPInterfaceList_swigregister
FPInterfaceList_swigregister(FPInterfaceList)

class ModContextList(object):
    """Proxy of C++ Autodesk::Max::PointerList<(Autodesk::Max::ModContext,::ModContext)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PointerList<(Autodesk::Max::ModContext,::ModContext)> self) -> ModContextList"""
        this = _MaxPlus.new_ModContextList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_ModContextList
    __del__ = lambda self : None;
    def Append(self, *args):
        """Append(ModContextList self, ModContext x)"""
        return _MaxPlus.ModContextList_Append(self, *args)

    def Insert(self, *args):
        """Insert(ModContextList self, ModContext x, int at)"""
        return _MaxPlus.ModContextList_Insert(self, *args)

    def Delete(self, *args):
        """Delete(ModContextList self, int n)"""
        return _MaxPlus.ModContextList_Delete(self, *args)

    def GetCount(self):
        """GetCount(ModContextList self) -> int"""
        return _MaxPlus.ModContextList_GetCount(self)

    def SetCount(self, *args):
        """SetCount(ModContextList self, int n)"""
        return _MaxPlus.ModContextList_SetCount(self, *args)

    def GetItem(self, *args):
        """GetItem(ModContextList self, int n) -> ModContext"""
        return _MaxPlus.ModContextList_GetItem(self, *args)

    def __len__(self):
        """__len__(ModContextList self) -> int"""
        return _MaxPlus.ModContextList___len__(self)

    def __getitem__(self, *args):
        """__getitem__(ModContextList self, int n) -> ModContext"""
        return _MaxPlus.ModContextList___getitem__(self, *args)

    def SetItem(self, *args):
        """SetItem(ModContextList self, int n, ModContext x)"""
        return _MaxPlus.ModContextList_SetItem(self, *args)

    def __setitem__(self, *args):
        """__setitem__(ModContextList self, int n, ModContext x)"""
        return _MaxPlus.ModContextList___setitem__(self, *args)

ModContextList_swigregister = _MaxPlus.ModContextList_swigregister
ModContextList_swigregister(ModContextList)

class PivotMode(object):
    """Proxy of C++ Autodesk::Max::PivotMode class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NoPivot = _MaxPlus.PivotMode_NoPivot
    Pivot = _MaxPlus.PivotMode_Pivot
    Object = _MaxPlus.PivotMode_Object
    Hierarchy = _MaxPlus.PivotMode_Hierarchy
    __swig_destroy__ = _MaxPlus.delete_PivotMode
    __del__ = lambda self : None;
PivotMode_swigregister = _MaxPlus.PivotMode_swigregister
PivotMode_swigregister(PivotMode)

class INode(ReferenceTarget):
    """The interface to scene graph nodes. In addition to pointers to its a parent and children, a node contains references to the material and object and maintains information about its translation, rotation, and scale in 3D space."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> INode"""
        return _MaxPlus.INode__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(INode self, Wrapper w) -> bool"""
        return _MaxPlus.INode___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(INode self, Wrapper w) -> bool"""
        return _MaxPlus.INode___ne__(self, *args)

    def _CreateWrapper(*args):
        """_CreateWrapper(void * inode_pointer) -> INode"""
        return _MaxPlus.INode__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> INode"""
        return _MaxPlus.INode__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(INode self, void * inode_pointer)"""
        return _MaxPlus.INode__SetValue(self, *args)

    def _ToString(self):
        """_ToString(INode self) -> ::WStr"""
        return _MaxPlus.INode__ToString(self)

    def GetName(self):
        """GetName(INode self) -> wchar_t const *"""
        return _MaxPlus.INode_GetName(self)

    def SetName(self, *args):
        """SetName(INode self, wchar_t const * s)"""
        return _MaxPlus.INode_SetName(self, *args)

    def GetMaterial(self):
        """GetMaterial(INode self) -> Mtl"""
        return _MaxPlus.INode_GetMaterial(self)

    def SetMaterial(self, *args):
        """SetMaterial(INode self, Mtl matl)"""
        return _MaxPlus.INode_SetMaterial(self, *args)

    def GetLayerName(self):
        """GetLayerName(INode self) -> wchar_t const *"""
        return _MaxPlus.INode_GetLayerName(self)

    def GetFaceCount(self, *args):
        """
        GetFaceCount(INode self, TimeValue t=Autodesk::Max::Now()) -> int
        GetFaceCount(INode self) -> int
        """
        return _MaxPlus.INode_GetFaceCount(self, *args)

    def GetVertexCount(self, *args):
        """
        GetVertexCount(INode self, TimeValue t=Autodesk::Max::Now()) -> int
        GetVertexCount(INode self) -> int
        """
        return _MaxPlus.INode_GetVertexCount(self, *args)

    def GetWireColor(self):
        """GetWireColor(INode self) -> Color"""
        return _MaxPlus.INode_GetWireColor(self)

    def SetWireColor(self, *args):
        """SetWireColor(INode self, Color newcolor)"""
        return _MaxPlus.INode_SetWireColor(self, *args)

    def SetHidden(self, *args):
        """SetHidden(INode self, bool onOff)"""
        return _MaxPlus.INode_SetHidden(self, *args)

    def UnhideObjectAndLayer(self, dolayer=True):
        """
        UnhideObjectAndLayer(INode self, bool dolayer=True)
        UnhideObjectAndLayer(INode self)
        """
        return _MaxPlus.INode_UnhideObjectAndLayer(self, dolayer)

    def IsObjectHidden(self):
        """IsObjectHidden(INode self) -> bool"""
        return _MaxPlus.INode_IsObjectHidden(self)

    def IsHidden(self, hflags=0, forRenderer=False):
        """
        IsHidden(INode self, DWORD hflags=0, bool forRenderer=False) -> bool
        IsHidden(INode self, DWORD hflags=0) -> bool
        IsHidden(INode self) -> bool
        """
        return _MaxPlus.INode_IsHidden(self, hflags, forRenderer)

    def IsNodeHidden(self, forRenderer=False):
        """
        IsNodeHidden(INode self, bool forRenderer=False) -> bool
        IsNodeHidden(INode self) -> bool
        """
        return _MaxPlus.INode_IsNodeHidden(self, forRenderer)

    def SetFrozen(self, *args):
        """SetFrozen(INode self, bool onOff)"""
        return _MaxPlus.INode_SetFrozen(self, *args)

    def UnfreezeObjectAndLayer(self, dolayer=True):
        """
        UnfreezeObjectAndLayer(INode self, bool dolayer=True)
        UnfreezeObjectAndLayer(INode self)
        """
        return _MaxPlus.INode_UnfreezeObjectAndLayer(self, dolayer)

    def IsObjectFrozen(self):
        """IsObjectFrozen(INode self) -> bool"""
        return _MaxPlus.INode_IsObjectFrozen(self)

    def IsFrozen(self):
        """IsFrozen(INode self) -> bool"""
        return _MaxPlus.INode_IsFrozen(self)

    def SetSeeThrough(self, *args):
        """SetSeeThrough(INode self, bool onOff)"""
        return _MaxPlus.INode_SetSeeThrough(self, *args)

    def GetSeeThroughObject(self):
        """GetSeeThroughObject(INode self) -> bool"""
        return _MaxPlus.INode_GetSeeThroughObject(self)

    def GetSeeThrough(self):
        """GetSeeThrough(INode self) -> bool"""
        return _MaxPlus.INode_GetSeeThrough(self)

    def SetBoxMode(self, *args):
        """SetBoxMode(INode self, bool onOff)"""
        return _MaxPlus.INode_SetBoxMode(self, *args)

    def GetBoxMode(self):
        """GetBoxMode(INode self) -> bool"""
        return _MaxPlus.INode_GetBoxMode(self)

    def SetBackCull(self, *args):
        """SetBackCull(INode self, bool onOff)"""
        return _MaxPlus.INode_SetBackCull(self, *args)

    def GetBackCull(self):
        """GetBackCull(INode self) -> bool"""
        return _MaxPlus.INode_GetBackCull(self)

    def SetAllEdges(self, *args):
        """SetAllEdges(INode self, bool onOff)"""
        return _MaxPlus.INode_SetAllEdges(self, *args)

    def GetAllEdges(self):
        """GetAllEdges(INode self) -> bool"""
        return _MaxPlus.INode_GetAllEdges(self)

    def SetVertTicks(self, *args):
        """SetVertTicks(INode self, bool onOff)"""
        return _MaxPlus.INode_SetVertTicks(self, *args)

    def GetVertTicks(self):
        """GetVertTicks(INode self) -> bool"""
        return _MaxPlus.INode_GetVertTicks(self)

    def SetTrajectoryON(self, *args):
        """SetTrajectoryON(INode self, bool onOff)"""
        return _MaxPlus.INode_SetTrajectoryON(self, *args)

    def GetTrajectoryON(self):
        """GetTrajectoryON(INode self) -> bool"""
        return _MaxPlus.INode_GetTrajectoryON(self)

    def SetIgnoreExtents(self, *args):
        """SetIgnoreExtents(INode self, bool onOff)"""
        return _MaxPlus.INode_SetIgnoreExtents(self, *args)

    def GetIgnoreExtents(self):
        """GetIgnoreExtents(INode self) -> bool"""
        return _MaxPlus.INode_GetIgnoreExtents(self)

    def SetShowFrozenWithMtl(self, *args):
        """SetShowFrozenWithMtl(INode self, bool onOff)"""
        return _MaxPlus.INode_SetShowFrozenWithMtl(self, *args)

    def GetShowFrozenWithMtl(self):
        """GetShowFrozenWithMtl(INode self) -> bool"""
        return _MaxPlus.INode_GetShowFrozenWithMtl(self)

    def GetNeverDegrade(self):
        """GetNeverDegrade(INode self) -> bool"""
        return _MaxPlus.INode_GetNeverDegrade(self)

    def SetNeverDegrade(self, *args):
        """SetNeverDegrade(INode self, bool onOff)"""
        return _MaxPlus.INode_SetNeverDegrade(self, *args)

    def SetVertexColorMode(self, *args):
        """SetVertexColorMode(INode self, bool onOff)"""
        return _MaxPlus.INode_SetVertexColorMode(self, *args)

    def GetVertexColorMode(self):
        """GetVertexColorMode(INode self) -> bool"""
        return _MaxPlus.INode_GetVertexColorMode(self)

    def SetShadeVertexColors(self, *args):
        """SetShadeVertexColors(INode self, bool onOff)"""
        return _MaxPlus.INode_SetShadeVertexColors(self, *args)

    def GetShadeVertexColors(self):
        """GetShadeVertexColors(INode self) -> bool"""
        return _MaxPlus.INode_GetShadeVertexColors(self)

    def GetVertexColorType(self):
        """GetVertexColorType(INode self) -> int"""
        return _MaxPlus.INode_GetVertexColorType(self)

    def SetVertexColorType(self, *args):
        """SetVertexColorType(INode self, int nvct)"""
        return _MaxPlus.INode_SetVertexColorType(self, *args)

    def GetVertexColorMapChannel(self):
        """GetVertexColorMapChannel(INode self) -> int"""
        return _MaxPlus.INode_GetVertexColorMapChannel(self)

    def SetVertexColorMapChannel(self, *args):
        """SetVertexColorMapChannel(INode self, int vcmc)"""
        return _MaxPlus.INode_SetVertexColorMapChannel(self, *args)

    def GetVisibility(self, *args):
        """
        GetVisibility(INode self, TimeValue t=Autodesk::Max::Now()) -> float
        GetVisibility(INode self) -> float
        """
        return _MaxPlus.INode_GetVisibility(self, *args)

    def SetVisibility(self, *args):
        """
        SetVisibility(INode self, float vis, TimeValue t=Autodesk::Max::Now())
        SetVisibility(INode self, float vis)
        """
        return _MaxPlus.INode_SetVisibility(self, *args)

    def SetVisibilityController(self, *args):
        """SetVisibilityController(INode self, Control cont)"""
        return _MaxPlus.INode_SetVisibilityController(self, *args)

    def GetVisibilityController(self):
        """GetVisibilityController(INode self) -> Control"""
        return _MaxPlus.INode_GetVisibilityController(self)

    def SetRenderable(self, *args):
        """SetRenderable(INode self, bool onOff)"""
        return _MaxPlus.INode_SetRenderable(self, *args)

    def GetRenderable(self):
        """GetRenderable(INode self) -> bool"""
        return _MaxPlus.INode_GetRenderable(self)

    def SetInheritVisibility(self, *args):
        """SetInheritVisibility(INode self, bool onOff)"""
        return _MaxPlus.INode_SetInheritVisibility(self, *args)

    def GetInheritVisibility(self):
        """GetInheritVisibility(INode self) -> bool"""
        return _MaxPlus.INode_GetInheritVisibility(self)

    def SetPrimaryVisibility(self, *args):
        """SetPrimaryVisibility(INode self, bool onOff)"""
        return _MaxPlus.INode_SetPrimaryVisibility(self, *args)

    def GetPrimaryVisibility(self):
        """GetPrimaryVisibility(INode self) -> bool"""
        return _MaxPlus.INode_GetPrimaryVisibility(self)

    def SetSecondaryVisibility(self, *args):
        """SetSecondaryVisibility(INode self, bool onOff)"""
        return _MaxPlus.INode_SetSecondaryVisibility(self, *args)

    def GetSecondaryVisibility(self):
        """GetSecondaryVisibility(INode self) -> bool"""
        return _MaxPlus.INode_GetSecondaryVisibility(self)

    def SetReceiveShadows(self, *args):
        """SetReceiveShadows(INode self, bool onOff)"""
        return _MaxPlus.INode_SetReceiveShadows(self, *args)

    def GetReceiveShadows(self):
        """GetReceiveShadows(INode self) -> bool"""
        return _MaxPlus.INode_GetReceiveShadows(self)

    def SetCastShadows(self, *args):
        """SetCastShadows(INode self, bool onOff)"""
        return _MaxPlus.INode_SetCastShadows(self, *args)

    def GetCastShadows(self):
        """GetCastShadows(INode self) -> bool"""
        return _MaxPlus.INode_GetCastShadows(self)

    def SetApplyAtmospherics(self, *args):
        """SetApplyAtmospherics(INode self, bool onOff)"""
        return _MaxPlus.INode_SetApplyAtmospherics(self, *args)

    def GetApplyAtmospherics(self):
        """GetApplyAtmospherics(INode self) -> bool"""
        return _MaxPlus.INode_GetApplyAtmospherics(self)

    def SetRenderOccluded(self, *args):
        """SetRenderOccluded(INode self, bool onOff)"""
        return _MaxPlus.INode_SetRenderOccluded(self, *args)

    def GetRenderOccluded(self):
        """GetRenderOccluded(INode self) -> bool"""
        return _MaxPlus.INode_GetRenderOccluded(self)

    def GetGBufID(self):
        """GetGBufID(INode self) -> ULONG"""
        return _MaxPlus.INode_GetGBufID(self)

    def SetGBufID(self, *args):
        """SetGBufID(INode self, ULONG id)"""
        return _MaxPlus.INode_SetGBufID(self, *args)

    def GetUserPropBuffer(self, *args):
        """GetUserPropBuffer(INode self, WStr buf)"""
        return _MaxPlus.INode_GetUserPropBuffer(self, *args)

    def SetUserPropBuffer(self, *args):
        """SetUserPropBuffer(INode self, WStr buf)"""
        return _MaxPlus.INode_SetUserPropBuffer(self, *args)

    def SetMotionBlurOnOff(self, *args):
        """SetMotionBlurOnOff(INode self, bool onOff)"""
        return _MaxPlus.INode_SetMotionBlurOnOff(self, *args)

    def GetMotionBlurOnOff(self):
        """GetMotionBlurOnOff(INode self) -> bool"""
        return _MaxPlus.INode_GetMotionBlurOnOff(self)

    def GetImageBlurMultiplier(self, *args):
        """
        GetImageBlurMultiplier(INode self, TimeValue t=Autodesk::Max::Now()) -> float
        GetImageBlurMultiplier(INode self) -> float
        """
        return _MaxPlus.INode_GetImageBlurMultiplier(self, *args)

    def SetImageBlurMultiplier(self, *args):
        """
        SetImageBlurMultiplier(INode self, float m, TimeValue t=Autodesk::Max::Now())
        SetImageBlurMultiplier(INode self, float m)
        """
        return _MaxPlus.INode_SetImageBlurMultiplier(self, *args)

    def SetMotionBlurType(self, *args):
        """SetMotionBlurType(INode self, int kind)"""
        return _MaxPlus.INode_SetMotionBlurType(self, *args)

    def GetMotionBlurType(self):
        """GetMotionBlurType(INode self) -> int"""
        return _MaxPlus.INode_GetMotionBlurType(self)

    def SetGenerateCaustics(self, *args):
        """SetGenerateCaustics(INode self, bool onOff)"""
        return _MaxPlus.INode_SetGenerateCaustics(self, *args)

    def GetGenerateCaustics(self):
        """GetGenerateCaustics(INode self) -> bool"""
        return _MaxPlus.INode_GetGenerateCaustics(self)

    def SetReceiveCaustics(self, *args):
        """SetReceiveCaustics(INode self, bool onOff)"""
        return _MaxPlus.INode_SetReceiveCaustics(self, *args)

    def GetReceiveCaustics(self):
        """GetReceiveCaustics(INode self) -> bool"""
        return _MaxPlus.INode_GetReceiveCaustics(self)

    def SetGenerateGlobalIllum(self, *args):
        """SetGenerateGlobalIllum(INode self, bool onOff)"""
        return _MaxPlus.INode_SetGenerateGlobalIllum(self, *args)

    def GetGenerateGlobalIllum(self):
        """GetGenerateGlobalIllum(INode self) -> bool"""
        return _MaxPlus.INode_GetGenerateGlobalIllum(self)

    def SetReceiveGlobalIllum(self, *args):
        """SetReceiveGlobalIllum(INode self, bool onOff)"""
        return _MaxPlus.INode_SetReceiveGlobalIllum(self, *args)

    def GetReceiveGlobalIllum(self):
        """GetReceiveGlobalIllum(INode self) -> bool"""
        return _MaxPlus.INode_GetReceiveGlobalIllum(self)

    def GetNumChildren(self):
        """GetNumChildren(INode self) -> int"""
        return _MaxPlus.INode_GetNumChildren(self)

    def GetParent(self):
        """GetParent(INode self) -> INode"""
        return _MaxPlus.INode_GetParent(self)

    def SetParent(self, *args):
        """
        SetParent(INode self, INode node, TimeValue t=Autodesk::Max::Now())
        SetParent(INode self, INode node)
        """
        return _MaxPlus.INode_SetParent(self, *args)

    def AttachChild(self, *args):
        """
        AttachChild(INode self, INode node, int keepTM=1)
        AttachChild(INode self, INode node)
        """
        return _MaxPlus.INode_AttachChild(self, *args)

    def Detach(self, *args):
        """
        Detach(INode self, TimeValue t=Autodesk::Max::Now(), int keepTM=1)
        Detach(INode self, TimeValue t=Autodesk::Max::Now())
        Detach(INode self)
        """
        return _MaxPlus.INode_Detach(self, *args)

    def GetChild(self, *args):
        """GetChild(INode self, int i) -> INode"""
        return _MaxPlus.INode_GetChild(self, *args)

    def GetAffectChildren():
        """GetAffectChildren() -> bool"""
        return _MaxPlus.INode_GetAffectChildren()

    GetAffectChildren = staticmethod(GetAffectChildren)
    def SetAffectChildren(*args):
        """SetAffectChildren(bool bAffectChildren)"""
        return _MaxPlus.INode_SetAffectChildren(*args)

    SetAffectChildren = staticmethod(SetAffectChildren)
    def Delete(self, *args):
        """
        Delete(INode self, TimeValue t=Autodesk::Max::Now(), int keepChildPosition=False)
        Delete(INode self, TimeValue t=Autodesk::Max::Now())
        Delete(INode self)
        """
        return _MaxPlus.INode_Delete(self, *args)

    def DeleteNodes(*args):
        """
        DeleteNodes(INodeTab aNodes, bool aKeepChildTM=True, bool aRedraw=True, bool overrideSlaveTM=False) -> unsigned int
        DeleteNodes(INodeTab aNodes, bool aKeepChildTM=True, bool aRedraw=True) -> unsigned int
        DeleteNodes(INodeTab aNodes, bool aKeepChildTM=True) -> unsigned int
        DeleteNodes(INodeTab aNodes) -> unsigned int
        """
        return _MaxPlus.INode_DeleteNodes(*args)

    DeleteNodes = staticmethod(DeleteNodes)
    def GetSelected(self):
        """GetSelected(INode self) -> bool"""
        return _MaxPlus.INode_GetSelected(self)

    def Select(self, replaceSelection=False):
        """
        Select(INode self, bool replaceSelection=False)
        Select(INode self)
        """
        return _MaxPlus.INode_Select(self, replaceSelection)

    def Deselect(self):
        """Deselect(INode self)"""
        return _MaxPlus.INode_Deselect(self)

    def FlashNodes(*args):
        """FlashNodes(INodeTab nodes)"""
        return _MaxPlus.INode_FlashNodes(*args)

    FlashNodes = staticmethod(FlashNodes)
    def SetTargetNodePair(self, *args):
        """SetTargetNodePair(INode self, bool onOff)"""
        return _MaxPlus.INode_SetTargetNodePair(self, *args)

    def GetTargetNodePair(self):
        """GetTargetNodePair(INode self) -> bool"""
        return _MaxPlus.INode_GetTargetNodePair(self)

    def GetHandle(self):
        """GetHandle(INode self) -> ULONG"""
        return _MaxPlus.INode_GetHandle(self)

    def GetIsRoot(self):
        """GetIsRoot(INode self) -> bool"""
        return _MaxPlus.INode_GetIsRoot(self)

    def IsDependent(self):
        """IsDependent(INode self) -> bool"""
        return _MaxPlus.INode_IsDependent(self)

    def IsActiveGrid(self):
        """IsActiveGrid(INode self) -> bool"""
        return _MaxPlus.INode_IsActiveGrid(self)

    def IsTarget(self):
        """IsTarget(INode self) -> bool"""
        return _MaxPlus.INode_IsTarget(self)

    def SetIsTarget(self, *args):
        """SetIsTarget(INode self, bool b)"""
        return _MaxPlus.INode_SetIsTarget(self, *args)

    def FlagForeground(self, *args):
        """
        FlagForeground(INode self, TimeValue t, bool notify=True)
        FlagForeground(INode self, TimeValue t)
        """
        return _MaxPlus.INode_FlagForeground(self, *args)

    def GetTarget(self):
        """GetTarget(INode self) -> INode"""
        return _MaxPlus.INode_GetTarget(self)

    def GetLookatNode(self):
        """GetLookatNode(INode self) -> INode"""
        return _MaxPlus.INode_GetLookatNode(self)

    def GetParentTM(self, *args):
        """
        GetParentTM(INode self, TimeValue t=Autodesk::Max::Now()) -> Matrix3
        GetParentTM(INode self) -> Matrix3
        """
        return _MaxPlus.INode_GetParentTM(self, *args)

    def GetINodeByName(*args):
        """GetINodeByName(wchar_t const * name) -> INode"""
        return _MaxPlus.INode_GetINodeByName(*args)

    GetINodeByName = staticmethod(GetINodeByName)
    def GetINodeByHandle(*args):
        """GetINodeByHandle(ULONG handle) -> INode"""
        return _MaxPlus.INode_GetINodeByHandle(*args)

    GetINodeByHandle = staticmethod(GetINodeByHandle)
    def GetINodeFromRenderID(*args):
        """GetINodeFromRenderID(UWORD id) -> INode"""
        return _MaxPlus.INode_GetINodeFromRenderID(*args)

    GetINodeFromRenderID = staticmethod(GetINodeFromRenderID)
    def FindNodeFromBaseObject(*args):
        """FindNodeFromBaseObject(ReferenceTarget obj) -> INode"""
        return _MaxPlus.INode_FindNodeFromBaseObject(*args)

    FindNodeFromBaseObject = staticmethod(FindNodeFromBaseObject)
    def SetNodeAttribute(*args):
        """
        SetNodeAttribute(INodeTab nodes, int whatAttrib, int onOff)
        SetNodeAttribute(INode node, int whatAttrib, int onOff)
        """
        return _MaxPlus.INode_SetNodeAttribute(*args)

    SetNodeAttribute = staticmethod(SetNodeAttribute)
    def NodeColorPicker(*args):
        """NodeColorPicker(HWND hWnd, DWORD & col) -> bool"""
        return _MaxPlus.INode_NodeColorPicker(*args)

    NodeColorPicker = staticmethod(NodeColorPicker)
    def EvalWorldState(self, *args):
        """
        EvalWorldState(INode self, TimeValue time=Autodesk::Max::Now(), bool evalHidden=True) -> ObjectState
        EvalWorldState(INode self, TimeValue time=Autodesk::Max::Now()) -> ObjectState
        EvalWorldState(INode self) -> ObjectState
        """
        return _MaxPlus.INode_EvalWorldState(self, *args)

    def GetObject(self):
        """GetObject(INode self) -> Object"""
        return _MaxPlus.INode_GetObject(self)

    def SetObject(self, *args):
        """SetObject(INode self, Object obj)"""
        return _MaxPlus.INode_SetObject(self, *args)

    def GetBaseObject(self):
        """GetBaseObject(INode self) -> Object"""
        return _MaxPlus.INode_GetBaseObject(self)

    def SetBaseObject(self, *args):
        """SetBaseObject(INode self, Object obj)"""
        return _MaxPlus.INode_SetBaseObject(self, *args)

    def DisposeTemporary(self):
        """DisposeTemporary(INode self)"""
        return _MaxPlus.INode_DisposeTemporary(self)

    def GetActualINode(self):
        """GetActualINode(INode self) -> INode"""
        return _MaxPlus.INode_GetActualINode(self)

    def GetObjectRef(self):
        """GetObjectRef(INode self) -> Object"""
        return _MaxPlus.INode_GetObjectRef(self)

    def SetObjectRef(self, *args):
        """SetObjectRef(INode self, Object o)"""
        return _MaxPlus.INode_SetObjectRef(self, *args)

    def GetObjOrWSMRef(self):
        """GetObjOrWSMRef(INode self) -> Object"""
        return _MaxPlus.INode_GetObjOrWSMRef(self)

    def InvalidateObjectCache(self):
        """InvalidateObjectCache(INode self)"""
        return _MaxPlus.INode_InvalidateObjectCache(self)

    def BindToTarget(self, *args):
        """BindToTarget(INode self, INode targNode) -> bool"""
        return _MaxPlus.INode_BindToTarget(self, *args)

    def SetNodeTMRelConstPlane(self, *args):
        """SetNodeTMRelConstPlane(INode self, Matrix3 mat)"""
        return _MaxPlus.INode_SetNodeTMRelConstPlane(self, *args)

    def Collapse(self, noWarning=False):
        """
        Collapse(INode self, bool noWarning=False)
        Collapse(INode self)
        """
        return _MaxPlus.INode_Collapse(self, noWarning)

    def CollapseTo(self, *args):
        """
        CollapseTo(INode self, int modIndex, bool noWarning=False) -> bool
        CollapseTo(INode self, int modIndex) -> bool
        """
        return _MaxPlus.INode_CollapseTo(self, *args)

    def Convert(self, *args):
        """Convert(INode self, Class_ID cid) -> bool"""
        return _MaxPlus.INode_Convert(self, *args)

    def GetDerivedObject(self):
        """GetDerivedObject(INode self) -> IDerivedObject"""
        return _MaxPlus.INode_GetDerivedObject(self)

    def AddModifier(self, *args):
        """AddModifier(INode self, Modifier m) -> Autodesk::Max::ResCode::Type"""
        return _MaxPlus.INode_AddModifier(self, *args)

    def InsertModifier(self, *args):
        """InsertModifier(INode self, Modifier m, int n) -> Autodesk::Max::ResCode::Type"""
        return _MaxPlus.INode_InsertModifier(self, *args)

    def DeleteModifier(self, *args):
        """DeleteModifier(INode self, int n) -> Autodesk::Max::ResCode::Type"""
        return _MaxPlus.INode_DeleteModifier(self, *args)

    def GetNumModifiers(self):
        """GetNumModifiers(INode self) -> int"""
        return _MaxPlus.INode_GetNumModifiers(self)

    def GetModifier(self, *args):
        """GetModifier(INode self, int n) -> Modifier"""
        return _MaxPlus.INode_GetModifier(self, *args)

    def GetTMController(self):
        """GetTMController(INode self) -> Control"""
        return _MaxPlus.INode_GetTMController(self)

    def SetTMController(self, *args):
        """SetTMController(INode self, Control m3cont) -> bool"""
        return _MaxPlus.INode_SetTMController(self, *args)

    def Move(self, *args):
        """
        Move(INode self, Point3 val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True, Autodesk::Max::PivotMode::Type pivMode=NoPivot, 
            bool ignoreLocks=False)
        Move(INode self, Point3 val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True, Autodesk::Max::PivotMode::Type pivMode=NoPivot)
        Move(INode self, Point3 val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True)
        Move(INode self, Point3 val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False)
        Move(INode self, Point3 val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity())
        Move(INode self, Point3 val, TimeValue t=Autodesk::Max::Now())
        Move(INode self, Point3 val)
        """
        return _MaxPlus.INode_Move(self, *args)

    def Rotate(self, *args):
        """
        Rotate(INode self, Quat val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True, Autodesk::Max::PivotMode::Type pivMode=NoPivot, 
            bool ignoreLocks=False)
        Rotate(INode self, Quat val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True, Autodesk::Max::PivotMode::Type pivMode=NoPivot)
        Rotate(INode self, Quat val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True)
        Rotate(INode self, Quat val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False)
        Rotate(INode self, Quat val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity())
        Rotate(INode self, Quat val, TimeValue t=Autodesk::Max::Now())
        Rotate(INode self, Quat val)
        Rotate(INode self, AngAxis val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True, Autodesk::Max::PivotMode::Type pivMode=NoPivot, 
            bool ignoreLocks=False)
        Rotate(INode self, AngAxis val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True, Autodesk::Max::PivotMode::Type pivMode=NoPivot)
        Rotate(INode self, AngAxis val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True)
        Rotate(INode self, AngAxis val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False)
        Rotate(INode self, AngAxis val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity())
        Rotate(INode self, AngAxis val, TimeValue t=Autodesk::Max::Now())
        Rotate(INode self, AngAxis val)
        """
        return _MaxPlus.INode_Rotate(self, *args)

    def Scale(self, *args):
        """
        Scale(INode self, Point3 val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True, Autodesk::Max::PivotMode::Type pivMode=NoPivot, 
            bool ignoreLocks=False)
        Scale(INode self, Point3 val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True, Autodesk::Max::PivotMode::Type pivMode=NoPivot)
        Scale(INode self, Point3 val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False, bool affectKids=True)
        Scale(INode self, Point3 val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity(), 
            bool localOrigin=False)
        Scale(INode self, Point3 val, TimeValue t=Autodesk::Max::Now(), Matrix3 tmAxis=Autodesk::Max::Identity())
        Scale(INode self, Point3 val, TimeValue t=Autodesk::Max::Now())
        Scale(INode self, Point3 val)
        """
        return _MaxPlus.INode_Scale(self, *args)

    def GetPositionX(self, *args):
        """
        GetPositionX(INode self, TimeValue t=Autodesk::Max::Now()) -> float
        GetPositionX(INode self) -> float
        """
        return _MaxPlus.INode_GetPositionX(self, *args)

    def GetPositionY(self, *args):
        """
        GetPositionY(INode self, TimeValue t=Autodesk::Max::Now()) -> float
        GetPositionY(INode self) -> float
        """
        return _MaxPlus.INode_GetPositionY(self, *args)

    def GetPositionZ(self, *args):
        """
        GetPositionZ(INode self, TimeValue t=Autodesk::Max::Now()) -> float
        GetPositionZ(INode self) -> float
        """
        return _MaxPlus.INode_GetPositionZ(self, *args)

    def SetPositionX(self, *args):
        """
        SetPositionX(INode self, float x, TimeValue t=Autodesk::Max::Now())
        SetPositionX(INode self, float x)
        """
        return _MaxPlus.INode_SetPositionX(self, *args)

    def SetPositionY(self, *args):
        """
        SetPositionY(INode self, float y, TimeValue t=Autodesk::Max::Now())
        SetPositionY(INode self, float y)
        """
        return _MaxPlus.INode_SetPositionY(self, *args)

    def SetPositionZ(self, *args):
        """
        SetPositionZ(INode self, float z, TimeValue t=Autodesk::Max::Now())
        SetPositionZ(INode self, float z)
        """
        return _MaxPlus.INode_SetPositionZ(self, *args)

    def GetWorldPosition(self, *args):
        """
        GetWorldPosition(INode self, TimeValue t=Autodesk::Max::Now()) -> Point3
        GetWorldPosition(INode self) -> Point3
        """
        return _MaxPlus.INode_GetWorldPosition(self, *args)

    def GetWorldRotation(self, *args):
        """
        GetWorldRotation(INode self, TimeValue t=Autodesk::Max::Now()) -> Quat
        GetWorldRotation(INode self) -> Quat
        """
        return _MaxPlus.INode_GetWorldRotation(self, *args)

    def GetWorldScale(self, *args):
        """
        GetWorldScale(INode self, TimeValue t=Autodesk::Max::Now()) -> Point3
        GetWorldScale(INode self) -> Point3
        """
        return _MaxPlus.INode_GetWorldScale(self, *args)

    def GetWorldTM(self, *args):
        """
        GetWorldTM(INode self, TimeValue t=Autodesk::Max::Now()) -> Matrix3
        GetWorldTM(INode self) -> Matrix3
        """
        return _MaxPlus.INode_GetWorldTM(self, *args)

    def SetWorldPosition(self, *args):
        """
        SetWorldPosition(INode self, Point3 val, TimeValue t=Autodesk::Max::Now())
        SetWorldPosition(INode self, Point3 val)
        """
        return _MaxPlus.INode_SetWorldPosition(self, *args)

    def SetWorldRotation(self, *args):
        """
        SetWorldRotation(INode self, Quat val, TimeValue t=Autodesk::Max::Now())
        SetWorldRotation(INode self, Quat val)
        """
        return _MaxPlus.INode_SetWorldRotation(self, *args)

    def SetWorldScale(self, *args):
        """
        SetWorldScale(INode self, Point3 val, TimeValue t=Autodesk::Max::Now())
        SetWorldScale(INode self, Point3 val)
        """
        return _MaxPlus.INode_SetWorldScale(self, *args)

    def SetWorldTM(self, *args):
        """
        SetWorldTM(INode self, Matrix3 val, TimeValue t=Autodesk::Max::Now())
        SetWorldTM(INode self, Matrix3 val)
        """
        return _MaxPlus.INode_SetWorldTM(self, *args)

    def GetLocalPosition(self, *args):
        """
        GetLocalPosition(INode self, TimeValue t=Autodesk::Max::Now()) -> Point3
        GetLocalPosition(INode self) -> Point3
        """
        return _MaxPlus.INode_GetLocalPosition(self, *args)

    def GetLocalRotation(self, *args):
        """
        GetLocalRotation(INode self, TimeValue t=Autodesk::Max::Now()) -> Quat
        GetLocalRotation(INode self) -> Quat
        """
        return _MaxPlus.INode_GetLocalRotation(self, *args)

    def GetLocalScale(self, *args):
        """
        GetLocalScale(INode self, TimeValue t=Autodesk::Max::Now()) -> Point3
        GetLocalScale(INode self) -> Point3
        """
        return _MaxPlus.INode_GetLocalScale(self, *args)

    def GetLocalTM(self, *args):
        """
        GetLocalTM(INode self, TimeValue t=Autodesk::Max::Now()) -> Matrix3
        GetLocalTM(INode self) -> Matrix3
        """
        return _MaxPlus.INode_GetLocalTM(self, *args)

    def SetLocalPosition(self, *args):
        """
        SetLocalPosition(INode self, Point3 val, TimeValue t=Autodesk::Max::Now())
        SetLocalPosition(INode self, Point3 val)
        """
        return _MaxPlus.INode_SetLocalPosition(self, *args)

    def SetLocalRotation(self, *args):
        """
        SetLocalRotation(INode self, Quat val, TimeValue t=Autodesk::Max::Now())
        SetLocalRotation(INode self, Quat val)
        """
        return _MaxPlus.INode_SetLocalRotation(self, *args)

    def SetLocalScale(self, *args):
        """
        SetLocalScale(INode self, Point3 val, TimeValue t=Autodesk::Max::Now())
        SetLocalScale(INode self, Point3 val)
        """
        return _MaxPlus.INode_SetLocalScale(self, *args)

    def SetLocalTM(self, *args):
        """
        SetLocalTM(INode self, Matrix3 val, TimeValue t=Autodesk::Max::Now())
        SetLocalTM(INode self, Matrix3 val)
        """
        return _MaxPlus.INode_SetLocalTM(self, *args)

    def SetObjOffsetPosition(self, *args):
        """SetObjOffsetPosition(INode self, Point3 p)"""
        return _MaxPlus.INode_SetObjOffsetPosition(self, *args)

    def GetObjOffsetPosition(self):
        """GetObjOffsetPosition(INode self) -> Point3"""
        return _MaxPlus.INode_GetObjOffsetPosition(self)

    def SetObjOffsetRotation(self, *args):
        """SetObjOffsetRotation(INode self, Quat q)"""
        return _MaxPlus.INode_SetObjOffsetRotation(self, *args)

    def GetObjOffsetRotation(self):
        """GetObjOffsetRotation(INode self) -> Quat"""
        return _MaxPlus.INode_GetObjOffsetRotation(self)

    def SetObjOffsetScale(self, *args):
        """SetObjOffsetScale(INode self, ScaleValue sv)"""
        return _MaxPlus.INode_SetObjOffsetScale(self, *args)

    def GetObjOffsetScale(self):
        """GetObjOffsetScale(INode self) -> ScaleValue"""
        return _MaxPlus.INode_GetObjOffsetScale(self)

    def InvalidateTreeTM(self):
        """InvalidateTreeTM(INode self)"""
        return _MaxPlus.INode_InvalidateTreeTM(self)

    def InvalidateTM(self):
        """InvalidateTM(INode self)"""
        return _MaxPlus.INode_InvalidateTM(self)

    def InvalidateWS(self):
        """InvalidateWS(INode self)"""
        return _MaxPlus.INode_InvalidateWS(self)

    def InvalidateRect(self, *args):
        """
        InvalidateRect(INode self, TimeValue t=Autodesk::Max::Now(), bool oldRect=False)
        InvalidateRect(INode self, TimeValue t=Autodesk::Max::Now())
        InvalidateRect(INode self)
        """
        return _MaxPlus.INode_InvalidateRect(self, *args)

    def GetObjectTM(self, *args):
        """
        GetObjectTM(INode self, TimeValue time=Autodesk::Max::Now()) -> Matrix3
        GetObjectTM(INode self) -> Matrix3
        """
        return _MaxPlus.INode_GetObjectTM(self, *args)

    def GetObjTMBeforeWSM(self, *args):
        """
        GetObjTMBeforeWSM(INode self, TimeValue time=Autodesk::Max::Now()) -> Matrix3
        GetObjTMBeforeWSM(INode self) -> Matrix3
        """
        return _MaxPlus.INode_GetObjTMBeforeWSM(self, *args)

    def GetObjTMAfterWSM(self, *args):
        """
        GetObjTMAfterWSM(INode self, TimeValue time=Autodesk::Max::Now()) -> Matrix3
        GetObjTMAfterWSM(INode self) -> Matrix3
        """
        return _MaxPlus.INode_GetObjTMAfterWSM(self, *args)

    def GetTransformLock(self, *args):
        """GetTransformLock(INode self, int type, int axis) -> bool"""
        return _MaxPlus.INode_GetTransformLock(self, *args)

    def SetTransformLock(self, *args):
        """SetTransformLock(INode self, int type, int axis, bool onOff)"""
        return _MaxPlus.INode_SetTransformLock(self, *args)

    def GetTargetTM(self, *args):
        """GetTargetTM(INode self, TimeValue t, Matrix3 m) -> bool"""
        return _MaxPlus.INode_GetTargetTM(self, *args)

    def CenterPivot(self, *args):
        """CenterPivot(INode self, TimeValue t, bool moveObject)"""
        return _MaxPlus.INode_CenterPivot(self, *args)

    def AlignPivot(self, *args):
        """AlignPivot(INode self, TimeValue t, bool moveObject)"""
        return _MaxPlus.INode_AlignPivot(self, *args)

    def WorldAlignPivot(self, *args):
        """WorldAlignPivot(INode self, TimeValue t, bool moveObject)"""
        return _MaxPlus.INode_WorldAlignPivot(self, *args)

    def AlignToParent(self, *args):
        """AlignToParent(INode self, TimeValue t)"""
        return _MaxPlus.INode_AlignToParent(self, *args)

    def AlignToWorld(self, *args):
        """AlignToWorld(INode self, TimeValue t)"""
        return _MaxPlus.INode_AlignToWorld(self, *args)

    def ResetTransform(self, *args):
        """ResetTransform(INode self, TimeValue t, bool scaleOnly)"""
        return _MaxPlus.INode_ResetTransform(self, *args)

    def ResetPivot(self, *args):
        """ResetPivot(INode self, TimeValue t)"""
        return _MaxPlus.INode_ResetPivot(self, *args)

    def MayResetTransform(self):
        """MayResetTransform(INode self) -> bool"""
        return _MaxPlus.INode_MayResetTransform(self)

    def GetPivotMode():
        """GetPivotMode() -> int"""
        return _MaxPlus.INode_GetPivotMode()

    GetPivotMode = staticmethod(GetPivotMode)
    def SetPivotMode(*args):
        """SetPivotMode(int pivMode)"""
        return _MaxPlus.INode_SetPivotMode(*args)

    SetPivotMode = staticmethod(SetPivotMode)
    def GetPositionTaskWeight(self):
        """GetPositionTaskWeight(INode self) -> float"""
        return _MaxPlus.INode_GetPositionTaskWeight(self)

    def SetPositionTaskWeight(self, *args):
        """SetPositionTaskWeight(INode self, float w)"""
        return _MaxPlus.INode_SetPositionTaskWeight(self, *args)

    def GetRotationTaskWeight(self):
        """GetRotationTaskWeight(INode self) -> float"""
        return _MaxPlus.INode_GetRotationTaskWeight(self)

    def SetRotationTaskWeight(self, *args):
        """SetRotationTaskWeight(INode self, float w)"""
        return _MaxPlus.INode_SetRotationTaskWeight(self, *args)

    def GetTaskAxisState(self, *args):
        """GetTaskAxisState(INode self, int which, int axis) -> bool"""
        return _MaxPlus.INode_GetTaskAxisState(self, *args)

    def SetTaskAxisState(self, *args):
        """SetTaskAxisState(INode self, int which, int axis, bool onOff)"""
        return _MaxPlus.INode_SetTaskAxisState(self, *args)

    def GetTaskAxisStateBits(self):
        """GetTaskAxisStateBits(INode self) -> DWORD"""
        return _MaxPlus.INode_GetTaskAxisStateBits(self)

    def GetXRefFile(self, *args):
        """GetXRefFile(INode self, int i) -> Asset"""
        return _MaxPlus.INode_GetXRefFile(self, *args)

    def SetXRefFile(self, *args):
        """SetXRefFile(INode self, int i, Asset file, bool reload)"""
        return _MaxPlus.INode_SetXRefFile(self, *args)

    def GetXRefFileCount(self):
        """GetXRefFileCount(INode self) -> int"""
        return _MaxPlus.INode_GetXRefFileCount(self)

    def AddNewXRefFile(self, *args):
        """
        AddNewXRefFile(INode self, Asset file, bool loadNow=True, bool hideInManagerUI=False) -> bool
        AddNewXRefFile(INode self, Asset file, bool loadNow=True) -> bool
        AddNewXRefFile(INode self, Asset file) -> bool
        """
        return _MaxPlus.INode_AddNewXRefFile(self, *args)

    def DeleteXRefFile(self, *args):
        """DeleteXRefFile(INode self, int i) -> bool"""
        return _MaxPlus.INode_DeleteXRefFile(self, *args)

    def BindXRefFile(self, *args):
        """BindXRefFile(INode self, int i) -> bool"""
        return _MaxPlus.INode_BindXRefFile(self, *args)

    def DeleteAllXRefs(self):
        """DeleteAllXRefs(INode self)"""
        return _MaxPlus.INode_DeleteAllXRefs(self)

    def ReloadXRef(self, *args):
        """ReloadXRef(INode self, int i) -> bool"""
        return _MaxPlus.INode_ReloadXRef(self, *args)

    def FlagXrefChanged(self, *args):
        """FlagXrefChanged(INode self, int i)"""
        return _MaxPlus.INode_FlagXrefChanged(self, *args)

    def UpdateChangedXRefs(self, redraw=True):
        """
        UpdateChangedXRefs(INode self, bool redraw=True) -> bool
        UpdateChangedXRefs(INode self) -> bool
        """
        return _MaxPlus.INode_UpdateChangedXRefs(self, redraw)

    def GetXRefTree(self, *args):
        """GetXRefTree(INode self, int i) -> INode"""
        return _MaxPlus.INode_GetXRefTree(self, *args)

    def GetXRefParent(self, *args):
        """GetXRefParent(INode self, int i) -> INode"""
        return _MaxPlus.INode_GetXRefParent(self, *args)

    def SetXRefParent(self, *args):
        """
        SetXRefParent(INode self, int i, INode par, bool autoOffset=True)
        SetXRefParent(INode self, int i, INode par)
        """
        return _MaxPlus.INode_SetXRefParent(self, *args)

    def GetXRefFlags(self, *args):
        """GetXRefFlags(INode self, int i) -> DWORD"""
        return _MaxPlus.INode_GetXRefFlags(self, *args)

    def SetXRefFlags(self, *args):
        """SetXRefFlags(INode self, int i, DWORD flag, bool onOff)"""
        return _MaxPlus.INode_SetXRefFlags(self, *args)

    def IsSceneXRef(self):
        """IsSceneXRef(INode self) -> bool"""
        return _MaxPlus.INode_IsSceneXRef(self)

    def ShowBone(self, *args):
        """ShowBone(INode self, bool boneVis)"""
        return _MaxPlus.INode_ShowBone(self, *args)

    def BoneAsLine(self, *args):
        """BoneAsLine(INode self, bool onOff)"""
        return _MaxPlus.INode_BoneAsLine(self, *args)

    def IsBoneShowing(self):
        """IsBoneShowing(INode self) -> bool"""
        return _MaxPlus.INode_IsBoneShowing(self)

    def IsBoneOnly(self):
        """IsBoneOnly(INode self) -> bool"""
        return _MaxPlus.INode_IsBoneOnly(self)

    def SetBoneNodeOnOff(self, *args):
        """SetBoneNodeOnOff(INode self, bool onOff, TimeValue t)"""
        return _MaxPlus.INode_SetBoneNodeOnOff(self, *args)

    def SetBoneAutoAlign(self, *args):
        """SetBoneAutoAlign(INode self, bool onOff)"""
        return _MaxPlus.INode_SetBoneAutoAlign(self, *args)

    def SetBoneFreezeLen(self, *args):
        """SetBoneFreezeLen(INode self, bool onOff)"""
        return _MaxPlus.INode_SetBoneFreezeLen(self, *args)

    def SetBoneScaleType(self, *args):
        """SetBoneScaleType(INode self, int which)"""
        return _MaxPlus.INode_SetBoneScaleType(self, *args)

    def SetBoneAxis(self, *args):
        """SetBoneAxis(INode self, int which)"""
        return _MaxPlus.INode_SetBoneAxis(self, *args)

    def SetBoneAxisFlip(self, *args):
        """SetBoneAxisFlip(INode self, bool onOff)"""
        return _MaxPlus.INode_SetBoneAxisFlip(self, *args)

    def GetBoneNodeOnOff(self):
        """GetBoneNodeOnOff(INode self) -> bool"""
        return _MaxPlus.INode_GetBoneNodeOnOff(self)

    def GetBoneNodeOnOff_T(self, *args):
        """GetBoneNodeOnOff_T(INode self, TimeValue t) -> bool"""
        return _MaxPlus.INode_GetBoneNodeOnOff_T(self, *args)

    def GetBoneAutoAlign(self):
        """GetBoneAutoAlign(INode self) -> bool"""
        return _MaxPlus.INode_GetBoneAutoAlign(self)

    def GetBoneFreezeLen(self):
        """GetBoneFreezeLen(INode self) -> bool"""
        return _MaxPlus.INode_GetBoneFreezeLen(self)

    def GetBoneScaleType(self):
        """GetBoneScaleType(INode self) -> int"""
        return _MaxPlus.INode_GetBoneScaleType(self)

    def GetBoneAxis(self):
        """GetBoneAxis(INode self) -> int"""
        return _MaxPlus.INode_GetBoneAxis(self)

    def GetBoneAxisFlip(self):
        """GetBoneAxisFlip(INode self) -> bool"""
        return _MaxPlus.INode_GetBoneAxisFlip(self)

    def RealignBoneToChild(self, *args):
        """RealignBoneToChild(INode self, TimeValue t)"""
        return _MaxPlus.INode_RealignBoneToChild(self, *args)

    def ResetBoneStretch(self, *args):
        """ResetBoneStretch(INode self, TimeValue t)"""
        return _MaxPlus.INode_ResetBoneStretch(self, *args)

    def GetStretchTM(self, *args):
        """GetStretchTM(INode self, TimeValue t) -> Matrix3"""
        return _MaxPlus.INode_GetStretchTM(self, *args)

    def CopyProperties(self, *args):
        """CopyProperties(INode self, INode other)"""
        return _MaxPlus.INode_CopyProperties(self, *args)

    def CreateCopy(self):
        """CreateCopy(INode self) -> INode"""
        return _MaxPlus.INode_CreateCopy(self)

    def CreateInstance(self):
        """CreateInstance(INode self) -> INode"""
        return _MaxPlus.INode_CreateInstance(self)

    def CreateReference(self):
        """CreateReference(INode self) -> INode"""
        return _MaxPlus.INode_CreateReference(self)

    def CreateTreeCopy(self):
        """CreateTreeCopy(INode self) -> INode"""
        return _MaxPlus.INode_CreateTreeCopy(self)

    def CreateTreeInstance(self):
        """CreateTreeInstance(INode self) -> INode"""
        return _MaxPlus.INode_CreateTreeInstance(self)

    def CreateTreeReference(self):
        """CreateTreeReference(INode self) -> INode"""
        return _MaxPlus.INode_CreateTreeReference(self)

    def SetAssemblyMember(self, *args):
        """SetAssemblyMember(INode self, bool b)"""
        return _MaxPlus.INode_SetAssemblyMember(self, *args)

    def SetAssemblyMemberOpen(self, *args):
        """SetAssemblyMemberOpen(INode self, bool b)"""
        return _MaxPlus.INode_SetAssemblyMemberOpen(self, *args)

    def SetAssemblyHead(self, *args):
        """SetAssemblyHead(INode self, bool b)"""
        return _MaxPlus.INode_SetAssemblyHead(self, *args)

    def SetAssemblyHeadOpen(self, *args):
        """SetAssemblyHeadOpen(INode self, bool b)"""
        return _MaxPlus.INode_SetAssemblyHeadOpen(self, *args)

    def IsAssemblyMember(self):
        """IsAssemblyMember(INode self) -> bool"""
        return _MaxPlus.INode_IsAssemblyMember(self)

    def IsAssemblyHead(self):
        """IsAssemblyHead(INode self) -> bool"""
        return _MaxPlus.INode_IsAssemblyHead(self)

    def IsAssemblyMemberOpen(self):
        """IsAssemblyMemberOpen(INode self) -> bool"""
        return _MaxPlus.INode_IsAssemblyMemberOpen(self)

    def IsAssemblyHeadOpen(self):
        """IsAssemblyHeadOpen(INode self) -> bool"""
        return _MaxPlus.INode_IsAssemblyHeadOpen(self)

    def IsAssemblyHeadMemberOf(self, *args):
        """IsAssemblyHeadMemberOf(INode self, INode asmHeadNode) -> bool"""
        return _MaxPlus.INode_IsAssemblyHeadMemberOf(self, *args)

    def SetAssemblyBBoxDisplay(self, *args):
        """SetAssemblyBBoxDisplay(INode self, bool b)"""
        return _MaxPlus.INode_SetAssemblyBBoxDisplay(self, *args)

    def GetAssemblyBBoxDisplay(self):
        """GetAssemblyBBoxDisplay(INode self) -> bool"""
        return _MaxPlus.INode_GetAssemblyBBoxDisplay(self)

    def GroupNodes(*args):
        """
        GroupNodes(INodeTab nodes, WStr name, bool selGroup) -> INode
        GroupNodes(INodeTab nodes, WStr name) -> INode
        GroupNodes(INodeTab nodes) -> INode
        """
        return _MaxPlus.INode_GroupNodes(*args)

    GroupNodes = staticmethod(GroupNodes)
    def UngroupNodes(*args):
        """
        UngroupNodes(INodeTab nodes)
        UngroupNodes()
        """
        return _MaxPlus.INode_UngroupNodes(*args)

    UngroupNodes = staticmethod(UngroupNodes)
    def ExplodeNodes(*args):
        """
        ExplodeNodes(INodeTab nodes)
        ExplodeNodes()
        """
        return _MaxPlus.INode_ExplodeNodes(*args)

    ExplodeNodes = staticmethod(ExplodeNodes)
    def OpenGroup(*args):
        """
        OpenGroup(INodeTab nodes, bool clearSel=True)
        OpenGroup(INodeTab nodes)
        OpenGroup(bool clearSel=True)
        OpenGroup()
        """
        return _MaxPlus.INode_OpenGroup(*args)

    OpenGroup = staticmethod(OpenGroup)
    def CloseGroup(*args):
        """
        CloseGroup(INodeTab nodes, bool selGroup=True)
        CloseGroup(INodeTab nodes)
        CloseGroup(bool selGroup=True)
        CloseGroup()
        """
        return _MaxPlus.INode_CloseGroup(*args)

    CloseGroup = staticmethod(CloseGroup)
    def AttachNodesToGroup(*args):
        """AttachNodesToGroup(INodeTab nodes, INode pTargetNode) -> bool"""
        return _MaxPlus.INode_AttachNodesToGroup(*args)

    AttachNodesToGroup = staticmethod(AttachNodesToGroup)
    def DetachNodesFromGroup(*args):
        """DetachNodesFromGroup(INodeTab nodes) -> bool"""
        return _MaxPlus.INode_DetachNodesFromGroup(*args)

    DetachNodesFromGroup = staticmethod(DetachNodesFromGroup)
    def IsGroupMember(self):
        """IsGroupMember(INode self) -> bool"""
        return _MaxPlus.INode_IsGroupMember(self)

    def IsGroupHead(self):
        """IsGroupHead(INode self) -> bool"""
        return _MaxPlus.INode_IsGroupHead(self)

    def IsOpenGroupMember(self):
        """IsOpenGroupMember(INode self) -> bool"""
        return _MaxPlus.INode_IsOpenGroupMember(self)

    def IsOpenGroupHead(self):
        """IsOpenGroupHead(INode self) -> bool"""
        return _MaxPlus.INode_IsOpenGroupHead(self)

    def SetGroupMember(self, *args):
        """SetGroupMember(INode self, bool b)"""
        return _MaxPlus.INode_SetGroupMember(self, *args)

    def SetGroupHead(self, *args):
        """SetGroupHead(INode self, bool b)"""
        return _MaxPlus.INode_SetGroupHead(self, *args)

    def SetGroupMemberOpen(self, *args):
        """SetGroupMemberOpen(INode self, bool b)"""
        return _MaxPlus.INode_SetGroupMemberOpen(self, *args)

    def SetGroupHeadOpen(self, *args):
        """SetGroupHeadOpen(INode self, bool b)"""
        return _MaxPlus.INode_SetGroupHeadOpen(self, *args)

    def GetLayer(self):
        """GetLayer(INode self) -> Layer"""
        return _MaxPlus.INode_GetLayer(self)

    def SetDisplayByLayer(self, *args):
        """SetDisplayByLayer(INode self, bool onOff)"""
        return _MaxPlus.INode_SetDisplayByLayer(self, *args)

    def SetRenderByLayer(self, *args):
        """SetRenderByLayer(INode self, bool onOff)"""
        return _MaxPlus.INode_SetRenderByLayer(self, *args)

    def SetMotionByLayer(self, *args):
        """SetMotionByLayer(INode self, bool onOff)"""
        return _MaxPlus.INode_SetMotionByLayer(self, *args)

    def GetDisplayByLayer(self):
        """GetDisplayByLayer(INode self) -> bool"""
        return _MaxPlus.INode_GetDisplayByLayer(self)

    def GetRenderByLayer(self):
        """GetRenderByLayer(INode self) -> bool"""
        return _MaxPlus.INode_GetRenderByLayer(self)

    def GetMotionByLayer(self):
        """GetMotionByLayer(INode self) -> bool"""
        return _MaxPlus.INode_GetMotionByLayer(self)

    def IntersectRay(self, *args):
        """
        IntersectRay(INode self, Ray ray, TimeValue t=Autodesk::Max::Now()) -> Ray
        IntersectRay(INode self, Ray ray) -> Ray
        """
        return _MaxPlus.INode_IntersectRay(self, *args)

    Name = _swig_property(GetName, SetName)
    Material = _swig_property(GetMaterial, SetMaterial)
    LayerName = _swig_property(GetLayerName)
    FaceCount = _swig_property(GetFaceCount)
    VertexCount = _swig_property(GetVertexCount)
    WireColor = _swig_property(GetWireColor, SetWireColor)

    Object = _swig_property(GetObject, SetObject)
    BaseObject = _swig_property(GetBaseObject, SetBaseObject)

    Position = _swig_property(GetWorldPosition, SetWorldPosition)
    Rotation = _swig_property(GetWorldRotation, SetWorldRotation)
    Scaling = _swig_property(GetWorldScale, SetWorldScale)    
    Transform = _swig_property(GetWorldTM, SetWorldTM)

    LocalPosition = _swig_property(GetLocalPosition, SetLocalPosition)
    LocalRotation = _swig_property(GetLocalRotation, SetLocalRotation)
    LocalScaling = _swig_property(GetLocalScale, SetLocalScale)
    LocalTransform = _swig_property(GetLocalTM, SetLocalTM)
    Parent = _swig_property(GetParent, SetParent)
    NumChildren = _swig_property(GetNumChildren) 
    NumModifiers = _swig_property(GetNumModifiers)
    IsRoot = _swig_property(GetIsRoot)
    X = _swig_property(GetPositionX, SetPositionX)
    Y = _swig_property(GetPositionY, SetPositionY)
    Z = _swig_property(GetPositionZ, SetPositionZ)

    Children = _swig_property(lambda self: (self.GetChild(i) for i in xrange(self.GetNumChildren())))
    Modifiers = _swig_property(lambda self: (self.GetModifier(i) for i in xrange(self.GetNumModifiers())))

    Hide = _swig_property(IsNodeHidden, SetHidden)
    Freeze = _swig_property(IsFrozen, SetFrozen)

    SeeThrough = _swig_property(GetSeeThrough, SetSeeThrough)
    BoxMode = _swig_property(GetBoxMode, SetBoxMode)
    BackfaceCull = _swig_property(GetBackCull, SetBackCull)
    AllEdges = _swig_property(GetAllEdges, SetAllEdges)
    VertexTicks = _swig_property(GetVertTicks, SetVertTicks)
    Trajectory = _swig_property(GetTrajectoryON, SetTrajectoryON)
    IgnoreExtents = _swig_property(GetIgnoreExtents, SetIgnoreExtents)
    ShowFrozenWithMtl = _swig_property(GetShowFrozenWithMtl, SetShowFrozenWithMtl)
    NeverDegrade = _swig_property(GetNeverDegrade, SetNeverDegrade)
    VertexColorMode = _swig_property(GetVertexColorMode, SetVertexColorMode)
    ShadeVertexColors = _swig_property(GetShadeVertexColors, SetShadeVertexColors)
    VertexColorType = _swig_property(GetVertexColorType, SetVertexColorType)
    VertexColorMapChannel = _swig_property(GetVertexColorMapChannel, SetVertexColorMapChannel)

    Visibility = _swig_property(GetVisibility, SetVisibility)
    Renderable = _swig_property(GetRenderable, SetRenderable)
    InheritVisibility = _swig_property(GetInheritVisibility, SetInheritVisibility)
    PrimaryVisibility = _swig_property(GetPrimaryVisibility, SetPrimaryVisibility)
    SecondaryVisibility = _swig_property(GetSecondaryVisibility, SetSecondaryVisibility)
    CastShadows = _swig_property(GetCastShadows, SetCastShadows)
    ReceiveShadows = _swig_property(GetReceiveShadows, SetReceiveShadows)
    ApplyAtmospherics = _swig_property(GetApplyAtmospherics, SetApplyAtmospherics)
    RenderOccluded = _swig_property(GetRenderOccluded, SetRenderOccluded)
    GBufferID = _swig_property(GetGBufID, SetGBufID)

    MotionBlurEnabled = _swig_property(GetMotionBlurOnOff, SetMotionBlurOnOff)
    MotionBlurMultiplier = _swig_property(GetImageBlurMultiplier, SetImageBlurMultiplier)
    MotionBlurType = _swig_property(GetMotionBlurType, SetMotionBlurType)

    __swig_destroy__ = _MaxPlus.delete_INode
    __del__ = lambda self : None;
INode_swigregister = _MaxPlus.INode_swigregister
INode_swigregister(INode)

def INode__CastFrom(*args):
  """INode__CastFrom(InterfaceServer b) -> INode"""
  return _MaxPlus.INode__CastFrom(*args)

def INode__CreateWrapper(*args):
  """INode__CreateWrapper(void * inode_pointer) -> INode"""
  return _MaxPlus.INode__CreateWrapper(*args)

def INode__CreateWrapperFromFPValue(*args):
  """INode__CreateWrapperFromFPValue(void * fpvalue_pointer) -> INode"""
  return _MaxPlus.INode__CreateWrapperFromFPValue(*args)

def INode_GetAffectChildren():
  """INode_GetAffectChildren() -> bool"""
  return _MaxPlus.INode_GetAffectChildren()

def INode_SetAffectChildren(*args):
  """INode_SetAffectChildren(bool bAffectChildren)"""
  return _MaxPlus.INode_SetAffectChildren(*args)

def INode_DeleteNodes(*args):
  """
    DeleteNodes(INodeTab aNodes, bool aKeepChildTM=True, bool aRedraw=True, bool overrideSlaveTM=False) -> unsigned int
    DeleteNodes(INodeTab aNodes, bool aKeepChildTM=True, bool aRedraw=True) -> unsigned int
    DeleteNodes(INodeTab aNodes, bool aKeepChildTM=True) -> unsigned int
    INode_DeleteNodes(INodeTab aNodes) -> unsigned int
    """
  return _MaxPlus.INode_DeleteNodes(*args)

def INode_FlashNodes(*args):
  """INode_FlashNodes(INodeTab nodes)"""
  return _MaxPlus.INode_FlashNodes(*args)

def INode_GetINodeByName(*args):
  """INode_GetINodeByName(wchar_t const * name) -> INode"""
  return _MaxPlus.INode_GetINodeByName(*args)

def INode_GetINodeByHandle(*args):
  """INode_GetINodeByHandle(ULONG handle) -> INode"""
  return _MaxPlus.INode_GetINodeByHandle(*args)

def INode_GetINodeFromRenderID(*args):
  """INode_GetINodeFromRenderID(UWORD id) -> INode"""
  return _MaxPlus.INode_GetINodeFromRenderID(*args)

def INode_FindNodeFromBaseObject(*args):
  """INode_FindNodeFromBaseObject(ReferenceTarget obj) -> INode"""
  return _MaxPlus.INode_FindNodeFromBaseObject(*args)

def INode_SetNodeAttribute(*args):
  """
    SetNodeAttribute(INodeTab nodes, int whatAttrib, int onOff)
    INode_SetNodeAttribute(INode node, int whatAttrib, int onOff)
    """
  return _MaxPlus.INode_SetNodeAttribute(*args)

def INode_NodeColorPicker(*args):
  """INode_NodeColorPicker(HWND hWnd, DWORD & col) -> bool"""
  return _MaxPlus.INode_NodeColorPicker(*args)

def INode_GetPivotMode():
  """INode_GetPivotMode() -> int"""
  return _MaxPlus.INode_GetPivotMode()

def INode_SetPivotMode(*args):
  """INode_SetPivotMode(int pivMode)"""
  return _MaxPlus.INode_SetPivotMode(*args)

def INode_GroupNodes(*args):
  """
    GroupNodes(INodeTab nodes, WStr name, bool selGroup) -> INode
    GroupNodes(INodeTab nodes, WStr name) -> INode
    INode_GroupNodes(INodeTab nodes) -> INode
    """
  return _MaxPlus.INode_GroupNodes(*args)

def INode_UngroupNodes(*args):
  """
    UngroupNodes(INodeTab nodes)
    INode_UngroupNodes()
    """
  return _MaxPlus.INode_UngroupNodes(*args)

def INode_ExplodeNodes(*args):
  """
    ExplodeNodes(INodeTab nodes)
    INode_ExplodeNodes()
    """
  return _MaxPlus.INode_ExplodeNodes(*args)

def INode_OpenGroup(*args):
  """
    OpenGroup(INodeTab nodes, bool clearSel=True)
    OpenGroup(INodeTab nodes)
    OpenGroup(bool clearSel=True)
    INode_OpenGroup()
    """
  return _MaxPlus.INode_OpenGroup(*args)

def INode_CloseGroup(*args):
  """
    CloseGroup(INodeTab nodes, bool selGroup=True)
    CloseGroup(INodeTab nodes)
    CloseGroup(bool selGroup=True)
    INode_CloseGroup()
    """
  return _MaxPlus.INode_CloseGroup(*args)

def INode_AttachNodesToGroup(*args):
  """INode_AttachNodesToGroup(INodeTab nodes, INode pTargetNode) -> bool"""
  return _MaxPlus.INode_AttachNodesToGroup(*args)

def INode_DetachNodesFromGroup(*args):
  """INode_DetachNodesFromGroup(INodeTab nodes) -> bool"""
  return _MaxPlus.INode_DetachNodesFromGroup(*args)

class BitmapInfo(Wrapper):
    """Contains the properties of a bitmap such as its path name or device name, width, height, gamma, number of frames, etc."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> BitmapInfo"""
        return _MaxPlus.BitmapInfo__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(BitmapInfo self, Wrapper w) -> bool"""
        return _MaxPlus.BitmapInfo___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(BitmapInfo self, Wrapper w) -> bool"""
        return _MaxPlus.BitmapInfo___ne__(self, *args)

    def GetFlags(self):
        """GetFlags(BitmapInfo self) -> DWORD"""
        return _MaxPlus.BitmapInfo_GetFlags(self)

    def SetFlags(self, *args):
        """SetFlags(BitmapInfo self, DWORD f) -> DWORD"""
        return _MaxPlus.BitmapInfo_SetFlags(self, *args)

    def ResetFlags(self, *args):
        """ResetFlags(BitmapInfo self, DWORD f) -> DWORD"""
        return _MaxPlus.BitmapInfo_ResetFlags(self, *args)

    def TestFlags(self, *args):
        """TestFlags(BitmapInfo self, DWORD f) -> bool"""
        return _MaxPlus.BitmapInfo_TestFlags(self, *args)

    def GetWidth(self):
        """GetWidth(BitmapInfo self) -> WORD"""
        return _MaxPlus.BitmapInfo_GetWidth(self)

    def GetHeight(self):
        """GetHeight(BitmapInfo self) -> WORD"""
        return _MaxPlus.BitmapInfo_GetHeight(self)

    def GetGamma(self):
        """GetGamma(BitmapInfo self) -> float"""
        return _MaxPlus.BitmapInfo_GetGamma(self)

    def GetAspectRatio(self):
        """GetAspectRatio(BitmapInfo self) -> float"""
        return _MaxPlus.BitmapInfo_GetAspectRatio(self)

    def GetBitmapType(self):
        """GetBitmapType(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_GetBitmapType(self)

    def GetFirstFrame(self):
        """GetFirstFrame(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_GetFirstFrame(self)

    def GetLastFrame(self):
        """GetLastFrame(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_GetLastFrame(self)

    def GetNumberFrames(self):
        """GetNumberFrames(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_GetNumberFrames(self)

    def GetCurrentFrame(self):
        """GetCurrentFrame(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_GetCurrentFrame(self)

    def GetSequenceOutBound(self):
        """GetSequenceOutBound(BitmapInfo self) -> WORD"""
        return _MaxPlus.BitmapInfo_GetSequenceOutBound(self)

    def GetName(self):
        """GetName(BitmapInfo self) -> wchar_t const *"""
        return _MaxPlus.BitmapInfo_GetName(self)

    def GetPathEx(self):
        """GetPathEx(BitmapInfo self) -> WStr"""
        return _MaxPlus.BitmapInfo_GetPathEx(self)

    def GetFileName(self):
        """GetFileName(BitmapInfo self) -> wchar_t const *"""
        return _MaxPlus.BitmapInfo_GetFileName(self)

    def GetDevice(self):
        """GetDevice(BitmapInfo self) -> wchar_t const *"""
        return _MaxPlus.BitmapInfo_GetDevice(self)

    def CompareName(self, *args):
        """CompareName(BitmapInfo self, BitmapInfo bi) -> bool"""
        return _MaxPlus.BitmapInfo_CompareName(self, *args)

    def CopyImageInfo(self, *args):
        """CopyImageInfo(BitmapInfo self, BitmapInfo other)"""
        return _MaxPlus.BitmapInfo_CopyImageInfo(self, *args)

    def SetFirstFrame(self, *args):
        """SetFirstFrame(BitmapInfo self, int m) -> int"""
        return _MaxPlus.BitmapInfo_SetFirstFrame(self, *args)

    def SetLastFrame(self, *args):
        """SetLastFrame(BitmapInfo self, int s) -> int"""
        return _MaxPlus.BitmapInfo_SetLastFrame(self, *args)

    def SetCurrentFrame(self, *args):
        """SetCurrentFrame(BitmapInfo self, int v) -> int"""
        return _MaxPlus.BitmapInfo_SetCurrentFrame(self, *args)

    def SetSequenceOutBound(self, *args):
        """SetSequenceOutBound(BitmapInfo self, WORD c) -> WORD"""
        return _MaxPlus.BitmapInfo_SetSequenceOutBound(self, *args)

    def SetWidth(self, *args):
        """SetWidth(BitmapInfo self, WORD s) -> WORD"""
        return _MaxPlus.BitmapInfo_SetWidth(self, *args)

    def SetHeight(self, *args):
        """SetHeight(BitmapInfo self, WORD u) -> WORD"""
        return _MaxPlus.BitmapInfo_SetHeight(self, *args)

    def SetGamma(self, *args):
        """SetGamma(BitmapInfo self, float c) -> float"""
        return _MaxPlus.BitmapInfo_SetGamma(self, *args)

    def SetAspect(self, *args):
        """SetAspect(BitmapInfo self, float k) -> float"""
        return _MaxPlus.BitmapInfo_SetAspect(self, *args)

    def SetBitmapType(self, *args):
        """SetBitmapType(BitmapInfo self, int s) -> int"""
        return _MaxPlus.BitmapInfo_SetBitmapType(self, *args)

    def SetPath(self, *args):
        """SetPath(BitmapInfo self, wchar_t const * path)"""
        return _MaxPlus.BitmapInfo_SetPath(self, *args)

    def SetName(self, *args):
        """SetName(BitmapInfo self, wchar_t const * n) -> wchar_t const *"""
        return _MaxPlus.BitmapInfo_SetName(self, *args)

    def GetAsset(self):
        """GetAsset(BitmapInfo self) -> Asset"""
        return _MaxPlus.BitmapInfo_GetAsset(self)

    def SetAsset(self, *args):
        """SetAsset(BitmapInfo self, Asset asset)"""
        return _MaxPlus.BitmapInfo_SetAsset(self, *args)

    def SetDevice(self, *args):
        """SetDevice(BitmapInfo self, wchar_t const * d) -> wchar_t const *"""
        return _MaxPlus.BitmapInfo_SetDevice(self, *args)

    def GetCustWidth(self):
        """GetCustWidth(BitmapInfo self) -> WORD"""
        return _MaxPlus.BitmapInfo_GetCustWidth(self)

    def GetCustHeight(self):
        """GetCustHeight(BitmapInfo self) -> WORD"""
        return _MaxPlus.BitmapInfo_GetCustHeight(self)

    def SetCustWidth(self, *args):
        """SetCustWidth(BitmapInfo self, WORD w)"""
        return _MaxPlus.BitmapInfo_SetCustWidth(self, *args)

    def SetCustHeight(self, *args):
        """SetCustHeight(BitmapInfo self, WORD h)"""
        return _MaxPlus.BitmapInfo_SetCustHeight(self, *args)

    def StartFrame(self):
        """StartFrame(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_StartFrame(self)

    def EndFrame(self):
        """EndFrame(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_EndFrame(self)

    def SetStartFrame(self, *args):
        """SetStartFrame(BitmapInfo self, int s)"""
        return _MaxPlus.BitmapInfo_SetStartFrame(self, *args)

    def SetEndFrame(self, *args):
        """SetEndFrame(BitmapInfo self, int e)"""
        return _MaxPlus.BitmapInfo_SetEndFrame(self, *args)

    def SetCustomX(self, *args):
        """SetCustomX(BitmapInfo self, int x)"""
        return _MaxPlus.BitmapInfo_SetCustomX(self, *args)

    def SetCustomY(self, *args):
        """SetCustomY(BitmapInfo self, int y)"""
        return _MaxPlus.BitmapInfo_SetCustomY(self, *args)

    def GetCustomX(self):
        """GetCustomX(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_GetCustomX(self)

    def GetCustomY(self):
        """GetCustomY(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_GetCustomY(self)

    def SetCustomGamma(self, *args):
        """SetCustomGamma(BitmapInfo self, float g)"""
        return _MaxPlus.BitmapInfo_SetCustomGamma(self, *args)

    def GetCustomGamma(self):
        """GetCustomGamma(BitmapInfo self) -> float"""
        return _MaxPlus.BitmapInfo_GetCustomGamma(self)

    def GetEffectiveGamma(self):
        """GetEffectiveGamma(BitmapInfo self) -> float"""
        return _MaxPlus.BitmapInfo_GetEffectiveGamma(self)

    def SetCustomStep(self, *args):
        """SetCustomStep(BitmapInfo self, int s)"""
        return _MaxPlus.BitmapInfo_SetCustomStep(self, *args)

    def GetCustomStep(self):
        """GetCustomStep(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_GetCustomStep(self)

    def SetPresetAlignment(self, *args):
        """SetPresetAlignment(BitmapInfo self, int p)"""
        return _MaxPlus.BitmapInfo_SetPresetAlignment(self, *args)

    def GetPresetAlignment(self):
        """GetPresetAlignment(BitmapInfo self) -> int"""
        return _MaxPlus.BitmapInfo_GetPresetAlignment(self)

    def GetCustomFlags(self):
        """GetCustomFlags(BitmapInfo self) -> DWORD"""
        return _MaxPlus.BitmapInfo_GetCustomFlags(self)

    def SetCustomFlag(self, *args):
        """SetCustomFlag(BitmapInfo self, DWORD f)"""
        return _MaxPlus.BitmapInfo_SetCustomFlag(self, *args)

    def ResetCustomFlag(self, *args):
        """ResetCustomFlag(BitmapInfo self, DWORD f)"""
        return _MaxPlus.BitmapInfo_ResetCustomFlag(self, *args)

    def TestCustomFlags(self, *args):
        """TestCustomFlags(BitmapInfo self, DWORD f) -> bool"""
        return _MaxPlus.BitmapInfo_TestCustomFlags(self, *args)

    def GetProxySubject(self, create=True):
        """
        GetProxySubject(BitmapInfo self, bool create=True) -> BitmapInfo
        GetProxySubject(BitmapInfo self) -> BitmapInfo
        """
        return _MaxPlus.BitmapInfo_GetProxySubject(self, create)

    def ResetProxySubject(self):
        """ResetProxySubject(BitmapInfo self)"""
        return _MaxPlus.BitmapInfo_ResetProxySubject(self)

    def AllocProxySubject(self):
        """AllocProxySubject(BitmapInfo self) -> bool"""
        return _MaxPlus.BitmapInfo_AllocProxySubject(self)

    def Copy(self, *args):
        """
        Copy(BitmapInfo self, BitmapInfo other, bool copyProxySubject)
        Copy(BitmapInfo self, BitmapInfo other)
        """
        return _MaxPlus.BitmapInfo_Copy(self, *args)

    def Validate(self):
        """Validate(BitmapInfo self) -> bool"""
        return _MaxPlus.BitmapInfo_Validate(self)

    Type = _swig_property(GetBitmapType, SetBitmapType)

    __swig_destroy__ = _MaxPlus.delete_BitmapInfo
    __del__ = lambda self : None;
BitmapInfo_swigregister = _MaxPlus.BitmapInfo_swigregister
BitmapInfo_swigregister(BitmapInfo)

def BitmapInfo__CastFrom(*args):
  """BitmapInfo__CastFrom(InterfaceServer b) -> BitmapInfo"""
  return _MaxPlus.BitmapInfo__CastFrom(*args)

class Bitmap(BaseInterfaceServer):
    """The main class for working with bitmaps."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Bitmap"""
        return _MaxPlus.Bitmap__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Bitmap self, Wrapper w) -> bool"""
        return _MaxPlus.Bitmap___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Bitmap self, Wrapper w) -> bool"""
        return _MaxPlus.Bitmap___ne__(self, *args)

    def GetFlags(self):
        """GetFlags(Bitmap self) -> DWORD"""
        return _MaxPlus.Bitmap_GetFlags(self)

    def SetFlag(self, *args):
        """SetFlag(Bitmap self, DWORD flag)"""
        return _MaxPlus.Bitmap_SetFlag(self, *args)

    def ToggleFlag(self, *args):
        """ToggleFlag(Bitmap self, DWORD flag)"""
        return _MaxPlus.Bitmap_ToggleFlag(self, *args)

    def ClearFlag(self, *args):
        """ClearFlag(Bitmap self, DWORD flag)"""
        return _MaxPlus.Bitmap_ClearFlag(self, *args)

    def GetWidth(self):
        """GetWidth(Bitmap self) -> int"""
        return _MaxPlus.Bitmap_GetWidth(self)

    def GetHeight(self):
        """GetHeight(Bitmap self) -> int"""
        return _MaxPlus.Bitmap_GetHeight(self)

    def GetAspect(self):
        """GetAspect(Bitmap self) -> float"""
        return _MaxPlus.Bitmap_GetAspect(self)

    def GetGamma(self):
        """GetGamma(Bitmap self) -> float"""
        return _MaxPlus.Bitmap_GetGamma(self)

    def IsPaletted(self):
        """IsPaletted(Bitmap self) -> int"""
        return _MaxPlus.Bitmap_IsPaletted(self)

    def IsDithered(self):
        """IsDithered(Bitmap self) -> int"""
        return _MaxPlus.Bitmap_IsDithered(self)

    def HasPreMultipliedAlpha(self):
        """HasPreMultipliedAlpha(Bitmap self) -> int"""
        return _MaxPlus.Bitmap_HasPreMultipliedAlpha(self)

    def HasAlpha(self):
        """HasAlpha(Bitmap self) -> int"""
        return _MaxPlus.Bitmap_HasAlpha(self)

    def IsHighDynamicRange(self):
        """IsHighDynamicRange(Bitmap self) -> int"""
        return _MaxPlus.Bitmap_IsHighDynamicRange(self)

    def GetMaxRGBLevel(self):
        """GetMaxRGBLevel(Bitmap self) -> int"""
        return _MaxPlus.Bitmap_GetMaxRGBLevel(self)

    def GetMaxAlphaLevel(self):
        """GetMaxAlphaLevel(Bitmap self) -> int"""
        return _MaxPlus.Bitmap_GetMaxAlphaLevel(self)

    def SetScaleColors(self, *args):
        """SetScaleColors(Bitmap self, bool on)"""
        return _MaxPlus.Bitmap_SetScaleColors(self, *args)

    def GetScaleColors(self):
        """GetScaleColors(Bitmap self) -> bool"""
        return _MaxPlus.Bitmap_GetScaleColors(self)

    def ClampScaleColor(self, *args):
        """ClampScaleColor(Bitmap self, Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.Bitmap_ClampScaleColor(self, *args)

    def ClampScaleColorA(self, *args):
        """ClampScaleColorA(Bitmap self, Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.Bitmap_ClampScaleColorA(self, *args)

    def CropImage(self, *args):
        """
        CropImage(Bitmap self, int width, int height, Color64 fillcolor) -> bool
        CropImage(Bitmap self, int width, int height, HDRColor fillcolor) -> bool
        CropImage(Bitmap self, int width, int height, int fillindex) -> bool
        """
        return _MaxPlus.Bitmap_CropImage(self, *args)

    def CopyImage(self, *args):
        """
        CopyImage(Bitmap self, Bitmap other, int operation, Color64 fillcolor) -> bool
        CopyImage(Bitmap self, Bitmap other, int operation, HDRColor fillcolor) -> bool
        CopyImage(Bitmap self, Bitmap other, int operation, int fillindex) -> bool
        """
        return _MaxPlus.Bitmap_CopyImage(self, *args)

    def CreateChannels(self, *args):
        """CreateChannels(Bitmap self, ULONG channelIDs) -> ULONG"""
        return _MaxPlus.Bitmap_CreateChannels(self, *args)

    def DeleteChannels(self, *args):
        """DeleteChannels(Bitmap self, ULONG channelIDs)"""
        return _MaxPlus.Bitmap_DeleteChannels(self, *args)

    def ChannelsPresent(self):
        """ChannelsPresent(Bitmap self) -> ULONG"""
        return _MaxPlus.Bitmap_ChannelsPresent(self)

    def SetDither(self, *args):
        """SetDither(Bitmap self, UINT ditherType) -> bool"""
        return _MaxPlus.Bitmap_SetDither(self, *args)

    def SetFilter(self, *args):
        """SetFilter(Bitmap self, UINT filterType) -> bool"""
        return _MaxPlus.Bitmap_SetFilter(self, *args)

    def GetHasFilter(self):
        """GetHasFilter(Bitmap self) -> bool"""
        return _MaxPlus.Bitmap_GetHasFilter(self)

    def SetStorage(self, *args):
        """SetStorage(Bitmap self, BitmapStorage storage) -> bool"""
        return _MaxPlus.Bitmap_SetStorage(self, *args)

    def GetStorage(self):
        """GetStorage(Bitmap self) -> BitmapStorage"""
        return _MaxPlus.Bitmap_GetStorage(self)

    def DeleteStorage(self):
        """DeleteStorage(Bitmap self)"""
        return _MaxPlus.Bitmap_DeleteStorage(self)

    def DeleteThis(self):
        """DeleteThis(Bitmap self)"""
        return _MaxPlus.Bitmap_DeleteThis(self)

    def ToDib(self, depth=24, gam=None, dither=True, displayGamma=True):
        """
        ToDib(Bitmap self, int depth=24, UWORD * gam=None, bool dither=True, bool displayGamma=True) -> PBITMAPINFO
        ToDib(Bitmap self, int depth=24, UWORD * gam=None, bool dither=True) -> PBITMAPINFO
        ToDib(Bitmap self, int depth=24, UWORD * gam=None) -> PBITMAPINFO
        ToDib(Bitmap self, int depth=24) -> PBITMAPINFO
        ToDib(Bitmap self) -> PBITMAPINFO
        """
        return _MaxPlus.Bitmap_ToDib(self, depth, gam, dither, displayGamma)

    def FromDib(self, *args):
        """FromDib(Bitmap self, PBITMAPINFO pbmi) -> bool"""
        return _MaxPlus.Bitmap_FromDib(self, *args)

    def OpenOutput(self, *args):
        """OpenOutput(Bitmap self, BitmapInfo bi) -> BMMRES"""
        return _MaxPlus.Bitmap_OpenOutput(self, *args)

    def Write(self, *args):
        """
        Write(Bitmap self, BitmapInfo bi, int frame=BMM_SINGLEFRAME) -> BMMRES
        Write(Bitmap self, BitmapInfo bi) -> BMMRES
        """
        return _MaxPlus.Bitmap_Write(self, *args)

    def WriteAll(self, *args):
        """
        WriteAll(Bitmap self, int frame=BMM_SINGLEFRAME) -> BMMRES
        WriteAll(Bitmap self) -> BMMRES
        """
        return _MaxPlus.Bitmap_WriteAll(self, *args)

    def Close(self, *args):
        """
        Close(Bitmap self, BitmapInfo bi, int flag=BMM_CLOSE_COMPLETE) -> bool
        Close(Bitmap self, BitmapInfo bi) -> bool
        """
        return _MaxPlus.Bitmap_Close(self, *args)

    def CloseAll(self, *args):
        """
        CloseAll(Bitmap self, int flag=BMM_CLOSE_COMPLETE) -> bool
        CloseAll(Bitmap self) -> bool
        """
        return _MaxPlus.Bitmap_CloseAll(self, *args)

    def Display(self, *args):
        """
        Display(Bitmap self, wchar_t const * title=None, int position=BMM_CN, bool autonomous=False, bool savebutton=True) -> bool
        Display(Bitmap self, wchar_t const * title=None, int position=BMM_CN, bool autonomous=False) -> bool
        Display(Bitmap self, wchar_t const * title=None, int position=BMM_CN) -> bool
        Display(Bitmap self, wchar_t const * title=None) -> bool
        Display(Bitmap self) -> bool
        """
        return _MaxPlus.Bitmap_Display(self, *args)

    def UnDisplay(self):
        """UnDisplay(Bitmap self) -> bool"""
        return _MaxPlus.Bitmap_UnDisplay(self)

    def GetWindow(self):
        """GetWindow(Bitmap self) -> HWND"""
        return _MaxPlus.Bitmap_GetWindow(self)

    def SetCroppingValues(self, *args):
        """SetCroppingValues(Bitmap self, float u, float v, float w, float h, bool placeImage)"""
        return _MaxPlus.Bitmap_SetCroppingValues(self, *args)

    def GoTo(self, *args):
        """GoTo(Bitmap self, BitmapInfo bi) -> BMMRES"""
        return _MaxPlus.Bitmap_GoTo(self, *args)

    def Fill(self, *args):
        """
        Fill(Bitmap self, int r, int g, int b, int alpha) -> bool
        Fill(Bitmap self, HDRColor fillColor) -> bool
        Fill(Bitmap self, Color64 fillColor) -> bool
        """
        return _MaxPlus.Bitmap_Fill(self, *args)

    def GetModifyID(self):
        """GetModifyID(Bitmap self) -> DWORD"""
        return _MaxPlus.Bitmap_GetModifyID(self)

    def SetModifyID(self, *args):
        """SetModifyID(Bitmap self, DWORD m)"""
        return _MaxPlus.Bitmap_SetModifyID(self, *args)

    def IncrModifyID(self):
        """IncrModifyID(Bitmap self)"""
        return _MaxPlus.Bitmap_IncrModifyID(self)

    def Print(self, silent=False):
        """
        Print(Bitmap self, bool silent=False)
        Print(Bitmap self)
        """
        return _MaxPlus.Bitmap_Print(self, silent)

    def ShowProgressLine(self, *args):
        """ShowProgressLine(Bitmap self, int y)"""
        return _MaxPlus.Bitmap_ShowProgressLine(self, *args)

    def ClampColor(*args):
        """ClampColor(Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.Bitmap_ClampColor(*args)

    ClampColor = staticmethod(ClampColor)
    def ClampColorA(*args):
        """ClampColorA(Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.Bitmap_ClampColorA(*args)

    ClampColorA = staticmethod(ClampColorA)
    def ScaleColor(*args):
        """ScaleColor(Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.Bitmap_ScaleColor(*args)

    ScaleColor = staticmethod(ScaleColor)
    def ScaleColorA(*args):
        """ScaleColorA(Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.Bitmap_ScaleColorA(*args)

    ScaleColorA = staticmethod(ScaleColorA)
    __swig_destroy__ = _MaxPlus.delete_Bitmap
    __del__ = lambda self : None;
Bitmap_swigregister = _MaxPlus.Bitmap_swigregister
Bitmap_swigregister(Bitmap)

def Bitmap__CastFrom(*args):
  """Bitmap__CastFrom(InterfaceServer b) -> Bitmap"""
  return _MaxPlus.Bitmap__CastFrom(*args)

def Bitmap_ClampColor(*args):
  """Bitmap_ClampColor(Color64 outValue, HDRColor inValue)"""
  return _MaxPlus.Bitmap_ClampColor(*args)

def Bitmap_ClampColorA(*args):
  """Bitmap_ClampColorA(Color64 outValue, HDRColor inValue)"""
  return _MaxPlus.Bitmap_ClampColorA(*args)

def Bitmap_ScaleColor(*args):
  """Bitmap_ScaleColor(Color64 outValue, HDRColor inValue)"""
  return _MaxPlus.Bitmap_ScaleColor(*args)

def Bitmap_ScaleColorA(*args):
  """Bitmap_ScaleColorA(Color64 outValue, HDRColor inValue)"""
  return _MaxPlus.Bitmap_ScaleColorA(*args)

class BitmapStorage(BaseInterfaceServer):
    """The buffer of a loaded bitmap. It allow developers to access the image data in a uniform manner even though the underlying storage might be 1-bit, 8-bit, 16-bit, 32-bit or 64-bit."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> BitmapStorage"""
        return _MaxPlus.BitmapStorage__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(BitmapStorage self, Wrapper w) -> bool"""
        return _MaxPlus.BitmapStorage___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(BitmapStorage self, Wrapper w) -> bool"""
        return _MaxPlus.BitmapStorage___ne__(self, *args)

    def SetGamma(self, *args):
        """SetGamma(BitmapStorage self, float gam) -> float"""
        return _MaxPlus.BitmapStorage_SetGamma(self, *args)

    def HasGamma(self):
        """HasGamma(BitmapStorage self) -> bool"""
        return _MaxPlus.BitmapStorage_HasGamma(self)

    def SetHasGamma(self, *args):
        """SetHasGamma(BitmapStorage self, bool onOff)"""
        return _MaxPlus.BitmapStorage_SetHasGamma(self, *args)

    def GetOpenMode(self):
        """GetOpenMode(BitmapStorage self) -> int"""
        return _MaxPlus.BitmapStorage_GetOpenMode(self)

    def GetWidth(self):
        """GetWidth(BitmapStorage self) -> int"""
        return _MaxPlus.BitmapStorage_GetWidth(self)

    def GetHeight(self):
        """GetHeight(BitmapStorage self) -> int"""
        return _MaxPlus.BitmapStorage_GetHeight(self)

    def GetAspect(self):
        """GetAspect(BitmapStorage self) -> float"""
        return _MaxPlus.BitmapStorage_GetAspect(self)

    def GetGamma(self):
        """GetGamma(BitmapStorage self) -> float"""
        return _MaxPlus.BitmapStorage_GetGamma(self)

    def IsPaletted(self):
        """IsPaletted(BitmapStorage self) -> bool"""
        return _MaxPlus.BitmapStorage_IsPaletted(self)

    def IsDithered(self):
        """IsDithered(BitmapStorage self) -> bool"""
        return _MaxPlus.BitmapStorage_IsDithered(self)

    def HasPreMultipliedAlpha(self):
        """HasPreMultipliedAlpha(BitmapStorage self) -> bool"""
        return _MaxPlus.BitmapStorage_HasPreMultipliedAlpha(self)

    def HasAlpha(self):
        """HasAlpha(BitmapStorage self) -> bool"""
        return _MaxPlus.BitmapStorage_HasAlpha(self)

    def SetUseScaleColors(self, *args):
        """SetUseScaleColors(BitmapStorage self, bool on)"""
        return _MaxPlus.BitmapStorage_SetUseScaleColors(self, *args)

    def GetUseScaleColors(self):
        """GetUseScaleColors(BitmapStorage self) -> bool"""
        return _MaxPlus.BitmapStorage_GetUseScaleColors(self)

    def ClampScaleColor(self, *args):
        """ClampScaleColor(BitmapStorage self, Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.BitmapStorage_ClampScaleColor(self, *args)

    def ClampScaleColorA(self, *args):
        """ClampScaleColorA(BitmapStorage self, Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.BitmapStorage_ClampScaleColorA(self, *args)

    def GetBitmapType(self):
        """GetBitmapType(BitmapStorage self) -> int"""
        return _MaxPlus.BitmapStorage_GetBitmapType(self)

    def GetFlags(self):
        """GetFlags(BitmapStorage self) -> int"""
        return _MaxPlus.BitmapStorage_GetFlags(self)

    def SetFlags(self, *args):
        """SetFlags(BitmapStorage self, DWORD f)"""
        return _MaxPlus.BitmapStorage_SetFlags(self, *args)

    def ClearFlags(self, *args):
        """ClearFlags(BitmapStorage self, DWORD f)"""
        return _MaxPlus.BitmapStorage_ClearFlags(self, *args)

    def GetMaxRGBLevel(self):
        """GetMaxRGBLevel(BitmapStorage self) -> int"""
        return _MaxPlus.BitmapStorage_GetMaxRGBLevel(self)

    def GetMaxAlphaLevel(self):
        """GetMaxAlphaLevel(BitmapStorage self) -> int"""
        return _MaxPlus.BitmapStorage_GetMaxAlphaLevel(self)

    def IsHighDynamicRange(self):
        """IsHighDynamicRange(BitmapStorage self) -> int"""
        return _MaxPlus.BitmapStorage_IsHighDynamicRange(self)

    def Get16Gray(self, *args):
        """Get16Gray(BitmapStorage self, int x, int y) -> WORD"""
        return _MaxPlus.BitmapStorage_Get16Gray(self, *args)

    def Put16Gray(self, *args):
        """Put16Gray(BitmapStorage self, int x, int y, WORD val)"""
        return _MaxPlus.BitmapStorage_Put16Gray(self, *args)

    def Get16GrayFloat(self, *args):
        """Get16GrayFloat(BitmapStorage self, int x, int y) -> float"""
        return _MaxPlus.BitmapStorage_Get16GrayFloat(self, *args)

    def Put16GrayFloat(self, *args):
        """Put16GrayFloat(BitmapStorage self, int x, int y, float val)"""
        return _MaxPlus.BitmapStorage_Put16GrayFloat(self, *args)

    def GetLinearPixel(self, *args):
        """GetLinearPixel(BitmapStorage self, int x, int y) -> Color64"""
        return _MaxPlus.BitmapStorage_GetLinearPixel(self, *args)

    def GetPixel(self, *args):
        """GetPixel(BitmapStorage self, int x, int y) -> Color64"""
        return _MaxPlus.BitmapStorage_GetPixel(self, *args)

    def PutPixel(self, *args):
        """PutPixel(BitmapStorage self, int x, int y, Color64 color)"""
        return _MaxPlus.BitmapStorage_PutPixel(self, *args)

    def GetLinearHDRPixel(self, *args):
        """GetLinearHDRPixel(BitmapStorage self, int x, int y) -> HDRColor"""
        return _MaxPlus.BitmapStorage_GetLinearHDRPixel(self, *args)

    def GetHDRPixel(self, *args):
        """GetHDRPixel(BitmapStorage self, int x, int y) -> HDRColor"""
        return _MaxPlus.BitmapStorage_GetHDRPixel(self, *args)

    def PutHDRPixel(self, *args):
        """PutHDRPixel(BitmapStorage self, int x, int y, HDRColor color)"""
        return _MaxPlus.BitmapStorage_PutHDRPixel(self, *args)

    def Fill(self, *args):
        """
        Fill(BitmapStorage self, HDRColor fillColor) -> bool
        Fill(BitmapStorage self, Color64 fillColor) -> bool
        """
        return _MaxPlus.BitmapStorage_Fill(self, *args)

    def CropImage(self, *args):
        """
        CropImage(BitmapStorage self, int width, int height, HDRColor fillcolor) -> bool
        CropImage(BitmapStorage self, int width, int height, Color64 fillcolor) -> bool
        CropImage(BitmapStorage self, int width, int height, int fillindex) -> bool
        """
        return _MaxPlus.BitmapStorage_CropImage(self, *args)

    def CopyCrop(self, *args):
        """
        CopyCrop(BitmapStorage self, Bitmap other, Color64 fillcolor) -> bool
        CopyCrop(BitmapStorage self, Bitmap other, HDRColor fillcolor) -> bool
        """
        return _MaxPlus.BitmapStorage_CopyCrop(self, *args)

    def CopyImage(self, *args):
        """CopyImage(BitmapStorage self, Bitmap other, int operation, int fillindex) -> bool"""
        return _MaxPlus.BitmapStorage_CopyImage(self, *args)

    def GetFiltered(self, *args):
        """GetFiltered(BitmapStorage self, float u, float v, float du, float dv) -> Color64"""
        return _MaxPlus.BitmapStorage_GetFiltered(self, *args)

    def GetFilteredHDR(self, *args):
        """GetFilteredHDR(BitmapStorage self, float u, float v, float du, float dv) -> HDRColor"""
        return _MaxPlus.BitmapStorage_GetFilteredHDR(self, *args)

    def Allocate(self, *args):
        """Allocate(BitmapStorage self, BitmapInfo bi, int openMode) -> bool"""
        return _MaxPlus.BitmapStorage_Allocate(self, *args)

    def Connect(self):
        """Connect(BitmapStorage self) -> bool"""
        return _MaxPlus.BitmapStorage_Connect(self)

    def Disconnect(self):
        """Disconnect(BitmapStorage self) -> bool"""
        return _MaxPlus.BitmapStorage_Disconnect(self)

    def MapReady(self):
        """MapReady(BitmapStorage self) -> bool"""
        return _MaxPlus.BitmapStorage_MapReady(self)

    def CreateChannels(self, *args):
        """CreateChannels(BitmapStorage self, ULONG channelIDs) -> ULONG"""
        return _MaxPlus.BitmapStorage_CreateChannels(self, *args)

    def DeleteChannels(self, *args):
        """DeleteChannels(BitmapStorage self, ULONG channelIDs)"""
        return _MaxPlus.BitmapStorage_DeleteChannels(self, *args)

    def AreChannelsPresent(self):
        """AreChannelsPresent(BitmapStorage self) -> ULONG"""
        return _MaxPlus.BitmapStorage_AreChannelsPresent(self)

    def ClampColor(*args):
        """ClampColor(Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.BitmapStorage_ClampColor(*args)

    ClampColor = staticmethod(ClampColor)
    def ClampColorA(*args):
        """ClampColorA(Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.BitmapStorage_ClampColorA(*args)

    ClampColorA = staticmethod(ClampColorA)
    def ScaleColor(*args):
        """ScaleColor(Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.BitmapStorage_ScaleColor(*args)

    ScaleColor = staticmethod(ScaleColor)
    def ScaleColorA(*args):
        """ScaleColorA(Color64 outValue, HDRColor inValue)"""
        return _MaxPlus.BitmapStorage_ScaleColorA(*args)

    ScaleColorA = staticmethod(ScaleColorA)
    def GetBitmapInfo(self):
        """GetBitmapInfo(BitmapStorage self) -> BitmapInfo"""
        return _MaxPlus.BitmapStorage_GetBitmapInfo(self)

    Type = _swig_property(GetBitmapType)

    __swig_destroy__ = _MaxPlus.delete_BitmapStorage
    __del__ = lambda self : None;
BitmapStorage_swigregister = _MaxPlus.BitmapStorage_swigregister
BitmapStorage_swigregister(BitmapStorage)

def BitmapStorage__CastFrom(*args):
  """BitmapStorage__CastFrom(InterfaceServer b) -> BitmapStorage"""
  return _MaxPlus.BitmapStorage__CastFrom(*args)

def BitmapStorage_ClampColor(*args):
  """BitmapStorage_ClampColor(Color64 outValue, HDRColor inValue)"""
  return _MaxPlus.BitmapStorage_ClampColor(*args)

def BitmapStorage_ClampColorA(*args):
  """BitmapStorage_ClampColorA(Color64 outValue, HDRColor inValue)"""
  return _MaxPlus.BitmapStorage_ClampColorA(*args)

def BitmapStorage_ScaleColor(*args):
  """BitmapStorage_ScaleColor(Color64 outValue, HDRColor inValue)"""
  return _MaxPlus.BitmapStorage_ScaleColor(*args)

def BitmapStorage_ScaleColorA(*args):
  """BitmapStorage_ScaleColorA(Color64 outValue, HDRColor inValue)"""
  return _MaxPlus.BitmapStorage_ScaleColorA(*args)

class PBBitmap(Wrapper):
    """A wrapper around Bitmap and BitmapInfo wrapper class used by ParamBlock2s to store bitmap information."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _MaxPlus.delete_PBBitmap
    __del__ = lambda self : None;
    def __init__(self): 
        """__init__(Autodesk::Max::PBBitmap self) -> PBBitmap"""
        this = _MaxPlus.new_PBBitmap()
        try: self.this.append(this)
        except: self.this = this
    def Load(self):
        """Load(PBBitmap self)"""
        return _MaxPlus.PBBitmap_Load(self)

    def Clone(self):
        """Clone(PBBitmap self) -> PBBitmap"""
        return _MaxPlus.PBBitmap_Clone(self)

    def GetBitmapInfo(self):
        """GetBitmapInfo(PBBitmap self) -> BitmapInfo"""
        return _MaxPlus.PBBitmap_GetBitmapInfo(self)

    def GetBitmap(self):
        """GetBitmap(PBBitmap self) -> Bitmap"""
        return _MaxPlus.PBBitmap_GetBitmap(self)

PBBitmap_swigregister = _MaxPlus.PBBitmap_swigregister
PBBitmap_swigregister(PBBitmap)

class BitmapManager(object):
    """Static bitmap utility functions"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def FreeSceneBitmaps():
        """FreeSceneBitmaps()"""
        return _MaxPlus.BitmapManager_FreeSceneBitmaps()

    FreeSceneBitmaps = staticmethod(FreeSceneBitmaps)
    def GetSilentMode():
        """GetSilentMode() -> bool"""
        return _MaxPlus.BitmapManager_GetSilentMode()

    GetSilentMode = staticmethod(GetSilentMode)
    def SetSilentMode(*args):
        """SetSilentMode(bool x)"""
        return _MaxPlus.BitmapManager_SetSilentMode(*args)

    SetSilentMode = staticmethod(SetSilentMode)
    def Load(*args):
        """Load(BitmapInfo bi) -> Bitmap"""
        return _MaxPlus.BitmapManager_Load(*args)

    Load = staticmethod(Load)
    def GetImageInfoDlg(*args):
        """
        GetImageInfoDlg(HWND hWnd, BitmapInfo bi, wchar_t const * filename=None) -> BMMRES
        GetImageInfoDlg(HWND hWnd, BitmapInfo bi) -> BMMRES
        """
        return _MaxPlus.BitmapManager_GetImageInfoDlg(*args)

    GetImageInfoDlg = staticmethod(GetImageInfoDlg)
    def GetImageInfo(*args):
        """
        GetImageInfo(BitmapInfo bi, wchar_t const * filename=None) -> BMMRES
        GetImageInfo(BitmapInfo bi) -> BMMRES
        """
        return _MaxPlus.BitmapManager_GetImageInfo(*args)

    GetImageInfo = staticmethod(GetImageInfo)
    def GetImageInputOptions(*args):
        """GetImageInputOptions(BitmapInfo bi, HWND hWnd) -> bool"""
        return _MaxPlus.BitmapManager_GetImageInputOptions(*args)

    GetImageInputOptions = staticmethod(GetImageInputOptions)
    def SelectDeviceInput(*args):
        """SelectDeviceInput(BitmapInfo bi, HWND hWnd) -> bool"""
        return _MaxPlus.BitmapManager_SelectDeviceInput(*args)

    SelectDeviceInput = staticmethod(SelectDeviceInput)
    def SelectDeviceOutput(*args):
        """SelectDeviceOutput(BitmapInfo bi, HWND hWnd) -> bool"""
        return _MaxPlus.BitmapManager_SelectDeviceOutput(*args)

    SelectDeviceOutput = staticmethod(SelectDeviceOutput)
    def SelectFileOutput(*args):
        """
        SelectFileOutput(BitmapInfo bi, HWND hWnd, wchar_t const * title=None) -> bool
        SelectFileOutput(BitmapInfo bi, HWND hWnd) -> bool
        """
        return _MaxPlus.BitmapManager_SelectFileOutput(*args)

    SelectFileOutput = staticmethod(SelectFileOutput)
    def SelectFileInputEx(*args):
        """
        SelectFileInputEx(BitmapInfo bi, HWND hWnd, wchar_t const * title=None, bool viewonly=False) -> bool
        SelectFileInputEx(BitmapInfo bi, HWND hWnd, wchar_t const * title=None) -> bool
        SelectFileInputEx(BitmapInfo bi, HWND hWnd) -> bool
        """
        return _MaxPlus.BitmapManager_SelectFileInputEx(*args)

    SelectFileInputEx = staticmethod(SelectFileInputEx)
    def CanImport(*args):
        """CanImport(wchar_t const * filename) -> bool"""
        return _MaxPlus.BitmapManager_CanImport(*args)

    CanImport = staticmethod(CanImport)
    __swig_destroy__ = _MaxPlus.delete_BitmapManager
    __del__ = lambda self : None;
BitmapManager_swigregister = _MaxPlus.BitmapManager_swigregister
BitmapManager_swigregister(BitmapManager)

def BitmapManager_FreeSceneBitmaps():
  """BitmapManager_FreeSceneBitmaps()"""
  return _MaxPlus.BitmapManager_FreeSceneBitmaps()

def BitmapManager_GetSilentMode():
  """BitmapManager_GetSilentMode() -> bool"""
  return _MaxPlus.BitmapManager_GetSilentMode()

def BitmapManager_SetSilentMode(*args):
  """BitmapManager_SetSilentMode(bool x)"""
  return _MaxPlus.BitmapManager_SetSilentMode(*args)

def BitmapManager_Load(*args):
  """BitmapManager_Load(BitmapInfo bi) -> Bitmap"""
  return _MaxPlus.BitmapManager_Load(*args)

def BitmapManager_GetImageInfoDlg(*args):
  """
    GetImageInfoDlg(HWND hWnd, BitmapInfo bi, wchar_t const * filename=None) -> BMMRES
    BitmapManager_GetImageInfoDlg(HWND hWnd, BitmapInfo bi) -> BMMRES
    """
  return _MaxPlus.BitmapManager_GetImageInfoDlg(*args)

def BitmapManager_GetImageInfo(*args):
  """
    GetImageInfo(BitmapInfo bi, wchar_t const * filename=None) -> BMMRES
    BitmapManager_GetImageInfo(BitmapInfo bi) -> BMMRES
    """
  return _MaxPlus.BitmapManager_GetImageInfo(*args)

def BitmapManager_GetImageInputOptions(*args):
  """BitmapManager_GetImageInputOptions(BitmapInfo bi, HWND hWnd) -> bool"""
  return _MaxPlus.BitmapManager_GetImageInputOptions(*args)

def BitmapManager_SelectDeviceInput(*args):
  """BitmapManager_SelectDeviceInput(BitmapInfo bi, HWND hWnd) -> bool"""
  return _MaxPlus.BitmapManager_SelectDeviceInput(*args)

def BitmapManager_SelectDeviceOutput(*args):
  """BitmapManager_SelectDeviceOutput(BitmapInfo bi, HWND hWnd) -> bool"""
  return _MaxPlus.BitmapManager_SelectDeviceOutput(*args)

def BitmapManager_SelectFileOutput(*args):
  """
    SelectFileOutput(BitmapInfo bi, HWND hWnd, wchar_t const * title=None) -> bool
    BitmapManager_SelectFileOutput(BitmapInfo bi, HWND hWnd) -> bool
    """
  return _MaxPlus.BitmapManager_SelectFileOutput(*args)

def BitmapManager_SelectFileInputEx(*args):
  """
    SelectFileInputEx(BitmapInfo bi, HWND hWnd, wchar_t const * title=None, bool viewonly=False) -> bool
    SelectFileInputEx(BitmapInfo bi, HWND hWnd, wchar_t const * title=None) -> bool
    BitmapManager_SelectFileInputEx(BitmapInfo bi, HWND hWnd) -> bool
    """
  return _MaxPlus.BitmapManager_SelectFileInputEx(*args)

def BitmapManager_CanImport(*args):
  """BitmapManager_CanImport(wchar_t const * filename) -> bool"""
  return _MaxPlus.BitmapManager_CanImport(*args)

class MenuElement(Wrapper):
    """Represents a menu or menu item."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> MenuElement"""
        return _MaxPlus.MenuElement__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(MenuElement self, Wrapper w) -> bool"""
        return _MaxPlus.MenuElement___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(MenuElement self, Wrapper w) -> bool"""
        return _MaxPlus.MenuElement___ne__(self, *args)

    def GetIsVisible(self):
        """GetIsVisible(MenuElement self) -> bool"""
        return _MaxPlus.MenuElement_GetIsVisible(self)

    def GetIsEnabled(self):
        """GetIsEnabled(MenuElement self) -> bool"""
        return _MaxPlus.MenuElement_GetIsEnabled(self)

    def GetTitle(self):
        """GetTitle(MenuElement self) -> WStr"""
        return _MaxPlus.MenuElement_GetTitle(self)

    IsVisible = _swig_property(GetIsVisible)
    IsEnabled = _swig_property(GetIsEnabled)
    Title = _swig_property(GetTitle)

    __swig_destroy__ = _MaxPlus.delete_MenuElement
    __del__ = lambda self : None;
MenuElement_swigregister = _MaxPlus.MenuElement_swigregister
MenuElement_swigregister(MenuElement)

def MenuElement__CastFrom(*args):
  """MenuElement__CastFrom(InterfaceServer b) -> MenuElement"""
  return _MaxPlus.MenuElement__CastFrom(*args)

class MenuItem(MenuElement):
    """Represents an interface for a menu item."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> MenuItem"""
        return _MaxPlus.MenuItem__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(MenuItem self, Wrapper w) -> bool"""
        return _MaxPlus.MenuItem___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(MenuItem self, Wrapper w) -> bool"""
        return _MaxPlus.MenuItem___ne__(self, *args)

    def AsFPInterface(self):
        """AsFPInterface(MenuItem self) -> FPInterface"""
        return _MaxPlus.MenuItem_AsFPInterface(self)

    def GetHasSubMenu(self):
        """GetHasSubMenu(MenuItem self) -> bool"""
        return _MaxPlus.MenuItem_GetHasSubMenu(self)

    def ExecuteAction(self):
        """ExecuteAction(MenuItem self) -> bool"""
        return _MaxPlus.MenuItem_ExecuteAction(self)

    def GetIsSeparator(self):
        """GetIsSeparator(MenuItem self) -> bool"""
        return _MaxPlus.MenuItem_GetIsSeparator(self)

    def GetActionItem(self):
        """GetActionItem(MenuItem self) -> ActionItem"""
        return _MaxPlus.MenuItem_GetActionItem(self)

    def GetSubMenu(self):
        """GetSubMenu(MenuItem self) -> Menu"""
        return _MaxPlus.MenuItem_GetSubMenu(self)

    HasSubMenu = _swig_property(GetHasSubMenu)
    IsSeparator = _swig_property(GetIsSeparator)
    ActionItem = _swig_property(GetActionItem)
    SubMenu = _swig_property(GetSubMenu)

    __swig_destroy__ = _MaxPlus.delete_MenuItem
    __del__ = lambda self : None;
MenuItem_swigregister = _MaxPlus.MenuItem_swigregister
MenuItem_swigregister(MenuItem)

def MenuItem__CastFrom(*args):
  """MenuItem__CastFrom(InterfaceServer b) -> MenuItem"""
  return _MaxPlus.MenuItem__CastFrom(*args)

class Menu(MenuElement):
    """Represents a menu."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Menu"""
        return _MaxPlus.Menu__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Menu self, Wrapper w) -> bool"""
        return _MaxPlus.Menu___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Menu self, Wrapper w) -> bool"""
        return _MaxPlus.Menu___ne__(self, *args)

    def GetNumItems(self):
        """GetNumItems(Menu self) -> int"""
        return _MaxPlus.Menu_GetNumItems(self)

    def GetItem(self, *args):
        """GetItem(Menu self, int n) -> MenuItem"""
        return _MaxPlus.Menu_GetItem(self, *args)

    Items = _swig_property(lambda self: (self.GetItem(i) for i in xrange(self.GetNumItems())))
    NumItems = _swig_property(GetNumItems)

    __swig_destroy__ = _MaxPlus.delete_Menu
    __del__ = lambda self : None;
Menu_swigregister = _MaxPlus.Menu_swigregister
Menu_swigregister(Menu)

def Menu__CastFrom(*args):
  """Menu__CastFrom(InterfaceServer b) -> Menu"""
  return _MaxPlus.Menu__CastFrom(*args)

class QuadMenu(FPInterface):
    """Represents a QuadMenu."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> QuadMenu"""
        return _MaxPlus.QuadMenu__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(QuadMenu self, Wrapper w) -> bool"""
        return _MaxPlus.QuadMenu___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(QuadMenu self, Wrapper w) -> bool"""
        return _MaxPlus.QuadMenu___ne__(self, *args)

    def GetNumMenus(self):
        """GetNumMenus(QuadMenu self) -> int"""
        return _MaxPlus.QuadMenu_GetNumMenus(self)

    def GetMenu(self, *args):
        """GetMenu(QuadMenu self, int position) -> Menu"""
        return _MaxPlus.QuadMenu_GetMenu(self, *args)

    Menus = _swig_property(lambda self: (self.GetMenu(i) for i in xrange(self.GetNumMenus())))
    NumMenus = _swig_property(GetNumMenus)

    __swig_destroy__ = _MaxPlus.delete_QuadMenu
    __del__ = lambda self : None;
QuadMenu_swigregister = _MaxPlus.QuadMenu_swigregister
QuadMenu_swigregister(QuadMenu)

def QuadMenu__CastFrom(*args):
  """QuadMenu__CastFrom(InterfaceServer b) -> QuadMenu"""
  return _MaxPlus.QuadMenu__CastFrom(*args)

class MenuManager(FPStaticInterface):
    """Menu utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> MenuManager"""
        return _MaxPlus.MenuManager__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(MenuManager self, Wrapper w) -> bool"""
        return _MaxPlus.MenuManager___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(MenuManager self, Wrapper w) -> bool"""
        return _MaxPlus.MenuManager___ne__(self, *args)

    def FindMenu(*args):
        """FindMenu(wchar_t const * name) -> Menu"""
        return _MaxPlus.MenuManager_FindMenu(*args)

    FindMenu = staticmethod(FindMenu)
    def LoadMenuFile(*args):
        """LoadMenuFile(wchar_t const * pMenuFile) -> BOOL"""
        return _MaxPlus.MenuManager_LoadMenuFile(*args)

    LoadMenuFile = staticmethod(LoadMenuFile)
    def SaveMenuFile(*args):
        """SaveMenuFile(wchar_t const * pMenuFile) -> BOOL"""
        return _MaxPlus.MenuManager_SaveMenuFile(*args)

    SaveMenuFile = staticmethod(SaveMenuFile)
    def GetMenuFile():
        """GetMenuFile() -> wchar_t const *"""
        return _MaxPlus.MenuManager_GetMenuFile()

    GetMenuFile = staticmethod(GetMenuFile)
    def GetMainMenu():
        """GetMainMenu() -> Menu"""
        return _MaxPlus.MenuManager_GetMainMenu()

    GetMainMenu = staticmethod(GetMainMenu)
    def UnregisterMenu(*args):
        """
        UnregisterMenu(wchar_t const * name)
        UnregisterMenu(Menu menu)
        """
        return _MaxPlus.MenuManager_UnregisterMenu(*args)

    UnregisterMenu = staticmethod(UnregisterMenu)
    def MenuExists(*args):
        """MenuExists(wchar_t const * name) -> bool"""
        return _MaxPlus.MenuManager_MenuExists(*args)

    MenuExists = staticmethod(MenuExists)
    __swig_destroy__ = _MaxPlus.delete_MenuManager
    __del__ = lambda self : None;
MenuManager_swigregister = _MaxPlus.MenuManager_swigregister
MenuManager_swigregister(MenuManager)

def MenuManager__CastFrom(*args):
  """MenuManager__CastFrom(InterfaceServer b) -> MenuManager"""
  return _MaxPlus.MenuManager__CastFrom(*args)

def MenuManager_FindMenu(*args):
  """MenuManager_FindMenu(wchar_t const * name) -> Menu"""
  return _MaxPlus.MenuManager_FindMenu(*args)

def MenuManager_LoadMenuFile(*args):
  """MenuManager_LoadMenuFile(wchar_t const * pMenuFile) -> BOOL"""
  return _MaxPlus.MenuManager_LoadMenuFile(*args)

def MenuManager_SaveMenuFile(*args):
  """MenuManager_SaveMenuFile(wchar_t const * pMenuFile) -> BOOL"""
  return _MaxPlus.MenuManager_SaveMenuFile(*args)

def MenuManager_GetMenuFile():
  """MenuManager_GetMenuFile() -> wchar_t const *"""
  return _MaxPlus.MenuManager_GetMenuFile()

def MenuManager_GetMainMenu():
  """MenuManager_GetMainMenu() -> Menu"""
  return _MaxPlus.MenuManager_GetMainMenu()

def MenuManager_UnregisterMenu(*args):
  """
    UnregisterMenu(wchar_t const * name)
    MenuManager_UnregisterMenu(Menu menu)
    """
  return _MaxPlus.MenuManager_UnregisterMenu(*args)

def MenuManager_MenuExists(*args):
  """MenuManager_MenuExists(wchar_t const * name) -> bool"""
  return _MaxPlus.MenuManager_MenuExists(*args)

class MenuBuilder(object):
    """Used for constructing new menus. These menus are persistent across 3ds Max sessions. """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """__init__(Autodesk::Max::MenuBuilder self, wchar_t const * name) -> MenuBuilder"""
        this = _MaxPlus.new_MenuBuilder(*args)
        try: self.this.append(this)
        except: self.this = this
    def Create(self, *args):
        """
        Create(MenuBuilder self, Menu parent, int pos=-1) -> Menu
        Create(MenuBuilder self, Menu parent) -> Menu
        Create(MenuBuilder self) -> Menu
        """
        return _MaxPlus.MenuBuilder_Create(self, *args)

    def AddSubMenu(self, *args):
        """AddSubMenu(MenuBuilder self, Menu subMenu)"""
        return _MaxPlus.MenuBuilder_AddSubMenu(self, *args)

    def AddItem(self, *args):
        """AddItem(MenuBuilder self, ActionItem action)"""
        return _MaxPlus.MenuBuilder_AddItem(self, *args)

    def AddSeparator(self):
        """AddSeparator(MenuBuilder self)"""
        return _MaxPlus.MenuBuilder_AddSeparator(self)

    __swig_destroy__ = _MaxPlus.delete_MenuBuilder
    __del__ = lambda self : None;
MenuBuilder_swigregister = _MaxPlus.MenuBuilder_swigregister
MenuBuilder_swigregister(MenuBuilder)

class ActionContext(Wrapper):
    """An identifer for a group of keyboard shortcuts. Examples are the Main 3ds Max UI, Track View, and the Editable Mesh. They are registered using IActionManager::RegisterActionContext()."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ActionContext"""
        return _MaxPlus.ActionContext__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ActionContext self, Wrapper w) -> bool"""
        return _MaxPlus.ActionContext___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ActionContext self, Wrapper w) -> bool"""
        return _MaxPlus.ActionContext___ne__(self, *args)

    def GetName(self):
        """GetName(ActionContext self) -> wchar_t const *"""
        return _MaxPlus.ActionContext_GetName(self)

    def GetContextId(self):
        """GetContextId(ActionContext self) -> ActionContextId"""
        return _MaxPlus.ActionContext_GetContextId(self)

    def IsActive(self):
        """IsActive(ActionContext self) -> bool"""
        return _MaxPlus.ActionContext_IsActive(self)

    def SetActive(self, active=True):
        """
        SetActive(ActionContext self, bool active=True)
        SetActive(ActionContext self)
        """
        return _MaxPlus.ActionContext_SetActive(self, active)

    Name = _swig_property(GetName)
    Active = _swig_property(IsActive, SetActive)
    Id = _swig_property(GetContextId)

    __swig_destroy__ = _MaxPlus.delete_ActionContext
    __del__ = lambda self : None;
ActionContext_swigregister = _MaxPlus.ActionContext_swigregister
ActionContext_swigregister(ActionContext)

def ActionContext__CastFrom(*args):
  """ActionContext__CastFrom(InterfaceServer b) -> ActionContext"""
  return _MaxPlus.ActionContext__CastFrom(*args)

class ActionItem(FPInterface):
    """An operation that can be associated with a keyboard shortcut (accelerator), menu item, or button."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ActionItem"""
        return _MaxPlus.ActionItem__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ActionItem self, Wrapper w) -> bool"""
        return _MaxPlus.ActionItem___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ActionItem self, Wrapper w) -> bool"""
        return _MaxPlus.ActionItem___ne__(self, *args)

    def ExecuteAction(self):
        """ExecuteAction(ActionItem self) -> bool"""
        return _MaxPlus.ActionItem_ExecuteAction(self)

    def Execute(self):
        """Execute(ActionItem self) -> bool"""
        return _MaxPlus.ActionItem_Execute(self)

    def GetId(self):
        """GetId(ActionItem self) -> int"""
        return _MaxPlus.ActionItem_GetId(self)

    def GetButtonText(self):
        """GetButtonText(ActionItem self) -> WStr"""
        return _MaxPlus.ActionItem_GetButtonText(self)

    def GetMenuText(self):
        """GetMenuText(ActionItem self) -> WStr"""
        return _MaxPlus.ActionItem_GetMenuText(self)

    def GetDescriptionText(self):
        """GetDescriptionText(ActionItem self) -> WStr"""
        return _MaxPlus.ActionItem_GetDescriptionText(self)

    def GetCategoryText(self):
        """GetCategoryText(ActionItem self) -> WStr"""
        return _MaxPlus.ActionItem_GetCategoryText(self)

    def GetIsChecked(self):
        """GetIsChecked(ActionItem self) -> bool"""
        return _MaxPlus.ActionItem_GetIsChecked(self)

    def GetIsIndeterminate(self):
        """GetIsIndeterminate(ActionItem self) -> bool"""
        return _MaxPlus.ActionItem_GetIsIndeterminate(self)

    def GetIsItemVisible(self):
        """GetIsItemVisible(ActionItem self) -> bool"""
        return _MaxPlus.ActionItem_GetIsItemVisible(self)

    def GetIsEnabled(self):
        """GetIsEnabled(ActionItem self) -> bool"""
        return _MaxPlus.ActionItem_GetIsEnabled(self)

    def GetShortcutString(self):
        """GetShortcutString(ActionItem self) -> WStr"""
        return _MaxPlus.ActionItem_GetShortcutString(self)

    def GetIsDynamicAction(self):
        """GetIsDynamicAction(ActionItem self) -> bool"""
        return _MaxPlus.ActionItem_GetIsDynamicAction(self)

    def _ToString(self):
        """_ToString(ActionItem self) -> ::WStr"""
        return _MaxPlus.ActionItem__ToString(self)

    Id = _swig_property(GetId)
    ButtonText = _swig_property(GetButtonText)
    MenuText = _swig_property(GetMenuText)
    Description = _swig_property(GetDescriptionText)
    Category = _swig_property(GetCategoryText)
    Checked = _swig_property(GetIsChecked)
    Indeterminate = _swig_property(GetIsIndeterminate)
    Visible = _swig_property(GetIsItemVisible)
    Enabled = _swig_property(GetIsEnabled)
    Dynamic = _swig_property(GetIsDynamicAction)
    Shortcut = _swig_property(GetShortcutString)

    __swig_destroy__ = _MaxPlus.delete_ActionItem
    __del__ = lambda self : None;
ActionItem_swigregister = _MaxPlus.ActionItem_swigregister
ActionItem_swigregister(ActionItem)

def ActionItem__CastFrom(*args):
  """ActionItem__CastFrom(InterfaceServer b) -> ActionItem"""
  return _MaxPlus.ActionItem__CastFrom(*args)

class ActionTable(FPInterface):
    """A set of actions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ActionTable"""
        return _MaxPlus.ActionTable__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ActionTable self, Wrapper w) -> bool"""
        return _MaxPlus.ActionTable___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ActionTable self, Wrapper w) -> bool"""
        return _MaxPlus.ActionTable___ne__(self, *args)

    def GetNumActions(self):
        """GetNumActions(ActionTable self) -> int"""
        return _MaxPlus.ActionTable_GetNumActions(self)

    def GetAction(self, *args):
        """GetAction(ActionTable self, int n) -> ActionItem"""
        return _MaxPlus.ActionTable_GetAction(self, *args)

    NumActions = _swig_property(GetNumActions)
    Actions = _swig_property(lambda self: (self.GetAction(i) for i in xrange(self.GetNumActions())))

    __swig_destroy__ = _MaxPlus.delete_ActionTable
    __del__ = lambda self : None;
ActionTable_swigregister = _MaxPlus.ActionTable_swigregister
ActionTable_swigregister(ActionTable)

def ActionTable__CastFrom(*args):
  """ActionTable__CastFrom(InterfaceServer b) -> ActionTable"""
  return _MaxPlus.ActionTable__CastFrom(*args)

class ActionManager(object):
    """Manages ActionTables, ActionCallbacks and ActionContexts. Handles the keyboard accelerator tables for each ActionTable as well."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetFPStaticInterface():
        """GetFPStaticInterface() -> FPStaticInterface"""
        return _MaxPlus.ActionManager_GetFPStaticInterface()

    GetFPStaticInterface = staticmethod(GetFPStaticInterface)
    def GetShortcutFile():
        """GetShortcutFile() -> wchar_t const *"""
        return _MaxPlus.ActionManager_GetShortcutFile()

    GetShortcutFile = staticmethod(GetShortcutFile)
    def GetShortcutDir():
        """GetShortcutDir() -> wchar_t const *"""
        return _MaxPlus.ActionManager_GetShortcutDir()

    GetShortcutDir = staticmethod(GetShortcutDir)
    def IdToIndex(*args):
        """IdToIndex(ActionTableId id) -> int"""
        return _MaxPlus.ActionManager_IdToIndex(*args)

    IdToIndex = staticmethod(IdToIndex)
    def SaveAllContextsToINI():
        """SaveAllContextsToINI()"""
        return _MaxPlus.ActionManager_SaveAllContextsToINI()

    SaveAllContextsToINI = staticmethod(SaveAllContextsToINI)
    def MakeActionSetCurrent(*args):
        """MakeActionSetCurrent(wchar_t const * pDir, wchar_t const * pFile) -> int"""
        return _MaxPlus.ActionManager_MakeActionSetCurrent(*args)

    MakeActionSetCurrent = staticmethod(MakeActionSetCurrent)
    def SaveKeyboardFile(*args):
        """SaveKeyboardFile(wchar_t const * pFileName) -> bool"""
        return _MaxPlus.ActionManager_SaveKeyboardFile(*args)

    SaveKeyboardFile = staticmethod(SaveKeyboardFile)
    def LoadKeyboardFile(*args):
        """LoadKeyboardFile(wchar_t const * pFileName) -> bool"""
        return _MaxPlus.ActionManager_LoadKeyboardFile(*args)

    LoadKeyboardFile = staticmethod(LoadKeyboardFile)
    def GetKeyboardFile():
        """GetKeyboardFile() -> wchar_t const *"""
        return _MaxPlus.ActionManager_GetKeyboardFile()

    GetKeyboardFile = staticmethod(GetKeyboardFile)
    def RegisterActionTable(self, *args):
        """RegisterActionTable(ActionManager self, ActionTable pTable)"""
        return _MaxPlus.ActionManager_RegisterActionTable(self, *args)

    def GetNumActionTables():
        """GetNumActionTables() -> int"""
        return _MaxPlus.ActionManager_GetNumActionTables()

    GetNumActionTables = staticmethod(GetNumActionTables)
    def GetActionTable(*args):
        """GetActionTable(int i) -> ActionTable"""
        return _MaxPlus.ActionManager_GetActionTable(*args)

    GetActionTable = staticmethod(GetActionTable)
    def FindTable(self, *args):
        """FindTable(ActionManager self, ActionTableId id) -> ActionTable"""
        return _MaxPlus.ActionManager_FindTable(self, *args)

    def RegisterActionContext(*args):
        """RegisterActionContext(ActionContextId contextId, wchar_t const * pName) -> bool"""
        return _MaxPlus.ActionManager_RegisterActionContext(*args)

    RegisterActionContext = staticmethod(RegisterActionContext)
    def GetNumActionContexts():
        """GetNumActionContexts() -> int"""
        return _MaxPlus.ActionManager_GetNumActionContexts()

    GetNumActionContexts = staticmethod(GetNumActionContexts)
    def GetActionContext(*args):
        """GetActionContext(int i) -> ActionContext"""
        return _MaxPlus.ActionManager_GetActionContext(*args)

    GetActionContext = staticmethod(GetActionContext)
    def FindContext(*args):
        """FindContext(ActionContextId contextId) -> ActionContext"""
        return _MaxPlus.ActionManager_FindContext(*args)

    FindContext = staticmethod(FindContext)
    def IsContextActive(*args):
        """IsContextActive(ActionContextId contextId) -> bool"""
        return _MaxPlus.ActionManager_IsContextActive(*args)

    IsContextActive = staticmethod(IsContextActive)
    ActionTables = _static_generator_property(GetNumActionTables,GetActionTable)
    ActionContexts = _static_generator_property(GetNumActionContexts,GetActionContext)

    __swig_destroy__ = _MaxPlus.delete_ActionManager
    __del__ = lambda self : None;
ActionManager_swigregister = _MaxPlus.ActionManager_swigregister
ActionManager_swigregister(ActionManager)

def ActionManager_GetFPStaticInterface():
  """ActionManager_GetFPStaticInterface() -> FPStaticInterface"""
  return _MaxPlus.ActionManager_GetFPStaticInterface()

def ActionManager_GetShortcutFile():
  """ActionManager_GetShortcutFile() -> wchar_t const *"""
  return _MaxPlus.ActionManager_GetShortcutFile()

def ActionManager_GetShortcutDir():
  """ActionManager_GetShortcutDir() -> wchar_t const *"""
  return _MaxPlus.ActionManager_GetShortcutDir()

def ActionManager_IdToIndex(*args):
  """ActionManager_IdToIndex(ActionTableId id) -> int"""
  return _MaxPlus.ActionManager_IdToIndex(*args)

def ActionManager_SaveAllContextsToINI():
  """ActionManager_SaveAllContextsToINI()"""
  return _MaxPlus.ActionManager_SaveAllContextsToINI()

def ActionManager_MakeActionSetCurrent(*args):
  """ActionManager_MakeActionSetCurrent(wchar_t const * pDir, wchar_t const * pFile) -> int"""
  return _MaxPlus.ActionManager_MakeActionSetCurrent(*args)

def ActionManager_SaveKeyboardFile(*args):
  """ActionManager_SaveKeyboardFile(wchar_t const * pFileName) -> bool"""
  return _MaxPlus.ActionManager_SaveKeyboardFile(*args)

def ActionManager_LoadKeyboardFile(*args):
  """ActionManager_LoadKeyboardFile(wchar_t const * pFileName) -> bool"""
  return _MaxPlus.ActionManager_LoadKeyboardFile(*args)

def ActionManager_GetKeyboardFile():
  """ActionManager_GetKeyboardFile() -> wchar_t const *"""
  return _MaxPlus.ActionManager_GetKeyboardFile()

def ActionManager_GetNumActionTables():
  """ActionManager_GetNumActionTables() -> int"""
  return _MaxPlus.ActionManager_GetNumActionTables()

def ActionManager_GetActionTable(*args):
  """ActionManager_GetActionTable(int i) -> ActionTable"""
  return _MaxPlus.ActionManager_GetActionTable(*args)

def ActionManager_RegisterActionContext(*args):
  """ActionManager_RegisterActionContext(ActionContextId contextId, wchar_t const * pName) -> bool"""
  return _MaxPlus.ActionManager_RegisterActionContext(*args)

def ActionManager_GetNumActionContexts():
  """ActionManager_GetNumActionContexts() -> int"""
  return _MaxPlus.ActionManager_GetNumActionContexts()

def ActionManager_GetActionContext(*args):
  """ActionManager_GetActionContext(int i) -> ActionContext"""
  return _MaxPlus.ActionManager_GetActionContext(*args)

def ActionManager_FindContext(*args):
  """ActionManager_FindContext(ActionContextId contextId) -> ActionContext"""
  return _MaxPlus.ActionManager_FindContext(*args)

def ActionManager_IsContextActive(*args):
  """ActionManager_IsContextActive(ActionContextId contextId) -> bool"""
  return _MaxPlus.ActionManager_IsContextActive(*args)

class AbstractCustomActionItem(object):
    """Derive from this class to create new custom user actions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::AbstractCustomActionItem self) -> AbstractCustomActionItem"""
        if self.__class__ == AbstractCustomActionItem:
            _self = None
        else:
            _self = self
        this = _MaxPlus.new_AbstractCustomActionItem(_self, )
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_AbstractCustomActionItem
    __del__ = lambda self : None;
    def Execute(self):
        """Execute(AbstractCustomActionItem self) -> bool"""
        return _MaxPlus.AbstractCustomActionItem_Execute(self)

    def GetId(self):
        """GetId(AbstractCustomActionItem self) -> int"""
        return _MaxPlus.AbstractCustomActionItem_GetId(self)

    def GetCategoryText(self):
        """GetCategoryText(AbstractCustomActionItem self) -> wchar_t const *"""
        return _MaxPlus.AbstractCustomActionItem_GetCategoryText(self)

    def GetMenuText(self):
        """GetMenuText(AbstractCustomActionItem self) -> wchar_t const *"""
        return _MaxPlus.AbstractCustomActionItem_GetMenuText(self)

    def GetButtonText(self):
        """GetButtonText(AbstractCustomActionItem self) -> wchar_t const *"""
        return _MaxPlus.AbstractCustomActionItem_GetButtonText(self)

    def GetDescription(self):
        """GetDescription(AbstractCustomActionItem self) -> wchar_t const *"""
        return _MaxPlus.AbstractCustomActionItem_GetDescription(self)

    def IsEnabled(self):
        """IsEnabled(AbstractCustomActionItem self) -> bool"""
        return _MaxPlus.AbstractCustomActionItem_IsEnabled(self)

    def IsChecked(self):
        """IsChecked(AbstractCustomActionItem self) -> bool"""
        return _MaxPlus.AbstractCustomActionItem_IsChecked(self)

    def IsIndeterminate(self):
        """IsIndeterminate(AbstractCustomActionItem self) -> bool"""
        return _MaxPlus.AbstractCustomActionItem_IsIndeterminate(self)

    def IsVisible(self):
        """IsVisible(AbstractCustomActionItem self) -> bool"""
        return _MaxPlus.AbstractCustomActionItem_IsVisible(self)

    def __disown__(self):
        self.this.disown()
        _MaxPlus.disown_AbstractCustomActionItem(self)
        return weakref_proxy(self)
AbstractCustomActionItem_swigregister = _MaxPlus.AbstractCustomActionItem_swigregister
AbstractCustomActionItem_swigregister(AbstractCustomActionItem)

class _INTERNAL_CustomActionCallback(object):
    """FOR INTERNAL USE ONLY: used to create new custom actions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def ExecuteAction(self, *args):
        """ExecuteAction(_INTERNAL_CustomActionCallback self, int arg2) -> BOOL"""
        return _MaxPlus._INTERNAL_CustomActionCallback_ExecuteAction(self, *args)

    def AddAction(*args):
        """AddAction(AbstractCustomActionItem item) -> ActionItem"""
        return _MaxPlus._INTERNAL_CustomActionCallback_AddAction(*args)

    AddAction = staticmethod(AddAction)
    __swig_destroy__ = _MaxPlus.delete__INTERNAL_CustomActionCallback
    __del__ = lambda self : None;
_INTERNAL_CustomActionCallback_swigregister = _MaxPlus._INTERNAL_CustomActionCallback_swigregister
_INTERNAL_CustomActionCallback_swigregister(_INTERNAL_CustomActionCallback)

def _INTERNAL_CustomActionCallback_AddAction(*args):
  """_INTERNAL_CustomActionCallback_AddAction(AbstractCustomActionItem item) -> ActionItem"""
  return _MaxPlus._INTERNAL_CustomActionCallback_AddAction(*args)

class MtlBase(ReferenceTarget):
    """Base classes of texture maps and materials."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> MtlBase"""
        return _MaxPlus.MtlBase__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(MtlBase self, Wrapper w) -> bool"""
        return _MaxPlus.MtlBase___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(MtlBase self, Wrapper w) -> bool"""
        return _MaxPlus.MtlBase___ne__(self, *args)

    def _CreateWrapper(*args):
        """_CreateWrapper(void * mtlbase_pointer) -> MtlBase"""
        return _MaxPlus.MtlBase__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> MtlBase"""
        return _MaxPlus.MtlBase__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(MtlBase self, void * mtlbase_pointer)"""
        return _MaxPlus.MtlBase__SetValue(self, *args)

    def GetName(self):
        """GetName(MtlBase self) -> WStr"""
        return _MaxPlus.MtlBase_GetName(self)

    def SetName(self, *args):
        """SetName(MtlBase self, WStr s)"""
        return _MaxPlus.MtlBase_SetName(self, *args)

    def SetMtlFlag(self, *args):
        """
        SetMtlFlag(MtlBase self, int mask, bool val=TRUE)
        SetMtlFlag(MtlBase self, int mask)
        """
        return _MaxPlus.MtlBase_SetMtlFlag(self, *args)

    def ClearMtlFlag(self, *args):
        """ClearMtlFlag(MtlBase self, int mask)"""
        return _MaxPlus.MtlBase_ClearMtlFlag(self, *args)

    def TestMtlFlag(self, *args):
        """TestMtlFlag(MtlBase self, int mask) -> int"""
        return _MaxPlus.MtlBase_TestMtlFlag(self, *args)

    def GetMeditObjType(self):
        """GetMeditObjType(MtlBase self) -> int"""
        return _MaxPlus.MtlBase_GetMeditObjType(self)

    def SetMeditObjType(self, *args):
        """SetMeditObjType(MtlBase self, int t)"""
        return _MaxPlus.MtlBase_SetMeditObjType(self, *args)

    def GetMeditTiling(self):
        """GetMeditTiling(MtlBase self) -> int"""
        return _MaxPlus.MtlBase_GetMeditTiling(self)

    def SetMeditTiling(self, *args):
        """SetMeditTiling(MtlBase self, int t)"""
        return _MaxPlus.MtlBase_SetMeditTiling(self, *args)

    def AnyMulti(self):
        """AnyMulti(MtlBase self) -> bool"""
        return _MaxPlus.MtlBase_AnyMulti(self)

    def TextureDisplayEnabled(self):
        """TextureDisplayEnabled(MtlBase self) -> bool"""
        return _MaxPlus.MtlBase_TextureDisplayEnabled(self)

    def GetFullName(self):
        """GetFullName(MtlBase self) -> WStr"""
        return _MaxPlus.MtlBase_GetFullName(self)

    def Requirements(self, *args):
        """Requirements(MtlBase self, int subMtlNum) -> ULONG"""
        return _MaxPlus.MtlBase_Requirements(self, *args)

    def LocalRequirements(self, *args):
        """LocalRequirements(MtlBase self, int subMtlNum) -> ULONG"""
        return _MaxPlus.MtlBase_LocalRequirements(self, *args)

    def MappingsRequired(self, *args):
        """MappingsRequired(MtlBase self, int subMtlNum, BitArray mapreq, BitArray bumpreq)"""
        return _MaxPlus.MtlBase_MappingsRequired(self, *args)

    def LocalMappingsRequired(self, *args):
        """LocalMappingsRequired(MtlBase self, int subMtlNum, BitArray mapreq, BitArray bumpreq)"""
        return _MaxPlus.MtlBase_LocalMappingsRequired(self, *args)

    def IsMultiMtl(self):
        """IsMultiMtl(MtlBase self) -> bool"""
        return _MaxPlus.MtlBase_IsMultiMtl(self)

    def MapSlotType(self, *args):
        """MapSlotType(MtlBase self, int i) -> int"""
        return _MaxPlus.MtlBase_MapSlotType(self, *args)

    def DeactivateMapsInTree(self):
        """DeactivateMapsInTree(MtlBase self)"""
        return _MaxPlus.MtlBase_DeactivateMapsInTree(self)

    def Update(self, *args):
        """Update(MtlBase self, TimeValue t, Interval valid)"""
        return _MaxPlus.MtlBase_Update(self, *args)

    def Reset(self):
        """Reset(MtlBase self)"""
        return _MaxPlus.MtlBase_Reset(self)

    def Validity(self, *args):
        """Validity(MtlBase self, TimeValue t) -> Interval"""
        return _MaxPlus.MtlBase_Validity(self, *args)

    def GetGBufID(self):
        """GetGBufID(MtlBase self) -> ULONG"""
        return _MaxPlus.MtlBase_GetGBufID(self)

    def SetGBufID(self, *args):
        """SetGBufID(MtlBase self, ULONG id)"""
        return _MaxPlus.MtlBase_SetGBufID(self, *args)

    def SupportTexDisplay(self):
        """SupportTexDisplay(MtlBase self) -> bool"""
        return _MaxPlus.MtlBase_SupportTexDisplay(self)

    def ActivateTexDisplay(self, *args):
        """ActivateTexDisplay(MtlBase self, bool onoff)"""
        return _MaxPlus.MtlBase_ActivateTexDisplay(self, *args)

    def GetActiveMB(self):
        """GetActiveMB(MtlBase self) -> MtlBase"""
        return _MaxPlus.MtlBase_GetActiveMB(self)

    def SetActiveMB(self, *args):
        """SetActiveMB(MtlBase self, MtlBase activeMB)"""
        return _MaxPlus.MtlBase_SetActiveMB(self, *args)

    def SupportsMultiMapsInViewport(self):
        """SupportsMultiMapsInViewport(MtlBase self) -> bool"""
        return _MaxPlus.MtlBase_SupportsMultiMapsInViewport(self)

    def GetRefTarget(self):
        """GetRefTarget(MtlBase self) -> ReferenceTarget"""
        return _MaxPlus.MtlBase_GetRefTarget(self)

    def GetTransparencyHint(self, *args):
        """GetTransparencyHint(MtlBase self, TimeValue t, Interval valid) -> bool"""
        return _MaxPlus.MtlBase_GetTransparencyHint(self, *args)

    def GetMEditRotate(self):
        """GetMEditRotate(MtlBase self) -> Quat"""
        return _MaxPlus.MtlBase_GetMEditRotate(self)

    __swig_destroy__ = _MaxPlus.delete_MtlBase
    __del__ = lambda self : None;
MtlBase_swigregister = _MaxPlus.MtlBase_swigregister
MtlBase_swigregister(MtlBase)

def MtlBase__CastFrom(*args):
  """MtlBase__CastFrom(InterfaceServer b) -> MtlBase"""
  return _MaxPlus.MtlBase__CastFrom(*args)

def MtlBase__CreateWrapper(*args):
  """MtlBase__CreateWrapper(void * mtlbase_pointer) -> MtlBase"""
  return _MaxPlus.MtlBase__CreateWrapper(*args)

def MtlBase__CreateWrapperFromFPValue(*args):
  """MtlBase__CreateWrapperFromFPValue(void * fpvalue_pointer) -> MtlBase"""
  return _MaxPlus.MtlBase__CreateWrapperFromFPValue(*args)

class TextureOutput(MtlBase):
    """Used by texture maps to put up the 'Output' rollup in the materials editor, and perform the output filtering."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> TextureOutput"""
        return _MaxPlus.TextureOutput__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(TextureOutput self, Wrapper w) -> bool"""
        return _MaxPlus.TextureOutput___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(TextureOutput self, Wrapper w) -> bool"""
        return _MaxPlus.TextureOutput___ne__(self, *args)

    def Filter(self, *args):
        """
        Filter(TextureOutput self, AColor c) -> AColor
        Filter(TextureOutput self, float f) -> float
        Filter(TextureOutput self, Point3 p) -> Point3
        """
        return _MaxPlus.TextureOutput_Filter(self, *args)

    def GetOutputLevel(self, *args):
        """
        GetOutputLevel(TextureOutput self, TimeValue t=Autodesk::Max::Now()) -> float
        GetOutputLevel(TextureOutput self) -> float
        """
        return _MaxPlus.TextureOutput_GetOutputLevel(self, *args)

    def SetOutputLevel(self, *args):
        """
        SetOutputLevel(TextureOutput self, float v, TimeValue t=Autodesk::Max::Now())
        SetOutputLevel(TextureOutput self, float v)
        """
        return _MaxPlus.TextureOutput_SetOutputLevel(self, *args)

    def SetInvert(self, *args):
        """SetInvert(TextureOutput self, bool onoff)"""
        return _MaxPlus.TextureOutput_SetInvert(self, *args)

    def GetInvert(self):
        """GetInvert(TextureOutput self) -> bool"""
        return _MaxPlus.TextureOutput_GetInvert(self)

    def SetRollupOpen(self, *args):
        """SetRollupOpen(TextureOutput self, bool open)"""
        return _MaxPlus.TextureOutput_SetRollupOpen(self, *args)

    def GetRollupOpen(self):
        """GetRollupOpen(TextureOutput self) -> bool"""
        return _MaxPlus.TextureOutput_GetRollupOpen(self)

    __swig_destroy__ = _MaxPlus.delete_TextureOutput
    __del__ = lambda self : None;
TextureOutput_swigregister = _MaxPlus.TextureOutput_swigregister
TextureOutput_swigregister(TextureOutput)

def TextureOutput__CastFrom(*args):
  """TextureOutput__CastFrom(InterfaceServer b) -> TextureOutput"""
  return _MaxPlus.TextureOutput__CastFrom(*args)

class Texmap(MtlBase):
    """Texture map base class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Texmap"""
        return _MaxPlus.Texmap__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Texmap self, Wrapper w) -> bool"""
        return _MaxPlus.Texmap___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Texmap self, Wrapper w) -> bool"""
        return _MaxPlus.Texmap___ne__(self, *args)

    def _CreateWrapper(*args):
        """_CreateWrapper(void * texmap_pointer) -> Texmap"""
        return _MaxPlus.Texmap__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Texmap"""
        return _MaxPlus.Texmap__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Texmap self, void * texmap_pointer)"""
        return _MaxPlus.Texmap__SetValue(self, *args)

    def GetHandlesOwnViewPerturb(self):
        """GetHandlesOwnViewPerturb(Texmap self) -> bool"""
        return _MaxPlus.Texmap_GetHandlesOwnViewPerturb(self)

    def GetUVTransform(self, *args):
        """GetUVTransform(Texmap self, Matrix3 uvtrans)"""
        return _MaxPlus.Texmap_GetUVTransform(self, *args)

    def GetTextureTiling(self):
        """GetTextureTiling(Texmap self) -> int"""
        return _MaxPlus.Texmap_GetTextureTiling(self)

    def InitSlotType(self, *args):
        """InitSlotType(Texmap self, int sType)"""
        return _MaxPlus.Texmap_InitSlotType(self, *args)

    def GetUVWSource(self):
        """GetUVWSource(Texmap self) -> int"""
        return _MaxPlus.Texmap_GetUVWSource(self)

    def GetMapChannel(self):
        """GetMapChannel(Texmap self) -> int"""
        return _MaxPlus.Texmap_GetMapChannel(self)

    def RecurseInitSlotType(self, *args):
        """RecurseInitSlotType(Texmap self, int sType)"""
        return _MaxPlus.Texmap_RecurseInitSlotType(self, *args)

    def SetOutputLevel(self, *args):
        """
        SetOutputLevel(Texmap self, float v, TimeValue t=Autodesk::Max::Now())
        SetOutputLevel(Texmap self, float v)
        """
        return _MaxPlus.Texmap_SetOutputLevel(self, *args)

    def LoadMapFiles(self, *args):
        """
        LoadMapFiles(Texmap self, TimeValue t=Autodesk::Max::Now()) -> int
        LoadMapFiles(Texmap self) -> int
        """
        return _MaxPlus.Texmap_LoadMapFiles(self, *args)

    def RenderBitmap(self, *args):
        """
        RenderBitmap(Texmap self, Bitmap bm, float scale3D=1.0, bool filter=True, TimeValue t=Autodesk::Max::Now())
        RenderBitmap(Texmap self, Bitmap bm, float scale3D=1.0, bool filter=True)
        RenderBitmap(Texmap self, Bitmap bm, float scale3D=1.0)
        RenderBitmap(Texmap self, Bitmap bm)
        """
        return _MaxPlus.Texmap_RenderBitmap(self, *args)

    def IsHighDynamicRange(self):
        """IsHighDynamicRange(Texmap self) -> int"""
        return _MaxPlus.Texmap_IsHighDynamicRange(self)

    __swig_destroy__ = _MaxPlus.delete_Texmap
    __del__ = lambda self : None;
Texmap_swigregister = _MaxPlus.Texmap_swigregister
Texmap_swigregister(Texmap)

def Texmap__CastFrom(*args):
  """Texmap__CastFrom(InterfaceServer b) -> Texmap"""
  return _MaxPlus.Texmap__CastFrom(*args)

def Texmap__CreateWrapper(*args):
  """Texmap__CreateWrapper(void * texmap_pointer) -> Texmap"""
  return _MaxPlus.Texmap__CreateWrapper(*args)

def Texmap__CreateWrapperFromFPValue(*args):
  """Texmap__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Texmap"""
  return _MaxPlus.Texmap__CreateWrapperFromFPValue(*args)

class BitmapTex(Texmap):
    """Bitmap texture."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> BitmapTex"""
        return _MaxPlus.BitmapTex__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(BitmapTex self, Wrapper w) -> bool"""
        return _MaxPlus.BitmapTex___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(BitmapTex self, Wrapper w) -> bool"""
        return _MaxPlus.BitmapTex___ne__(self, *args)

    def SetFilterType(self, *args):
        """SetFilterType(BitmapTex self, int ft)"""
        return _MaxPlus.BitmapTex_SetFilterType(self, *args)

    def SetAlphaSource(self, *args):
        """SetAlphaSource(BitmapTex self, int as)"""
        return _MaxPlus.BitmapTex_SetAlphaSource(self, *args)

    def SetEndCondition(self, *args):
        """SetEndCondition(BitmapTex self, int endcond)"""
        return _MaxPlus.BitmapTex_SetEndCondition(self, *args)

    def SetAlphaAsMono(self, *args):
        """SetAlphaAsMono(BitmapTex self, bool onoff)"""
        return _MaxPlus.BitmapTex_SetAlphaAsMono(self, *args)

    def SetAlphaAsRGB(self, *args):
        """SetAlphaAsRGB(BitmapTex self, bool onoff)"""
        return _MaxPlus.BitmapTex_SetAlphaAsRGB(self, *args)

    def SetPremultAlpha(self, *args):
        """SetPremultAlpha(BitmapTex self, bool onoff)"""
        return _MaxPlus.BitmapTex_SetPremultAlpha(self, *args)

    def SetMapName(self, *args):
        """
        SetMapName(BitmapTex self, wchar_t const * name, bool isUIAction=False)
        SetMapName(BitmapTex self, wchar_t const * name)
        """
        return _MaxPlus.BitmapTex_SetMapName(self, *args)

    def SetMap(self, *args):
        """
        SetMap(BitmapTex self, Asset asset, bool isUIAction=False)
        SetMap(BitmapTex self, Asset asset)
        """
        return _MaxPlus.BitmapTex_SetMap(self, *args)

    def SetStartTime(self, *args):
        """SetStartTime(BitmapTex self, TimeValue t)"""
        return _MaxPlus.BitmapTex_SetStartTime(self, *args)

    def SetPlaybackRate(self, *args):
        """SetPlaybackRate(BitmapTex self, float r)"""
        return _MaxPlus.BitmapTex_SetPlaybackRate(self, *args)

    def GetFilterType(self):
        """GetFilterType(BitmapTex self) -> int"""
        return _MaxPlus.BitmapTex_GetFilterType(self)

    def GetAlphaSource(self):
        """GetAlphaSource(BitmapTex self) -> int"""
        return _MaxPlus.BitmapTex_GetAlphaSource(self)

    def GetEndCondition(self):
        """GetEndCondition(BitmapTex self) -> int"""
        return _MaxPlus.BitmapTex_GetEndCondition(self)

    def GetAlphaAsMono(self, *args):
        """GetAlphaAsMono(BitmapTex self, bool onoff) -> bool"""
        return _MaxPlus.BitmapTex_GetAlphaAsMono(self, *args)

    def GetAlphaAsRGB(self, *args):
        """GetAlphaAsRGB(BitmapTex self, bool onoff) -> bool"""
        return _MaxPlus.BitmapTex_GetAlphaAsRGB(self, *args)

    def GetPremultAlpha(self, *args):
        """GetPremultAlpha(BitmapTex self, bool onoff) -> bool"""
        return _MaxPlus.BitmapTex_GetPremultAlpha(self, *args)

    def GetMapName(self):
        """GetMapName(BitmapTex self) -> wchar_t const *"""
        return _MaxPlus.BitmapTex_GetMapName(self)

    def GetMap(self):
        """GetMap(BitmapTex self) -> Asset"""
        return _MaxPlus.BitmapTex_GetMap(self)

    def GetStartTime(self):
        """GetStartTime(BitmapTex self) -> TimeValue"""
        return _MaxPlus.BitmapTex_GetStartTime(self)

    def GetPlaybackRate(self):
        """GetPlaybackRate(BitmapTex self) -> float"""
        return _MaxPlus.BitmapTex_GetPlaybackRate(self)

    def SetBitmap(self, *args):
        """SetBitmap(BitmapTex self, Bitmap bm)"""
        return _MaxPlus.BitmapTex_SetBitmap(self, *args)

    def GetBitmap(self, *args):
        """
        GetBitmap(BitmapTex self, TimeValue t=Autodesk::Max::Now()) -> Bitmap
        GetBitmap(BitmapTex self) -> Bitmap
        """
        return _MaxPlus.BitmapTex_GetBitmap(self, *args)

    def BitmapLoadDlg(self):
        """BitmapLoadDlg(BitmapTex self)"""
        return _MaxPlus.BitmapTex_BitmapLoadDlg(self)

    def ReloadBitmapAndUpdate(self):
        """ReloadBitmapAndUpdate(BitmapTex self)"""
        return _MaxPlus.BitmapTex_ReloadBitmapAndUpdate(self)

    __swig_destroy__ = _MaxPlus.delete_BitmapTex
    __del__ = lambda self : None;
BitmapTex_swigregister = _MaxPlus.BitmapTex_swigregister
BitmapTex_swigregister(BitmapTex)

def BitmapTex__CastFrom(*args):
  """BitmapTex__CastFrom(InterfaceServer b) -> BitmapTex"""
  return _MaxPlus.BitmapTex__CastFrom(*args)

class Mtl(MtlBase):
    """Material base class."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Mtl"""
        return _MaxPlus.Mtl__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Mtl self, Wrapper w) -> bool"""
        return _MaxPlus.Mtl___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Mtl self, Wrapper w) -> bool"""
        return _MaxPlus.Mtl___ne__(self, *args)

    def _CreateWrapper(*args):
        """_CreateWrapper(void * mtl_pointer) -> Mtl"""
        return _MaxPlus.Mtl__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Mtl"""
        return _MaxPlus.Mtl__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Mtl self, void * mtl_pointer)"""
        return _MaxPlus.Mtl__SetValue(self, *args)

    def GetActiveTexmap(self):
        """GetActiveTexmap(Mtl self) -> MtlBase"""
        return _MaxPlus.Mtl_GetActiveTexmap(self)

    def SetActiveTexmap(self, *args):
        """SetActiveTexmap(Mtl self, MtlBase txm)"""
        return _MaxPlus.Mtl_SetActiveTexmap(self, *args)

    def GetAmbient(self, mtlNum=0, backFace=True):
        """
        GetAmbient(Mtl self, int mtlNum=0, bool backFace=True) -> Color
        GetAmbient(Mtl self, int mtlNum=0) -> Color
        GetAmbient(Mtl self) -> Color
        """
        return _MaxPlus.Mtl_GetAmbient(self, mtlNum, backFace)

    def GetDiffuse(self, mtlNum=0, backFace=True):
        """
        GetDiffuse(Mtl self, int mtlNum=0, bool backFace=True) -> Color
        GetDiffuse(Mtl self, int mtlNum=0) -> Color
        GetDiffuse(Mtl self) -> Color
        """
        return _MaxPlus.Mtl_GetDiffuse(self, mtlNum, backFace)

    def GetSpecular(self, mtlNum=0, backFace=True):
        """
        GetSpecular(Mtl self, int mtlNum=0, bool backFace=True) -> Color
        GetSpecular(Mtl self, int mtlNum=0) -> Color
        GetSpecular(Mtl self) -> Color
        """
        return _MaxPlus.Mtl_GetSpecular(self, mtlNum, backFace)

    def GetShininess(self, mtlNum=0, backFace=True):
        """
        GetShininess(Mtl self, int mtlNum=0, bool backFace=True) -> float
        GetShininess(Mtl self, int mtlNum=0) -> float
        GetShininess(Mtl self) -> float
        """
        return _MaxPlus.Mtl_GetShininess(self, mtlNum, backFace)

    def GetShinyStrength(self, mtlNum=0, backFace=True):
        """
        GetShinyStrength(Mtl self, int mtlNum=0, bool backFace=True) -> float
        GetShinyStrength(Mtl self, int mtlNum=0) -> float
        GetShinyStrength(Mtl self) -> float
        """
        return _MaxPlus.Mtl_GetShinyStrength(self, mtlNum, backFace)

    def GetXParency(self, mtlNum=0, backFace=True):
        """
        GetXParency(Mtl self, int mtlNum=0, bool backFace=True) -> float
        GetXParency(Mtl self, int mtlNum=0) -> float
        GetXParency(Mtl self) -> float
        """
        return _MaxPlus.Mtl_GetXParency(self, mtlNum, backFace)

    def GetSelfIllumColorOn(self, mtlNum=0, backFace=True):
        """
        GetSelfIllumColorOn(Mtl self, int mtlNum=0, bool backFace=True) -> bool
        GetSelfIllumColorOn(Mtl self, int mtlNum=0) -> bool
        GetSelfIllumColorOn(Mtl self) -> bool
        """
        return _MaxPlus.Mtl_GetSelfIllumColorOn(self, mtlNum, backFace)

    def GetSelfIllum(self, mtlNum=0, backFace=True):
        """
        GetSelfIllum(Mtl self, int mtlNum=0, bool backFace=True) -> float
        GetSelfIllum(Mtl self, int mtlNum=0) -> float
        GetSelfIllum(Mtl self) -> float
        """
        return _MaxPlus.Mtl_GetSelfIllum(self, mtlNum, backFace)

    def GetSelfIllumColor(self, mtlNum=0, backFace=True):
        """
        GetSelfIllumColor(Mtl self, int mtlNum=0, bool backFace=True) -> Color
        GetSelfIllumColor(Mtl self, int mtlNum=0) -> Color
        GetSelfIllumColor(Mtl self) -> Color
        """
        return _MaxPlus.Mtl_GetSelfIllumColor(self, mtlNum, backFace)

    def GetWireSize(self, mtlNum=0, backFace=True):
        """
        GetWireSize(Mtl self, int mtlNum=0, bool backFace=True) -> float
        GetWireSize(Mtl self, int mtlNum=0) -> float
        GetWireSize(Mtl self) -> float
        """
        return _MaxPlus.Mtl_GetWireSize(self, mtlNum, backFace)

    def SetAmbient(self, *args):
        """
        SetAmbient(Mtl self, Color c, TimeValue t=Autodesk::Max::Now())
        SetAmbient(Mtl self, Color c)
        """
        return _MaxPlus.Mtl_SetAmbient(self, *args)

    def SetDiffuse(self, *args):
        """
        SetDiffuse(Mtl self, Color c, TimeValue t=Autodesk::Max::Now())
        SetDiffuse(Mtl self, Color c)
        """
        return _MaxPlus.Mtl_SetDiffuse(self, *args)

    def SetSpecular(self, *args):
        """
        SetSpecular(Mtl self, Color c, TimeValue t=Autodesk::Max::Now())
        SetSpecular(Mtl self, Color c)
        """
        return _MaxPlus.Mtl_SetSpecular(self, *args)

    def SetShininess(self, *args):
        """
        SetShininess(Mtl self, float v, TimeValue t=Autodesk::Max::Now())
        SetShininess(Mtl self, float v)
        """
        return _MaxPlus.Mtl_SetShininess(self, *args)

    def SupportsShaders(self):
        """SupportsShaders(Mtl self) -> bool"""
        return _MaxPlus.Mtl_SupportsShaders(self)

    def SupportsRenderElements(self):
        """SupportsRenderElements(Mtl self) -> bool"""
        return _MaxPlus.Mtl_SupportsRenderElements(self)

    def GetNumSubMtls(self):
        """GetNumSubMtls(Mtl self) -> int"""
        return _MaxPlus.Mtl_GetNumSubMtls(self)

    def GetSubMtl(self, *args):
        """GetSubMtl(Mtl self, int i) -> Mtl"""
        return _MaxPlus.Mtl_GetSubMtl(self, *args)

    def SetSubMtl(self, *args):
        """SetSubMtl(Mtl self, int i, Mtl m)"""
        return _MaxPlus.Mtl_SetSubMtl(self, *args)

    def VPDisplaySubMtl(self):
        """VPDisplaySubMtl(Mtl self) -> int"""
        return _MaxPlus.Mtl_VPDisplaySubMtl(self)

    def GetSubMtlSlotName(self, *args):
        """GetSubMtlSlotName(Mtl self, int i) -> WStr"""
        return _MaxPlus.Mtl_GetSubMtlSlotName(self, *args)

    def GetSubMtlTVName(self, *args):
        """GetSubMtlTVName(Mtl self, int i) -> WStr"""
        return _MaxPlus.Mtl_GetSubMtlTVName(self, *args)

    def CopySubMtl(self, *args):
        """CopySubMtl(Mtl self, HWND hwnd, int ifrom, int ito)"""
        return _MaxPlus.Mtl_CopySubMtl(self, *args)

    def CombineMaterials(*args):
        """CombineMaterials(Mtl mat1, Mtl mat2, int & mat2Offset) -> Mtl"""
        return _MaxPlus.Mtl_CombineMaterials(*args)

    CombineMaterials = staticmethod(CombineMaterials)
    Ambient = _swig_property(GetAmbient, SetAmbient)
    Diffuse = _swig_property(GetDiffuse, SetDiffuse)
    Specular = _swig_property(GetSpecular, SetSpecular)
    Shininess = _swig_property(GetShininess, SetShininess)
    SelfIllumColor = _swig_property(GetSelfIllumColor, SetSpecular)
    SubMtls = _swig_property(lambda self: (self.GetSubMtl(i) for i in xrange(self.GetNumSubMtls())))

    __swig_destroy__ = _MaxPlus.delete_Mtl
    __del__ = lambda self : None;
Mtl_swigregister = _MaxPlus.Mtl_swigregister
Mtl_swigregister(Mtl)

def Mtl__CastFrom(*args):
  """Mtl__CastFrom(InterfaceServer b) -> Mtl"""
  return _MaxPlus.Mtl__CastFrom(*args)

def Mtl__CreateWrapper(*args):
  """Mtl__CreateWrapper(void * mtl_pointer) -> Mtl"""
  return _MaxPlus.Mtl__CreateWrapper(*args)

def Mtl__CreateWrapperFromFPValue(*args):
  """Mtl__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Mtl"""
  return _MaxPlus.Mtl__CreateWrapperFromFPValue(*args)

def Mtl_CombineMaterials(*args):
  """Mtl_CombineMaterials(Mtl mat1, Mtl mat2, int & mat2Offset) -> Mtl"""
  return _MaxPlus.Mtl_CombineMaterials(*args)

class StdMat(Mtl):
    """Standard material."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> StdMat"""
        return _MaxPlus.StdMat__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(StdMat self, Wrapper w) -> bool"""
        return _MaxPlus.StdMat___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(StdMat self, Wrapper w) -> bool"""
        return _MaxPlus.StdMat___ne__(self, *args)

    def SetSoften(self, *args):
        """SetSoften(StdMat self, bool onoff)"""
        return _MaxPlus.StdMat_SetSoften(self, *args)

    def SetFaceMap(self, *args):
        """SetFaceMap(StdMat self, bool onoff)"""
        return _MaxPlus.StdMat_SetFaceMap(self, *args)

    def SetTwoSided(self, *args):
        """SetTwoSided(StdMat self, bool onoff)"""
        return _MaxPlus.StdMat_SetTwoSided(self, *args)

    def SetWire(self, *args):
        """SetWire(StdMat self, bool onoff)"""
        return _MaxPlus.StdMat_SetWire(self, *args)

    def SetWireUnits(self, *args):
        """SetWireUnits(StdMat self, bool onOff)"""
        return _MaxPlus.StdMat_SetWireUnits(self, *args)

    def SetFalloffOut(self, *args):
        """SetFalloffOut(StdMat self, bool onOff)"""
        return _MaxPlus.StdMat_SetFalloffOut(self, *args)

    def SetTransparencyType(self, *args):
        """SetTransparencyType(StdMat self, int type)"""
        return _MaxPlus.StdMat_SetTransparencyType(self, *args)

    def SetFilter(self, *args):
        """
        SetFilter(StdMat self, Color c, TimeValue t=Autodesk::Max::Now())
        SetFilter(StdMat self, Color c)
        """
        return _MaxPlus.StdMat_SetFilter(self, *args)

    def SetShinyStrength(self, *args):
        """
        SetShinyStrength(StdMat self, float v, TimeValue t=Autodesk::Max::Now())
        SetShinyStrength(StdMat self, float v)
        """
        return _MaxPlus.StdMat_SetShinyStrength(self, *args)

    def SetSelfIllum(self, *args):
        """
        SetSelfIllum(StdMat self, float v, TimeValue t=Autodesk::Max::Now())
        SetSelfIllum(StdMat self, float v)
        """
        return _MaxPlus.StdMat_SetSelfIllum(self, *args)

    def SetOpacity(self, *args):
        """
        SetOpacity(StdMat self, float v, TimeValue t=Autodesk::Max::Now())
        SetOpacity(StdMat self, float v)
        """
        return _MaxPlus.StdMat_SetOpacity(self, *args)

    def SetOpacFalloff(self, *args):
        """
        SetOpacFalloff(StdMat self, float v, TimeValue t=Autodesk::Max::Now())
        SetOpacFalloff(StdMat self, float v)
        """
        return _MaxPlus.StdMat_SetOpacFalloff(self, *args)

    def SetWireSize(self, *args):
        """
        SetWireSize(StdMat self, float s, TimeValue t=Autodesk::Max::Now())
        SetWireSize(StdMat self, float s)
        """
        return _MaxPlus.StdMat_SetWireSize(self, *args)

    def SetIOR(self, *args):
        """
        SetIOR(StdMat self, float v, TimeValue t=Autodesk::Max::Now())
        SetIOR(StdMat self, float v)
        """
        return _MaxPlus.StdMat_SetIOR(self, *args)

    def SetLockAmbDiffTex(self, *args):
        """SetLockAmbDiffTex(StdMat self, bool onOff)"""
        return _MaxPlus.StdMat_SetLockAmbDiffTex(self, *args)

    def SetSamplingOn(self, *args):
        """SetSamplingOn(StdMat self, bool onOff)"""
        return _MaxPlus.StdMat_SetSamplingOn(self, *args)

    def SetTexmapAmt(self, *args):
        """
        SetTexmapAmt(StdMat self, int id, float amt, TimeValue t=Autodesk::Max::Now())
        SetTexmapAmt(StdMat self, int id, float amt)
        """
        return _MaxPlus.StdMat_SetTexmapAmt(self, *args)

    def SetEnableMap(self, *args):
        """SetEnableMap(StdMat self, int id, bool onoff)"""
        return _MaxPlus.StdMat_SetEnableMap(self, *args)

    def SetShading(self, *args):
        """SetShading(StdMat self, int s)"""
        return _MaxPlus.StdMat_SetShading(self, *args)

    def GetSamplingOn(self):
        """GetSamplingOn(StdMat self) -> bool"""
        return _MaxPlus.StdMat_GetSamplingOn(self)

    def GetShading(self):
        """GetShading(StdMat self) -> int"""
        return _MaxPlus.StdMat_GetShading(self)

    def GetFilter(self, *args):
        """
        GetFilter(StdMat self, TimeValue t=Autodesk::Max::Now()) -> Color
        GetFilter(StdMat self) -> Color
        """
        return _MaxPlus.StdMat_GetFilter(self, *args)

    def GetMapEnabled(self, *args):
        """GetMapEnabled(StdMat self, int id) -> bool"""
        return _MaxPlus.StdMat_GetMapEnabled(self, *args)

    def GetTexmapAmt(self, *args):
        """
        GetTexmapAmt(StdMat self, int id, TimeValue t=Autodesk::Max::Now()) -> float
        GetTexmapAmt(StdMat self, int id) -> float
        """
        return _MaxPlus.StdMat_GetTexmapAmt(self, *args)

    def GetSoften(self):
        """GetSoften(StdMat self) -> bool"""
        return _MaxPlus.StdMat_GetSoften(self)

    def GetFaceMap(self):
        """GetFaceMap(StdMat self) -> bool"""
        return _MaxPlus.StdMat_GetFaceMap(self)

    def GetTwoSided(self):
        """GetTwoSided(StdMat self) -> bool"""
        return _MaxPlus.StdMat_GetTwoSided(self)

    def GetWire(self):
        """GetWire(StdMat self) -> bool"""
        return _MaxPlus.StdMat_GetWire(self)

    def GetWireUnits(self):
        """GetWireUnits(StdMat self) -> bool"""
        return _MaxPlus.StdMat_GetWireUnits(self)

    def GetFalloffOut(self):
        """GetFalloffOut(StdMat self) -> bool"""
        return _MaxPlus.StdMat_GetFalloffOut(self)

    def GetTransparencyType(self):
        """GetTransparencyType(StdMat self) -> int"""
        return _MaxPlus.StdMat_GetTransparencyType(self)

    def GetSelfIllum(self, *args):
        """
        GetSelfIllum(StdMat self, TimeValue t=Autodesk::Max::Now()) -> float
        GetSelfIllum(StdMat self) -> float
        """
        return _MaxPlus.StdMat_GetSelfIllum(self, *args)

    def GetOpacity(self, *args):
        """
        GetOpacity(StdMat self, TimeValue t=Autodesk::Max::Now()) -> float
        GetOpacity(StdMat self) -> float
        """
        return _MaxPlus.StdMat_GetOpacity(self, *args)

    def GetOpacFalloff(self, *args):
        """
        GetOpacFalloff(StdMat self, TimeValue t=Autodesk::Max::Now()) -> float
        GetOpacFalloff(StdMat self) -> float
        """
        return _MaxPlus.StdMat_GetOpacFalloff(self, *args)

    def GetWireSize(self, *args):
        """
        GetWireSize(StdMat self, TimeValue t=Autodesk::Max::Now()) -> float
        GetWireSize(StdMat self) -> float
        """
        return _MaxPlus.StdMat_GetWireSize(self, *args)

    def GetIOR(self, *args):
        """
        GetIOR(StdMat self, TimeValue t=Autodesk::Max::Now()) -> float
        GetIOR(StdMat self) -> float
        """
        return _MaxPlus.StdMat_GetIOR(self, *args)

    def GetLockAmbDiffTex(self):
        """GetLockAmbDiffTex(StdMat self) -> bool"""
        return _MaxPlus.StdMat_GetLockAmbDiffTex(self)

    def GetShinyStrength(self, *args):
        """
        GetShinyStrength(StdMat self, TimeValue t=Autodesk::Max::Now()) -> float
        GetShinyStrength(StdMat self) -> float
        """
        return _MaxPlus.StdMat_GetShinyStrength(self, *args)

    def KeyAtTimeByID(self, *args):
        """KeyAtTimeByID(StdMat self, ParamID id, TimeValue t) -> bool"""
        return _MaxPlus.StdMat_KeyAtTimeByID(self, *args)

    def GetMapState(self, *args):
        """GetMapState(StdMat self, int indx) -> int"""
        return _MaxPlus.StdMat_GetMapState(self, *args)

    def GetMapName(self, *args):
        """GetMapName(StdMat self, int indx) -> WStr"""
        return _MaxPlus.StdMat_GetMapName(self, *args)

    def SyncADTexLock(self, *args):
        """SyncADTexLock(StdMat self, bool lockOn)"""
        return _MaxPlus.StdMat_SyncADTexLock(self, *args)

    def SwitchShader(self, *args):
        """SwitchShader(StdMat self, Class_ID id) -> bool"""
        return _MaxPlus.StdMat_SwitchShader(self, *args)

    def IsFaceted(self):
        """IsFaceted(StdMat self) -> bool"""
        return _MaxPlus.StdMat_IsFaceted(self)

    def SetFaceted(self, *args):
        """SetFaceted(StdMat self, bool on)"""
        return _MaxPlus.StdMat_SetFaceted(self, *args)

    def StdIDToChannel(self, *args):
        """StdIDToChannel(StdMat self, long id) -> long"""
        return _MaxPlus.StdMat_StdIDToChannel(self, *args)

    def SwitchSampler(self, *args):
        """SwitchSampler(StdMat self, Class_ID id) -> bool"""
        return _MaxPlus.StdMat_SwitchSampler(self, *args)

    def GetSelfIllumColor(self, *args):
        """GetSelfIllumColor(StdMat self, TimeValue t) -> Color"""
        return _MaxPlus.StdMat_GetSelfIllumColor(self, *args)

    def SetSelfIllumColorOn(self, *args):
        """SetSelfIllumColorOn(StdMat self, bool on)"""
        return _MaxPlus.StdMat_SetSelfIllumColorOn(self, *args)

    def SetSelfIllumColor(self, *args):
        """SetSelfIllumColor(StdMat self, Color c, TimeValue t)"""
        return _MaxPlus.StdMat_SetSelfIllumColor(self, *args)

    def GetReflectionDim(self, *args):
        """GetReflectionDim(StdMat self, float diffIllumIntensity) -> float"""
        return _MaxPlus.StdMat_GetReflectionDim(self, *args)

    def TranspColor(self, *args):
        """TranspColor(StdMat self, float opac, Color filt, Color diff) -> Color"""
        return _MaxPlus.StdMat_TranspColor(self, *args)

    ShinyStrength = _swig_property(GetShinyStrength, SetShinyStrength)
    Soften = _swig_property(GetSoften, SetSoften)
    FaceMap = _swig_property(GetFaceMap, SetFaceMap)
    TwoSided = _swig_property(GetTwoSided, SetTwoSided)
    Wire = _swig_property(GetWire, SetWire)
    WireUnits = _swig_property(GetWireUnits, SetWireUnits)
    WireSize = _swig_property(GetWireSize, SetWireSize)
    FalloffOut = _swig_property(GetFalloffOut, SetFalloffOut)
    TransparencyType = _swig_property(GetTransparencyType, SetTransparencyType)
    Filter = _swig_property(GetFilter, SetFilter)
    SelfIllum = _swig_property(GetSelfIllum, SetSelfIllum)
    Opacity = _swig_property(GetOpacity, SetOpacity)
    OpacityFalloff = _swig_property(GetOpacFalloff, SetOpacFalloff)
    IOR = _swig_property(GetIOR, SetIOR)
    LockAmbDiffTex = _swig_property(GetLockAmbDiffTex, SetLockAmbDiffTex)
    SamplingOn = _swig_property(GetSamplingOn, SetSamplingOn)
    Shading = _swig_property(GetShading, SetShading)

    __swig_destroy__ = _MaxPlus.delete_StdMat
    __del__ = lambda self : None;
StdMat_swigregister = _MaxPlus.StdMat_swigregister
StdMat_swigregister(StdMat)

def StdMat__CastFrom(*args):
  """StdMat__CastFrom(InterfaceServer b) -> StdMat"""
  return _MaxPlus.StdMat__CastFrom(*args)

class MultiMtl(Mtl):
    """Multi/Sub-Object material."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> MultiMtl"""
        return _MaxPlus.MultiMtl__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(MultiMtl self, Wrapper w) -> bool"""
        return _MaxPlus.MultiMtl___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(MultiMtl self, Wrapper w) -> bool"""
        return _MaxPlus.MultiMtl___ne__(self, *args)

    def SetNumSubMtls(self, *args):
        """SetNumSubMtls(MultiMtl self, int n)"""
        return _MaxPlus.MultiMtl_SetNumSubMtls(self, *args)

    def GetSubMtlName(self, *args):
        """GetSubMtlName(MultiMtl self, int i, WStr s)"""
        return _MaxPlus.MultiMtl_GetSubMtlName(self, *args)

    def SetSubMtlAndName(self, *args):
        """SetSubMtlAndName(MultiMtl self, int i, Mtl m, WStr subMtlName)"""
        return _MaxPlus.MultiMtl_SetSubMtlAndName(self, *args)

    def AddMtl(self, *args):
        """AddMtl(MultiMtl self, ReferenceTarget rt, int i, wchar_t const * name)"""
        return _MaxPlus.MultiMtl_AddMtl(self, *args)

    def RemoveMtl(self, *args):
        """RemoveMtl(MultiMtl self, int i)"""
        return _MaxPlus.MultiMtl_RemoveMtl(self, *args)

    __swig_destroy__ = _MaxPlus.delete_MultiMtl
    __del__ = lambda self : None;
MultiMtl_swigregister = _MaxPlus.MultiMtl_swigregister
MultiMtl_swigregister(MultiMtl)

def MultiMtl__CastFrom(*args):
  """MultiMtl__CastFrom(InterfaceServer b) -> MultiMtl"""
  return _MaxPlus.MultiMtl__CastFrom(*args)

class ISubMap(Wrapper):
    """Provides access to the sub-textures of a MtlBase."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ISubMap"""
        return _MaxPlus.ISubMap__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ISubMap self, Wrapper w) -> bool"""
        return _MaxPlus.ISubMap___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ISubMap self, Wrapper w) -> bool"""
        return _MaxPlus.ISubMap___ne__(self, *args)

    def GetNumSubTexmaps(self):
        """GetNumSubTexmaps(ISubMap self) -> int"""
        return _MaxPlus.ISubMap_GetNumSubTexmaps(self)

    def GetSubTexmap(self, *args):
        """GetSubTexmap(ISubMap self, int i) -> Texmap"""
        return _MaxPlus.ISubMap_GetSubTexmap(self, *args)

    def GetMapSlotType(self, *args):
        """GetMapSlotType(ISubMap self, int i) -> int"""
        return _MaxPlus.ISubMap_GetMapSlotType(self, *args)

    def SetSubTexmap(self, *args):
        """SetSubTexmap(ISubMap self, int i, Texmap m)"""
        return _MaxPlus.ISubMap_SetSubTexmap(self, *args)

    def IsSubTexmapOn(self, *args):
        """IsSubTexmapOn(ISubMap self, int i) -> bool"""
        return _MaxPlus.ISubMap_IsSubTexmapOn(self, *args)

    def GetSubTexmapSlotName(self, *args):
        """GetSubTexmapSlotName(ISubMap self, int i) -> WStr"""
        return _MaxPlus.ISubMap_GetSubTexmapSlotName(self, *args)

    def GetSubTexmapTVName(self, *args):
        """GetSubTexmapTVName(ISubMap self, int i) -> WStr"""
        return _MaxPlus.ISubMap_GetSubTexmapTVName(self, *args)

    def GetRefTarget(self):
        """GetRefTarget(ISubMap self) -> ReferenceTarget"""
        return _MaxPlus.ISubMap_GetRefTarget(self)

    __swig_destroy__ = _MaxPlus.delete_ISubMap
    __del__ = lambda self : None;
ISubMap_swigregister = _MaxPlus.ISubMap_swigregister
ISubMap_swigregister(ISubMap)

def ISubMap__CastFrom(*args):
  """ISubMap__CastFrom(InterfaceServer b) -> ISubMap"""
  return _MaxPlus.ISubMap__CastFrom(*args)

class MaterialLibrary(ReferenceTarget):
    """A collection of materials and texture maps."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> MaterialLibrary"""
        return _MaxPlus.MaterialLibrary__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(MaterialLibrary self, Wrapper w) -> bool"""
        return _MaxPlus.MaterialLibrary___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(MaterialLibrary self, Wrapper w) -> bool"""
        return _MaxPlus.MaterialLibrary___ne__(self, *args)

    def DeleteAll(self):
        """DeleteAll(MaterialLibrary self)"""
        return _MaxPlus.MaterialLibrary_DeleteAll(self)

    def Remove(self, *args):
        """Remove(MaterialLibrary self, MtlBase m)"""
        return _MaxPlus.MaterialLibrary_Remove(self, *args)

    def Add(self, *args):
        """Add(MaterialLibrary self, MtlBase m)"""
        return _MaxPlus.MaterialLibrary_Add(self, *args)

    def FindMaterial(self, *args):
        """FindMaterial(MaterialLibrary self, MtlBase m) -> int"""
        return _MaxPlus.MaterialLibrary_FindMaterial(self, *args)

    def FindMaterialByName(self, *args):
        """FindMaterialByName(MaterialLibrary self, wchar_t const * name) -> int"""
        return _MaxPlus.MaterialLibrary_FindMaterialByName(self, *args)

    def GetNumMaterials(self):
        """GetNumMaterials(MaterialLibrary self) -> int"""
        return _MaxPlus.MaterialLibrary_GetNumMaterials(self)

    def __len__(self):
        """__len__(MaterialLibrary self) -> int"""
        return _MaxPlus.MaterialLibrary___len__(self)

    def __getitem__(self, *args):
        """__getitem__(MaterialLibrary self, int i) -> MtlBase"""
        return _MaxPlus.MaterialLibrary___getitem__(self, *args)

    def GetMaterial(self, *args):
        """GetMaterial(MaterialLibrary self, int i) -> MtlBase"""
        return _MaxPlus.MaterialLibrary_GetMaterial(self, *args)

    def GetCurrentLibrary():
        """GetCurrentLibrary() -> MaterialLibrary"""
        return _MaxPlus.MaterialLibrary_GetCurrentLibrary()

    GetCurrentLibrary = staticmethod(GetCurrentLibrary)
    def GetSceneMaterialLibrary():
        """GetSceneMaterialLibrary() -> MaterialLibrary"""
        return _MaxPlus.MaterialLibrary_GetSceneMaterialLibrary()

    GetSceneMaterialLibrary = staticmethod(GetSceneMaterialLibrary)
    def GetNumSceneMaterials():
        """GetNumSceneMaterials() -> int"""
        return _MaxPlus.MaterialLibrary_GetNumSceneMaterials()

    GetNumSceneMaterials = staticmethod(GetNumSceneMaterials)
    def GetSceneMaterial(*args):
        """GetSceneMaterial(int i) -> MtlBase"""
        return _MaxPlus.MaterialLibrary_GetSceneMaterial(*args)

    GetSceneMaterial = staticmethod(GetSceneMaterial)
    def LoadDefaultMaterialLibrary():
        """LoadDefaultMaterialLibrary()"""
        return _MaxPlus.MaterialLibrary_LoadDefaultMaterialLibrary()

    LoadDefaultMaterialLibrary = staticmethod(LoadDefaultMaterialLibrary)
    def FileOpenMatLib(*args):
        """FileOpenMatLib(HWND hWnd)"""
        return _MaxPlus.MaterialLibrary_FileOpenMatLib(*args)

    FileOpenMatLib = staticmethod(FileOpenMatLib)
    def FileSaveMatLib(*args):
        """FileSaveMatLib(HWND hWnd)"""
        return _MaxPlus.MaterialLibrary_FileSaveMatLib(*args)

    FileSaveMatLib = staticmethod(FileSaveMatLib)
    def FileSaveAsMatLib(*args):
        """FileSaveAsMatLib(HWND hWnd)"""
        return _MaxPlus.MaterialLibrary_FileSaveAsMatLib(*args)

    FileSaveAsMatLib = staticmethod(FileSaveAsMatLib)
    NumMaterials = _swig_property(GetNumMaterials)
    Materials = _swig_property(lambda self: (self.GetMaterial(i) for i in xrange(self.GetNumMaterials())))
    SceneMaterials = _swig_property(lambda self: (self.GetSceneMaterial(i) for i in xrange(self.GetNumSceneMaterials())))

    __swig_destroy__ = _MaxPlus.delete_MaterialLibrary
    __del__ = lambda self : None;
MaterialLibrary_swigregister = _MaxPlus.MaterialLibrary_swigregister
MaterialLibrary_swigregister(MaterialLibrary)

def MaterialLibrary__CastFrom(*args):
  """MaterialLibrary__CastFrom(InterfaceServer b) -> MaterialLibrary"""
  return _MaxPlus.MaterialLibrary__CastFrom(*args)

def MaterialLibrary_GetCurrentLibrary():
  """MaterialLibrary_GetCurrentLibrary() -> MaterialLibrary"""
  return _MaxPlus.MaterialLibrary_GetCurrentLibrary()

def MaterialLibrary_GetSceneMaterialLibrary():
  """MaterialLibrary_GetSceneMaterialLibrary() -> MaterialLibrary"""
  return _MaxPlus.MaterialLibrary_GetSceneMaterialLibrary()

def MaterialLibrary_GetNumSceneMaterials():
  """MaterialLibrary_GetNumSceneMaterials() -> int"""
  return _MaxPlus.MaterialLibrary_GetNumSceneMaterials()

def MaterialLibrary_GetSceneMaterial(*args):
  """MaterialLibrary_GetSceneMaterial(int i) -> MtlBase"""
  return _MaxPlus.MaterialLibrary_GetSceneMaterial(*args)

def MaterialLibrary_LoadDefaultMaterialLibrary():
  """MaterialLibrary_LoadDefaultMaterialLibrary()"""
  return _MaxPlus.MaterialLibrary_LoadDefaultMaterialLibrary()

def MaterialLibrary_FileOpenMatLib(*args):
  """MaterialLibrary_FileOpenMatLib(HWND hWnd)"""
  return _MaxPlus.MaterialLibrary_FileOpenMatLib(*args)

def MaterialLibrary_FileSaveMatLib(*args):
  """MaterialLibrary_FileSaveMatLib(HWND hWnd)"""
  return _MaxPlus.MaterialLibrary_FileSaveMatLib(*args)

def MaterialLibrary_FileSaveAsMatLib(*args):
  """MaterialLibrary_FileSaveAsMatLib(HWND hWnd)"""
  return _MaxPlus.MaterialLibrary_FileSaveAsMatLib(*args)

class MaterialManager(object):
    """Material utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def DoMaterialBrowseDlg(*args):
        """DoMaterialBrowseDlg(HWND hParent, DWORD flags, int & newMat, int & cancel) -> MtlBase"""
        return _MaxPlus.MaterialManager_DoMaterialBrowseDlg(*args)

    DoMaterialBrowseDlg = staticmethod(DoMaterialBrowseDlg)
    def PutMtlToMtlEditor(*args):
        """
        PutMtlToMtlEditor(MtlBase mb, int slot=-1)
        PutMtlToMtlEditor(MtlBase mb)
        """
        return _MaxPlus.MaterialManager_PutMtlToMtlEditor(*args)

    PutMtlToMtlEditor = staticmethod(PutMtlToMtlEditor)
    def GetMtlSlot(*args):
        """GetMtlSlot(int slot) -> MtlBase"""
        return _MaxPlus.MaterialManager_GetMtlSlot(*args)

    GetMtlSlot = staticmethod(GetMtlSlot)
    def IsMtlOkForScene(*args):
        """IsMtlOkForScene(MtlBase m) -> bool"""
        return _MaxPlus.MaterialManager_IsMtlOkForScene(*args)

    IsMtlOkForScene = staticmethod(IsMtlOkForScene)
    def GetMatLibFileName():
        """GetMatLibFileName() -> wchar_t const *"""
        return _MaxPlus.MaterialManager_GetMatLibFileName()

    GetMatLibFileName = staticmethod(GetMatLibFileName)
    __swig_destroy__ = _MaxPlus.delete_MaterialManager
    __del__ = lambda self : None;
MaterialManager_swigregister = _MaxPlus.MaterialManager_swigregister
MaterialManager_swigregister(MaterialManager)

def MaterialManager_DoMaterialBrowseDlg(*args):
  """MaterialManager_DoMaterialBrowseDlg(HWND hParent, DWORD flags, int & newMat, int & cancel) -> MtlBase"""
  return _MaxPlus.MaterialManager_DoMaterialBrowseDlg(*args)

def MaterialManager_PutMtlToMtlEditor(*args):
  """
    PutMtlToMtlEditor(MtlBase mb, int slot=-1)
    MaterialManager_PutMtlToMtlEditor(MtlBase mb)
    """
  return _MaxPlus.MaterialManager_PutMtlToMtlEditor(*args)

def MaterialManager_GetMtlSlot(*args):
  """MaterialManager_GetMtlSlot(int slot) -> MtlBase"""
  return _MaxPlus.MaterialManager_GetMtlSlot(*args)

def MaterialManager_IsMtlOkForScene(*args):
  """MaterialManager_IsMtlOkForScene(MtlBase m) -> bool"""
  return _MaxPlus.MaterialManager_IsMtlOkForScene(*args)

def MaterialManager_GetMatLibFileName():
  """MaterialManager_GetMatLibFileName() -> wchar_t const *"""
  return _MaxPlus.MaterialManager_GetMatLibFileName()

class DOFParams(Wrapper):
    """Passed to the method Control.GetDOFParams() so that IK controllers can provide information about their Degree Of Freedoms (DOFs)."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetDisplay(self):
        """GetDisplay(DOFParams self) -> bool"""
        return _MaxPlus.DOFParams_GetDisplay(self)

    def GetAxis(self):
        """GetAxis(DOFParams self) -> Point3"""
        return _MaxPlus.DOFParams_GetAxis(self)

    def GetPos(self):
        """GetPos(DOFParams self) -> Point3"""
        return _MaxPlus.DOFParams_GetPos(self)

    def GetLimit(self):
        """GetLimit(DOFParams self) -> bool"""
        return _MaxPlus.DOFParams_GetLimit(self)

    def GetNumDof(self):
        """GetNumDof(DOFParams self) -> int"""
        return _MaxPlus.DOFParams_GetNumDof(self)

    def GetMin(self, *args):
        """GetMin(DOFParams self, int i) -> float"""
        return _MaxPlus.DOFParams_GetMin(self, *args)

    def GetMax(self, *args):
        """GetMax(DOFParams self, int i) -> float"""
        return _MaxPlus.DOFParams_GetMax(self, *args)

    def GetCurVal(self, *args):
        """GetCurVal(DOFParams self, int i) -> float"""
        return _MaxPlus.DOFParams_GetCurVal(self, *args)

    def GetSel(self):
        """GetSel(DOFParams self) -> bool"""
        return _MaxPlus.DOFParams_GetSel(self)

    def GetEndEffector(self):
        """GetEndEffector(DOFParams self) -> bool"""
        return _MaxPlus.DOFParams_GetEndEffector(self)

    def GetEndEffectorTM(self):
        """GetEndEffectorTM(DOFParams self) -> Matrix3"""
        return _MaxPlus.DOFParams_GetEndEffectorTM(self)

    __swig_destroy__ = _MaxPlus.delete_DOFParams
    __del__ = lambda self : None;
DOFParams_swigregister = _MaxPlus.DOFParams_swigregister
DOFParams_swigregister(DOFParams)

class SetXFormPacket(Wrapper):
    """Allows a transform (Matrix3) controller to know that it is being specifically moved, rotated, or scaled."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::SetXFormPacket self, Matrix3 mat, Matrix3 par=Autodesk::Max::Matrix3(1)) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, Matrix3 mat) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, Point3 pt, Matrix3 par=Autodesk::Max::Matrix3(1), Matrix3 a=Autodesk::Max::Matrix3(1)) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, Point3 pt, Matrix3 par=Autodesk::Max::Matrix3(1)) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, Point3 pt) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, Quat qt, bool local, Matrix3 par=Autodesk::Max::Matrix3(1), Matrix3 a=Autodesk::Max::Matrix3(1)) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, Quat qt, bool local, Matrix3 par=Autodesk::Max::Matrix3(1)) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, Quat qt, bool local) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, AngAxis aA, bool local, Matrix3 par=Autodesk::Max::Matrix3(1), Matrix3 a=Autodesk::Max::Matrix3(1)) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, AngAxis aA, bool local, Matrix3 par=Autodesk::Max::Matrix3(1)) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, AngAxis aA, bool local) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, Point3 pt, bool local, Matrix3 par=Autodesk::Max::Matrix3(1), Matrix3 a=Autodesk::Max::Matrix3(1)) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, Point3 pt, bool local, Matrix3 par=Autodesk::Max::Matrix3(1)) -> SetXFormPacket
        __init__(Autodesk::Max::SetXFormPacket self, Point3 pt, bool local) -> SetXFormPacket
        """
        this = _MaxPlus.new_SetXFormPacket(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_SetXFormPacket
    __del__ = lambda self : None;
SetXFormPacket_swigregister = _MaxPlus.SetXFormPacket_swigregister
SetXFormPacket_swigregister(SetXFormPacket)

class Control(ReferenceTarget):
    """The base class of animation controllers. Controllers generate values at different points in time using keyframes or other methods."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Control"""
        return _MaxPlus.Control__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Control self, Wrapper w) -> bool"""
        return _MaxPlus.Control___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Control self, Wrapper w) -> bool"""
        return _MaxPlus.Control___ne__(self, *args)

    def Copy(self, *args):
        """Copy(Control self, Control other)"""
        return _MaxPlus.Control_Copy(self, *args)

    def CommitValue(self, *args):
        """
        CommitValue(Control self, TimeValue t=Autodesk::Max::Now())
        CommitValue(Control self)
        """
        return _MaxPlus.Control_CommitValue(self, *args)

    def RestoreValue(self, *args):
        """
        RestoreValue(Control self, TimeValue t=Autodesk::Max::Now())
        RestoreValue(Control self)
        """
        return _MaxPlus.Control_RestoreValue(self, *args)

    def GetTarget(self):
        """GetTarget(Control self) -> INode"""
        return _MaxPlus.Control_GetTarget(self)

    def SetTarget(self, *args):
        """SetTarget(Control self, INode targ) -> RefResult"""
        return _MaxPlus.Control_SetTarget(self, *args)

    def GetPositionController(self):
        """GetPositionController(Control self) -> Control"""
        return _MaxPlus.Control_GetPositionController(self)

    def GetRotationController(self):
        """GetRotationController(Control self) -> Control"""
        return _MaxPlus.Control_GetRotationController(self)

    def GetScaleController(self):
        """GetScaleController(Control self) -> Control"""
        return _MaxPlus.Control_GetScaleController(self)

    def SetPositionController(self, *args):
        """SetPositionController(Control self, Control c) -> bool"""
        return _MaxPlus.Control_SetPositionController(self, *args)

    def SetRotationController(self, *args):
        """SetRotationController(Control self, Control c) -> bool"""
        return _MaxPlus.Control_SetRotationController(self, *args)

    def SetScaleController(self, *args):
        """SetScaleController(Control self, Control c) -> bool"""
        return _MaxPlus.Control_SetScaleController(self, *args)

    def GetXController(self):
        """GetXController(Control self) -> Control"""
        return _MaxPlus.Control_GetXController(self)

    def GetYController(self):
        """GetYController(Control self) -> Control"""
        return _MaxPlus.Control_GetYController(self)

    def GetZController(self):
        """GetZController(Control self) -> Control"""
        return _MaxPlus.Control_GetZController(self)

    def GetWController(self):
        """GetWController(Control self) -> Control"""
        return _MaxPlus.Control_GetWController(self)

    def GetRollController(self):
        """GetRollController(Control self) -> Control"""
        return _MaxPlus.Control_GetRollController(self)

    def SetRollController(self, *args):
        """SetRollController(Control self, Control c) -> bool"""
        return _MaxPlus.Control_SetRollController(self, *args)

    def GetInheritanceFlags(self):
        """GetInheritanceFlags(Control self) -> DWORD"""
        return _MaxPlus.Control_GetInheritanceFlags(self)

    def SetInheritanceFlags(self, *args):
        """SetInheritanceFlags(Control self, DWORD f, bool keepPos) -> bool"""
        return _MaxPlus.Control_SetInheritanceFlags(self, *args)

    def IsLeaf(self):
        """IsLeaf(Control self) -> bool"""
        return _MaxPlus.Control_IsLeaf(self)

    def IsKeyable(self):
        """IsKeyable(Control self) -> bool"""
        return _MaxPlus.Control_IsKeyable(self)

    def IsReplaceable(self):
        """IsReplaceable(Control self) -> bool"""
        return _MaxPlus.Control_IsReplaceable(self)

    def ChangeParents(self, *args):
        """
        ChangeParents(Control self, Matrix3 oldP, Matrix3 newP, Matrix3 tm, TimeValue t=Autodesk::Max::Now()) -> bool
        ChangeParents(Control self, Matrix3 oldP, Matrix3 newP, Matrix3 tm) -> bool
        """
        return _MaxPlus.Control_ChangeParents(self, *args)

    def IsColorController(self):
        """IsColorController(Control self) -> bool"""
        return _MaxPlus.Control_IsColorController(self)

    def IsFloatController(self):
        """IsFloatController(Control self) -> bool"""
        return _MaxPlus.Control_IsFloatController(self)

    def IsPoint3Controller(self):
        """IsPoint3Controller(Control self) -> bool"""
        return _MaxPlus.Control_IsPoint3Controller(self)

    def IsQuatController(self):
        """IsQuatController(Control self) -> bool"""
        return _MaxPlus.Control_IsQuatController(self)

    def IsMatrixController(self):
        """IsMatrixController(Control self) -> bool"""
        return _MaxPlus.Control_IsMatrixController(self)

    def IsScaleController(self):
        """IsScaleController(Control self) -> bool"""
        return _MaxPlus.Control_IsScaleController(self)

    def IsPoint2Controller(self):
        """IsPoint2Controller(Control self) -> bool"""
        return _MaxPlus.Control_IsPoint2Controller(self)

    def IsPoint4Controller(self):
        """IsPoint4Controller(Control self) -> bool"""
        return _MaxPlus.Control_IsPoint4Controller(self)

    def GetFloatValue(self, *args):
        """
        GetFloatValue(Control self, TimeValue t=Autodesk::Max::Now()) -> float
        GetFloatValue(Control self) -> float
        """
        return _MaxPlus.Control_GetFloatValue(self, *args)

    def GetPoint2Value(self, *args):
        """
        GetPoint2Value(Control self, TimeValue t=Autodesk::Max::Now()) -> Point2
        GetPoint2Value(Control self) -> Point2
        """
        return _MaxPlus.Control_GetPoint2Value(self, *args)

    def GetPoint3Value(self, *args):
        """
        GetPoint3Value(Control self, TimeValue t=Autodesk::Max::Now()) -> Point3
        GetPoint3Value(Control self) -> Point3
        """
        return _MaxPlus.Control_GetPoint3Value(self, *args)

    def GetPoint4Value(self, *args):
        """
        GetPoint4Value(Control self, TimeValue t=Autodesk::Max::Now()) -> Point4
        GetPoint4Value(Control self) -> Point4
        """
        return _MaxPlus.Control_GetPoint4Value(self, *args)

    def GetQuatValue(self, *args):
        """
        GetQuatValue(Control self, TimeValue t=Autodesk::Max::Now()) -> Quat
        GetQuatValue(Control self) -> Quat
        """
        return _MaxPlus.Control_GetQuatValue(self, *args)

    def GetScaleValue(self, *args):
        """
        GetScaleValue(Control self, TimeValue t=Autodesk::Max::Now()) -> ScaleValue
        GetScaleValue(Control self) -> ScaleValue
        """
        return _MaxPlus.Control_GetScaleValue(self, *args)

    def GetMatrixValue(self, *args):
        """
        GetMatrixValue(Control self, TimeValue t=Autodesk::Max::Now()) -> Matrix3
        GetMatrixValue(Control self) -> Matrix3
        """
        return _MaxPlus.Control_GetMatrixValue(self, *args)

    def SetFloatValue(self, *args):
        """
        SetFloatValue(Control self, float val, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetFloatValue(Control self, float val, TimeValue t=Autodesk::Max::Now())
        SetFloatValue(Control self, float val)
        """
        return _MaxPlus.Control_SetFloatValue(self, *args)

    def SetPoint2Value(self, *args):
        """
        SetPoint2Value(Control self, Point2 val, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetPoint2Value(Control self, Point2 val, TimeValue t=Autodesk::Max::Now())
        SetPoint2Value(Control self, Point2 val)
        """
        return _MaxPlus.Control_SetPoint2Value(self, *args)

    def SetPoint3Value(self, *args):
        """
        SetPoint3Value(Control self, Point3 val, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetPoint3Value(Control self, Point3 val, TimeValue t=Autodesk::Max::Now())
        SetPoint3Value(Control self, Point3 val)
        """
        return _MaxPlus.Control_SetPoint3Value(self, *args)

    def SetPoint4Value(self, *args):
        """
        SetPoint4Value(Control self, Point4 val, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetPoint4Value(Control self, Point4 val, TimeValue t=Autodesk::Max::Now())
        SetPoint4Value(Control self, Point4 val)
        """
        return _MaxPlus.Control_SetPoint4Value(self, *args)

    def SetQuatValue(self, *args):
        """
        SetQuatValue(Control self, Quat val, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetQuatValue(Control self, Quat val, TimeValue t=Autodesk::Max::Now())
        SetQuatValue(Control self, Quat val)
        """
        return _MaxPlus.Control_SetQuatValue(self, *args)

    def SetScaleValue(self, *args):
        """
        SetScaleValue(Control self, ScaleValue val, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetScaleValue(Control self, ScaleValue val, TimeValue t=Autodesk::Max::Now())
        SetScaleValue(Control self, ScaleValue val)
        """
        return _MaxPlus.Control_SetScaleValue(self, *args)

    def SetMatrixValue(self, *args):
        """
        SetMatrixValue(Control self, SetXFormPacket val, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetMatrixValue(Control self, SetXFormPacket val, TimeValue t=Autodesk::Max::Now())
        SetMatrixValue(Control self, SetXFormPacket val)
        SetMatrixValue(Control self, Matrix3 val, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetMatrixValue(Control self, Matrix3 val, TimeValue t=Autodesk::Max::Now())
        SetMatrixValue(Control self, Matrix3 val)
        """
        return _MaxPlus.Control_SetMatrixValue(self, *args)

    def SetMatrixValuePosition(self, *args):
        """
        SetMatrixValuePosition(Control self, Point3 val, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetMatrixValuePosition(Control self, Point3 val, TimeValue t=Autodesk::Max::Now())
        SetMatrixValuePosition(Control self, Point3 val)
        """
        return _MaxPlus.Control_SetMatrixValuePosition(self, *args)

    def SetMatrixValueRotate(self, *args):
        """
        SetMatrixValueRotate(Control self, Quat val, bool local, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetMatrixValueRotate(Control self, Quat val, bool local, TimeValue t=Autodesk::Max::Now())
        SetMatrixValueRotate(Control self, Quat val, bool local)
        SetMatrixValueRotate(Control self, AngAxis val, bool local, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetMatrixValueRotate(Control self, AngAxis val, bool local, TimeValue t=Autodesk::Max::Now())
        SetMatrixValueRotate(Control self, AngAxis val, bool local)
        """
        return _MaxPlus.Control_SetMatrixValueRotate(self, *args)

    def SetMatrixValueScale(self, *args):
        """
        SetMatrixValueScale(Control self, Point3 val, bool local, TimeValue t=Autodesk::Max::Now(), bool commit=True)
        SetMatrixValueScale(Control self, Point3 val, bool local, TimeValue t=Autodesk::Max::Now())
        SetMatrixValueScale(Control self, Point3 val, bool local)
        """
        return _MaxPlus.Control_SetMatrixValueScale(self, *args)

    def GetInheritsParentTransform(self):
        """GetInheritsParentTransform(Control self) -> bool"""
        return _MaxPlus.Control_GetInheritsParentTransform(self)

    def GetORT(self, *args):
        """GetORT(Control self, int type) -> int"""
        return _MaxPlus.Control_GetORT(self, *args)

    def SetORT(self, *args):
        """SetORT(Control self, int ort, int type)"""
        return _MaxPlus.Control_SetORT(self, *args)

    def EnableORTs(self, *args):
        """EnableORTs(Control self, bool enable)"""
        return _MaxPlus.Control_EnableORTs(self, *args)

    def GetDOFParams(self, *args):
        """
        GetDOFParams(Control self, Matrix3 ptm, DOFParams dofs, bool nodeSel, TimeValue t=Autodesk::Max::Now()) -> bool
        GetDOFParams(Control self, Matrix3 ptm, DOFParams dofs, bool nodeSel) -> bool
        """
        return _MaxPlus.Control_GetDOFParams(self, *args)

    def CreateLockKey(self, *args):
        """
        CreateLockKey(Control self, int which, TimeValue t=Autodesk::Max::Now()) -> bool
        CreateLockKey(Control self, int which) -> bool
        """
        return _MaxPlus.Control_CreateLockKey(self, *args)

    def OKToBindToNode(self, *args):
        """OKToBindToNode(Control self, INode node) -> bool"""
        return _MaxPlus.Control_OKToBindToNode(self, *args)

    def CanApplyEaseMultCurves(self):
        """CanApplyEaseMultCurves(Control self) -> bool"""
        return _MaxPlus.Control_CanApplyEaseMultCurves(self)

    def ApplyEase(self, *args):
        """
        ApplyEase(Control self, Interval valid, TimeValue t=Autodesk::Max::Now()) -> TimeValue
        ApplyEase(Control self, Interval valid) -> TimeValue
        """
        return _MaxPlus.Control_ApplyEase(self, *args)

    def AppendEaseCurve(self, *args):
        """AppendEaseCurve(Control self, Control cont)"""
        return _MaxPlus.Control_AppendEaseCurve(self, *args)

    def DeleteEaseCurve(self, *args):
        """DeleteEaseCurve(Control self, int i)"""
        return _MaxPlus.Control_DeleteEaseCurve(self, *args)

    def GetNumEaseCurves(self):
        """GetNumEaseCurves(Control self) -> int"""
        return _MaxPlus.Control_GetNumEaseCurves(self)

    def GetMultVal(self, *args):
        """
        GetMultVal(Control self, Interval valid, TimeValue t=Autodesk::Max::Now()) -> float
        GetMultVal(Control self, Interval valid) -> float
        """
        return _MaxPlus.Control_GetMultVal(self, *args)

    def AppendMultCurve(self, *args):
        """AppendMultCurve(Control self, Control cont)"""
        return _MaxPlus.Control_AppendMultCurve(self, *args)

    def DeleteMultCurve(self, *args):
        """DeleteMultCurve(Control self, int i)"""
        return _MaxPlus.Control_DeleteMultCurve(self, *args)

    def GetNumMultCurves(self):
        """GetNumMultCurves(Control self) -> int"""
        return _MaxPlus.Control_GetNumMultCurves(self)

    def IsVisibleInViewports(self):
        """IsVisibleInViewports(Control self) -> bool"""
        return _MaxPlus.Control_IsVisibleInViewports(self)

    def CanInstanceController(self):
        """CanInstanceController(Control self) -> bool"""
        return _MaxPlus.Control_CanInstanceController(self)

    def ClearSelection(self, *args):
        """ClearSelection(Control self, int selLevel)"""
        return _MaxPlus.Control_ClearSelection(self, *args)

    def SelectAll(self, *args):
        """SelectAll(Control self, int selLevel)"""
        return _MaxPlus.Control_SelectAll(self, *args)

    def InvertSelection(self, *args):
        """InvertSelection(Control self, int selLevel)"""
        return _MaxPlus.Control_InvertSelection(self, *args)

    def SubMove(self, *args):
        """
        SubMove(Control self, Matrix3 partm, Matrix3 tmAxis, Point3 val, TimeValue t=Autodesk::Max::Now(), bool localOrigin=True)
        SubMove(Control self, Matrix3 partm, Matrix3 tmAxis, Point3 val, TimeValue t=Autodesk::Max::Now())
        SubMove(Control self, Matrix3 partm, Matrix3 tmAxis, Point3 val)
        """
        return _MaxPlus.Control_SubMove(self, *args)

    def SubRotate(self, *args):
        """
        SubRotate(Control self, Matrix3 partm, Matrix3 tmAxis, Quat val, TimeValue t=Autodesk::Max::Now(), bool localOrigin=True)
        SubRotate(Control self, Matrix3 partm, Matrix3 tmAxis, Quat val, TimeValue t=Autodesk::Max::Now())
        SubRotate(Control self, Matrix3 partm, Matrix3 tmAxis, Quat val)
        """
        return _MaxPlus.Control_SubRotate(self, *args)

    def SubScale(self, *args):
        """
        SubScale(Control self, Matrix3 partm, Matrix3 tmAxis, Point3 val, TimeValue t=Autodesk::Max::Now(), bool localOrigin=True)
        SubScale(Control self, Matrix3 partm, Matrix3 tmAxis, Point3 val, TimeValue t=Autodesk::Max::Now())
        SubScale(Control self, Matrix3 partm, Matrix3 tmAxis, Point3 val)
        """
        return _MaxPlus.Control_SubScale(self, *args)

    def RescaleTime(self, *args):
        """RescaleTime(Control self, Interval oseg, Interval nseg) -> bool"""
        return _MaxPlus.Control_RescaleTime(self, *args)

    __swig_destroy__ = _MaxPlus.delete_Control
    __del__ = lambda self : None;
Control_swigregister = _MaxPlus.Control_swigregister
Control_swigregister(Control)

def Control__CastFrom(*args):
  """Control__CastFrom(InterfaceServer b) -> Control"""
  return _MaxPlus.Control__CastFrom(*args)

class RealWorldMapSizeInterface(FPInterface):
    """An interface for setting the real-world map size properties on objects and modifiers."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> RealWorldMapSizeInterface"""
        return _MaxPlus.RealWorldMapSizeInterface__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(RealWorldMapSizeInterface self, Wrapper w) -> bool"""
        return _MaxPlus.RealWorldMapSizeInterface___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(RealWorldMapSizeInterface self, Wrapper w) -> bool"""
        return _MaxPlus.RealWorldMapSizeInterface___ne__(self, *args)

    def GetUsePhysicalScaleUVs(self):
        """GetUsePhysicalScaleUVs(RealWorldMapSizeInterface self) -> bool"""
        return _MaxPlus.RealWorldMapSizeInterface_GetUsePhysicalScaleUVs(self)

    def SetUsePhysicalScaleUVs(self, *args):
        """SetUsePhysicalScaleUVs(RealWorldMapSizeInterface self, bool flag)"""
        return _MaxPlus.RealWorldMapSizeInterface_SetUsePhysicalScaleUVs(self, *args)

    __swig_destroy__ = _MaxPlus.delete_RealWorldMapSizeInterface
    __del__ = lambda self : None;
RealWorldMapSizeInterface_swigregister = _MaxPlus.RealWorldMapSizeInterface_swigregister
RealWorldMapSizeInterface_swigregister(RealWorldMapSizeInterface)

def RealWorldMapSizeInterface__CastFrom(*args):
  """RealWorldMapSizeInterface__CastFrom(InterfaceServer b) -> RealWorldMapSizeInterface"""
  return _MaxPlus.RealWorldMapSizeInterface__CastFrom(*args)

class BaseObject(ReferenceTarget):
    """The base class for anything with a representation in the 3D viewport (e.g. objects and modifiers)."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> BaseObject"""
        return _MaxPlus.BaseObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(BaseObject self, Wrapper w) -> bool"""
        return _MaxPlus.BaseObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(BaseObject self, Wrapper w) -> bool"""
        return _MaxPlus.BaseObject___ne__(self, *args)

    def ClearSelection(self, *args):
        """ClearSelection(BaseObject self, int selLevel)"""
        return _MaxPlus.BaseObject_ClearSelection(self, *args)

    def SelectAll(self, *args):
        """SelectAll(BaseObject self, int selLevel)"""
        return _MaxPlus.BaseObject_SelectAll(self, *args)

    def InvertSelection(self, *args):
        """InvertSelection(BaseObject self, int selLevel)"""
        return _MaxPlus.BaseObject_InvertSelection(self, *args)

    def SupportsNamedSubSels(self):
        """SupportsNamedSubSels(BaseObject self) -> bool"""
        return _MaxPlus.BaseObject_SupportsNamedSubSels(self)

    def ActivateSubSelSet(self, *args):
        """ActivateSubSelSet(BaseObject self, WStr setName)"""
        return _MaxPlus.BaseObject_ActivateSubSelSet(self, *args)

    def NewSetFromCurSel(self, *args):
        """NewSetFromCurSel(BaseObject self, WStr setName)"""
        return _MaxPlus.BaseObject_NewSetFromCurSel(self, *args)

    def RemoveSubSelSet(self, *args):
        """RemoveSubSelSet(BaseObject self, WStr setName)"""
        return _MaxPlus.BaseObject_RemoveSubSelSet(self, *args)

    def SetupNamedSelDropDown(self):
        """SetupNamedSelDropDown(BaseObject self)"""
        return _MaxPlus.BaseObject_SetupNamedSelDropDown(self)

    def GetNumNamedSelSets(self):
        """GetNumNamedSelSets(BaseObject self) -> int"""
        return _MaxPlus.BaseObject_GetNumNamedSelSets(self)

    def GetNamedSelSetName(self, *args):
        """GetNamedSelSetName(BaseObject self, int i) -> WStr"""
        return _MaxPlus.BaseObject_GetNamedSelSetName(self, *args)

    def SetNamedSelSetName(self, *args):
        """SetNamedSelSetName(BaseObject self, int i, WStr newName)"""
        return _MaxPlus.BaseObject_SetNamedSelSetName(self, *args)

    def HitTest(self, *args):
        """
        HitTest(BaseObject self, INode inode, int type, int crossing, int flags, IPoint2 p, Viewport vpt, ModContext mc, 
            TimeValue t=Autodesk::Max::Now()) -> int
        HitTest(BaseObject self, INode inode, int type, int crossing, int flags, IPoint2 p, Viewport vpt, ModContext mc) -> int
        HitTest(BaseObject self, INode inode, int type, int crossing, int flags, IPoint2 p, Viewport vpt, TimeValue t=Autodesk::Max::Now()) -> int
        HitTest(BaseObject self, INode inode, int type, int crossing, int flags, IPoint2 p, Viewport vpt) -> int
        """
        return _MaxPlus.BaseObject_HitTest(self, *args)

    def GetWorldBoundBox(self, *args):
        """
        GetWorldBoundBox(BaseObject self, INode inode, Viewport vp, TimeValue t=Autodesk::Max::Now()) -> Box3
        GetWorldBoundBox(BaseObject self, INode inode, Viewport vp) -> Box3
        """
        return _MaxPlus.BaseObject_GetWorldBoundBox(self, *args)

    def GetLocalBoundBox(self, *args):
        """
        GetLocalBoundBox(BaseObject self, INode inode, Viewport vp, TimeValue t=Autodesk::Max::Now()) -> Box3
        GetLocalBoundBox(BaseObject self, INode inode, Viewport vp) -> Box3
        """
        return _MaxPlus.BaseObject_GetLocalBoundBox(self, *args)

    def GetObjectName(self):
        """GetObjectName(BaseObject self) -> wchar_t const *"""
        return _MaxPlus.BaseObject_GetObjectName(self)

    def OKToChangeTopology(self, *args):
        """OKToChangeTopology(BaseObject self, WStr modName) -> bool"""
        return _MaxPlus.BaseObject_OKToChangeTopology(self, *args)

    def ChangeTopology(self):
        """ChangeTopology(BaseObject self) -> bool"""
        return _MaxPlus.BaseObject_ChangeTopology(self)

    def ForceNotify(self, *args):
        """ForceNotify(BaseObject self, Interval i)"""
        return _MaxPlus.BaseObject_ForceNotify(self, *args)

    def Move(self, *args):
        """
        Move(BaseObject self, Matrix3 partm, Matrix3 tmAxis, Point3 val, bool localOrigin=True, TimeValue t=Autodesk::Max::Now())
        Move(BaseObject self, Matrix3 partm, Matrix3 tmAxis, Point3 val, bool localOrigin=True)
        Move(BaseObject self, Matrix3 partm, Matrix3 tmAxis, Point3 val)
        """
        return _MaxPlus.BaseObject_Move(self, *args)

    def Rotate(self, *args):
        """
        Rotate(BaseObject self, Matrix3 partm, Matrix3 tmAxis, Quat val, bool localOrigin=True, TimeValue t=Autodesk::Max::Now())
        Rotate(BaseObject self, Matrix3 partm, Matrix3 tmAxis, Quat val, bool localOrigin=True)
        Rotate(BaseObject self, Matrix3 partm, Matrix3 tmAxis, Quat val)
        """
        return _MaxPlus.BaseObject_Rotate(self, *args)

    def Scale(self, *args):
        """
        Scale(BaseObject self, Matrix3 partm, Matrix3 tmAxis, Point3 val, bool localOrigin=True, TimeValue t=Autodesk::Max::Now())
        Scale(BaseObject self, Matrix3 partm, Matrix3 tmAxis, Point3 val, bool localOrigin=True)
        Scale(BaseObject self, Matrix3 partm, Matrix3 tmAxis, Point3 val)
        """
        return _MaxPlus.BaseObject_Scale(self, *args)

    def TransformStart(self, *args):
        """TransformStart(BaseObject self, TimeValue t)"""
        return _MaxPlus.BaseObject_TransformStart(self, *args)

    def TransformHoldingStart(self, *args):
        """TransformHoldingStart(BaseObject self, TimeValue t)"""
        return _MaxPlus.BaseObject_TransformHoldingStart(self, *args)

    def TransformHoldingFinish(self, *args):
        """TransformHoldingFinish(BaseObject self, TimeValue t)"""
        return _MaxPlus.BaseObject_TransformHoldingFinish(self, *args)

    def TransformFinish(self, *args):
        """TransformFinish(BaseObject self, TimeValue t)"""
        return _MaxPlus.BaseObject_TransformFinish(self, *args)

    def TransformCancel(self, *args):
        """TransformCancel(BaseObject self, TimeValue t)"""
        return _MaxPlus.BaseObject_TransformCancel(self, *args)

    def HasUVW(self, *args):
        """
        HasUVW(BaseObject self) -> bool
        HasUVW(BaseObject self, int mapChannel) -> bool
        """
        return _MaxPlus.BaseObject_HasUVW(self, *args)

    def SetGenUVW(self, *args):
        """
        SetGenUVW(BaseObject self, bool sw)
        SetGenUVW(BaseObject self, int mapChannel, bool sw)
        """
        return _MaxPlus.BaseObject_SetGenUVW(self, *args)

    def GetNumSubObjTypes(self):
        """GetNumSubObjTypes(BaseObject self) -> int"""
        return _MaxPlus.BaseObject_GetNumSubObjTypes(self)

    def GetSubObjType(self, *args):
        """GetSubObjType(BaseObject self, int i) -> InterfaceServer"""
        return _MaxPlus.BaseObject_GetSubObjType(self, *args)

    def GetSubObjTypeName(self, *args):
        """GetSubObjTypeName(BaseObject self, int i) -> WStr"""
        return _MaxPlus.BaseObject_GetSubObjTypeName(self, *args)

    def GetSubObjectLevel(self):
        """GetSubObjectLevel(BaseObject self) -> int"""
        return _MaxPlus.BaseObject_GetSubObjectLevel(self)

    def HasViewDependentBoundingBox(self):
        """HasViewDependentBoundingBox(BaseObject self) -> bool"""
        return _MaxPlus.BaseObject_HasViewDependentBoundingBox(self)

    __swig_destroy__ = _MaxPlus.delete_BaseObject
    __del__ = lambda self : None;
BaseObject_swigregister = _MaxPlus.BaseObject_swigregister
BaseObject_swigregister(BaseObject)

def BaseObject__CastFrom(*args):
  """BaseObject__CastFrom(InterfaceServer b) -> BaseObject"""
  return _MaxPlus.BaseObject__CastFrom(*args)

class Object(BaseObject):
    """Base class of scene elements such as cameras, lights, helper objects, and geometric objects."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Object"""
        return _MaxPlus.Object__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Object self, Wrapper w) -> bool"""
        return _MaxPlus.Object___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Object self, Wrapper w) -> bool"""
        return _MaxPlus.Object___ne__(self, *args)

    def LockObject(self):
        """LockObject(Object self)"""
        return _MaxPlus.Object_LockObject(self)

    def UnlockObject(self):
        """UnlockObject(Object self)"""
        return _MaxPlus.Object_UnlockObject(self)

    def IsObjectLocked(self):
        """IsObjectLocked(Object self) -> int"""
        return _MaxPlus.Object_IsObjectLocked(self)

    def Eval(self, *args):
        """
        Eval(Object self, TimeValue t=Autodesk::Max::Now()) -> ObjectState
        Eval(Object self) -> ObjectState
        """
        return _MaxPlus.Object_Eval(self, *args)

    def LockChannels(self, *args):
        """LockChannels(Object self, ChannelMask channels)"""
        return _MaxPlus.Object_LockChannels(self, *args)

    def UnlockChannels(self, *args):
        """UnlockChannels(Object self, ChannelMask channels)"""
        return _MaxPlus.Object_UnlockChannels(self, *args)

    def SetChannelLocks(self, *args):
        """SetChannelLocks(Object self, ChannelMask channels)"""
        return _MaxPlus.Object_SetChannelLocks(self, *args)

    def GetChannelLocks(self, *args):
        """
        GetChannelLocks(Object self) -> ChannelMask
        GetChannelLocks(Object self, ChannelMask m) -> ChannelMask
        """
        return _MaxPlus.Object_GetChannelLocks(self, *args)

    def CanCacheObject(self):
        """CanCacheObject(Object self) -> bool"""
        return _MaxPlus.Object_CanCacheObject(self)

    def WSStateInvalidate(self):
        """WSStateInvalidate(Object self)"""
        return _MaxPlus.Object_WSStateInvalidate(self)

    def IsWorldSpaceObject(self):
        """IsWorldSpaceObject(Object self) -> bool"""
        return _MaxPlus.Object_IsWorldSpaceObject(self)

    def GetWorldSpaceObjectNode(self):
        """GetWorldSpaceObjectNode(Object self) -> INode"""
        return _MaxPlus.Object_GetWorldSpaceObjectNode(self)

    def IsParticleSystem(self):
        """IsParticleSystem(Object self) -> bool"""
        return _MaxPlus.Object_IsParticleSystem(self)

    def CopyChannelLocks(self, *args):
        """CopyChannelLocks(Object self, Object obj, ChannelMask needChannels)"""
        return _MaxPlus.Object_CopyChannelLocks(self, *args)

    def TopologyChanged(self):
        """TopologyChanged(Object self)"""
        return _MaxPlus.Object_TopologyChanged(self)

    def IsDeformable(self):
        """IsDeformable(Object self) -> int"""
        return _MaxPlus.Object_IsDeformable(self)

    def GetNumPoints(self):
        """GetNumPoints(Object self) -> int"""
        return _MaxPlus.Object_GetNumPoints(self)

    def GetPoint(self, *args):
        """GetPoint(Object self, int i) -> Point3"""
        return _MaxPlus.Object_GetPoint(self, *args)

    def SetPoint(self, *args):
        """SetPoint(Object self, int i, Point3 p)"""
        return _MaxPlus.Object_SetPoint(self, *args)

    def IsPointSelected(self, *args):
        """IsPointSelected(Object self, int i) -> bool"""
        return _MaxPlus.Object_IsPointSelected(self, *args)

    def PointSelection(self, *args):
        """PointSelection(Object self, int i) -> float"""
        return _MaxPlus.Object_PointSelection(self, *args)

    def HasWeights(self):
        """HasWeights(Object self) -> bool"""
        return _MaxPlus.Object_HasWeights(self)

    def GetWeight(self, *args):
        """GetWeight(Object self, int i) -> double"""
        return _MaxPlus.Object_GetWeight(self, *args)

    def SetWeight(self, *args):
        """SetWeight(Object self, int i, double const w)"""
        return _MaxPlus.Object_SetWeight(self, *args)

    def GetNumFaces(self, *args):
        """
        GetNumFaces(Object self, TimeValue t=Autodesk::Max::Now()) -> bool
        GetNumFaces(Object self) -> bool
        """
        return _MaxPlus.Object_GetNumFaces(self, *args)

    def GetNumVerts(self, *args):
        """
        GetNumVerts(Object self, TimeValue t=Autodesk::Max::Now()) -> bool
        GetNumVerts(Object self) -> bool
        """
        return _MaxPlus.Object_GetNumVerts(self, *args)

    def PointsWereChanged(self):
        """PointsWereChanged(Object self)"""
        return _MaxPlus.Object_PointsWereChanged(self)

    def GetDeformBBox(self, *args):
        """
        GetDeformBBox(Object self, Matrix3 tm, bool useSel=False, TimeValue t=Autodesk::Max::Now()) -> Box3
        GetDeformBBox(Object self, Matrix3 tm, bool useSel=False) -> Box3
        GetDeformBBox(Object self, Matrix3 tm) -> Box3
        GetDeformBBox(Object self, bool useSel=False, TimeValue t=Autodesk::Max::Now()) -> Box3
        GetDeformBBox(Object self, bool useSel=False) -> Box3
        GetDeformBBox(Object self) -> Box3
        """
        return _MaxPlus.Object_GetDeformBBox(self, *args)

    def IsMappable(self):
        """IsMappable(Object self) -> int"""
        return _MaxPlus.Object_IsMappable(self)

    def GetNumMapChannels(self):
        """GetNumMapChannels(Object self) -> int"""
        return _MaxPlus.Object_GetNumMapChannels(self)

    def GetNumMapsUsed(self):
        """GetNumMapsUsed(Object self) -> int"""
        return _MaxPlus.Object_GetNumMapsUsed(self)

    def ApplyUVWMap(self, *args):
        """
        ApplyUVWMap(Object self, int type, float utile, float vtile, float wtile, int uflip, int vflip, int wflip, 
            int cap, Matrix3 tm, int channel=1)
        ApplyUVWMap(Object self, int type, float utile, float vtile, float wtile, int uflip, int vflip, int wflip, 
            int cap, Matrix3 tm)
        """
        return _MaxPlus.Object_ApplyUVWMap(self, *args)

    def CanConvertToType(self, *args):
        """CanConvertToType(Object self, Class_ID obtype) -> int"""
        return _MaxPlus.Object_CanConvertToType(self, *args)

    def ConvertToType(self, *args):
        """
        ConvertToType(Object self, Class_ID obtype, TimeValue t=Autodesk::Max::Now()) -> Object
        ConvertToType(Object self, Class_ID obtype) -> Object
        """
        return _MaxPlus.Object_ConvertToType(self, *args)

    def PreferredCollapseType(self):
        """PreferredCollapseType(Object self) -> Class_ID"""
        return _MaxPlus.Object_PreferredCollapseType(self)

    def CollapseObject(self):
        """CollapseObject(Object self) -> Object"""
        return _MaxPlus.Object_CollapseObject(self)

    def GetSubselState(self):
        """GetSubselState(Object self) -> DWORD"""
        return _MaxPlus.Object_GetSubselState(self)

    def SetSubSelState(self, *args):
        """SetSubSelState(Object self, DWORD s)"""
        return _MaxPlus.Object_SetSubSelState(self, *args)

    def ReadyChannelsForMod(self, *args):
        """ReadyChannelsForMod(Object self, ChannelMask channels)"""
        return _MaxPlus.Object_ReadyChannelsForMod(self, *args)

    def GetChannelValidity(self, *args):
        """
        GetChannelValidity(Object self, int nchan, TimeValue t=Autodesk::Max::Now()) -> Interval
        GetChannelValidity(Object self, int nchan) -> Interval
        """
        return _MaxPlus.Object_GetChannelValidity(self, *args)

    def SetChannelValidity(self, *args):
        """
        SetChannelValidity(Object self, int nchan, Interval v=Autodesk::Max::Forever())
        SetChannelValidity(Object self, int nchan)
        """
        return _MaxPlus.Object_SetChannelValidity(self, *args)

    def InvalidateChannels(self, *args):
        """InvalidateChannels(Object self, ChannelMask channels)"""
        return _MaxPlus.Object_InvalidateChannels(self, *args)

    def GetObjectValidity(self, *args):
        """
        GetObjectValidity(Object self, TimeValue t=Autodesk::Max::Now()) -> Interval
        GetObjectValidity(Object self) -> Interval
        """
        return _MaxPlus.Object_GetObjectValidity(self, *args)

    def MakeShallowCopy(self, *args):
        """MakeShallowCopy(Object self, ChannelMask channels) -> Object"""
        return _MaxPlus.Object_MakeShallowCopy(self, *args)

    def ShallowCopy(self, *args):
        """ShallowCopy(Object self, Object fromOb, ChannelMask channels)"""
        return _MaxPlus.Object_ShallowCopy(self, *args)

    def FreeChannels(self, *args):
        """FreeChannels(Object self, ChannelMask channels)"""
        return _MaxPlus.Object_FreeChannels(self, *args)

    def NewAndCopyChannels(self, *args):
        """NewAndCopyChannels(Object self, ChannelMask channels)"""
        return _MaxPlus.Object_NewAndCopyChannels(self, *args)

    def IsBaseClassOwnedChannel(self, *args):
        """IsBaseClassOwnedChannel(Object self, int nchan) -> bool"""
        return _MaxPlus.Object_IsBaseClassOwnedChannel(self, *args)

    def UpdateValidity(self, *args):
        """UpdateValidity(Object self, int nchan, Interval v)"""
        return _MaxPlus.Object_UpdateValidity(self, *args)

    def GetNoEvalInterval(self):
        """GetNoEvalInterval(Object self) -> Interval"""
        return _MaxPlus.Object_GetNoEvalInterval(self)

    def SetNoEvalInterval(self, *args):
        """SetNoEvalInterval(Object self, Interval iv)"""
        return _MaxPlus.Object_SetNoEvalInterval(self, *args)

    def ReduceCaches(self, *args):
        """
        ReduceCaches(Object self, TimeValue t=Autodesk::Max::Now())
        ReduceCaches(Object self)
        """
        return _MaxPlus.Object_ReduceCaches(self, *args)

    def GetNumPipeBranches(self, selected=True):
        """
        GetNumPipeBranches(Object self, bool selected=True) -> int
        GetNumPipeBranches(Object self) -> int
        """
        return _MaxPlus.Object_GetNumPipeBranches(self, selected)

    def GetPipeBranch(self, *args):
        """
        GetPipeBranch(Object self, int i, bool selected=True) -> Object
        GetPipeBranch(Object self, int i) -> Object
        """
        return _MaxPlus.Object_GetPipeBranch(self, *args)

    def GetBranchINode(self, *args):
        """
        GetBranchINode(Object self, TimeValue t, INode node, int i, bool selected=True) -> INode
        GetBranchINode(Object self, TimeValue t, INode node, int i) -> INode
        """
        return _MaxPlus.Object_GetBranchINode(self, *args)

    def GetNumContainedShapes(self):
        """GetNumContainedShapes(Object self) -> int"""
        return _MaxPlus.Object_GetNumContainedShapes(self)

    def GetContainedShape(self, *args):
        """
        GetContainedShape(Object self, int index, TimeValue t=Autodesk::Max::Now()) -> ShapeObject
        GetContainedShape(Object self, int index) -> ShapeObject
        """
        return _MaxPlus.Object_GetContainedShape(self, *args)

    def GetContainedShapeMatrix(self, *args):
        """
        GetContainedShapeMatrix(Object self, int index, Matrix3 mat, TimeValue t=Autodesk::Max::Now())
        GetContainedShapeMatrix(Object self, int index, Matrix3 mat)
        """
        return _MaxPlus.Object_GetContainedShapeMatrix(self, *args)

    def ContainedShapeSelectionArray(self):
        """ContainedShapeSelectionArray(Object self) -> BitArray"""
        return _MaxPlus.Object_ContainedShapeSelectionArray(self)

    def IsShapeObject(self):
        """IsShapeObject(Object self) -> bool"""
        return _MaxPlus.Object_IsShapeObject(self)

    def CheckObjectIntegrity(self):
        """CheckObjectIntegrity(Object self) -> bool"""
        return _MaxPlus.Object_CheckObjectIntegrity(self)

    def FindBaseObject(self):
        """FindBaseObject(Object self) -> Object"""
        return _MaxPlus.Object_FindBaseObject(self)

    def IsParamSurface(self):
        """IsParamSurface(Object self) -> bool"""
        return _MaxPlus.Object_IsParamSurface(self)

    def GetNumSurfaces(self, *args):
        """
        GetNumSurfaces(Object self, TimeValue t=Autodesk::Max::Now()) -> int
        GetNumSurfaces(Object self) -> int
        """
        return _MaxPlus.Object_GetNumSurfaces(self, *args)

    def GetSurfacePoint(self, *args):
        """
        GetSurfacePoint(Object self, float u, float v, Interval iv=Autodesk::Max::Forever(), TimeValue t=Autodesk::Max::Now()) -> Point3
        GetSurfacePoint(Object self, float u, float v, Interval iv=Autodesk::Max::Forever()) -> Point3
        GetSurfacePoint(Object self, float u, float v) -> Point3
        GetSurfacePoint(Object self, int surface, float u, float v, Interval iv=Autodesk::Max::Forever(), TimeValue t=Autodesk::Max::Now()) -> Point3
        GetSurfacePoint(Object self, int surface, float u, float v, Interval iv=Autodesk::Max::Forever()) -> Point3
        GetSurfacePoint(Object self, int surface, float u, float v) -> Point3
        """
        return _MaxPlus.Object_GetSurfacePoint(self, *args)

    def SurfaceClosedV(self, *args):
        """
        SurfaceClosedV(Object self, int surface, TimeValue t=Autodesk::Max::Now()) -> bool
        SurfaceClosedV(Object self, int surface) -> bool
        """
        return _MaxPlus.Object_SurfaceClosedV(self, *args)

    def SurfaceClosedU(self, *args):
        """
        SurfaceClosedU(Object self, int surface, TimeValue t=Autodesk::Max::Now()) -> bool
        SurfaceClosedU(Object self, int surface) -> bool
        """
        return _MaxPlus.Object_SurfaceClosedU(self, *args)

    def GetExtendedProperties(self, *args):
        """
        GetExtendedProperties(Object self, WStr prop1Label, WStr prop1Data, WStr prop2Label, WStr prop2Data, TimeValue t=Autodesk::Max::Now()) -> bool
        GetExtendedProperties(Object self, WStr prop1Label, WStr prop1Data, WStr prop2Label, WStr prop2Data) -> bool
        """
        return _MaxPlus.Object_GetExtendedProperties(self, *args)

    def MergeAdditionalChannels(self, *args):
        """MergeAdditionalChannels(Object self, Object other, int branchID)"""
        return _MaxPlus.Object_MergeAdditionalChannels(self, *args)

    def BranchDeleted(self, *args):
        """BranchDeleted(Object self, int branchID, bool reorderChannels)"""
        return _MaxPlus.Object_BranchDeleted(self, *args)

    def CopyAdditionalChannels(self, *args):
        """
        CopyAdditionalChannels(Object self, Object other, bool deleteOld=True, bool bShallowCopy=False)
        CopyAdditionalChannels(Object self, Object other, bool deleteOld=True)
        CopyAdditionalChannels(Object self, Object other)
        """
        return _MaxPlus.Object_CopyAdditionalChannels(self, *args)

    def DeleteAllAdditionalChannels(self):
        """DeleteAllAdditionalChannels(Object self)"""
        return _MaxPlus.Object_DeleteAllAdditionalChannels(self)

    def UseSelectionBrackets(self):
        """UseSelectionBrackets(Object self) -> bool"""
        return _MaxPlus.Object_UseSelectionBrackets(self)

    def IsManipulator(self):
        """IsManipulator(Object self) -> bool"""
        return _MaxPlus.Object_IsManipulator(self)

    def IsRenderable(self):
        """IsRenderable(Object self) -> int"""
        return _MaxPlus.Object_IsRenderable(self)

    def InitNodeName(self, *args):
        """InitNodeName(Object self, WStr s)"""
        return _MaxPlus.Object_InitNodeName(self, *args)

    def UsesWireColor(self):
        """UsesWireColor(Object self) -> int"""
        return _MaxPlus.Object_UsesWireColor(self)

    def DoOwnSelectHilite(self):
        """DoOwnSelectHilite(Object self) -> int"""
        return _MaxPlus.Object_DoOwnSelectHilite(self)

    def IntersectRay(self, *args):
        """
        IntersectRay(Object self, Ray r, float & at, Point3 norm, TimeValue t=Autodesk::Max::Now()) -> bool
        IntersectRay(Object self, Ray r, float & at, Point3 norm) -> bool
        """
        return _MaxPlus.Object_IntersectRay(self, *args)

    def NormalAlignVector(self, *args):
        """
        NormalAlignVector(Object self, Point3 pt, Point3 norm, TimeValue t=Autodesk::Max::Now()) -> bool
        NormalAlignVector(Object self, Point3 pt, Point3 norm) -> bool
        """
        return _MaxPlus.Object_NormalAlignVector(self, *args)

    def AsTriObject(self, *args):
        """
        AsTriObject(Object self, TimeValue t=Autodesk::Max::Now()) -> TriObject
        AsTriObject(Object self) -> TriObject
        """
        return _MaxPlus.Object_AsTriObject(self, *args)

    def AsShapeObject(self, *args):
        """
        AsShapeObject(Object self, TimeValue t=Autodesk::Max::Now()) -> ShapeObject
        AsShapeObject(Object self) -> ShapeObject
        """
        return _MaxPlus.Object_AsShapeObject(self, *args)

    def ConvertToDerivedObject(self):
        """ConvertToDerivedObject(Object self) -> Object"""
        return _MaxPlus.Object_ConvertToDerivedObject(self)

    __swig_destroy__ = _MaxPlus.delete_Object
    __del__ = lambda self : None;
Object_swigregister = _MaxPlus.Object_swigregister
Object_swigregister(Object)

def Object__CastFrom(*args):
  """Object__CastFrom(InterfaceServer b) -> Object"""
  return _MaxPlus.Object__CastFrom(*args)

class HelperObject(Object):
    """A helper object plug-in."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> HelperObject"""
        return _MaxPlus.HelperObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(HelperObject self, Wrapper w) -> bool"""
        return _MaxPlus.HelperObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(HelperObject self, Wrapper w) -> bool"""
        return _MaxPlus.HelperObject___ne__(self, *args)

    __swig_destroy__ = _MaxPlus.delete_HelperObject
    __del__ = lambda self : None;
HelperObject_swigregister = _MaxPlus.HelperObject_swigregister
HelperObject_swigregister(HelperObject)

def HelperObject__CastFrom(*args):
  """HelperObject__CastFrom(InterfaceServer b) -> HelperObject"""
  return _MaxPlus.HelperObject__CastFrom(*args)

class GizmoObject(HelperObject):
    """A gizmo helper object (e.g. for atmospherics)"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> GizmoObject"""
        return _MaxPlus.GizmoObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(GizmoObject self, Wrapper w) -> bool"""
        return _MaxPlus.GizmoObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(GizmoObject self, Wrapper w) -> bool"""
        return _MaxPlus.GizmoObject___ne__(self, *args)

    def WireColor(self):
        """WireColor(GizmoObject self) -> Point3"""
        return _MaxPlus.GizmoObject_WireColor(self)

    __swig_destroy__ = _MaxPlus.delete_GizmoObject
    __del__ = lambda self : None;
GizmoObject_swigregister = _MaxPlus.GizmoObject_swigregister
GizmoObject_swigregister(GizmoObject)

def GizmoObject__CastFrom(*args):
  """GizmoObject__CastFrom(InterfaceServer b) -> GizmoObject"""
  return _MaxPlus.GizmoObject__CastFrom(*args)

class CameraState(Wrapper):
    """The state of a camera. The camera looks down the negative Z axis, with X to the right and Y up."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> CameraState"""
        return _MaxPlus.CameraState__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(CameraState self, Wrapper w) -> bool"""
        return _MaxPlus.CameraState___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(CameraState self, Wrapper w) -> bool"""
        return _MaxPlus.CameraState___ne__(self, *args)

    def GetIsOrtho(self):
        """GetIsOrtho(CameraState self) -> bool"""
        return _MaxPlus.CameraState_GetIsOrtho(self)

    def GetFov(self):
        """GetFov(CameraState self) -> float"""
        return _MaxPlus.CameraState_GetFov(self)

    def GetTDist(self):
        """GetTDist(CameraState self) -> float"""
        return _MaxPlus.CameraState_GetTDist(self)

    def GetHorzLine(self):
        """GetHorzLine(CameraState self) -> bool"""
        return _MaxPlus.CameraState_GetHorzLine(self)

    def GetManualClip(self):
        """GetManualClip(CameraState self) -> int"""
        return _MaxPlus.CameraState_GetManualClip(self)

    def GetHither(self):
        """GetHither(CameraState self) -> float"""
        return _MaxPlus.CameraState_GetHither(self)

    def GetYon(self):
        """GetYon(CameraState self) -> float"""
        return _MaxPlus.CameraState_GetYon(self)

    def GetNearRange(self):
        """GetNearRange(CameraState self) -> float"""
        return _MaxPlus.CameraState_GetNearRange(self)

    def GetRarRange(self):
        """GetRarRange(CameraState self) -> float"""
        return _MaxPlus.CameraState_GetRarRange(self)

    __swig_destroy__ = _MaxPlus.delete_CameraState
    __del__ = lambda self : None;
CameraState_swigregister = _MaxPlus.CameraState_swigregister
CameraState_swigregister(CameraState)

def CameraState__CastFrom(*args):
  """CameraState__CastFrom(InterfaceServer b) -> CameraState"""
  return _MaxPlus.CameraState__CastFrom(*args)

class CameraObject(Object):
    """A camera plug-in."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> CameraObject"""
        return _MaxPlus.CameraObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(CameraObject self, Wrapper w) -> bool"""
        return _MaxPlus.CameraObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(CameraObject self, Wrapper w) -> bool"""
        return _MaxPlus.CameraObject___ne__(self, *args)

    def EvalCameraState(self, *args):
        """EvalCameraState(CameraObject self, TimeValue time, Interval valid, CameraState cs) -> RefResult"""
        return _MaxPlus.CameraObject_EvalCameraState(self, *args)

    def SetOrtho(self, *args):
        """SetOrtho(CameraObject self, bool b)"""
        return _MaxPlus.CameraObject_SetOrtho(self, *args)

    def IsOrtho(self):
        """IsOrtho(CameraObject self) -> bool"""
        return _MaxPlus.CameraObject_IsOrtho(self)

    def SetFOV(self, *args):
        """
        SetFOV(CameraObject self, float f, TimeValue t=Autodesk::Max::Now())
        SetFOV(CameraObject self, float f)
        """
        return _MaxPlus.CameraObject_SetFOV(self, *args)

    def GetFOV(self, *args):
        """
        GetFOV(CameraObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetFOV(CameraObject self, TimeValue t=Autodesk::Max::Now()) -> float
        GetFOV(CameraObject self) -> float
        """
        return _MaxPlus.CameraObject_GetFOV(self, *args)

    def SetTDist(self, *args):
        """
        SetTDist(CameraObject self, float f, TimeValue t=Autodesk::Max::Now())
        SetTDist(CameraObject self, float f)
        """
        return _MaxPlus.CameraObject_SetTDist(self, *args)

    def GetTDist(self, *args):
        """
        GetTDist(CameraObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetTDist(CameraObject self, TimeValue t=Autodesk::Max::Now()) -> float
        GetTDist(CameraObject self) -> float
        """
        return _MaxPlus.CameraObject_GetTDist(self, *args)

    def GetManualClip(self):
        """GetManualClip(CameraObject self) -> bool"""
        return _MaxPlus.CameraObject_GetManualClip(self)

    def SetManualClip(self, *args):
        """SetManualClip(CameraObject self, bool onOff)"""
        return _MaxPlus.CameraObject_SetManualClip(self, *args)

    def GetClipDist(self, *args):
        """
        GetClipDist(CameraObject self, TimeValue t, int which, Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetClipDist(CameraObject self, TimeValue t, int which) -> float
        """
        return _MaxPlus.CameraObject_GetClipDist(self, *args)

    def SetClipDist(self, *args):
        """SetClipDist(CameraObject self, TimeValue t, int which, float val)"""
        return _MaxPlus.CameraObject_SetClipDist(self, *args)

    def SetEnvRange(self, *args):
        """SetEnvRange(CameraObject self, TimeValue time, int which, float f)"""
        return _MaxPlus.CameraObject_SetEnvRange(self, *args)

    def GetEnvRange(self, *args):
        """
        GetEnvRange(CameraObject self, TimeValue t, int which, Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetEnvRange(CameraObject self, TimeValue t, int which) -> float
        """
        return _MaxPlus.CameraObject_GetEnvRange(self, *args)

    def SetEnvDisplay(self, *args):
        """
        SetEnvDisplay(CameraObject self, bool b, bool notify=TRUE)
        SetEnvDisplay(CameraObject self, bool b)
        """
        return _MaxPlus.CameraObject_SetEnvDisplay(self, *args)

    def GetEnvDisplay(self):
        """GetEnvDisplay(CameraObject self) -> bool"""
        return _MaxPlus.CameraObject_GetEnvDisplay(self)

    def RenderApertureChanged(self, *args):
        """RenderApertureChanged(CameraObject self, TimeValue t)"""
        return _MaxPlus.CameraObject_RenderApertureChanged(self, *args)

    def UpdateTargDistance(self, *args):
        """UpdateTargDistance(CameraObject self, TimeValue t, INode inode)"""
        return _MaxPlus.CameraObject_UpdateTargDistance(self, *args)

    def SetMultiPassEffectEnabled(self, *args):
        """SetMultiPassEffectEnabled(CameraObject self, TimeValue t, bool enabled)"""
        return _MaxPlus.CameraObject_SetMultiPassEffectEnabled(self, *args)

    def GetMultiPassEffectEnabled(self, *args):
        """GetMultiPassEffectEnabled(CameraObject self, TimeValue t, Interval valid) -> bool"""
        return _MaxPlus.CameraObject_GetMultiPassEffectEnabled(self, *args)

    def SetMultiPassEffectPerPass(self, *args):
        """SetMultiPassEffectPerPass(CameraObject self, bool enabled)"""
        return _MaxPlus.CameraObject_SetMultiPassEffectPerPass(self, *args)

    def GetMultiPassEffectPerPass(self):
        """GetMultiPassEffectPerPass(CameraObject self) -> bool"""
        return _MaxPlus.CameraObject_GetMultiPassEffectPerPass(self)

    def SetMultiPassCameraEffect(self, *args):
        """SetMultiPassCameraEffect(CameraObject self, IMultiPassCameraEffect effect) -> bool"""
        return _MaxPlus.CameraObject_SetMultiPassCameraEffect(self, *args)

    def GetMultiPassCameraEffect(self):
        """GetMultiPassCameraEffect(CameraObject self) -> IMultiPassCameraEffect"""
        return _MaxPlus.CameraObject_GetMultiPassCameraEffect(self)

    __swig_destroy__ = _MaxPlus.delete_CameraObject
    __del__ = lambda self : None;
CameraObject_swigregister = _MaxPlus.CameraObject_swigregister
CameraObject_swigregister(CameraObject)

def CameraObject__CastFrom(*args):
  """CameraObject__CastFrom(InterfaceServer b) -> CameraObject"""
  return _MaxPlus.CameraObject__CastFrom(*args)

class ConstObject(HelperObject):
    """A construction grid helper object."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ConstObject"""
        return _MaxPlus.ConstObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ConstObject self, Wrapper w) -> bool"""
        return _MaxPlus.ConstObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ConstObject self, Wrapper w) -> bool"""
        return _MaxPlus.ConstObject___ne__(self, *args)

    def IsConstObject(self):
        """IsConstObject(ConstObject self) -> int"""
        return _MaxPlus.ConstObject_IsConstObject(self)

    def GetConstructionTM(self, *args):
        """
        GetConstructionTM(ConstObject self, INode inode, Viewport vpt, TimeValue t=Autodesk::Max::Now()) -> Matrix3
        GetConstructionTM(ConstObject self, INode inode, Viewport vpt) -> Matrix3
        """
        return _MaxPlus.ConstObject_GetConstructionTM(self, *args)

    def SetConstructionPlane(self, *args):
        """
        SetConstructionPlane(ConstObject self, int which, int notify=TRUE)
        SetConstructionPlane(ConstObject self, int which)
        """
        return _MaxPlus.ConstObject_SetConstructionPlane(self, *args)

    def GetConstructionPlane(self):
        """GetConstructionPlane(ConstObject self) -> int"""
        return _MaxPlus.ConstObject_GetConstructionPlane(self)

    def GetSnaps(self, *args):
        """GetSnaps(ConstObject self, TimeValue t) -> Point3"""
        return _MaxPlus.ConstObject_GetSnaps(self, *args)

    def SetSnaps(self, *args):
        """SetSnaps(ConstObject self, TimeValue t, Point3 p)"""
        return _MaxPlus.ConstObject_SetSnaps(self, *args)

    def IsTransient(self):
        """IsTransient(ConstObject self) -> bool"""
        return _MaxPlus.ConstObject_IsTransient(self)

    def SetTransient(self, state=True):
        """
        SetTransient(ConstObject self, bool state=True)
        SetTransient(ConstObject self)
        """
        return _MaxPlus.ConstObject_SetTransient(self, state)

    def IsTemporary(self):
        """IsTemporary(ConstObject self) -> bool"""
        return _MaxPlus.ConstObject_IsTemporary(self)

    def SetTemporary(self, state=True):
        """
        SetTemporary(ConstObject self, bool state=True)
        SetTemporary(ConstObject self)
        """
        return _MaxPlus.ConstObject_SetTemporary(self, state)

    def SetExtents(self, *args):
        """SetExtents(ConstObject self, TimeValue t, Point3 halfbox)"""
        return _MaxPlus.ConstObject_SetExtents(self, *args)

    def GetExtents(self, *args):
        """GetExtents(ConstObject self, TimeValue t) -> Point3"""
        return _MaxPlus.ConstObject_GetExtents(self, *args)

    __swig_destroy__ = _MaxPlus.delete_ConstObject
    __del__ = lambda self : None;
ConstObject_swigregister = _MaxPlus.ConstObject_swigregister
ConstObject_swigregister(ConstObject)

def ConstObject__CastFrom(*args):
  """ConstObject__CastFrom(InterfaceServer b) -> ConstObject"""
  return _MaxPlus.ConstObject__CastFrom(*args)

class DummyObject(HelperObject):
    """A dummy helper object."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> DummyObject"""
        return _MaxPlus.DummyObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(DummyObject self, Wrapper w) -> bool"""
        return _MaxPlus.DummyObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(DummyObject self, Wrapper w) -> bool"""
        return _MaxPlus.DummyObject___ne__(self, *args)

    def GetBox(self):
        """GetBox(DummyObject self) -> Box3"""
        return _MaxPlus.DummyObject_GetBox(self)

    def SetBox(self, *args):
        """SetBox(DummyObject self, Box3 b)"""
        return _MaxPlus.DummyObject_SetBox(self, *args)

    def SetColor(self, *args):
        """SetColor(DummyObject self, Point3 color)"""
        return _MaxPlus.DummyObject_SetColor(self, *args)

    def EnableDisplay(self):
        """EnableDisplay(DummyObject self)"""
        return _MaxPlus.DummyObject_EnableDisplay(self)

    def DisableDisplay(self):
        """DisableDisplay(DummyObject self)"""
        return _MaxPlus.DummyObject_DisableDisplay(self)

    def SetValidity(self, *args):
        """SetValidity(DummyObject self, Interval v)"""
        return _MaxPlus.DummyObject_SetValidity(self, *args)

    __swig_destroy__ = _MaxPlus.delete_DummyObject
    __del__ = lambda self : None;
DummyObject_swigregister = _MaxPlus.DummyObject_swigregister
DummyObject_swigregister(DummyObject)

def DummyObject__CastFrom(*args):
  """DummyObject__CastFrom(InterfaceServer b) -> DummyObject"""
  return _MaxPlus.DummyObject__CastFrom(*args)

class GeomObject(Object):
    """An object with geometry that can be rendered."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> GeomObject"""
        return _MaxPlus.GeomObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(GeomObject self, Wrapper w) -> bool"""
        return _MaxPlus.GeomObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(GeomObject self, Wrapper w) -> bool"""
        return _MaxPlus.GeomObject___ne__(self, *args)

    def IsInstanceDependent(self):
        """IsInstanceDependent(GeomObject self) -> int"""
        return _MaxPlus.GeomObject_IsInstanceDependent(self)

    def NumberOfRenderMeshes(self):
        """NumberOfRenderMeshes(GeomObject self) -> int"""
        return _MaxPlus.GeomObject_NumberOfRenderMeshes(self)

    def CanDoDisplacementMapping(self):
        """CanDoDisplacementMapping(GeomObject self) -> bool"""
        return _MaxPlus.GeomObject_CanDoDisplacementMapping(self)

    __swig_destroy__ = _MaxPlus.delete_GeomObject
    __del__ = lambda self : None;
GeomObject_swigregister = _MaxPlus.GeomObject_swigregister
GeomObject_swigregister(GeomObject)

def GeomObject__CastFrom(*args):
  """GeomObject__CastFrom(InterfaceServer b) -> GeomObject"""
  return _MaxPlus.GeomObject__CastFrom(*args)

class GenCamera(CameraObject):
    """A generic camera object used as a base class for many plug-in cameras."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> GenCamera"""
        return _MaxPlus.GenCamera__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(GenCamera self, Wrapper w) -> bool"""
        return _MaxPlus.GenCamera___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(GenCamera self, Wrapper w) -> bool"""
        return _MaxPlus.GenCamera___ne__(self, *args)

    def NewCamera(self, *args):
        """NewCamera(GenCamera self, int type) -> GenCamera"""
        return _MaxPlus.GenCamera_NewCamera(self, *args)

    def SetConeState(self, *args):
        """SetConeState(GenCamera self, bool s)"""
        return _MaxPlus.GenCamera_SetConeState(self, *args)

    def GetConeState(self):
        """GetConeState(GenCamera self) -> bool"""
        return _MaxPlus.GenCamera_GetConeState(self)

    def SetHorizontalLineState(self, *args):
        """SetHorizontalLineState(GenCamera self, bool s)"""
        return _MaxPlus.GenCamera_SetHorizontalLineState(self, *args)

    def GetHorizontalLineState(self):
        """GetHorizontalLineState(GenCamera self) -> bool"""
        return _MaxPlus.GenCamera_GetHorizontalLineState(self)

    def Enable(self, *args):
        """Enable(GenCamera self, bool enab)"""
        return _MaxPlus.GenCamera_Enable(self, *args)

    def SetFOVType(self, *args):
        """SetFOVType(GenCamera self, int ft)"""
        return _MaxPlus.GenCamera_SetFOVType(self, *args)

    def GetFOVType(self):
        """GetFOVType(GenCamera self) -> int"""
        return _MaxPlus.GenCamera_GetFOVType(self)

    def SetFOVControl(self, *args):
        """SetFOVControl(GenCamera self, Control c) -> bool"""
        return _MaxPlus.GenCamera_SetFOVControl(self, *args)

    def GetFOVControl(self):
        """GetFOVControl(GenCamera self) -> Control"""
        return _MaxPlus.GenCamera_GetFOVControl(self)

    def GetCameraType(self):
        """GetCameraType(GenCamera self) -> int"""
        return _MaxPlus.GenCamera_GetCameraType(self)

    def SetCameraType(self, *args):
        """SetCameraType(GenCamera self, int tp)"""
        return _MaxPlus.GenCamera_SetCameraType(self, *args)

    def SetDOFEnable(self, *args):
        """
        SetDOFEnable(GenCamera self, bool onOff, TimeValue t=Autodesk::Max::Now())
        SetDOFEnable(GenCamera self, bool onOff)
        """
        return _MaxPlus.GenCamera_SetDOFEnable(self, *args)

    def GetDOFEnable(self, *args):
        """
        GetDOFEnable(GenCamera self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> bool
        GetDOFEnable(GenCamera self, TimeValue t=Autodesk::Max::Now()) -> bool
        GetDOFEnable(GenCamera self) -> bool
        """
        return _MaxPlus.GenCamera_GetDOFEnable(self, *args)

    def SetDOFFStop(self, *args):
        """
        SetDOFFStop(GenCamera self, float fs, TimeValue t=Autodesk::Max::Now())
        SetDOFFStop(GenCamera self, float fs)
        """
        return _MaxPlus.GenCamera_SetDOFFStop(self, *args)

    def GetDOFFStop(self, *args):
        """
        GetDOFFStop(GenCamera self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetDOFFStop(GenCamera self, TimeValue t=Autodesk::Max::Now()) -> float
        GetDOFFStop(GenCamera self) -> float
        """
        return _MaxPlus.GenCamera_GetDOFFStop(self, *args)

    __swig_destroy__ = _MaxPlus.delete_GenCamera
    __del__ = lambda self : None;
GenCamera_swigregister = _MaxPlus.GenCamera_swigregister
GenCamera_swigregister(GenCamera)

def GenCamera__CastFrom(*args):
  """GenCamera__CastFrom(InterfaceServer b) -> GenCamera"""
  return _MaxPlus.GenCamera__CastFrom(*args)

class LightState(Wrapper):
    """Common properties of most lights."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::LightState self) -> LightState"""
        this = _MaxPlus.new_LightState()
        try: self.this.append(this)
        except: self.this = this
    def GetLightType(self):
        """GetLightType(LightState self) -> int"""
        return _MaxPlus.LightState_GetLightType(self)

    def GetTM(self):
        """GetTM(LightState self) -> Matrix3"""
        return _MaxPlus.LightState_GetTM(self)

    def GetColor(self):
        """GetColor(LightState self) -> Color"""
        return _MaxPlus.LightState_GetColor(self)

    def GetIntensity(self):
        """GetIntensity(LightState self) -> float"""
        return _MaxPlus.LightState_GetIntensity(self)

    def GetHotSize(self):
        """GetHotSize(LightState self) -> float"""
        return _MaxPlus.LightState_GetHotSize(self)

    def GetFallSize(self):
        """GetFallSize(LightState self) -> float"""
        return _MaxPlus.LightState_GetFallSize(self)

    def GetUseNearAtten(self):
        """GetUseNearAtten(LightState self) -> bool"""
        return _MaxPlus.LightState_GetUseNearAtten(self)

    def GetNearAttenStart(self):
        """GetNearAttenStart(LightState self) -> float"""
        return _MaxPlus.LightState_GetNearAttenStart(self)

    def GetNearAttenEnd(self):
        """GetNearAttenEnd(LightState self) -> float"""
        return _MaxPlus.LightState_GetNearAttenEnd(self)

    def GetUseAtten(self):
        """GetUseAtten(LightState self) -> bool"""
        return _MaxPlus.LightState_GetUseAtten(self)

    def GetAttenuationStart(self):
        """GetAttenuationStart(LightState self) -> float"""
        return _MaxPlus.LightState_GetAttenuationStart(self)

    def GetAttenuationEnd(self):
        """GetAttenuationEnd(LightState self) -> float"""
        return _MaxPlus.LightState_GetAttenuationEnd(self)

    def GetShape(self):
        """GetShape(LightState self) -> int"""
        return _MaxPlus.LightState_GetShape(self)

    def GetAspect(self):
        """GetAspect(LightState self) -> float"""
        return _MaxPlus.LightState_GetAspect(self)

    def GetOvershoot(self):
        """GetOvershoot(LightState self) -> bool"""
        return _MaxPlus.LightState_GetOvershoot(self)

    def GetShadow(self):
        """GetShadow(LightState self) -> bool"""
        return _MaxPlus.LightState_GetShadow(self)

    def GetOn(self):
        """GetOn(LightState self) -> bool"""
        return _MaxPlus.LightState_GetOn(self)

    def GetAffectDiffuse(self):
        """GetAffectDiffuse(LightState self) -> bool"""
        return _MaxPlus.LightState_GetAffectDiffuse(self)

    def GetAffectSpecular(self):
        """GetAffectSpecular(LightState self) -> bool"""
        return _MaxPlus.LightState_GetAffectSpecular(self)

    def GetAmbientOnly(self):
        """GetAmbientOnly(LightState self) -> bool"""
        return _MaxPlus.LightState_GetAmbientOnly(self)

    def GetExtra(self):
        """GetExtra(LightState self) -> DWORD"""
        return _MaxPlus.LightState_GetExtra(self)

    Type = _swig_property(GetLightType)

    __swig_destroy__ = _MaxPlus.delete_LightState
    __del__ = lambda self : None;
LightState_swigregister = _MaxPlus.LightState_swigregister
LightState_swigregister(LightState)

class LightObject(Object):
    """A light plug-in object."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> LightObject"""
        return _MaxPlus.LightObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(LightObject self, Wrapper w) -> bool"""
        return _MaxPlus.LightObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(LightObject self, Wrapper w) -> bool"""
        return _MaxPlus.LightObject___ne__(self, *args)

    def Eval(self, *args):
        """
        Eval(LightObject self, LightState ls, TimeValue time=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Forever()) -> RefResult
        Eval(LightObject self, LightState ls, TimeValue time=Autodesk::Max::Now()) -> RefResult
        Eval(LightObject self, LightState ls) -> RefResult
        """
        return _MaxPlus.LightObject_Eval(self, *args)

    def SetUseLight(self, *args):
        """SetUseLight(LightObject self, int onOff)"""
        return _MaxPlus.LightObject_SetUseLight(self, *args)

    def GetUseLight(self):
        """GetUseLight(LightObject self) -> bool"""
        return _MaxPlus.LightObject_GetUseLight(self)

    def SetHotspot(self, *args):
        """
        SetHotspot(LightObject self, float f, TimeValue time=Autodesk::Max::Now())
        SetHotspot(LightObject self, float f)
        """
        return _MaxPlus.LightObject_SetHotspot(self, *args)

    def GetHotspot(self, *args):
        """
        GetHotspot(LightObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetHotspot(LightObject self, TimeValue t=Autodesk::Max::Now()) -> float
        GetHotspot(LightObject self) -> float
        """
        return _MaxPlus.LightObject_GetHotspot(self, *args)

    def SetFallsize(self, *args):
        """
        SetFallsize(LightObject self, float f, TimeValue time=Autodesk::Max::Now())
        SetFallsize(LightObject self, float f)
        """
        return _MaxPlus.LightObject_SetFallsize(self, *args)

    def GetFallsize(self, *args):
        """
        GetFallsize(LightObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetFallsize(LightObject self, TimeValue t=Autodesk::Max::Now()) -> float
        GetFallsize(LightObject self) -> float
        """
        return _MaxPlus.LightObject_GetFallsize(self, *args)

    def SetAtten(self, *args):
        """
        SetAtten(LightObject self, int which, float f, TimeValue time=Autodesk::Max::Now())
        SetAtten(LightObject self, int which, float f)
        """
        return _MaxPlus.LightObject_SetAtten(self, *args)

    def GetAtten(self, *args):
        """
        GetAtten(LightObject self, int which, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetAtten(LightObject self, int which, TimeValue t=Autodesk::Max::Now()) -> float
        GetAtten(LightObject self, int which) -> float
        """
        return _MaxPlus.LightObject_GetAtten(self, *args)

    def SetTDist(self, *args):
        """
        SetTDist(LightObject self, float f, TimeValue time=Autodesk::Max::Now())
        SetTDist(LightObject self, float f)
        """
        return _MaxPlus.LightObject_SetTDist(self, *args)

    def GetTDist(self, *args):
        """
        GetTDist(LightObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetTDist(LightObject self, TimeValue t=Autodesk::Max::Now()) -> float
        GetTDist(LightObject self) -> float
        """
        return _MaxPlus.LightObject_GetTDist(self, *args)

    def SetConeDisplay(self, *args):
        """
        SetConeDisplay(LightObject self, bool s, int notify=TRUE)
        SetConeDisplay(LightObject self, bool s)
        """
        return _MaxPlus.LightObject_SetConeDisplay(self, *args)

    def GetConeDisplay(self):
        """GetConeDisplay(LightObject self) -> bool"""
        return _MaxPlus.LightObject_GetConeDisplay(self)

    def GetShadowMethod(self):
        """GetShadowMethod(LightObject self) -> int"""
        return _MaxPlus.LightObject_GetShadowMethod(self)

    def SetRGBColor(self, *args):
        """
        SetRGBColor(LightObject self, Point3 rgb, TimeValue t=Autodesk::Max::Now())
        SetRGBColor(LightObject self, Point3 rgb)
        """
        return _MaxPlus.LightObject_SetRGBColor(self, *args)

    def GetRGBColor(self, *args):
        """
        GetRGBColor(LightObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> Point3
        GetRGBColor(LightObject self, TimeValue t=Autodesk::Max::Now()) -> Point3
        GetRGBColor(LightObject self) -> Point3
        """
        return _MaxPlus.LightObject_GetRGBColor(self, *args)

    def SetIntensity(self, *args):
        """
        SetIntensity(LightObject self, float f, TimeValue time=Autodesk::Max::Now())
        SetIntensity(LightObject self, float f)
        """
        return _MaxPlus.LightObject_SetIntensity(self, *args)

    def GetIntensity(self, *args):
        """
        GetIntensity(LightObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetIntensity(LightObject self, TimeValue t=Autodesk::Max::Now()) -> float
        GetIntensity(LightObject self) -> float
        """
        return _MaxPlus.LightObject_GetIntensity(self, *args)

    def SetAspect(self, *args):
        """
        SetAspect(LightObject self, float f, TimeValue t=Autodesk::Max::Now())
        SetAspect(LightObject self, float f)
        """
        return _MaxPlus.LightObject_SetAspect(self, *args)

    def GetAspect(self, *args):
        """
        GetAspect(LightObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetAspect(LightObject self, TimeValue t=Autodesk::Max::Now()) -> float
        GetAspect(LightObject self) -> float
        """
        return _MaxPlus.LightObject_GetAspect(self, *args)

    def SetUseAtten(self, *args):
        """SetUseAtten(LightObject self, bool s)"""
        return _MaxPlus.LightObject_SetUseAtten(self, *args)

    def GetUseAtten(self):
        """GetUseAtten(LightObject self) -> bool"""
        return _MaxPlus.LightObject_GetUseAtten(self)

    def SetAttenDisplay(self, *args):
        """SetAttenDisplay(LightObject self, bool s)"""
        return _MaxPlus.LightObject_SetAttenDisplay(self, *args)

    def GetAttenDisplay(self):
        """GetAttenDisplay(LightObject self) -> bool"""
        return _MaxPlus.LightObject_GetAttenDisplay(self)

    def Enable(self, *args):
        """Enable(LightObject self, bool enab)"""
        return _MaxPlus.LightObject_Enable(self, *args)

    def SetMapBias(self, *args):
        """
        SetMapBias(LightObject self, float f, TimeValue t=Autodesk::Max::Now())
        SetMapBias(LightObject self, float f)
        """
        return _MaxPlus.LightObject_SetMapBias(self, *args)

    def GetMapBias(self, *args):
        """
        GetMapBias(LightObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetMapBias(LightObject self, TimeValue t=Autodesk::Max::Now()) -> float
        GetMapBias(LightObject self) -> float
        """
        return _MaxPlus.LightObject_GetMapBias(self, *args)

    def SetMapRange(self, *args):
        """
        SetMapRange(LightObject self, float f, TimeValue t=Autodesk::Max::Now())
        SetMapRange(LightObject self, float f)
        """
        return _MaxPlus.LightObject_SetMapRange(self, *args)

    def GetMapRange(self, *args):
        """
        GetMapRange(LightObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetMapRange(LightObject self, TimeValue t=Autodesk::Max::Now()) -> float
        GetMapRange(LightObject self) -> float
        """
        return _MaxPlus.LightObject_GetMapRange(self, *args)

    def SetMapSize(self, *args):
        """
        SetMapSize(LightObject self, int f, TimeValue t=Autodesk::Max::Now())
        SetMapSize(LightObject self, int f)
        """
        return _MaxPlus.LightObject_SetMapSize(self, *args)

    def GetMapSize(self, *args):
        """
        GetMapSize(LightObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> int
        GetMapSize(LightObject self, TimeValue t=Autodesk::Max::Now()) -> int
        GetMapSize(LightObject self) -> int
        """
        return _MaxPlus.LightObject_GetMapSize(self, *args)

    def SetRayBias(self, *args):
        """
        SetRayBias(LightObject self, float f, TimeValue t=Autodesk::Max::Now())
        SetRayBias(LightObject self, float f)
        """
        return _MaxPlus.LightObject_SetRayBias(self, *args)

    def GetRayBias(self, *args):
        """
        GetRayBias(LightObject self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetRayBias(LightObject self, TimeValue t=Autodesk::Max::Now()) -> float
        GetRayBias(LightObject self) -> float
        """
        return _MaxPlus.LightObject_GetRayBias(self, *args)

    def GetUseGlobal(self):
        """GetUseGlobal(LightObject self) -> bool"""
        return _MaxPlus.LightObject_GetUseGlobal(self)

    def SetUseGlobal(self, *args):
        """SetUseGlobal(LightObject self, bool a)"""
        return _MaxPlus.LightObject_SetUseGlobal(self, *args)

    def GetShadow(self):
        """GetShadow(LightObject self) -> bool"""
        return _MaxPlus.LightObject_GetShadow(self)

    def SetShadow(self, *args):
        """SetShadow(LightObject self, bool a)"""
        return _MaxPlus.LightObject_SetShadow(self, *args)

    def GetShadowType(self):
        """GetShadowType(LightObject self) -> int"""
        return _MaxPlus.LightObject_GetShadowType(self)

    def SetShadowType(self, *args):
        """SetShadowType(LightObject self, int a)"""
        return _MaxPlus.LightObject_SetShadowType(self, *args)

    def GetAbsMapBias(self):
        """GetAbsMapBias(LightObject self) -> bool"""
        return _MaxPlus.LightObject_GetAbsMapBias(self)

    def SetAbsMapBias(self, *args):
        """SetAbsMapBias(LightObject self, bool a)"""
        return _MaxPlus.LightObject_SetAbsMapBias(self, *args)

    def GetOvershoot(self):
        """GetOvershoot(LightObject self) -> int"""
        return _MaxPlus.LightObject_GetOvershoot(self)

    def SetOvershoot(self, *args):
        """SetOvershoot(LightObject self, int a)"""
        return _MaxPlus.LightObject_SetOvershoot(self, *args)

    def GetProjector(self):
        """GetProjector(LightObject self) -> int"""
        return _MaxPlus.LightObject_GetProjector(self)

    def SetProjector(self, *args):
        """SetProjector(LightObject self, int a)"""
        return _MaxPlus.LightObject_SetProjector(self, *args)

    def GetProjMap(self):
        """GetProjMap(LightObject self) -> Texmap"""
        return _MaxPlus.LightObject_GetProjMap(self)

    def SetProjMap(self, *args):
        """SetProjMap(LightObject self, Texmap pmap)"""
        return _MaxPlus.LightObject_SetProjMap(self, *args)

    def UpdateTargDistance(self, *args):
        """UpdateTargDistance(LightObject self, TimeValue t, INode inode)"""
        return _MaxPlus.LightObject_UpdateTargDistance(self, *args)

    __swig_destroy__ = _MaxPlus.delete_LightObject
    __del__ = lambda self : None;
LightObject_swigregister = _MaxPlus.LightObject_swigregister
LightObject_swigregister(LightObject)

def LightObject__CastFrom(*args):
  """LightObject__CastFrom(InterfaceServer b) -> LightObject"""
  return _MaxPlus.LightObject__CastFrom(*args)

class GenLight(LightObject):
    """A generic light object. Many light plug-ins are derived from this."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> GenLight"""
        return _MaxPlus.GenLight__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(GenLight self, Wrapper w) -> bool"""
        return _MaxPlus.GenLight___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(GenLight self, Wrapper w) -> bool"""
        return _MaxPlus.GenLight___ne__(self, *args)

    def IsSpot(self):
        """IsSpot(GenLight self) -> bool"""
        return _MaxPlus.GenLight_IsSpot(self)

    def IsDir(self):
        """IsDir(GenLight self) -> bool"""
        return _MaxPlus.GenLight_IsDir(self)

    def SetContrast(self, *args):
        """
        SetContrast(GenLight self, float f, TimeValue time=Autodesk::Max::Now())
        SetContrast(GenLight self, float f)
        """
        return _MaxPlus.GenLight_SetContrast(self, *args)

    def GetContrast(self, *args):
        """
        GetContrast(GenLight self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetContrast(GenLight self, TimeValue t=Autodesk::Max::Now()) -> float
        GetContrast(GenLight self) -> float
        """
        return _MaxPlus.GenLight_GetContrast(self, *args)

    def SetUseAttenNear(self, *args):
        """SetUseAttenNear(GenLight self, bool s)"""
        return _MaxPlus.GenLight_SetUseAttenNear(self, *args)

    def GetUseAttenNear(self):
        """GetUseAttenNear(GenLight self) -> bool"""
        return _MaxPlus.GenLight_GetUseAttenNear(self)

    def SetAttenNearDisplay(self, *args):
        """SetAttenNearDisplay(GenLight self, bool s)"""
        return _MaxPlus.GenLight_SetAttenNearDisplay(self, *args)

    def GetAttenNearDisplay(self):
        """GetAttenNearDisplay(GenLight self) -> bool"""
        return _MaxPlus.GenLight_GetAttenNearDisplay(self)

    def GetLightType(self):
        """GetLightType(GenLight self) -> int"""
        return _MaxPlus.GenLight_GetLightType(self)

    def SetLightType(self, *args):
        """SetLightType(GenLight self, int tp)"""
        return _MaxPlus.GenLight_SetLightType(self, *args)

    def SetAbsMapBias(self, *args):
        """SetAbsMapBias(GenLight self, int a)"""
        return _MaxPlus.GenLight_SetAbsMapBias(self, *args)

    def SetAtmosShadows(self, *args):
        """
        SetAtmosShadows(GenLight self, bool onOff, TimeValue t=Autodesk::Max::Now())
        SetAtmosShadows(GenLight self, bool onOff)
        """
        return _MaxPlus.GenLight_SetAtmosShadows(self, *args)

    def GetAtmosShadows(self, *args):
        """
        GetAtmosShadows(GenLight self, TimeValue t=Autodesk::Max::Now()) -> bool
        GetAtmosShadows(GenLight self) -> bool
        """
        return _MaxPlus.GenLight_GetAtmosShadows(self, *args)

    def SetAtmosOpacity(self, *args):
        """
        SetAtmosOpacity(GenLight self, float f, TimeValue t=Autodesk::Max::Now())
        SetAtmosOpacity(GenLight self, float f)
        """
        return _MaxPlus.GenLight_SetAtmosOpacity(self, *args)

    def GetAtmosOpacity(self, *args):
        """
        GetAtmosOpacity(GenLight self, TimeValue t=Autodesk::Max::Now(), Interval valid=FOREVER) -> float
        GetAtmosOpacity(GenLight self, TimeValue t=Autodesk::Max::Now()) -> float
        GetAtmosOpacity(GenLight self) -> float
        """
        return _MaxPlus.GenLight_GetAtmosOpacity(self, *args)

    def SetAtmosColAmt(self, *args):
        """
        SetAtmosColAmt(GenLight self, float f, TimeValue t=Autodesk::Max::Now())
        SetAtmosColAmt(GenLight self, float f)
        """
        return _MaxPlus.GenLight_SetAtmosColAmt(self, *args)

    def GetAtmosColAmt(self, *args):
        """
        GetAtmosColAmt(GenLight self, TimeValue t=Autodesk::Max::Now(), Interval valid=FOREVER) -> float
        GetAtmosColAmt(GenLight self, TimeValue t=Autodesk::Max::Now()) -> float
        GetAtmosColAmt(GenLight self) -> float
        """
        return _MaxPlus.GenLight_GetAtmosColAmt(self, *args)

    def SetUseShadowColorMap(self, *args):
        """
        SetUseShadowColorMap(GenLight self, bool onOff, TimeValue t=Autodesk::Max::Now())
        SetUseShadowColorMap(GenLight self, bool onOff)
        """
        return _MaxPlus.GenLight_SetUseShadowColorMap(self, *args)

    def GetUseShadowColorMap(self, *args):
        """
        GetUseShadowColorMap(GenLight self, TimeValue t=Autodesk::Max::Now()) -> bool
        GetUseShadowColorMap(GenLight self) -> bool
        """
        return _MaxPlus.GenLight_GetUseShadowColorMap(self, *args)

    def SetOvershoot(self, *args):
        """SetOvershoot(GenLight self, bool a)"""
        return _MaxPlus.GenLight_SetOvershoot(self, *args)

    def SetHotSpotControl(self, *args):
        """SetHotSpotControl(GenLight self, Control c) -> bool"""
        return _MaxPlus.GenLight_SetHotSpotControl(self, *args)

    def SetFalloffControl(self, *args):
        """SetFalloffControl(GenLight self, Control c) -> bool"""
        return _MaxPlus.GenLight_SetFalloffControl(self, *args)

    def SetColorControl(self, *args):
        """SetColorControl(GenLight self, Control c) -> bool"""
        return _MaxPlus.GenLight_SetColorControl(self, *args)

    def GetHotSpotControl(self):
        """GetHotSpotControl(GenLight self) -> Control"""
        return _MaxPlus.GenLight_GetHotSpotControl(self)

    def GetFalloffControl(self):
        """GetFalloffControl(GenLight self) -> Control"""
        return _MaxPlus.GenLight_GetFalloffControl(self)

    def GetColorControl(self):
        """GetColorControl(GenLight self) -> Control"""
        return _MaxPlus.GenLight_GetColorControl(self)

    def SetAffectDiffuse(self, *args):
        """SetAffectDiffuse(GenLight self, bool onOff)"""
        return _MaxPlus.GenLight_SetAffectDiffuse(self, *args)

    def GetAffectDiffuse(self):
        """GetAffectDiffuse(GenLight self) -> bool"""
        return _MaxPlus.GenLight_GetAffectDiffuse(self)

    def SetAffectSpecular(self, *args):
        """SetAffectSpecular(GenLight self, bool onOff)"""
        return _MaxPlus.GenLight_SetAffectSpecular(self, *args)

    def GetAffectSpecular(self):
        """GetAffectSpecular(GenLight self) -> bool"""
        return _MaxPlus.GenLight_GetAffectSpecular(self)

    def SetDecayType(self, *args):
        """SetDecayType(GenLight self, bool onOff)"""
        return _MaxPlus.GenLight_SetDecayType(self, *args)

    def GetDecayType(self):
        """GetDecayType(GenLight self) -> bool"""
        return _MaxPlus.GenLight_GetDecayType(self)

    def SetDecayRadius(self, *args):
        """
        SetDecayRadius(GenLight self, float f, TimeValue time=Autodesk::Max::Now())
        SetDecayRadius(GenLight self, float f)
        """
        return _MaxPlus.GenLight_SetDecayRadius(self, *args)

    def GetDecayRadius(self, *args):
        """
        GetDecayRadius(GenLight self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetDecayRadius(GenLight self, TimeValue t=Autodesk::Max::Now()) -> float
        GetDecayRadius(GenLight self) -> float
        """
        return _MaxPlus.GenLight_GetDecayRadius(self, *args)

    def SetDiffuseSoft(self, *args):
        """
        SetDiffuseSoft(GenLight self, float f, TimeValue time=Autodesk::Max::Now())
        SetDiffuseSoft(GenLight self, float f)
        """
        return _MaxPlus.GenLight_SetDiffuseSoft(self, *args)

    def GetDiffuseSoft(self, *args):
        """
        GetDiffuseSoft(GenLight self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetDiffuseSoft(GenLight self, TimeValue t=Autodesk::Max::Now()) -> float
        GetDiffuseSoft(GenLight self) -> float
        """
        return _MaxPlus.GenLight_GetDiffuseSoft(self, *args)

    def SetShadColor(self, *args):
        """
        SetShadColor(GenLight self, Point3 rgb, TimeValue t=Autodesk::Max::Now())
        SetShadColor(GenLight self, Point3 rgb)
        """
        return _MaxPlus.GenLight_SetShadColor(self, *args)

    def GetShadColor(self, *args):
        """
        GetShadColor(GenLight self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> Point3
        GetShadColor(GenLight self, TimeValue t=Autodesk::Max::Now()) -> Point3
        GetShadColor(GenLight self) -> Point3
        """
        return _MaxPlus.GenLight_GetShadColor(self, *args)

    def GetLightAffectsShadow(self):
        """GetLightAffectsShadow(GenLight self) -> bool"""
        return _MaxPlus.GenLight_GetLightAffectsShadow(self)

    def SetLightAffectsShadow(self, *args):
        """SetLightAffectsShadow(GenLight self, bool b)"""
        return _MaxPlus.GenLight_SetLightAffectsShadow(self, *args)

    def SetShadMult(self, *args):
        """
        SetShadMult(GenLight self, float m, TimeValue t=Autodesk::Max::Now())
        SetShadMult(GenLight self, float m)
        """
        return _MaxPlus.GenLight_SetShadMult(self, *args)

    def GetShadMult(self, *args):
        """
        GetShadMult(GenLight self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetShadMult(GenLight self, TimeValue t=Autodesk::Max::Now()) -> float
        GetShadMult(GenLight self) -> float
        """
        return _MaxPlus.GenLight_GetShadMult(self, *args)

    def GetShadowProjMap(self):
        """GetShadowProjMap(GenLight self) -> Texmap"""
        return _MaxPlus.GenLight_GetShadowProjMap(self)

    def SetShadowProjMap(self, *args):
        """SetShadowProjMap(GenLight self, Texmap pmap)"""
        return _MaxPlus.GenLight_SetShadowProjMap(self, *args)

    def SetAmbientOnly(self, *args):
        """SetAmbientOnly(GenLight self, bool onOff)"""
        return _MaxPlus.GenLight_SetAmbientOnly(self, *args)

    def GetAmbientOnly(self):
        """GetAmbientOnly(GenLight self) -> bool"""
        return _MaxPlus.GenLight_GetAmbientOnly(self)

    __swig_destroy__ = _MaxPlus.delete_GenLight
    __del__ = lambda self : None;
GenLight_swigregister = _MaxPlus.GenLight_swigregister
GenLight_swigregister(GenLight)

def GenLight__CastFrom(*args):
  """GenLight__CastFrom(InterfaceServer b) -> GenLight"""
  return _MaxPlus.GenLight__CastFrom(*args)

class ObjectState(Wrapper):
    """The data structure that flows up the geometry pipeline, as modifications are applied to the base object."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::ObjectState self) -> ObjectState
        __init__(Autodesk::Max::ObjectState self, Object ob) -> ObjectState
        __init__(Autodesk::Max::ObjectState self, ObjectState os) -> ObjectState
        """
        this = _MaxPlus.new_ObjectState(*args)
        try: self.this.append(this)
        except: self.this = this
    def OSSetFlag(self, *args):
        """OSSetFlag(ObjectState self, ulong f)"""
        return _MaxPlus.ObjectState_OSSetFlag(self, *args)

    def OSClearFlag(self, *args):
        """OSClearFlag(ObjectState self, ulong f)"""
        return _MaxPlus.ObjectState_OSClearFlag(self, *args)

    def OSTestFlag(self, *args):
        """OSTestFlag(ObjectState self, ulong f) -> ulong"""
        return _MaxPlus.ObjectState_OSTestFlag(self, *args)

    def OSCopyFlag(self, *args):
        """OSCopyFlag(ObjectState self, ulong f, ObjectState fromos)"""
        return _MaxPlus.ObjectState_OSCopyFlag(self, *args)

    def tmValid(self):
        """tmValid(ObjectState self) -> Interval"""
        return _MaxPlus.ObjectState_tmValid(self)

    def mtlValid(self):
        """mtlValid(ObjectState self) -> Interval"""
        return _MaxPlus.ObjectState_mtlValid(self)

    def Validity(self, *args):
        """Validity(ObjectState self, TimeValue t) -> Interval"""
        return _MaxPlus.ObjectState_Validity(self, *args)

    def TMIsIdentity(self):
        """TMIsIdentity(ObjectState self) -> int"""
        return _MaxPlus.ObjectState_TMIsIdentity(self)

    def SetTM(self, *args):
        """SetTM(ObjectState self, Matrix3 mat, Interval iv)"""
        return _MaxPlus.ObjectState_SetTM(self, *args)

    def GetTM(self):
        """GetTM(ObjectState self) -> Matrix3"""
        return _MaxPlus.ObjectState_GetTM(self)

    def SetIdentityTM(self):
        """SetIdentityTM(ObjectState self)"""
        return _MaxPlus.ObjectState_SetIdentityTM(self)

    def ApplyTM(self, *args):
        """ApplyTM(ObjectState self, Matrix3 mat, Interval iv)"""
        return _MaxPlus.ObjectState_ApplyTM(self, *args)

    def CopyTM(self, *args):
        """CopyTM(ObjectState self, ObjectState fromos)"""
        return _MaxPlus.ObjectState_CopyTM(self, *args)

    def CopyMtl(self, *args):
        """CopyMtl(ObjectState self, ObjectState fromos)"""
        return _MaxPlus.ObjectState_CopyMtl(self, *args)

    def Invalidate(self, *args):
        """
        Invalidate(ObjectState self, ChannelMask channels, bool checkLock=True)
        Invalidate(ObjectState self, ChannelMask channels)
        """
        return _MaxPlus.ObjectState_Invalidate(self, *args)

    def DeleteObj(self, checkLock=True):
        """
        DeleteObj(ObjectState self, bool checkLock=True) -> ChannelMask
        DeleteObj(ObjectState self) -> ChannelMask
        """
        return _MaxPlus.ObjectState_DeleteObj(self, checkLock)

    def ObjHasDependents(self):
        """ObjHasDependents(ObjectState self) -> bool"""
        return _MaxPlus.ObjectState_ObjHasDependents(self)

    def Getobj(self):
        """Getobj(ObjectState self) -> Object"""
        return _MaxPlus.ObjectState_Getobj(self)

    __swig_destroy__ = _MaxPlus.delete_ObjectState
    __del__ = lambda self : None;
ObjectState_swigregister = _MaxPlus.ObjectState_swigregister
ObjectState_swigregister(ObjectState)

class SoundObj(ReferenceTarget):
    """A sound object's primary purpose is to provide a sound track for the scene. There is always one sound object in the scene."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> SoundObj"""
        return _MaxPlus.SoundObj__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(SoundObj self, Wrapper w) -> bool"""
        return _MaxPlus.SoundObj___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(SoundObj self, Wrapper w) -> bool"""
        return _MaxPlus.SoundObj___ne__(self, *args)

    def Play(self, *args):
        """Play(SoundObj self, TimeValue tStart, TimeValue t0, TimeValue t1, TimeValue frameStep) -> bool"""
        return _MaxPlus.SoundObj_Play(self, *args)

    def Scrub(self, *args):
        """Scrub(SoundObj self, TimeValue t0, TimeValue t1)"""
        return _MaxPlus.SoundObj_Scrub(self, *args)

    def Stop(self):
        """Stop(SoundObj self) -> TimeValue"""
        return _MaxPlus.SoundObj_Stop(self)

    def GetTime(self):
        """GetTime(SoundObj self) -> TimeValue"""
        return _MaxPlus.SoundObj_GetTime(self)

    def Playing(self):
        """Playing(SoundObj self) -> bool"""
        return _MaxPlus.SoundObj_Playing(self)

    def SetMute(self, *args):
        """SetMute(SoundObj self, bool mute)"""
        return _MaxPlus.SoundObj_SetMute(self, *args)

    def IsMute(self):
        """IsMute(SoundObj self) -> bool"""
        return _MaxPlus.SoundObj_IsMute(self)

    __swig_destroy__ = _MaxPlus.delete_SoundObj
    __del__ = lambda self : None;
SoundObj_swigregister = _MaxPlus.SoundObj_swigregister
SoundObj_swigregister(SoundObj)

def SoundObj__CastFrom(*args):
  """SoundObj__CastFrom(InterfaceServer b) -> SoundObj"""
  return _MaxPlus.SoundObj__CastFrom(*args)

class TriObject(GeomObject):
    """A triangle mesh object. All geometric objects should be able to be converted to TriObjects."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> TriObject"""
        return _MaxPlus.TriObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(TriObject self, Wrapper w) -> bool"""
        return _MaxPlus.TriObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(TriObject self, Wrapper w) -> bool"""
        return _MaxPlus.TriObject___ne__(self, *args)

    def GetObjectDisplayRequirement(self):
        """GetObjectDisplayRequirement(TriObject self) -> unsigned long"""
        return _MaxPlus.TriObject_GetObjectDisplayRequirement(self)

    def PrepareDisplay(self, *args):
        """PrepareDisplay(TriObject self, MaxSDK::Graphics::UpdateDisplayContext const & prepareDisplayContext) -> bool"""
        return _MaxPlus.TriObject_PrepareDisplay(self, *args)

    def UpdatePerNodeItems(self, *args):
        """
        UpdatePerNodeItems(TriObject self, MaxSDK::Graphics::UpdateDisplayContext const & updateDisplayContext, MaxSDK::Graphics::UpdateNodeContext & nodeContext, 
            MaxSDK::Graphics::IRenderItemContainer & targetRenderItemContainer) -> bool
        """
        return _MaxPlus.TriObject_UpdatePerNodeItems(self, *args)

    def UpdatePerViewItems(self, *args):
        """
        UpdatePerViewItems(TriObject self, MaxSDK::Graphics::UpdateDisplayContext const & updateDisplayContext, MaxSDK::Graphics::UpdateNodeContext & nodeContext, 
            MaxSDK::Graphics::UpdateViewContext & viewContext, 
            MaxSDK::Graphics::IRenderItemContainer & targetRenderItemContainer) -> bool
        """
        return _MaxPlus.TriObject_UpdatePerViewItems(self, *args)

    def ChannelValidity(self, *args):
        """ChannelValidity(TriObject self, TimeValue t, int nchan) -> Interval"""
        return _MaxPlus.TriObject_ChannelValidity(self, *args)

    def ConvertValidity(self, *args):
        """ConvertValidity(TriObject self, TimeValue t) -> Interval"""
        return _MaxPlus.TriObject_ConvertValidity(self, *args)

    def CreateTriObjRep(self, *args):
        """CreateTriObjRep(TriObject self, TimeValue t) -> Object"""
        return _MaxPlus.TriObject_CreateTriObjRep(self, *args)

    def SetDisplacmentApproxToPreset(self, *args):
        """SetDisplacmentApproxToPreset(TriObject self, int preset)"""
        return _MaxPlus.TriObject_SetDisplacmentApproxToPreset(self, *args)

    def GetMesh(self):
        """GetMesh(TriObject self) -> Mesh"""
        return _MaxPlus.TriObject_GetMesh(self)

    def SetSubDivideDisplacement(self, *args):
        """SetSubDivideDisplacement(TriObject self, bool b)"""
        return _MaxPlus.TriObject_SetSubDivideDisplacement(self, *args)

    def SetDisableDisplacement(self, *args):
        """SetDisableDisplacement(TriObject self, bool b)"""
        return _MaxPlus.TriObject_SetDisableDisplacement(self, *args)

    def SetSplitMeshForDisplacement(self, *args):
        """SetSplitMeshForDisplacement(TriObject self, bool b)"""
        return _MaxPlus.TriObject_SetSplitMeshForDisplacement(self, *args)

    def GetSubDivideDisplacement(self):
        """GetSubDivideDisplacement(TriObject self) -> bool"""
        return _MaxPlus.TriObject_GetSubDivideDisplacement(self)

    def GetDisableDisplacement(self):
        """GetDisableDisplacement(TriObject self) -> bool"""
        return _MaxPlus.TriObject_GetDisableDisplacement(self)

    def GetSplitMeshForDisplacement(self):
        """GetSplitMeshForDisplacement(TriObject self) -> bool"""
        return _MaxPlus.TriObject_GetSplitMeshForDisplacement(self)

    def GetNumTriFaces(*args):
        """
        GetNumTriFaces(Object pObj, TimeValue t=Autodesk::Max::Now()) -> int
        GetNumTriFaces(Object pObj) -> int
        """
        return _MaxPlus.TriObject_GetNumTriFaces(*args)

    GetNumTriFaces = staticmethod(GetNumTriFaces)
    def GetNumTriVerts(*args):
        """
        GetNumTriVerts(Object pObj, TimeValue t=Autodesk::Max::Now()) -> int
        GetNumTriVerts(Object pObj) -> int
        """
        return _MaxPlus.TriObject_GetNumTriVerts(*args)

    GetNumTriVerts = staticmethod(GetNumTriVerts)
    __swig_destroy__ = _MaxPlus.delete_TriObject
    __del__ = lambda self : None;
TriObject_swigregister = _MaxPlus.TriObject_swigregister
TriObject_swigregister(TriObject)

def TriObject__CastFrom(*args):
  """TriObject__CastFrom(InterfaceServer b) -> TriObject"""
  return _MaxPlus.TriObject__CastFrom(*args)

def TriObject_GetNumTriFaces(*args):
  """
    GetNumTriFaces(Object pObj, TimeValue t=Autodesk::Max::Now()) -> int
    TriObject_GetNumTriFaces(Object pObj) -> int
    """
  return _MaxPlus.TriObject_GetNumTriFaces(*args)

def TriObject_GetNumTriVerts(*args):
  """
    GetNumTriVerts(Object pObj, TimeValue t=Autodesk::Max::Now()) -> int
    TriObject_GetNumTriVerts(Object pObj) -> int
    """
  return _MaxPlus.TriObject_GetNumTriVerts(*args)

class PluginDll(object):
    """Provides information about the plug-ins in a specific DLL."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetNumClasses(self):
        """GetNumClasses(PluginDll self) -> int"""
        return _MaxPlus.PluginDll_GetNumClasses(self)

    def GetClass(self, *args):
        """GetClass(PluginDll self, int n) -> ClassDesc"""
        return _MaxPlus.PluginDll_GetClass(self, *args)

    def GetDescription(self):
        """GetDescription(PluginDll self) -> wchar_t const *"""
        return _MaxPlus.PluginDll_GetDescription(self)

    def GetFilePath(self):
        """GetFilePath(PluginDll self) -> wchar_t const *"""
        return _MaxPlus.PluginDll_GetFilePath(self)

    def IsLoaded(self):
        """IsLoaded(PluginDll self) -> bool"""
        return _MaxPlus.PluginDll_IsLoaded(self)

    NumClasses = _swig_property(GetNumClasses)
    Description = _swig_property(GetDescription)
    FilePath = _swig_property(GetFilePath)
    Loaded = _swig_property(IsLoaded)
    Classes = _swig_property(lambda self: (self.GetClass(i) for i in xrange(self.GetNumClasses())))

    __swig_destroy__ = _MaxPlus.delete_PluginDll
    __del__ = lambda self : None;
PluginDll_swigregister = _MaxPlus.PluginDll_swigregister
PluginDll_swigregister(PluginDll)

class ClassInfo(object):
    """Provides information about a specific plug-in in a DLL."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetSuperClassId(self):
        """GetSuperClassId(ClassInfo self) -> SClass_ID"""
        return _MaxPlus.ClassInfo_GetSuperClassId(self)

    def GetClassId(self):
        """GetClassId(ClassInfo self) -> Class_ID"""
        return _MaxPlus.ClassInfo_GetClassId(self)

    def GetName(self):
        """GetName(ClassInfo self) -> wchar_t const *"""
        return _MaxPlus.ClassInfo_GetName(self)

    def GetCategory(self):
        """GetCategory(ClassInfo self) -> wchar_t const *"""
        return _MaxPlus.ClassInfo_GetCategory(self)

    SuperClassId = _swig_property(GetSuperClassId)
    ClassId = _swig_property(GetClassId)
    Name = _swig_property(GetName)
    Category = _swig_property(GetCategory)

    __swig_destroy__ = _MaxPlus.delete_ClassInfo
    __del__ = lambda self : None;
ClassInfo_swigregister = _MaxPlus.ClassInfo_swigregister
ClassInfo_swigregister(ClassInfo)

class ClassList(object):
    """A collection of ClassInfo instances."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetNumClasses(self):
        """GetNumClasses(ClassList self) -> int"""
        return _MaxPlus.ClassList_GetNumClasses(self)

    def GetClassInfo(self, *args):
        """GetClassInfo(ClassList self, int n) -> ClassInfo"""
        return _MaxPlus.ClassList_GetClassInfo(self, *args)

    NumClasses = _swig_property(GetNumClasses)
    Classes = _swig_property(lambda self: (self.GetClassInfo(i) for i in xrange(self.GetNumClasses())))

    __swig_destroy__ = _MaxPlus.delete_ClassList
    __del__ = lambda self : None;
ClassList_swigregister = _MaxPlus.ClassList_swigregister
ClassList_swigregister(ClassList)

class PluginManager(object):
    """Utility functions for querying the loaded plug-in classes and plug-in DLLs."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetNumPluginDlls():
        """GetNumPluginDlls() -> int"""
        return _MaxPlus.PluginManager_GetNumPluginDlls()

    GetNumPluginDlls = staticmethod(GetNumPluginDlls)
    def GetPluginDll(*args):
        """GetPluginDll(int n) -> PluginDll"""
        return _MaxPlus.PluginManager_GetPluginDll(*args)

    GetPluginDll = staticmethod(GetPluginDll)
    def GetClassList():
        """GetClassList() -> ClassList"""
        return _MaxPlus.PluginManager_GetClassList()

    GetClassList = staticmethod(GetClassList)
    def GetNumClasses():
        """GetNumClasses() -> int"""
        return _MaxPlus.PluginManager_GetNumClasses()

    GetNumClasses = staticmethod(GetNumClasses)
    def GetClassInfo(*args):
        """GetClassInfo(int n) -> ClassInfo"""
        return _MaxPlus.PluginManager_GetClassInfo(*args)

    GetClassInfo = staticmethod(GetClassInfo)
    PluginDlls = _static_generator_property(GetNumPluginDlls,GetPluginDll)
    Classes = _static_generator_property(GetNumClasses,GetClassInfo)

    __swig_destroy__ = _MaxPlus.delete_PluginManager
    __del__ = lambda self : None;
PluginManager_swigregister = _MaxPlus.PluginManager_swigregister
PluginManager_swigregister(PluginManager)

def PluginManager_GetNumPluginDlls():
  """PluginManager_GetNumPluginDlls() -> int"""
  return _MaxPlus.PluginManager_GetNumPluginDlls()

def PluginManager_GetPluginDll(*args):
  """PluginManager_GetPluginDll(int n) -> PluginDll"""
  return _MaxPlus.PluginManager_GetPluginDll(*args)

def PluginManager_GetClassList():
  """PluginManager_GetClassList() -> ClassList"""
  return _MaxPlus.PluginManager_GetClassList()

def PluginManager_GetNumClasses():
  """PluginManager_GetNumClasses() -> int"""
  return _MaxPlus.PluginManager_GetNumClasses()

def PluginManager_GetClassInfo(*args):
  """PluginManager_GetClassInfo(int n) -> ClassInfo"""
  return _MaxPlus.PluginManager_GetClassInfo(*args)

class SelectionManager(object):
    """Utility functions for working with selected nodes."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetCount():
        """GetCount() -> int"""
        return _MaxPlus.SelectionManager_GetCount()

    GetCount = staticmethod(GetCount)
    def GetNode(*args):
        """GetNode(int n) -> INode"""
        return _MaxPlus.SelectionManager_GetNode(*args)

    GetNode = staticmethod(GetNode)
    def SelectNodes(*args):
        """SelectNodes(INodeTab nodes)"""
        return _MaxPlus.SelectionManager_SelectNodes(*args)

    SelectNodes = staticmethod(SelectNodes)
    def DeselectNodes(*args):
        """DeselectNodes(INodeTab nodes)"""
        return _MaxPlus.SelectionManager_DeselectNodes(*args)

    DeselectNodes = staticmethod(DeselectNodes)
    def GetNodes():
        """GetNodes() -> INodeTab"""
        return _MaxPlus.SelectionManager_GetNodes()

    GetNodes = staticmethod(GetNodes)
    def ClearNodeSelection(redraw=True):
        """
        ClearNodeSelection(bool redraw=True)
        ClearNodeSelection()
        """
        return _MaxPlus.SelectionManager_ClearNodeSelection(redraw)

    ClearNodeSelection = staticmethod(ClearNodeSelection)
    def GetFrozen():
        """GetFrozen() -> bool"""
        return _MaxPlus.SelectionManager_GetFrozen()

    GetFrozen = staticmethod(GetFrozen)
    def SetFrozen(b=True):
        """
        SetFrozen(bool b=True)
        SetFrozen()
        """
        return _MaxPlus.SelectionManager_SetFrozen(b)

    SetFrozen = staticmethod(SetFrozen)
    def GetSelectFilter():
        """GetSelectFilter() -> int"""
        return _MaxPlus.SelectionManager_GetSelectFilter()

    GetSelectFilter = staticmethod(GetSelectFilter)
    def SetSelectFilter(*args):
        """SetSelectFilter(int c)"""
        return _MaxPlus.SelectionManager_SetSelectFilter(*args)

    SetSelectFilter = staticmethod(SetSelectFilter)
    def GetNumberSelectFilters():
        """GetNumberSelectFilters() -> int"""
        return _MaxPlus.SelectionManager_GetNumberSelectFilters()

    GetNumberSelectFilters = staticmethod(GetNumberSelectFilters)
    def GetSelectFilterName(*args):
        """GetSelectFilterName(int index) -> wchar_t const *"""
        return _MaxPlus.SelectionManager_GetSelectFilterName(*args)

    GetSelectFilterName = staticmethod(GetSelectFilterName)
    def SetSelectionType(*args):
        """SetSelectionType(bool autoWinCross, int winCrossOrAutoDir) -> bool"""
        return _MaxPlus.SelectionManager_SetSelectionType(*args)

    SetSelectionType = staticmethod(SetSelectionType)
    def SelectNode(*args):
        """
        SelectNode(INode node, bool replaceSelection=True)
        SelectNode(INode node)
        """
        return _MaxPlus.SelectionManager_SelectNode(*args)

    SelectNode = staticmethod(SelectNode)
    def DeSelectNode(*args):
        """DeSelectNode(INode node)"""
        return _MaxPlus.SelectionManager_DeSelectNode(*args)

    DeSelectNode = staticmethod(DeSelectNode)
    def SelectNodeTab(*args):
        """
        SelectNodeTab(INodeTab nodes, bool sel, bool redraw=True)
        SelectNodeTab(INodeTab nodes, bool sel)
        """
        return _MaxPlus.SelectionManager_SelectNodeTab(*args)

    SelectNodeTab = staticmethod(SelectNodeTab)
    def ClearCurNamedSelSet():
        """ClearCurNamedSelSet()"""
        return _MaxPlus.SelectionManager_ClearCurNamedSelSet()

    ClearCurNamedSelSet = staticmethod(ClearCurNamedSelSet)
    def SetCurNamedSelSet(*args):
        """SetCurNamedSelSet(wchar_t const * setName)"""
        return _MaxPlus.SelectionManager_SetCurNamedSelSet(*args)

    SetCurNamedSelSet = staticmethod(SetCurNamedSelSet)
    def NamedSelSetListChanged():
        """NamedSelSetListChanged()"""
        return _MaxPlus.SelectionManager_NamedSelSetListChanged()

    NamedSelSetListChanged = staticmethod(NamedSelSetListChanged)
    def GetSelectionWorldBox(*args):
        """GetSelectionWorldBox(TimeValue t, Box3 box)"""
        return _MaxPlus.SelectionManager_GetSelectionWorldBox(*args)

    GetSelectionWorldBox = staticmethod(GetSelectionWorldBox)
    def GetCrossing():
        """GetCrossing() -> bool"""
        return _MaxPlus.SelectionManager_GetCrossing()

    GetCrossing = staticmethod(GetCrossing)
    def SetTestOnlyFrozen(*args):
        """SetTestOnlyFrozen(int onOff)"""
        return _MaxPlus.SelectionManager_SetTestOnlyFrozen(*args)

    SetTestOnlyFrozen = staticmethod(SetTestOnlyFrozen)
    Nodes = _static_generator_property(GetCount,GetNode)

    __swig_destroy__ = _MaxPlus.delete_SelectionManager
    __del__ = lambda self : None;
SelectionManager_swigregister = _MaxPlus.SelectionManager_swigregister
SelectionManager_swigregister(SelectionManager)

def SelectionManager_GetCount():
  """SelectionManager_GetCount() -> int"""
  return _MaxPlus.SelectionManager_GetCount()

def SelectionManager_GetNode(*args):
  """SelectionManager_GetNode(int n) -> INode"""
  return _MaxPlus.SelectionManager_GetNode(*args)

def SelectionManager_SelectNodes(*args):
  """SelectionManager_SelectNodes(INodeTab nodes)"""
  return _MaxPlus.SelectionManager_SelectNodes(*args)

def SelectionManager_DeselectNodes(*args):
  """SelectionManager_DeselectNodes(INodeTab nodes)"""
  return _MaxPlus.SelectionManager_DeselectNodes(*args)

def SelectionManager_GetNodes():
  """SelectionManager_GetNodes() -> INodeTab"""
  return _MaxPlus.SelectionManager_GetNodes()

def SelectionManager_ClearNodeSelection(redraw=True):
  """
    ClearNodeSelection(bool redraw=True)
    SelectionManager_ClearNodeSelection()
    """
  return _MaxPlus.SelectionManager_ClearNodeSelection(redraw)

def SelectionManager_GetFrozen():
  """SelectionManager_GetFrozen() -> bool"""
  return _MaxPlus.SelectionManager_GetFrozen()

def SelectionManager_SetFrozen(b=True):
  """
    SetFrozen(bool b=True)
    SelectionManager_SetFrozen()
    """
  return _MaxPlus.SelectionManager_SetFrozen(b)

def SelectionManager_GetSelectFilter():
  """SelectionManager_GetSelectFilter() -> int"""
  return _MaxPlus.SelectionManager_GetSelectFilter()

def SelectionManager_SetSelectFilter(*args):
  """SelectionManager_SetSelectFilter(int c)"""
  return _MaxPlus.SelectionManager_SetSelectFilter(*args)

def SelectionManager_GetNumberSelectFilters():
  """SelectionManager_GetNumberSelectFilters() -> int"""
  return _MaxPlus.SelectionManager_GetNumberSelectFilters()

def SelectionManager_GetSelectFilterName(*args):
  """SelectionManager_GetSelectFilterName(int index) -> wchar_t const *"""
  return _MaxPlus.SelectionManager_GetSelectFilterName(*args)

def SelectionManager_SetSelectionType(*args):
  """SelectionManager_SetSelectionType(bool autoWinCross, int winCrossOrAutoDir) -> bool"""
  return _MaxPlus.SelectionManager_SetSelectionType(*args)

def SelectionManager_SelectNode(*args):
  """
    SelectNode(INode node, bool replaceSelection=True)
    SelectionManager_SelectNode(INode node)
    """
  return _MaxPlus.SelectionManager_SelectNode(*args)

def SelectionManager_DeSelectNode(*args):
  """SelectionManager_DeSelectNode(INode node)"""
  return _MaxPlus.SelectionManager_DeSelectNode(*args)

def SelectionManager_SelectNodeTab(*args):
  """
    SelectNodeTab(INodeTab nodes, bool sel, bool redraw=True)
    SelectionManager_SelectNodeTab(INodeTab nodes, bool sel)
    """
  return _MaxPlus.SelectionManager_SelectNodeTab(*args)

def SelectionManager_ClearCurNamedSelSet():
  """SelectionManager_ClearCurNamedSelSet()"""
  return _MaxPlus.SelectionManager_ClearCurNamedSelSet()

def SelectionManager_SetCurNamedSelSet(*args):
  """SelectionManager_SetCurNamedSelSet(wchar_t const * setName)"""
  return _MaxPlus.SelectionManager_SetCurNamedSelSet(*args)

def SelectionManager_NamedSelSetListChanged():
  """SelectionManager_NamedSelSetListChanged()"""
  return _MaxPlus.SelectionManager_NamedSelSetListChanged()

def SelectionManager_GetSelectionWorldBox(*args):
  """SelectionManager_GetSelectionWorldBox(TimeValue t, Box3 box)"""
  return _MaxPlus.SelectionManager_GetSelectionWorldBox(*args)

def SelectionManager_GetCrossing():
  """SelectionManager_GetCrossing() -> bool"""
  return _MaxPlus.SelectionManager_GetCrossing()

def SelectionManager_SetTestOnlyFrozen(*args):
  """SelectionManager_SetTestOnlyFrozen(int onOff)"""
  return _MaxPlus.SelectionManager_SetTestOnlyFrozen(*args)

class TVFace(Wrapper):
    """This class maintains an array of three indices into a mesh texture vertex buffer. It is used for texture faces as well as vertex colors."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """__init__(Autodesk::Max::TVFace self, DWORD a, DWORD b, DWORD c) -> TVFace"""
        this = _MaxPlus.new_TVFace(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetA(self):
        """GetA(TVFace self) -> DWORD"""
        return _MaxPlus.TVFace_GetA(self)

    def GetB(self):
        """GetB(TVFace self) -> DWORD"""
        return _MaxPlus.TVFace_GetB(self)

    def GetC(self):
        """GetC(TVFace self) -> DWORD"""
        return _MaxPlus.TVFace_GetC(self)

    def SetA(self, *args):
        """SetA(TVFace self, DWORD a)"""
        return _MaxPlus.TVFace_SetA(self, *args)

    def SetB(self, *args):
        """SetB(TVFace self, DWORD b)"""
        return _MaxPlus.TVFace_SetB(self, *args)

    def SetC(self, *args):
        """SetC(TVFace self, DWORD c)"""
        return _MaxPlus.TVFace_SetC(self, *args)

    def GetItem(self, *args):
        """GetItem(TVFace self, int n) -> DWORD"""
        return _MaxPlus.TVFace_GetItem(self, *args)

    def SetAt(self, *args):
        """SetAt(TVFace self, int n, DWORD v)"""
        return _MaxPlus.TVFace_SetAt(self, *args)

    A = _swig_property(GetA, SetA)
    B = _swig_property(GetB, SetB)
    C = _swig_property(GetC, SetC)

    __swig_destroy__ = _MaxPlus.delete_TVFace
    __del__ = lambda self : None;
TVFace_swigregister = _MaxPlus.TVFace_swigregister
TVFace_swigregister(TVFace)

class Face(Wrapper):
    """A single triangular face. The class maintains three indices into the vertex list for the face, a 32-bit smoothing group for the face, and 32-bits of face flags. The flags also store information about the visibility of the face, the visibility of the three edges, and whether or not the face has texture vertices present. The most significant 16-bits of the face flags store the material index."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Face"""
        return _MaxPlus.Face__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Face self, Wrapper w) -> bool"""
        return _MaxPlus.Face___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Face self, Wrapper w) -> bool"""
        return _MaxPlus.Face___ne__(self, *args)

    def GetMatID(self):
        """GetMatID(Face self) -> MtlID"""
        return _MaxPlus.Face_GetMatID(self)

    def SetMatID(self, *args):
        """SetMatID(Face self, MtlID id)"""
        return _MaxPlus.Face_SetMatID(self, *args)

    def SetSmGroup(self, *args):
        """SetSmGroup(Face self, DWORD i)"""
        return _MaxPlus.Face_SetSmGroup(self, *args)

    def GetSmGroup(self):
        """GetSmGroup(Face self) -> DWORD"""
        return _MaxPlus.Face_GetSmGroup(self)

    def SetVerts(self, *args):
        """SetVerts(Face self, int a, int b, int c)"""
        return _MaxPlus.Face_SetVerts(self, *args)

    def SetEdgeVis(self, *args):
        """SetEdgeVis(Face self, int edge, int visFlag)"""
        return _MaxPlus.Face_SetEdgeVis(self, *args)

    def SetEdgeVisFlags(self, *args):
        """SetEdgeVisFlags(Face self, int va, int vb, int vc)"""
        return _MaxPlus.Face_SetEdgeVisFlags(self, *args)

    def GetEdgeVis(self, *args):
        """GetEdgeVis(Face self, int edge) -> int"""
        return _MaxPlus.Face_GetEdgeVis(self, *args)

    def GetVert(self, *args):
        """GetVert(Face self, int index) -> DWORD"""
        return _MaxPlus.Face_GetVert(self, *args)

    def IsHidden(self):
        """IsHidden(Face self) -> bool"""
        return _MaxPlus.Face_IsHidden(self)

    def Hide(self):
        """Hide(Face self)"""
        return _MaxPlus.Face_Hide(self)

    def Show(self):
        """Show(Face self)"""
        return _MaxPlus.Face_Show(self)

    def SetHide(self, *args):
        """SetHide(Face self, bool hide)"""
        return _MaxPlus.Face_SetHide(self, *args)

    def IsInForeground(self):
        """IsInForeground(Face self) -> bool"""
        return _MaxPlus.Face_IsInForeground(self)

    def PushToForeground(self):
        """PushToForeground(Face self)"""
        return _MaxPlus.Face_PushToForeground(self)

    def PushToBackground(self):
        """PushToBackground(Face self)"""
        return _MaxPlus.Face_PushToBackground(self)

    def SetInForegound(self, *args):
        """SetInForegound(Face self, bool foreground)"""
        return _MaxPlus.Face_SetInForegound(self, *args)

    def IsBackFacing(self):
        """IsBackFacing(Face self) -> bool"""
        return _MaxPlus.Face_IsBackFacing(self)

    def SetFrontFacing(self):
        """SetFrontFacing(Face self)"""
        return _MaxPlus.Face_SetFrontFacing(self)

    def SetBackFacing(self, *args):
        """
        SetBackFacing(Face self)
        SetBackFacing(Face self, bool backFacing)
        """
        return _MaxPlus.Face_SetBackFacing(self, *args)

    def GetOtherIndex(self, *args):
        """GetOtherIndex(Face self, DWORD v0, DWORD v1) -> DWORD"""
        return _MaxPlus.Face_GetOtherIndex(self, *args)

    def GetEdgeIndex(self, *args):
        """GetEdgeIndex(Face self, DWORD v0, DWORD v1) -> DWORD"""
        return _MaxPlus.Face_GetEdgeIndex(self, *args)

    def GetDirection(self, *args):
        """GetDirection(Face self, DWORD v0, DWORD v1) -> int"""
        return _MaxPlus.Face_GetDirection(self, *args)

    def GetVertIndex(self, *args):
        """GetVertIndex(Face self, DWORD v0) -> DWORD"""
        return _MaxPlus.Face_GetVertIndex(self, *args)

    __swig_destroy__ = _MaxPlus.delete_Face
    __del__ = lambda self : None;
Face_swigregister = _MaxPlus.Face_swigregister
Face_swigregister(Face)

def Face__CastFrom(*args):
  """Face__CastFrom(InterfaceServer b) -> Face"""
  return _MaxPlus.Face__CastFrom(*args)

class FacePoints(object):
    """A read-only collection of three points, usually representing the vertices within a mesh face (or texture face)."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::FacePoints self, Point3 a, Point3 b, Point3 c) -> FacePoints
        __init__(Autodesk::Max::FacePoints self, FacePoints x) -> FacePoints
        """
        this = _MaxPlus.new_FacePoints(*args)
        try: self.this.append(this)
        except: self.this = this
    A = _swig_property(_MaxPlus.FacePoints_A_get, _MaxPlus.FacePoints_A_set)
    B = _swig_property(_MaxPlus.FacePoints_B_get, _MaxPlus.FacePoints_B_set)
    C = _swig_property(_MaxPlus.FacePoints_C_get, _MaxPlus.FacePoints_C_set)
    def GetCenter(self):
        """GetCenter(FacePoints self) -> Point3"""
        return _MaxPlus.FacePoints_GetCenter(self)

    def __len__(self):
        """__len__(FacePoints self) -> int"""
        return _MaxPlus.FacePoints___len__(self)

    def __getitem__(self, *args):
        """__getitem__(FacePoints self, int n) -> Point3"""
        return _MaxPlus.FacePoints___getitem__(self, *args)

    Center = _swig_property(GetCenter)
    Points = _swig_property(lambda self: (self.__getitem__(i) for i in xrange(self.__len__())))

    __swig_destroy__ = _MaxPlus.delete_FacePoints
    __del__ = lambda self : None;
FacePoints_swigregister = _MaxPlus.FacePoints_swigregister
FacePoints_swigregister(FacePoints)

class MappingChannel(object):
    """An array of Point3 data points (called texture vertexes) and an array of TVFace structures used for texture coordinates or color-per-vertex data."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def IsEnabled(self):
        """IsEnabled(MappingChannel self) -> bool"""
        return _MaxPlus.MappingChannel_IsEnabled(self)

    def SetEnabled(self, b=True):
        """
        SetEnabled(MappingChannel self, bool b=True)
        SetEnabled(MappingChannel self)
        """
        return _MaxPlus.MappingChannel_SetEnabled(self, b)

    def GetNumTextureVertices(self):
        """GetNumTextureVertices(MappingChannel self) -> int"""
        return _MaxPlus.MappingChannel_GetNumTextureVertices(self)

    def GetNumFaces(self):
        """GetNumFaces(MappingChannel self) -> int"""
        return _MaxPlus.MappingChannel_GetNumFaces(self)

    def SetNumTextureVertices(self, *args):
        """SetNumTextureVertices(MappingChannel self, int n)"""
        return _MaxPlus.MappingChannel_SetNumTextureVertices(self, *args)

    def GetChannelId(self):
        """GetChannelId(MappingChannel self) -> int"""
        return _MaxPlus.MappingChannel_GetChannelId(self)

    def GetTextureVertex(self, *args):
        """GetTextureVertex(MappingChannel self, int n) -> Point3"""
        return _MaxPlus.MappingChannel_GetTextureVertex(self, *args)

    def GetTextureFace(self, *args):
        """GetTextureFace(MappingChannel self, int face) -> TVFace"""
        return _MaxPlus.MappingChannel_GetTextureFace(self, *args)

    def GetTextureFaceVertex(self, *args):
        """GetTextureFaceVertex(MappingChannel self, int face, int i) -> Point3"""
        return _MaxPlus.MappingChannel_GetTextureFaceVertex(self, *args)

    def GetTextureFaceVertices(self, *args):
        """GetTextureFaceVertices(MappingChannel self, int face) -> FacePoints"""
        return _MaxPlus.MappingChannel_GetTextureFaceVertices(self, *args)

    def SetTextureVertex(self, *args):
        """
        SetTextureVertex(MappingChannel self, int n, Point3 pt)
        SetTextureVertex(MappingChannel self, int n, float x, float y, float z)
        """
        return _MaxPlus.MappingChannel_SetTextureVertex(self, *args)

    def SetTextureFace(self, *args):
        """
        SetTextureFace(MappingChannel self, int face, DWORD a, DWORD b, DWORD c)
        SetTextureFace(MappingChannel self, int face, TVFace f)
        """
        return _MaxPlus.MappingChannel_SetTextureFace(self, *args)

    Enabled = _swig_property(IsEnabled, SetEnabled)
    NumTextureVertices = _swig_property(GetNumTextureVertices, SetNumTextureVertices)
    NumFaces = _swig_property(GetNumFaces)
    ChannelId = _swig_property(GetChannelId)
    TextureVertices = _swig_property(lambda self: (self.GetTextureVertex(i) for i in xrange(self.GetNumTextureVertices())))
    TextureFaces = _swig_property(lambda self: (self.GetTextureFace(i) for i in xrange(self.GetNumFaces())))
    TextureFaceVertices = _swig_property(lambda self: (self.GetTextureFaceVertices(i) for i in xrange(self.GetNumFaces())))

    __swig_destroy__ = _MaxPlus.delete_MappingChannel
    __del__ = lambda self : None;
MappingChannel_swigregister = _MaxPlus.MappingChannel_swigregister
MappingChannel_swigregister(MappingChannel)

class Mesh(BaseInterfaceServer):
    """A triangular mesh."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Mesh"""
        return _MaxPlus.Mesh__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Mesh self, Wrapper w) -> bool"""
        return _MaxPlus.Mesh___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Mesh self, Wrapper w) -> bool"""
        return _MaxPlus.Mesh___ne__(self, *args)

    def _CreateWrapper(*args):
        """_CreateWrapper(void * mesh_pointer) -> Mesh"""
        return _MaxPlus.Mesh__CreateWrapper(*args)

    _CreateWrapper = staticmethod(_CreateWrapper)
    def _CreateWrapperFromFPValue(*args):
        """_CreateWrapperFromFPValue(void * fpvalue_pointer) -> Mesh"""
        return _MaxPlus.Mesh__CreateWrapperFromFPValue(*args)

    _CreateWrapperFromFPValue = staticmethod(_CreateWrapperFromFPValue)
    def _SetValue(self, *args):
        """_SetValue(Mesh self, void * mesh_pointer)"""
        return _MaxPlus.Mesh__SetValue(self, *args)

    def GetNumVertices(self):
        """GetNumVertices(Mesh self) -> int"""
        return _MaxPlus.Mesh_GetNumVertices(self)

    def GetNumFaces(self):
        """GetNumFaces(Mesh self) -> int"""
        return _MaxPlus.Mesh_GetNumFaces(self)

    def GetNumCustomMaps(self):
        """GetNumCustomMaps(Mesh self) -> int"""
        return _MaxPlus.Mesh_GetNumCustomMaps(self)

    def GetVertex(self, *args):
        """GetVertex(Mesh self, int i) -> Point3"""
        return _MaxPlus.Mesh_GetVertex(self, *args)

    def GetFace(self, *args):
        """GetFace(Mesh self, int i) -> Face"""
        return _MaxPlus.Mesh_GetFace(self, *args)

    def GetFaceVertex(self, *args):
        """GetFaceVertex(Mesh self, int face, int i) -> Point3"""
        return _MaxPlus.Mesh_GetFaceVertex(self, *args)

    def GetFaceVertices(self, *args):
        """GetFaceVertices(Mesh self, int i) -> FacePoints"""
        return _MaxPlus.Mesh_GetFaceVertices(self, *args)

    def GetCustomMap(self, *args):
        """GetCustomMap(Mesh self, int channel) -> MappingChannel"""
        return _MaxPlus.Mesh_GetCustomMap(self, *args)

    def GetDefaultMap(self):
        """GetDefaultMap(Mesh self) -> MappingChannel"""
        return _MaxPlus.Mesh_GetDefaultMap(self)

    def GetColorPerVertexMap(self):
        """GetColorPerVertexMap(Mesh self) -> MappingChannel"""
        return _MaxPlus.Mesh_GetColorPerVertexMap(self)

    def GetAlphaMap(self):
        """GetAlphaMap(Mesh self) -> MappingChannel"""
        return _MaxPlus.Mesh_GetAlphaMap(self)

    def GetShadingMap(self):
        """GetShadingMap(Mesh self) -> MappingChannel"""
        return _MaxPlus.Mesh_GetShadingMap(self)

    def GetFaceNormal(self, *args):
        """
        GetFaceNormal(Mesh self, int i, bool normalize=False) -> Point3
        GetFaceNormal(Mesh self, int i) -> Point3
        """
        return _MaxPlus.Mesh_GetFaceNormal(self, *args)

    def GetFaceCenter(self, *args):
        """GetFaceCenter(Mesh self, int i) -> Point3"""
        return _MaxPlus.Mesh_GetFaceCenter(self, *args)

    def Init(self):
        """Init(Mesh self)"""
        return _MaxPlus.Mesh_Init(self)

    def SetNumFaces(self, *args):
        """SetNumFaces(Mesh self, int n)"""
        return _MaxPlus.Mesh_SetNumFaces(self, *args)

    def SetNumVerts(self, *args):
        """SetNumVerts(Mesh self, int n)"""
        return _MaxPlus.Mesh_SetNumVerts(self, *args)

    def MakeMapPlanar(self, *args):
        """MakeMapPlanar(Mesh self, int mp)"""
        return _MaxPlus.Mesh_MakeMapPlanar(self, *args)

    def GetIsoMapVerts(self, *args):
        """GetIsoMapVerts(Mesh self, int mp) -> BitArray"""
        return _MaxPlus.Mesh_GetIsoMapVerts(self, *args)

    def HasVertexWeights(self):
        """HasVertexWeights(Mesh self) -> bool"""
        return _MaxPlus.Mesh_HasVertexWeights(self)

    def GetVertexWeights(self, *args):
        """GetVertexWeights(Mesh self, int v) -> float"""
        return _MaxPlus.Mesh_GetVertexWeights(self, *args)

    def SetVertexWeights(self, *args):
        """SetVertexWeights(Mesh self, int v, float w)"""
        return _MaxPlus.Mesh_SetVertexWeights(self, *args)

    def SupportVertexWeights(self):
        """SupportVertexWeights(Mesh self)"""
        return _MaxPlus.Mesh_SupportVertexWeights(self)

    def ClearVertexWeights(self):
        """ClearVertexWeights(Mesh self)"""
        return _MaxPlus.Mesh_ClearVertexWeights(self)

    def FreeVertexWeights(self):
        """FreeVertexWeights(Mesh self)"""
        return _MaxPlus.Mesh_FreeVertexWeights(self)

    def HasVSelectionWeights(self):
        """HasVSelectionWeights(Mesh self) -> bool"""
        return _MaxPlus.Mesh_HasVSelectionWeights(self)

    def GetVSelectionWeights(self, *args):
        """GetVSelectionWeights(Mesh self, int v) -> float"""
        return _MaxPlus.Mesh_GetVSelectionWeights(self, *args)

    def SetVSelectionWeights(self, *args):
        """SetVSelectionWeights(Mesh self, int v, float w)"""
        return _MaxPlus.Mesh_SetVSelectionWeights(self, *args)

    def SupportVSelectionWeights(self):
        """SupportVSelectionWeights(Mesh self)"""
        return _MaxPlus.Mesh_SupportVSelectionWeights(self)

    def ClearVSelectionWeights(self):
        """ClearVSelectionWeights(Mesh self)"""
        return _MaxPlus.Mesh_ClearVSelectionWeights(self)

    def FreeVSelectionWeights(self):
        """FreeVSelectionWeights(Mesh self)"""
        return _MaxPlus.Mesh_FreeVSelectionWeights(self)

    def HasVChannel(self, *args):
        """HasVChannel(Mesh self, int chan) -> bool"""
        return _MaxPlus.Mesh_HasVChannel(self, *args)

    def GetVChannel(self, *args):
        """GetVChannel(Mesh self, int chan, int v) -> float"""
        return _MaxPlus.Mesh_GetVChannel(self, *args)

    def SetVChannel(self, *args):
        """SetVChannel(Mesh self, int chan, int v, float w)"""
        return _MaxPlus.Mesh_SetVChannel(self, *args)

    def SupportVChannel(self, *args):
        """SupportVChannel(Mesh self, int chan)"""
        return _MaxPlus.Mesh_SupportVChannel(self, *args)

    def ClearVChannel(self, *args):
        """ClearVChannel(Mesh self, int chan)"""
        return _MaxPlus.Mesh_ClearVChannel(self, *args)

    def FreeVChannel(self, *args):
        """FreeVChannel(Mesh self, int chan)"""
        return _MaxPlus.Mesh_FreeVChannel(self, *args)

    def SetSmoothFlags(self, *args):
        """SetSmoothFlags(Mesh self, int f)"""
        return _MaxPlus.Mesh_SetSmoothFlags(self, *args)

    def GetSmoothFlags(self):
        """GetSmoothFlags(Mesh self) -> int"""
        return _MaxPlus.Mesh_GetSmoothFlags(self)

    def SetFlag(self, *args):
        """SetFlag(Mesh self, DWORD f)"""
        return _MaxPlus.Mesh_SetFlag(self, *args)

    def GetFlag(self, *args):
        """GetFlag(Mesh self, DWORD f) -> DWORD"""
        return _MaxPlus.Mesh_GetFlag(self, *args)

    def ClearFlag(self, *args):
        """ClearFlag(Mesh self, DWORD f)"""
        return _MaxPlus.Mesh_ClearFlag(self, *args)

    def SetDispFlag(self, *args):
        """SetDispFlag(Mesh self, DWORD f)"""
        return _MaxPlus.Mesh_SetDispFlag(self, *args)

    def GetDispFlag(self, *args):
        """GetDispFlag(Mesh self, DWORD f) -> DWORD"""
        return _MaxPlus.Mesh_GetDispFlag(self, *args)

    def ClearDispFlag(self, *args):
        """ClearDispFlag(Mesh self, DWORD f)"""
        return _MaxPlus.Mesh_ClearDispFlag(self, *args)

    def GetVertexFlag(self, *args):
        """GetVertexFlag(Mesh self, int v) -> long"""
        return _MaxPlus.Mesh_GetVertexFlag(self, *args)

    def SetVertexFlag(self, *args):
        """SetVertexFlag(Mesh self, int v, long val)"""
        return _MaxPlus.Mesh_SetVertexFlag(self, *args)

    def GetRenderedVertexNormal(self, *args):
        """GetRenderedVertexNormal(Mesh self, int i) -> Point3"""
        return _MaxPlus.Mesh_GetRenderedVertexNormal(self, *args)

    def SetVert(self, *args):
        """
        SetVert(Mesh self, int i, Point3 xyz)
        SetVert(Mesh self, int i, float x, float y, float z)
        """
        return _MaxPlus.Mesh_SetVert(self, *args)

    def SetTVert(self, *args):
        """
        SetTVert(Mesh self, int i, Point3 xyz)
        SetTVert(Mesh self, int i, float x, float y, float z)
        """
        return _MaxPlus.Mesh_SetTVert(self, *args)

    def SetNormal(self, *args):
        """SetNormal(Mesh self, int i, Point3 xyz)"""
        return _MaxPlus.Mesh_SetNormal(self, *args)

    def SetFaceNormal(self, *args):
        """SetFaceNormal(Mesh self, int i, Point3 xyz)"""
        return _MaxPlus.Mesh_SetFaceNormal(self, *args)

    def GetFaceMtlIndex(self, *args):
        """GetFaceMtlIndex(Mesh self, int i) -> MtlID"""
        return _MaxPlus.Mesh_GetFaceMtlIndex(self, *args)

    def SetFaceMtlIndex(self, *args):
        """SetFaceMtlIndex(Mesh self, int i, MtlID id)"""
        return _MaxPlus.Mesh_SetFaceMtlIndex(self, *args)

    def BuildNormals(self):
        """BuildNormals(Mesh self)"""
        return _MaxPlus.Mesh_BuildNormals(self)

    def CheckNormals(self, *args):
        """CheckNormals(Mesh self, bool illum)"""
        return _MaxPlus.Mesh_CheckNormals(self, *args)

    def DisplayNormals(self, *args):
        """DisplayNormals(Mesh self, int b, float sc)"""
        return _MaxPlus.Mesh_DisplayNormals(self, *args)

    def DisplayAllEdges(self, *args):
        """DisplayAllEdges(Mesh self, int b)"""
        return _MaxPlus.Mesh_DisplayAllEdges(self, *args)

    def BuildBoundingBox(self):
        """BuildBoundingBox(Mesh self)"""
        return _MaxPlus.Mesh_BuildBoundingBox(self)

    def GetBoundingBox(self, *args):
        """
        GetBoundingBox(Mesh self, Matrix3 tm) -> Box3
        GetBoundingBox(Mesh self) -> Box3
        """
        return _MaxPlus.Mesh_GetBoundingBox(self, *args)

    def InvalidateGeomCache(self):
        """InvalidateGeomCache(Mesh self)"""
        return _MaxPlus.Mesh_InvalidateGeomCache(self)

    def InvalidateTopologyCache(self):
        """InvalidateTopologyCache(Mesh self)"""
        return _MaxPlus.Mesh_InvalidateTopologyCache(self)

    def FreeAll(self):
        """FreeAll(Mesh self)"""
        return _MaxPlus.Mesh_FreeAll(self)

    def ZeroTopologyCache(self):
        """ZeroTopologyCache(Mesh self)"""
        return _MaxPlus.Mesh_ZeroTopologyCache(self)

    def EnableEdgeList(self, *args):
        """EnableEdgeList(Mesh self, int e)"""
        return _MaxPlus.Mesh_EnableEdgeList(self, *args)

    def BuildVisEdgeList(self):
        """BuildVisEdgeList(Mesh self)"""
        return _MaxPlus.Mesh_BuildVisEdgeList(self)

    def InvalidateEdgeList(self):
        """InvalidateEdgeList(Mesh self)"""
        return _MaxPlus.Mesh_InvalidateEdgeList(self)

    def ShallowCopy(self, *args):
        """ShallowCopy(Mesh self, Mesh amesh, ChannelMask channels)"""
        return _MaxPlus.Mesh_ShallowCopy(self, *args)

    def DeepCopy(self, *args):
        """DeepCopy(Mesh self, Mesh amesh, ChannelMask channels)"""
        return _MaxPlus.Mesh_DeepCopy(self, *args)

    def NewAndCopyChannels(self, *args):
        """NewAndCopyChannels(Mesh self, ChannelMask channels)"""
        return _MaxPlus.Mesh_NewAndCopyChannels(self, *args)

    def FreeChannels(self, *args):
        """
        FreeChannels(Mesh self, ChannelMask channels, int zeroOthers=1)
        FreeChannels(Mesh self, ChannelMask channels)
        """
        return _MaxPlus.Mesh_FreeChannels(self, *args)

    def VertSel(self):
        """VertSel(Mesh self) -> BitArray"""
        return _MaxPlus.Mesh_VertSel(self)

    def FaceSel(self):
        """FaceSel(Mesh self) -> BitArray"""
        return _MaxPlus.Mesh_FaceSel(self)

    def VertexTempSel(self):
        """VertexTempSel(Mesh self) -> BitArray"""
        return _MaxPlus.Mesh_VertexTempSel(self)

    def IntersectRay(self, *args):
        """
        IntersectRay(Mesh self, Ray ray, float & at, Point3 norm) -> bool
        IntersectRay(Mesh self, Ray ray, float & at, Point3 norm, DWORD & fi, Point3 bary) -> bool
        """
        return _MaxPlus.Mesh_IntersectRay(self, *args)

    def __add__(self, *args):
        """__add__(Mesh self, Mesh mesh) -> Mesh"""
        return _MaxPlus.Mesh___add__(self, *args)

    def __sub__(self, *args):
        """__sub__(Mesh self, Mesh mesh) -> Mesh"""
        return _MaxPlus.Mesh___sub__(self, *args)

    def __mul__(self, *args):
        """__mul__(Mesh self, Mesh mesh) -> Mesh"""
        return _MaxPlus.Mesh___mul__(self, *args)

    def WeldCollinear(self, *args):
        """WeldCollinear(Mesh self, BitArray set)"""
        return _MaxPlus.Mesh_WeldCollinear(self, *args)

    def Optimize(self, *args):
        """Optimize(Mesh self, float normThresh, float edgeThresh, float bias, float maxEdge, DWORD flags)"""
        return _MaxPlus.Mesh_Optimize(self, *args)

    def ApplyUVWMap(self, *args):
        """
        ApplyUVWMap(Mesh self, int type, float utile, float vtile, float wtile, int uflip, int vflip, int wflip, 
            int cap, Matrix3 tm, int channel=1)
        ApplyUVWMap(Mesh self, int type, float utile, float vtile, float wtile, int uflip, int vflip, int wflip, 
            int cap, Matrix3 tm)
        """
        return _MaxPlus.Mesh_ApplyUVWMap(self, *args)

    def FlipNormal(self, *args):
        """FlipNormal(Mesh self, int i)"""
        return _MaxPlus.Mesh_FlipNormal(self, *args)

    def UnifyNormals(self, *args):
        """UnifyNormals(Mesh self, bool selOnly)"""
        return _MaxPlus.Mesh_UnifyNormals(self, *args)

    def AutoSmooth(self, *args):
        """
        AutoSmooth(Mesh self, float angle, bool useSel, bool preventIndirectSmoothing=True)
        AutoSmooth(Mesh self, float angle, bool useSel)
        """
        return _MaxPlus.Mesh_AutoSmooth(self, *args)

    def DeleteFlaggedFaces(self):
        """DeleteFlaggedFaces(Mesh self) -> int"""
        return _MaxPlus.Mesh_DeleteFlaggedFaces(self)

    def DeleteSelected(self):
        """DeleteSelected(Mesh self)"""
        return _MaxPlus.Mesh_DeleteSelected(self)

    def DeleteVertSet(self, *args):
        """DeleteVertSet(Mesh self, BitArray set)"""
        return _MaxPlus.Mesh_DeleteVertSet(self, *args)

    def DeleteFaceSet(self, *args):
        """
        DeleteFaceSet(Mesh self, BitArray set, BitArray isoVert=0)
        DeleteFaceSet(Mesh self, BitArray set)
        """
        return _MaxPlus.Mesh_DeleteFaceSet(self, *args)

    def DoesFaceExist(self, *args):
        """DoesFaceExist(Mesh self, DWORD v0, DWORD v1, DWORD v2) -> bool"""
        return _MaxPlus.Mesh_DoesFaceExist(self, *args)

    def RemoveDegenerateFaces(self):
        """RemoveDegenerateFaces(Mesh self) -> bool"""
        return _MaxPlus.Mesh_RemoveDegenerateFaces(self)

    def RemoveIllegalFaces(self):
        """RemoveIllegalFaces(Mesh self) -> bool"""
        return _MaxPlus.Mesh_RemoveIllegalFaces(self)

    def FaceNormal(self, *args):
        """
        FaceNormal(Mesh self, DWORD fi, bool nrmlize=True) -> Point3
        FaceNormal(Mesh self, DWORD fi) -> Point3
        """
        return _MaxPlus.Mesh_FaceNormal(self, *args)

    def FaceCenter(self, *args):
        """FaceCenter(Mesh self, DWORD fi) -> Point3"""
        return _MaxPlus.Mesh_FaceCenter(self, *args)

    def AngleBetweenFaces(self, *args):
        """AngleBetweenFaces(Mesh self, DWORD f0, DWORD f1) -> float"""
        return _MaxPlus.Mesh_AngleBetweenFaces(self, *args)

    def BaryCoords(self, *args):
        """BaryCoords(Mesh self, DWORD face, Point3 p) -> Point3"""
        return _MaxPlus.Mesh_BaryCoords(self, *args)

    def DivideEdge(self, *args):
        """
        DivideEdge(Mesh self, DWORD edge, float prop=.5, bool visDiag1=TRUE, bool fixNeighbors=TRUE, bool visDiag2=TRUE)
        DivideEdge(Mesh self, DWORD edge, float prop=.5, bool visDiag1=TRUE, bool fixNeighbors=TRUE)
        DivideEdge(Mesh self, DWORD edge, float prop=.5, bool visDiag1=TRUE)
        DivideEdge(Mesh self, DWORD edge, float prop=.5)
        DivideEdge(Mesh self, DWORD edge)
        """
        return _MaxPlus.Mesh_DivideEdge(self, *args)

    def DivideFace(self, *args):
        """
        DivideFace(Mesh self, DWORD face, DWORD e1, DWORD e2, float prop1=.5, float prop2=.5, bool fixNeighbors=TRUE, 
            bool split=True)
        DivideFace(Mesh self, DWORD face, DWORD e1, DWORD e2, float prop1=.5, float prop2=.5, bool fixNeighbors=TRUE)
        DivideFace(Mesh self, DWORD face, DWORD e1, DWORD e2, float prop1=.5, float prop2=.5)
        DivideFace(Mesh self, DWORD face, DWORD e1, DWORD e2, float prop1=.5)
        DivideFace(Mesh self, DWORD face, DWORD e1, DWORD e2)
        """
        return _MaxPlus.Mesh_DivideFace(self, *args)

    def TurnEdge(self, *args):
        """
        TurnEdge(Mesh self, DWORD edge, DWORD * otherEdge=None)
        TurnEdge(Mesh self, DWORD edge)
        """
        return _MaxPlus.Mesh_TurnEdge(self, *args)

    def FaceCenterTessellate(self, ignoreSel=True):
        """
        FaceCenterTessellate(Mesh self, bool ignoreSel=True)
        FaceCenterTessellate(Mesh self)
        """
        return _MaxPlus.Mesh_FaceCenterTessellate(self, ignoreSel)

    def EdgeTessellate(self, *args):
        """
        EdgeTessellate(Mesh self, float tens, bool ignoreSel=True)
        EdgeTessellate(Mesh self, float tens)
        """
        return _MaxPlus.Mesh_EdgeTessellate(self, *args)

    def ExtrudeFaces(self, *args):
        """
        ExtrudeFaces(Mesh self, bool doFace=TRUE)
        ExtrudeFaces(Mesh self)
        """
        return _MaxPlus.Mesh_ExtrudeFaces(self, *args)

    def IndentSelFaces(self, *args):
        """IndentSelFaces(Mesh self, float amount)"""
        return _MaxPlus.Mesh_IndentSelFaces(self, *args)

    def BreakVerts(self, *args):
        """BreakVerts(Mesh self, BitArray set)"""
        return _MaxPlus.Mesh_BreakVerts(self, *args)

    def GetIsoVerts(self):
        """GetIsoVerts(Mesh self) -> BitArray"""
        return _MaxPlus.Mesh_GetIsoVerts(self)

    def DeleteIsoVerts(self):
        """DeleteIsoVerts(Mesh self)"""
        return _MaxPlus.Mesh_DeleteIsoVerts(self)

    def CloneFaces(self, *args):
        """CloneFaces(Mesh self, BitArray fset)"""
        return _MaxPlus.Mesh_CloneFaces(self, *args)

    def PolyFromFace(self, *args):
        """PolyFromFace(Mesh self, DWORD f, BitArray set, float thresh, bool ignoreVisEdges)"""
        return _MaxPlus.Mesh_PolyFromFace(self, *args)

    def ElementFromFace(self, *args):
        """ElementFromFace(Mesh self, DWORD f, BitArray set)"""
        return _MaxPlus.Mesh_ElementFromFace(self, *args)

    def FindVertsUsedOnlyByFaces(self, *args):
        """FindVertsUsedOnlyByFaces(Mesh self, BitArray fset, BitArray vset)"""
        return _MaxPlus.Mesh_FindVertsUsedOnlyByFaces(self, *args)

    def FindOpenEdges(self, *args):
        """FindOpenEdges(Mesh self, BitArray edges)"""
        return _MaxPlus.Mesh_FindOpenEdges(self, *args)

    def ClearSpecifiedNormals(self):
        """ClearSpecifiedNormals(Mesh self)"""
        return _MaxPlus.Mesh_ClearSpecifiedNormals(self)

    def CopyBasics(self, *args):
        """CopyBasics(Mesh self, Mesh other)"""
        return _MaxPlus.Mesh_CopyBasics(self, *args)

    def IsFaceCacheInvalid(self, *args):
        """IsFaceCacheInvalid(Mesh self, int faceIndex) -> bool"""
        return _MaxPlus.Mesh_IsFaceCacheInvalid(self, *args)

    def InvalidateVertexCache(self, *args):
        """InvalidateVertexCache(Mesh self, int vertex)"""
        return _MaxPlus.Mesh_InvalidateVertexCache(self, *args)

    def SetStaticMesh(self, *args):
        """SetStaticMesh(Mesh self, bool staticMesh)"""
        return _MaxPlus.Mesh_SetStaticMesh(self, *args)

    def ReduceDisplayCaches(self):
        """ReduceDisplayCaches(Mesh self)"""
        return _MaxPlus.Mesh_ReduceDisplayCaches(self)

    def GetNumTVerts(self):
        """GetNumTVerts(Mesh self) -> int"""
        return _MaxPlus.Mesh_GetNumTVerts(self)

    def GetTVert(self, *args):
        """GetTVert(Mesh self, int i) -> Point3"""
        return _MaxPlus.Mesh_GetTVert(self, *args)

    def GetTVFace(self, *args):
        """GetTVFace(Mesh self, int i) -> TVFace"""
        return _MaxPlus.Mesh_GetTVFace(self, *args)

    def GetMtlIndex(self):
        """GetMtlIndex(Mesh self) -> MtlID"""
        return _MaxPlus.Mesh_GetMtlIndex(self)

    def FitMaterialToMeshIDs(self, *args):
        """FitMaterialToMeshIDs(Mesh self, Mtl mat) -> Mtl"""
        return _MaxPlus.Mesh_FitMaterialToMeshIDs(self, *args)

    def FitMeshIDsToMaterial(self, *args):
        """FitMeshIDsToMaterial(Mesh self, Mtl mat)"""
        return _MaxPlus.Mesh_FitMeshIDsToMaterial(self, *args)

    def AverageSelVertNormal(self):
        """AverageSelVertNormal(Mesh self) -> Point3"""
        return _MaxPlus.Mesh_AverageSelVertNormal(self)

    def AverageSelVertCenter(self):
        """AverageSelVertCenter(Mesh self) -> Point3"""
        return _MaxPlus.Mesh_AverageSelVertCenter(self)

    def GetVertSel(self):
        """GetVertSel(Mesh self) -> BitArray"""
        return _MaxPlus.Mesh_GetVertSel(self)

    def GetFaceSel(self):
        """GetFaceSel(Mesh self) -> BitArray"""
        return _MaxPlus.Mesh_GetFaceSel(self)

    def GetEdgeSel(self):
        """GetEdgeSel(Mesh self) -> BitArray"""
        return _MaxPlus.Mesh_GetEdgeSel(self)

    def SetVertSel(self, *args):
        """SetVertSel(Mesh self, BitArray sel)"""
        return _MaxPlus.Mesh_SetVertSel(self, *args)

    def SetFaceSel(self, *args):
        """SetFaceSel(Mesh self, BitArray sel)"""
        return _MaxPlus.Mesh_SetFaceSel(self, *args)

    def SetEdgeSel(self, *args):
        """SetEdgeSel(Mesh self, BitArray sel)"""
        return _MaxPlus.Mesh_SetEdgeSel(self, *args)

    def GetVertHide(self):
        """GetVertHide(Mesh self) -> BitArray"""
        return _MaxPlus.Mesh_GetVertHide(self)

    def GetDispFlags(self):
        """GetDispFlags(Mesh self) -> DWORD"""
        return _MaxPlus.Mesh_GetDispFlags(self)

    def GetSelLevel(self):
        """GetSelLevel(Mesh self) -> DWORD"""
        return _MaxPlus.Mesh_GetSelLevel(self)

    def GetNormalsBuilt(self):
        """GetNormalsBuilt(Mesh self) -> int"""
        return _MaxPlus.Mesh_GetNormalsBuilt(self)

    def GetNormalCount(self):
        """GetNormalCount(Mesh self) -> int"""
        return _MaxPlus.Mesh_GetNormalCount(self)

    def DeselectHiddenFaces(self):
        """DeselectHiddenFaces(Mesh self)"""
        return _MaxPlus.Mesh_DeselectHiddenFaces(self)

    def DeselectHiddenEdges(self):
        """DeselectHiddenEdges(Mesh self)"""
        return _MaxPlus.Mesh_DeselectHiddenEdges(self)

    def HiddenFacesToVerts(self, *args):
        """HiddenFacesToVerts(Mesh self, BitArray alsoHide)"""
        return _MaxPlus.Mesh_HiddenFacesToVerts(self, *args)

    def GetMapChannelID(*args):
        """GetMapChannelID(int mp) -> DWORD"""
        return _MaxPlus.Mesh_GetMapChannelID(*args)

    GetMapChannelID = staticmethod(GetMapChannelID)
    def GetMapChannelNum(*args):
        """GetMapChannelNum(int mp) -> int"""
        return _MaxPlus.Mesh_GetMapChannelNum(*args)

    GetMapChannelNum = staticmethod(GetMapChannelNum)
    def VertexDataType(*args):
        """VertexDataType(bool vdID) -> bool"""
        return _MaxPlus.Mesh_VertexDataType(*args)

    VertexDataType = staticmethod(VertexDataType)
    def SetUseVisEdge(*args):
        """SetUseVisEdge(bool b)"""
        return _MaxPlus.Mesh_SetUseVisEdge(*args)

    SetUseVisEdge = staticmethod(SetUseVisEdge)
    def GetUseVisEdge():
        """GetUseVisEdge() -> bool"""
        return _MaxPlus.Mesh_GetUseVisEdge()

    GetUseVisEdge = staticmethod(GetUseVisEdge)
    def SetUseVertexDots(*args):
        """SetUseVertexDots(bool b)"""
        return _MaxPlus.Mesh_SetUseVertexDots(*args)

    SetUseVertexDots = staticmethod(SetUseVertexDots)
    def GetUseVertexDots():
        """GetUseVertexDots() -> bool"""
        return _MaxPlus.Mesh_GetUseVertexDots()

    GetUseVertexDots = staticmethod(GetUseVertexDots)
    def SetVertexDotType(*args):
        """SetVertexDotType(int t)"""
        return _MaxPlus.Mesh_SetVertexDotType(*args)

    SetVertexDotType = staticmethod(SetVertexDotType)
    def GetVertexDotType():
        """GetVertexDotType() -> int"""
        return _MaxPlus.Mesh_GetVertexDotType()

    GetVertexDotType = staticmethod(GetVertexDotType)
    def SetHandleBoxType(*args):
        """SetHandleBoxType(int t)"""
        return _MaxPlus.Mesh_SetHandleBoxType(*args)

    SetHandleBoxType = staticmethod(SetHandleBoxType)
    def GetHandleBoxType():
        """GetHandleBoxType() -> int"""
        return _MaxPlus.Mesh_GetHandleBoxType()

    GetHandleBoxType = staticmethod(GetHandleBoxType)
    def SetDisplayBackFaceVertices(*args):
        """SetDisplayBackFaceVertices(bool b)"""
        return _MaxPlus.Mesh_SetDisplayBackFaceVertices(*args)

    SetDisplayBackFaceVertices = staticmethod(SetDisplayBackFaceVertices)
    def GetDisplayBackFaceVertices():
        """GetDisplayBackFaceVertices() -> bool"""
        return _MaxPlus.Mesh_GetDisplayBackFaceVertices()

    GetDisplayBackFaceVertices = staticmethod(GetDisplayBackFaceVertices)
    def CombineMeshes(*args):
        """
        CombineMeshes(Mesh mesh, Mesh mesh1, Mesh mesh2, Matrix3 tm1, Matrix3 tm2, int whichInv=0)
        CombineMeshes(Mesh mesh, Mesh mesh1, Mesh mesh2, Matrix3 tm1, Matrix3 tm2)
        CombineMeshes(Mesh mesh, Mesh mesh1, Mesh mesh2, int whichInv=0)
        CombineMeshes(Mesh mesh, Mesh mesh1, Mesh mesh2)
        """
        return _MaxPlus.Mesh_CombineMeshes(*args)

    CombineMeshes = staticmethod(CombineMeshes)
    def SliceMesh(*args):
        """
        SliceMesh(Mesh mesh, Point3 N, float off, bool split=True, bool remove=True)
        SliceMesh(Mesh mesh, Point3 N, float off, bool split=True)
        SliceMesh(Mesh mesh, Point3 N, float off)
        """
        return _MaxPlus.Mesh_SliceMesh(*args)

    SliceMesh = staticmethod(SliceMesh)
    def AffectRegionFunction(*args):
        """AffectRegionFunction(float dist, float falloff, float pinch, float bubble) -> float"""
        return _MaxPlus.Mesh_AffectRegionFunction(*args)

    AffectRegionFunction = staticmethod(AffectRegionFunction)
    NumVertices = _swig_property(GetNumVertices)
    NumFaces = _swig_property(GetNumFaces)
    DefaultMap = _swig_property(GetDefaultMap)
    AlphaMap = _swig_property(GetDefaultMap)
    ColorPerVertexMap = _swig_property(GetColorPerVertexMap)
    ShadingMap = _swig_property(GetShadingMap)
    NumCustomMaps = _swig_property(GetNumCustomMaps)
    Vertices = _swig_property(lambda self: (self.GetVertex(i) for i in xrange(self.GetNumVertices())))
    Faces = _swig_property(lambda self: (self.GetFace(i) for i in xrange(self.GetNumFaces())))
    CustomMaps = _swig_property(lambda self: (self.GetCustomMap(i) for i in xrange(self.GetNumCustomMaps())))
    FaceVertices = _swig_property(lambda self: (self.GetFaceVertices(i) for i in xrange(self.GetNumFaces())))
    FaceNormals = _swig_property(lambda self: (self.GetFaceNormal(i) for i in xrange(self.GetNumFaces())))
    FaceCenters = _swig_property(lambda self: (self.GetFaceCenter(i) for i in xrange(self.GetNumFaces())))
    SmoothFlags = _swig_property(GetSmoothFlags, SetSmoothFlags)

    __swig_destroy__ = _MaxPlus.delete_Mesh
    __del__ = lambda self : None;
Mesh_swigregister = _MaxPlus.Mesh_swigregister
Mesh_swigregister(Mesh)

def Mesh__CastFrom(*args):
  """Mesh__CastFrom(InterfaceServer b) -> Mesh"""
  return _MaxPlus.Mesh__CastFrom(*args)

def Mesh__CreateWrapper(*args):
  """Mesh__CreateWrapper(void * mesh_pointer) -> Mesh"""
  return _MaxPlus.Mesh__CreateWrapper(*args)

def Mesh__CreateWrapperFromFPValue(*args):
  """Mesh__CreateWrapperFromFPValue(void * fpvalue_pointer) -> Mesh"""
  return _MaxPlus.Mesh__CreateWrapperFromFPValue(*args)

def Mesh_GetMapChannelID(*args):
  """Mesh_GetMapChannelID(int mp) -> DWORD"""
  return _MaxPlus.Mesh_GetMapChannelID(*args)

def Mesh_GetMapChannelNum(*args):
  """Mesh_GetMapChannelNum(int mp) -> int"""
  return _MaxPlus.Mesh_GetMapChannelNum(*args)

def Mesh_VertexDataType(*args):
  """Mesh_VertexDataType(bool vdID) -> bool"""
  return _MaxPlus.Mesh_VertexDataType(*args)

def Mesh_SetUseVisEdge(*args):
  """Mesh_SetUseVisEdge(bool b)"""
  return _MaxPlus.Mesh_SetUseVisEdge(*args)

def Mesh_GetUseVisEdge():
  """Mesh_GetUseVisEdge() -> bool"""
  return _MaxPlus.Mesh_GetUseVisEdge()

def Mesh_SetUseVertexDots(*args):
  """Mesh_SetUseVertexDots(bool b)"""
  return _MaxPlus.Mesh_SetUseVertexDots(*args)

def Mesh_GetUseVertexDots():
  """Mesh_GetUseVertexDots() -> bool"""
  return _MaxPlus.Mesh_GetUseVertexDots()

def Mesh_SetVertexDotType(*args):
  """Mesh_SetVertexDotType(int t)"""
  return _MaxPlus.Mesh_SetVertexDotType(*args)

def Mesh_GetVertexDotType():
  """Mesh_GetVertexDotType() -> int"""
  return _MaxPlus.Mesh_GetVertexDotType()

def Mesh_SetHandleBoxType(*args):
  """Mesh_SetHandleBoxType(int t)"""
  return _MaxPlus.Mesh_SetHandleBoxType(*args)

def Mesh_GetHandleBoxType():
  """Mesh_GetHandleBoxType() -> int"""
  return _MaxPlus.Mesh_GetHandleBoxType()

def Mesh_SetDisplayBackFaceVertices(*args):
  """Mesh_SetDisplayBackFaceVertices(bool b)"""
  return _MaxPlus.Mesh_SetDisplayBackFaceVertices(*args)

def Mesh_GetDisplayBackFaceVertices():
  """Mesh_GetDisplayBackFaceVertices() -> bool"""
  return _MaxPlus.Mesh_GetDisplayBackFaceVertices()

def Mesh_CombineMeshes(*args):
  """
    CombineMeshes(Mesh mesh, Mesh mesh1, Mesh mesh2, Matrix3 tm1, Matrix3 tm2, int whichInv=0)
    CombineMeshes(Mesh mesh, Mesh mesh1, Mesh mesh2, Matrix3 tm1, Matrix3 tm2)
    CombineMeshes(Mesh mesh, Mesh mesh1, Mesh mesh2, int whichInv=0)
    Mesh_CombineMeshes(Mesh mesh, Mesh mesh1, Mesh mesh2)
    """
  return _MaxPlus.Mesh_CombineMeshes(*args)

def Mesh_SliceMesh(*args):
  """
    SliceMesh(Mesh mesh, Point3 N, float off, bool split=True, bool remove=True)
    SliceMesh(Mesh mesh, Point3 N, float off, bool split=True)
    Mesh_SliceMesh(Mesh mesh, Point3 N, float off)
    """
  return _MaxPlus.Mesh_SliceMesh(*args)

def Mesh_AffectRegionFunction(*args):
  """Mesh_AffectRegionFunction(float dist, float falloff, float pinch, float bubble) -> float"""
  return _MaxPlus.Mesh_AffectRegionFunction(*args)

class Modifier(BaseObject):
    """The base class for Object Space and Space Warp (World Space) Modifier plug-ins"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Modifier"""
        return _MaxPlus.Modifier__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Modifier self, Wrapper w) -> bool"""
        return _MaxPlus.Modifier___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Modifier self, Wrapper w) -> bool"""
        return _MaxPlus.Modifier___ne__(self, *args)

    def GetName(self):
        """GetName(Modifier self) -> WStr"""
        return _MaxPlus.Modifier_GetName(self)

    def SetName(self, *args):
        """SetName(Modifier self, WStr n)"""
        return _MaxPlus.Modifier_SetName(self, *args)

    def DisableModApps(self):
        """DisableModApps(Modifier self)"""
        return _MaxPlus.Modifier_DisableModApps(self)

    def EnableModApps(self):
        """EnableModApps(Modifier self)"""
        return _MaxPlus.Modifier_EnableModApps(self)

    def DisableMod(self):
        """DisableMod(Modifier self)"""
        return _MaxPlus.Modifier_DisableMod(self)

    def EnableMod(self):
        """EnableMod(Modifier self)"""
        return _MaxPlus.Modifier_EnableMod(self)

    def IsEnabled(self):
        """IsEnabled(Modifier self) -> int"""
        return _MaxPlus.Modifier_IsEnabled(self)

    def DisableModInViews(self):
        """DisableModInViews(Modifier self)"""
        return _MaxPlus.Modifier_DisableModInViews(self)

    def EnableModInViews(self):
        """EnableModInViews(Modifier self)"""
        return _MaxPlus.Modifier_EnableModInViews(self)

    def IsEnabledInViews(self):
        """IsEnabledInViews(Modifier self) -> int"""
        return _MaxPlus.Modifier_IsEnabledInViews(self)

    def DisableModInRender(self):
        """DisableModInRender(Modifier self)"""
        return _MaxPlus.Modifier_DisableModInRender(self)

    def EnableModInRender(self):
        """EnableModInRender(Modifier self)"""
        return _MaxPlus.Modifier_EnableModInRender(self)

    def IsEnabledInRender(self):
        """IsEnabledInRender(Modifier self) -> int"""
        return _MaxPlus.Modifier_IsEnabledInRender(self)

    def GetLocalValidity(self, *args):
        """
        GetLocalValidity(Modifier self, TimeValue t=Autodesk::Max::Now()) -> Interval
        GetLocalValidity(Modifier self) -> Interval
        """
        return _MaxPlus.Modifier_GetLocalValidity(self, *args)

    def GetChannelsUsed(self):
        """GetChannelsUsed(Modifier self) -> ChannelMask"""
        return _MaxPlus.Modifier_GetChannelsUsed(self)

    def GetChannelsChanged(self):
        """GetChannelsChanged(Modifier self) -> ChannelMask"""
        return _MaxPlus.Modifier_GetChannelsChanged(self)

    def NotifyInputChanged(self, *args):
        """NotifyInputChanged(Modifier self, Interval changeInt, int partID, RefMessage message, ModContext mc)"""
        return _MaxPlus.Modifier_NotifyInputChanged(self, *args)

    def ChangesSelType(self):
        """ChangesSelType(Modifier self) -> bool"""
        return _MaxPlus.Modifier_ChangesSelType(self)

    def TotalChannelsUsed(self):
        """TotalChannelsUsed(Modifier self) -> ChannelMask"""
        return _MaxPlus.Modifier_TotalChannelsUsed(self)

    def TotalChannelsChanged(self):
        """TotalChannelsChanged(Modifier self) -> ChannelMask"""
        return _MaxPlus.Modifier_TotalChannelsChanged(self)

    def ModifyObject(self, *args):
        """ModifyObject(Modifier self, TimeValue t, ModContext mc, ObjectState os, INode node)"""
        return _MaxPlus.Modifier_ModifyObject(self, *args)

    def NeedUseSubselButton(self):
        """NeedUseSubselButton(Modifier self) -> int"""
        return _MaxPlus.Modifier_NeedUseSubselButton(self)

    def DependOnTopology(self, *args):
        """DependOnTopology(Modifier self, ModContext mc) -> bool"""
        return _MaxPlus.Modifier_DependOnTopology(self, *args)

    def InputType(self):
        """InputType(Modifier self) -> Class_ID"""
        return _MaxPlus.Modifier_InputType(self)

    def GetIDerivedObject(self, *args):
        """GetIDerivedObject(Modifier self, ModContext mc, int & modIndex) -> IDerivedObject"""
        return _MaxPlus.Modifier_GetIDerivedObject(self, *args)

    def CopyAdditionalChannels(self, *args):
        """CopyAdditionalChannels(Modifier self, Object fromObj, Object toObj)"""
        return _MaxPlus.Modifier_CopyAdditionalChannels(self, *args)

    __swig_destroy__ = _MaxPlus.delete_Modifier
    __del__ = lambda self : None;
Modifier_swigregister = _MaxPlus.Modifier_swigregister
Modifier_swigregister(Modifier)

def Modifier__CastFrom(*args):
  """Modifier__CastFrom(InterfaceServer b) -> Modifier"""
  return _MaxPlus.Modifier__CastFrom(*args)

class IDerivedObject(Object):
    """An interface to objects affected by modifiers."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> IDerivedObject"""
        return _MaxPlus.IDerivedObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(IDerivedObject self, Wrapper w) -> bool"""
        return _MaxPlus.IDerivedObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(IDerivedObject self, Wrapper w) -> bool"""
        return _MaxPlus.IDerivedObject___ne__(self, *args)

    def AddModifier(self, *args):
        """
        AddModifier(IDerivedObject self, Modifier mod, ModContext mc=0, int before=0)
        AddModifier(IDerivedObject self, Modifier mod, ModContext mc=0)
        AddModifier(IDerivedObject self, Modifier mod)
        """
        return _MaxPlus.IDerivedObject_AddModifier(self, *args)

    def DeleteModifier(self, index=0):
        """
        DeleteModifier(IDerivedObject self, int index=0)
        DeleteModifier(IDerivedObject self)
        """
        return _MaxPlus.IDerivedObject_DeleteModifier(self, index)

    def GetNumModifiers(self):
        """GetNumModifiers(IDerivedObject self) -> int"""
        return _MaxPlus.IDerivedObject_GetNumModifiers(self)

    def GetObjRef(self):
        """GetObjRef(IDerivedObject self) -> Object"""
        return _MaxPlus.IDerivedObject_GetObjRef(self)

    def ReferenceObject(self, *args):
        """ReferenceObject(IDerivedObject self, Object pob) -> RefResult"""
        return _MaxPlus.IDerivedObject_ReferenceObject(self, *args)

    def GetModifier(self, *args):
        """GetModifier(IDerivedObject self, int index) -> Modifier"""
        return _MaxPlus.IDerivedObject_GetModifier(self, *args)

    def SetModifier(self, *args):
        """SetModifier(IDerivedObject self, int index, Modifier mod)"""
        return _MaxPlus.IDerivedObject_SetModifier(self, *args)

    def GetModContext(self, *args):
        """GetModContext(IDerivedObject self, int index) -> ModContext"""
        return _MaxPlus.IDerivedObject_GetModContext(self, *args)

    def Eval(self, *args):
        """Eval(IDerivedObject self, TimeValue t, int modIndex) -> ObjectState"""
        return _MaxPlus.IDerivedObject_Eval(self, *args)

    __swig_destroy__ = _MaxPlus.delete_IDerivedObject
    __del__ = lambda self : None;
IDerivedObject_swigregister = _MaxPlus.IDerivedObject_swigregister
IDerivedObject_swigregister(IDerivedObject)

def IDerivedObject__CastFrom(*args):
  """IDerivedObject__CastFrom(InterfaceServer b) -> IDerivedObject"""
  return _MaxPlus.IDerivedObject__CastFrom(*args)

class OSModifier(Modifier):
    """Base class for most object-space modifier plug-ins."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> OSModifier"""
        return _MaxPlus.OSModifier__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(OSModifier self, Wrapper w) -> bool"""
        return _MaxPlus.OSModifier___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(OSModifier self, Wrapper w) -> bool"""
        return _MaxPlus.OSModifier___ne__(self, *args)

    __swig_destroy__ = _MaxPlus.delete_OSModifier
    __del__ = lambda self : None;
OSModifier_swigregister = _MaxPlus.OSModifier_swigregister
OSModifier_swigregister(OSModifier)

def OSModifier__CastFrom(*args):
  """OSModifier__CastFrom(InterfaceServer b) -> OSModifier"""
  return _MaxPlus.OSModifier__CastFrom(*args)

class WSModifier(Modifier):
    """Base class of most world-space modifier plug-ins."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> WSModifier"""
        return _MaxPlus.WSModifier__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(WSModifier self, Wrapper w) -> bool"""
        return _MaxPlus.WSModifier___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(WSModifier self, Wrapper w) -> bool"""
        return _MaxPlus.WSModifier___ne__(self, *args)

    __swig_destroy__ = _MaxPlus.delete_WSModifier
    __del__ = lambda self : None;
WSModifier_swigregister = _MaxPlus.WSModifier_swigregister
WSModifier_swigregister(WSModifier)

def WSModifier__CastFrom(*args):
  """WSModifier__CastFrom(InterfaceServer b) -> WSModifier"""
  return _MaxPlus.WSModifier__CastFrom(*args)

class IParamBlock(ReferenceTarget):
    """For internal use only. Use ParameterBlock instead."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> IParamBlock"""
        return _MaxPlus.IParamBlock__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(IParamBlock self, Wrapper w) -> bool"""
        return _MaxPlus.IParamBlock___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(IParamBlock self, Wrapper w) -> bool"""
        return _MaxPlus.IParamBlock___ne__(self, *args)

    def GetAnimParamControlType(self, *args):
        """GetAnimParamControlType(IParamBlock self, int anim) -> SClass_ID"""
        return _MaxPlus.IParamBlock_GetAnimParamControlType(self, *args)

    def GetParameterType(self, *args):
        """GetParameterType(IParamBlock self, int i) -> int"""
        return _MaxPlus.IParamBlock_GetParameterType(self, *args)

    def SetValue(self, *args):
        """
        SetValue(IParamBlock self, int i, TimeValue t, float v) -> BOOL
        SetValue(IParamBlock self, int i, TimeValue t, int v) -> BOOL
        SetValue(IParamBlock self, int i, TimeValue t, Point3 v) -> BOOL
        SetValue(IParamBlock self, int i, TimeValue t, Color v) -> BOOL
        """
        return _MaxPlus.IParamBlock_SetValue(self, *args)

    def GetValue(self, *args):
        """
        GetValue(IParamBlock self, int i, TimeValue t, float & v, Interval ivalid) -> BOOL
        GetValue(IParamBlock self, int i, TimeValue t, int & v, Interval ivalid) -> BOOL
        GetValue(IParamBlock self, int i, TimeValue t, Point3 v, Interval ivalid) -> BOOL
        GetValue(IParamBlock self, int i, TimeValue t, Color v, Interval ivalid) -> BOOL
        """
        return _MaxPlus.IParamBlock_GetValue(self, *args)

    def GetColor(self, *args):
        """
        GetColor(IParamBlock self, int i, TimeValue t=0) -> Color
        GetColor(IParamBlock self, int i) -> Color
        """
        return _MaxPlus.IParamBlock_GetColor(self, *args)

    def GetPoint3(self, *args):
        """
        GetPoint3(IParamBlock self, int i, TimeValue t=0) -> Point3
        GetPoint3(IParamBlock self, int i) -> Point3
        """
        return _MaxPlus.IParamBlock_GetPoint3(self, *args)

    def GetInt(self, *args):
        """
        GetInt(IParamBlock self, int i, TimeValue t=0) -> int
        GetInt(IParamBlock self, int i) -> int
        """
        return _MaxPlus.IParamBlock_GetInt(self, *args)

    def GetFloat(self, *args):
        """
        GetFloat(IParamBlock self, int i, TimeValue t=0) -> float
        GetFloat(IParamBlock self, int i) -> float
        """
        return _MaxPlus.IParamBlock_GetFloat(self, *args)

    def GetVersion(self):
        """GetVersion(IParamBlock self) -> DWORD"""
        return _MaxPlus.IParamBlock_GetVersion(self)

    def NumParams(self):
        """NumParams(IParamBlock self) -> int"""
        return _MaxPlus.IParamBlock_NumParams(self)

    def RemoveController(self, *args):
        """RemoveController(IParamBlock self, int i)"""
        return _MaxPlus.IParamBlock_RemoveController(self, *args)

    def GetController(self, *args):
        """GetController(IParamBlock self, int i) -> Control"""
        return _MaxPlus.IParamBlock_GetController(self, *args)

    def SetController(self, *args):
        """
        SetController(IParamBlock self, int i, Control c, BOOL preserveFrame0Value=TRUE)
        SetController(IParamBlock self, int i, Control c)
        """
        return _MaxPlus.IParamBlock_SetController(self, *args)

    def SwapControllers(self, *args):
        """SwapControllers(IParamBlock self, int j, int k)"""
        return _MaxPlus.IParamBlock_SwapControllers(self, *args)

    def GetRefNum(self, *args):
        """GetRefNum(IParamBlock self, int paramNum) -> int"""
        return _MaxPlus.IParamBlock_GetRefNum(self, *args)

    def GetAnimNum(self, *args):
        """GetAnimNum(IParamBlock self, int paramNum) -> int"""
        return _MaxPlus.IParamBlock_GetAnimNum(self, *args)

    def AnimNumToParamNum(self, *args):
        """AnimNumToParamNum(IParamBlock self, int animNum) -> int"""
        return _MaxPlus.IParamBlock_AnimNumToParamNum(self, *args)

    def GetParamBlock(self):
        """GetParamBlock(IParamBlock self) -> IParamBlock"""
        return _MaxPlus.IParamBlock_GetParamBlock(self)

    def RescaleParam(self, *args):
        """RescaleParam(IParamBlock self, int paramNum, float f)"""
        return _MaxPlus.IParamBlock_RescaleParam(self, *args)

    def LastNotifyParamNum(self):
        """LastNotifyParamNum(IParamBlock self) -> int"""
        return _MaxPlus.IParamBlock_LastNotifyParamNum(self)

    __swig_destroy__ = _MaxPlus.delete_IParamBlock
    __del__ = lambda self : None;
IParamBlock_swigregister = _MaxPlus.IParamBlock_swigregister
IParamBlock_swigregister(IParamBlock)

def IParamBlock__CastFrom(*args):
  """IParamBlock__CastFrom(InterfaceServer b) -> IParamBlock"""
  return _MaxPlus.IParamBlock__CastFrom(*args)

class IParamArray(Wrapper):
    """Proxy of C++ Autodesk::Max::IParamArray class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> IParamArray"""
        return _MaxPlus.IParamArray__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(IParamArray self, Wrapper w) -> bool"""
        return _MaxPlus.IParamArray___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(IParamArray self, Wrapper w) -> bool"""
        return _MaxPlus.IParamArray___ne__(self, *args)

    def SetValue(self, *args):
        """
        SetValue(IParamArray self, int i, TimeValue t, float v) -> BOOL
        SetValue(IParamArray self, int i, TimeValue t, int v) -> BOOL
        SetValue(IParamArray self, int i, TimeValue t, Point3 v) -> BOOL
        """
        return _MaxPlus.IParamArray_SetValue(self, *args)

    def GetValue(self, *args):
        """
        GetValue(IParamArray self, int i, TimeValue t, float & v, Interval ivalid) -> BOOL
        GetValue(IParamArray self, int i, TimeValue t, int & v, Interval ivalid) -> BOOL
        GetValue(IParamArray self, int i, TimeValue t, Point3 v, Interval ivalid) -> BOOL
        """
        return _MaxPlus.IParamArray_GetValue(self, *args)

    def GetParamBlock(self):
        """GetParamBlock(IParamArray self) -> IParamBlock"""
        return _MaxPlus.IParamArray_GetParamBlock(self)

    def KeyFrameAtTime(self, *args):
        """KeyFrameAtTime(IParamArray self, int i, TimeValue t) -> BOOL"""
        return _MaxPlus.IParamArray_KeyFrameAtTime(self, *args)

    __swig_destroy__ = _MaxPlus.delete_IParamArray
    __del__ = lambda self : None;
IParamArray_swigregister = _MaxPlus.IParamArray_swigregister
IParamArray_swigregister(IParamArray)

def IParamArray__CastFrom(*args):
  """IParamArray__CastFrom(InterfaceServer b) -> IParamArray"""
  return _MaxPlus.IParamArray__CastFrom(*args)

class IParamMap(Wrapper):
    """For internal use only. Use ParameterBlock instead."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> IParamMap"""
        return _MaxPlus.IParamMap__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(IParamMap self, Wrapper w) -> bool"""
        return _MaxPlus.IParamMap___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(IParamMap self, Wrapper w) -> bool"""
        return _MaxPlus.IParamMap___ne__(self, *args)

    def Invalidate(self):
        """Invalidate(IParamMap self)"""
        return _MaxPlus.IParamMap_Invalidate(self)

    def GetParamArray(self):
        """GetParamArray(IParamMap self) -> IParamArray"""
        return _MaxPlus.IParamMap_GetParamArray(self)

    __swig_destroy__ = _MaxPlus.delete_IParamMap
    __del__ = lambda self : None;
IParamMap_swigregister = _MaxPlus.IParamMap_swigregister
IParamMap_swigregister(IParamMap)

def IParamMap__CastFrom(*args):
  """IParamMap__CastFrom(InterfaceServer b) -> IParamMap"""
  return _MaxPlus.IParamMap__CastFrom(*args)

class ParamBlockDesc2(BaseInterfaceServer):
    """For internal use only. Use ParameterBlock instead."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ParamBlockDesc2"""
        return _MaxPlus.ParamBlockDesc2__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ParamBlockDesc2 self, Wrapper w) -> bool"""
        return _MaxPlus.ParamBlockDesc2___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ParamBlockDesc2 self, Wrapper w) -> bool"""
        return _MaxPlus.ParamBlockDesc2___ne__(self, *args)

    def Count(self):
        """Count(ParamBlockDesc2 self) -> USHORT"""
        return _MaxPlus.ParamBlockDesc2_Count(self)

    def Version(self):
        """Version(ParamBlockDesc2 self) -> DWORD"""
        return _MaxPlus.ParamBlockDesc2_Version(self)

    def IDtoIndex(self, *args):
        """IDtoIndex(ParamBlockDesc2 self, ParamID id) -> int"""
        return _MaxPlus.ParamBlockDesc2_IDtoIndex(self, *args)

    def NameToIndex(self, *args):
        """NameToIndex(ParamBlockDesc2 self, wchar_t const * name) -> int"""
        return _MaxPlus.ParamBlockDesc2_NameToIndex(self, *args)

    def IndextoID(self, *args):
        """IndextoID(ParamBlockDesc2 self, int i) -> ParamID"""
        return _MaxPlus.ParamBlockDesc2_IndextoID(self, *args)

    def GetColor(self, *args):
        """
        GetColor(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Color
        GetColor(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> Color
        GetColor(ParamBlockDesc2 self, ParamID id) -> Color
        """
        return _MaxPlus.ParamBlockDesc2_GetColor(self, *args)

    def GetAColor(self, *args):
        """
        GetAColor(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> AColor
        GetAColor(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> AColor
        GetAColor(ParamBlockDesc2 self, ParamID id) -> AColor
        """
        return _MaxPlus.ParamBlockDesc2_GetAColor(self, *args)

    def GetPoint3(self, *args):
        """
        GetPoint3(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Point3
        GetPoint3(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> Point3
        GetPoint3(ParamBlockDesc2 self, ParamID id) -> Point3
        """
        return _MaxPlus.ParamBlockDesc2_GetPoint3(self, *args)

    def GetPoint4(self, *args):
        """
        GetPoint4(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Point4
        GetPoint4(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> Point4
        GetPoint4(ParamBlockDesc2 self, ParamID id) -> Point4
        """
        return _MaxPlus.ParamBlockDesc2_GetPoint4(self, *args)

    def GetInt(self, *args):
        """
        GetInt(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> int
        GetInt(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> int
        GetInt(ParamBlockDesc2 self, ParamID id) -> int
        """
        return _MaxPlus.ParamBlockDesc2_GetInt(self, *args)

    def GetFloat(self, *args):
        """
        GetFloat(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> float
        GetFloat(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> float
        GetFloat(ParamBlockDesc2 self, ParamID id) -> float
        """
        return _MaxPlus.ParamBlockDesc2_GetFloat(self, *args)

    def GetTimeValue(self, *args):
        """
        GetTimeValue(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> TimeValue
        GetTimeValue(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> TimeValue
        GetTimeValue(ParamBlockDesc2 self, ParamID id) -> TimeValue
        """
        return _MaxPlus.ParamBlockDesc2_GetTimeValue(self, *args)

    def GetStr(self, *args):
        """
        GetStr(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> wchar_t const
        GetStr(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> wchar_t const
        GetStr(ParamBlockDesc2 self, ParamID id) -> wchar_t const *
        """
        return _MaxPlus.ParamBlockDesc2_GetStr(self, *args)

    def GetMtl(self, *args):
        """
        GetMtl(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Mtl
        GetMtl(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> Mtl
        GetMtl(ParamBlockDesc2 self, ParamID id) -> Mtl
        """
        return _MaxPlus.ParamBlockDesc2_GetMtl(self, *args)

    def GetTexmap(self, *args):
        """
        GetTexmap(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Texmap
        GetTexmap(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> Texmap
        GetTexmap(ParamBlockDesc2 self, ParamID id) -> Texmap
        """
        return _MaxPlus.ParamBlockDesc2_GetTexmap(self, *args)

    def GetBitmap(self, *args):
        """
        GetBitmap(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> PBBitmap
        GetBitmap(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> PBBitmap
        GetBitmap(ParamBlockDesc2 self, ParamID id) -> PBBitmap
        """
        return _MaxPlus.ParamBlockDesc2_GetBitmap(self, *args)

    def GetINode(self, *args):
        """
        GetINode(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> INode
        GetINode(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> INode
        GetINode(ParamBlockDesc2 self, ParamID id) -> INode
        """
        return _MaxPlus.ParamBlockDesc2_GetINode(self, *args)

    def GetReferenceTarget(self, *args):
        """
        GetReferenceTarget(ParamBlockDesc2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> ReferenceTarget
        GetReferenceTarget(ParamBlockDesc2 self, ParamID id, TimeValue t=0) -> ReferenceTarget
        GetReferenceTarget(ParamBlockDesc2 self, ParamID id) -> ReferenceTarget
        """
        return _MaxPlus.ParamBlockDesc2_GetReferenceTarget(self, *args)

    def GetString(self, *args):
        """GetString(ParamBlockDesc2 self, int id) -> wchar_t const *"""
        return _MaxPlus.ParamBlockDesc2_GetString(self, *args)

    def InvalidateUI(self, *args):
        """
        InvalidateUI(ParamBlockDesc2 self)
        InvalidateUI(ParamBlockDesc2 self, ParamID id, int tabIndex=-1)
        InvalidateUI(ParamBlockDesc2 self, ParamID id)
        """
        return _MaxPlus.ParamBlockDesc2_InvalidateUI(self, *args)

    def SetOwnerRefNo(self, *args):
        """SetOwnerRefNo(ParamBlockDesc2 self, ParamID id, int refno)"""
        return _MaxPlus.ParamBlockDesc2_SetOwnerRefNo(self, *args)

    def GetOwnerRefNo(self, *args):
        """GetOwnerRefNo(ParamBlockDesc2 self, ParamID id) -> int"""
        return _MaxPlus.ParamBlockDesc2_GetOwnerRefNo(self, *args)

    def SetSubTexNo(self, *args):
        """SetSubTexNo(ParamBlockDesc2 self, ParamID id, int texno)"""
        return _MaxPlus.ParamBlockDesc2_SetSubTexNo(self, *args)

    def SetSubMtlNo(self, *args):
        """SetSubMtlNo(ParamBlockDesc2 self, ParamID id, int mtlno)"""
        return _MaxPlus.ParamBlockDesc2_SetSubMtlNo(self, *args)

    def GetSubTexNo(self, *args):
        """GetSubTexNo(ParamBlockDesc2 self, ParamID id) -> int"""
        return _MaxPlus.ParamBlockDesc2_GetSubTexNo(self, *args)

    def GetSubMtlNo(self, *args):
        """GetSubMtlNo(ParamBlockDesc2 self, ParamID id) -> int"""
        return _MaxPlus.ParamBlockDesc2_GetSubMtlNo(self, *args)

    def SetInitFile(self, *args):
        """SetInitFile(ParamBlockDesc2 self, ParamID id, wchar_t const * s)"""
        return _MaxPlus.ParamBlockDesc2_SetInitFile(self, *args)

    def GetInitFile(self, *args):
        """GetInitFile(ParamBlockDesc2 self, ParamID id) -> wchar_t const *"""
        return _MaxPlus.ParamBlockDesc2_GetInitFile(self, *args)

    def AddInterface(self, *args):
        """AddInterface(ParamBlockDesc2 self, BaseInterface iface)"""
        return _MaxPlus.ParamBlockDesc2_AddInterface(self, *args)

    def RemoveInterface(self, *args):
        """RemoveInterface(ParamBlockDesc2 self, BaseInterface iface)"""
        return _MaxPlus.ParamBlockDesc2_RemoveInterface(self, *args)

    def SetFileTypes(self, *args):
        """SetFileTypes(ParamBlockDesc2 self, ParamID id, wchar_t const * fileType)"""
        return _MaxPlus.ParamBlockDesc2_SetFileTypes(self, *args)

    __swig_destroy__ = _MaxPlus.delete_ParamBlockDesc2
    __del__ = lambda self : None;
ParamBlockDesc2_swigregister = _MaxPlus.ParamBlockDesc2_swigregister
ParamBlockDesc2_swigregister(ParamBlockDesc2)

def ParamBlockDesc2__CastFrom(*args):
  """ParamBlockDesc2__CastFrom(InterfaceServer b) -> ParamBlockDesc2"""
  return _MaxPlus.ParamBlockDesc2__CastFrom(*args)

class IParamBlock2(ReferenceTarget):
    """For internal use only. Use ParameterBlock instead."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> IParamBlock2"""
        return _MaxPlus.IParamBlock2__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(IParamBlock2 self, Wrapper w) -> bool"""
        return _MaxPlus.IParamBlock2___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(IParamBlock2 self, Wrapper w) -> bool"""
        return _MaxPlus.IParamBlock2___ne__(self, *args)

    def GetVersion(self):
        """GetVersion(IParamBlock2 self) -> DWORD"""
        return _MaxPlus.IParamBlock2_GetVersion(self)

    def NumParams(self):
        """NumParams(IParamBlock2 self) -> int"""
        return _MaxPlus.IParamBlock2_NumParams(self)

    def GetDesc(self):
        """GetDesc(IParamBlock2 self) -> ParamBlockDesc2"""
        return _MaxPlus.IParamBlock2_GetDesc(self)

    def ReleaseDesc(self):
        """ReleaseDesc(IParamBlock2 self)"""
        return _MaxPlus.IParamBlock2_ReleaseDesc(self)

    def SetDesc(self, *args):
        """SetDesc(IParamBlock2 self, ParamBlockDesc2 desc)"""
        return _MaxPlus.IParamBlock2_SetDesc(self, *args)

    def ID(self):
        """ID(IParamBlock2 self) -> short"""
        return _MaxPlus.IParamBlock2_ID(self)

    def IDtoIndex(self, *args):
        """IDtoIndex(IParamBlock2 self, ParamID id) -> int"""
        return _MaxPlus.IParamBlock2_IDtoIndex(self, *args)

    def IndextoID(self, *args):
        """IndextoID(IParamBlock2 self, int i) -> ParamID"""
        return _MaxPlus.IParamBlock2_IndextoID(self, *args)

    def GetOwner(self):
        """GetOwner(IParamBlock2 self) -> ReferenceMaker"""
        return _MaxPlus.IParamBlock2_GetOwner(self)

    def GetAnimParamControlType(self, *args):
        """GetAnimParamControlType(IParamBlock2 self, int anim) -> SClass_ID"""
        return _MaxPlus.IParamBlock2_GetAnimParamControlType(self, *args)

    def GetParamControlType(self, *args):
        """GetParamControlType(IParamBlock2 self, ParamID id) -> SClass_ID"""
        return _MaxPlus.IParamBlock2_GetParamControlType(self, *args)

    def GetParameterType(self, *args):
        """GetParameterType(IParamBlock2 self, ParamID id) -> ParamType2"""
        return _MaxPlus.IParamBlock2_GetParameterType(self, *args)

    def GetLocalName(self, *args):
        """
        GetLocalName(IParamBlock2 self) -> wchar_t const
        GetLocalName(IParamBlock2 self, ParamID id, int tabIndex=-1) -> WStr
        GetLocalName(IParamBlock2 self, ParamID id) -> WStr
        """
        return _MaxPlus.IParamBlock2_GetLocalName(self, *args)

    def SetValue(self, *args):
        """
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, float v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, float v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, int v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, int v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Point3 v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Point3 v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Point4 v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Point4 v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Color v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Color v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, AColor v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, AColor v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, wchar_t const * v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, wchar_t const * v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Mtl v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Mtl v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Texmap v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Texmap v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, PBBitmap v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, PBBitmap v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, INode v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, INode v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, ReferenceTarget v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, ReferenceTarget v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, IParamBlock2 v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, IParamBlock2 v) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Matrix3 v, int tabIndex=0) -> BOOL
        SetValue(IParamBlock2 self, ParamID id, TimeValue t, Matrix3 v) -> BOOL
        """
        return _MaxPlus.IParamBlock2_SetValue(self, *args)

    def GetColor(self, *args):
        """
        GetColor(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Color
        GetColor(IParamBlock2 self, ParamID id, TimeValue t=0) -> Color
        GetColor(IParamBlock2 self, ParamID id) -> Color
        """
        return _MaxPlus.IParamBlock2_GetColor(self, *args)

    def GetAColor(self, *args):
        """
        GetAColor(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> AColor
        GetAColor(IParamBlock2 self, ParamID id, TimeValue t=0) -> AColor
        GetAColor(IParamBlock2 self, ParamID id) -> AColor
        """
        return _MaxPlus.IParamBlock2_GetAColor(self, *args)

    def GetPoint3(self, *args):
        """
        GetPoint3(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Point3
        GetPoint3(IParamBlock2 self, ParamID id, TimeValue t=0) -> Point3
        GetPoint3(IParamBlock2 self, ParamID id) -> Point3
        """
        return _MaxPlus.IParamBlock2_GetPoint3(self, *args)

    def GetPoint4(self, *args):
        """
        GetPoint4(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Point4
        GetPoint4(IParamBlock2 self, ParamID id, TimeValue t=0) -> Point4
        GetPoint4(IParamBlock2 self, ParamID id) -> Point4
        """
        return _MaxPlus.IParamBlock2_GetPoint4(self, *args)

    def GetInt(self, *args):
        """
        GetInt(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> int
        GetInt(IParamBlock2 self, ParamID id, TimeValue t=0) -> int
        GetInt(IParamBlock2 self, ParamID id) -> int
        """
        return _MaxPlus.IParamBlock2_GetInt(self, *args)

    def GetFloat(self, *args):
        """
        GetFloat(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> float
        GetFloat(IParamBlock2 self, ParamID id, TimeValue t=0) -> float
        GetFloat(IParamBlock2 self, ParamID id) -> float
        """
        return _MaxPlus.IParamBlock2_GetFloat(self, *args)

    def GetTimeValue(self, *args):
        """
        GetTimeValue(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> TimeValue
        GetTimeValue(IParamBlock2 self, ParamID id, TimeValue t=0) -> TimeValue
        GetTimeValue(IParamBlock2 self, ParamID id) -> TimeValue
        """
        return _MaxPlus.IParamBlock2_GetTimeValue(self, *args)

    def GetStr(self, *args):
        """
        GetStr(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> wchar_t const
        GetStr(IParamBlock2 self, ParamID id, TimeValue t=0) -> wchar_t const
        GetStr(IParamBlock2 self, ParamID id) -> wchar_t const *
        """
        return _MaxPlus.IParamBlock2_GetStr(self, *args)

    def GetMtl(self, *args):
        """
        GetMtl(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Mtl
        GetMtl(IParamBlock2 self, ParamID id, TimeValue t=0) -> Mtl
        GetMtl(IParamBlock2 self, ParamID id) -> Mtl
        """
        return _MaxPlus.IParamBlock2_GetMtl(self, *args)

    def GetTexmap(self, *args):
        """
        GetTexmap(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Texmap
        GetTexmap(IParamBlock2 self, ParamID id, TimeValue t=0) -> Texmap
        GetTexmap(IParamBlock2 self, ParamID id) -> Texmap
        """
        return _MaxPlus.IParamBlock2_GetTexmap(self, *args)

    def GetBitmap(self, *args):
        """
        GetBitmap(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> PBBitmap
        GetBitmap(IParamBlock2 self, ParamID id, TimeValue t=0) -> PBBitmap
        GetBitmap(IParamBlock2 self, ParamID id) -> PBBitmap
        """
        return _MaxPlus.IParamBlock2_GetBitmap(self, *args)

    def GetINode(self, *args):
        """
        GetINode(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> INode
        GetINode(IParamBlock2 self, ParamID id, TimeValue t=0) -> INode
        GetINode(IParamBlock2 self, ParamID id) -> INode
        """
        return _MaxPlus.IParamBlock2_GetINode(self, *args)

    def GetReferenceTarget(self, *args):
        """
        GetReferenceTarget(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> ReferenceTarget
        GetReferenceTarget(IParamBlock2 self, ParamID id, TimeValue t=0) -> ReferenceTarget
        GetReferenceTarget(IParamBlock2 self, ParamID id) -> ReferenceTarget
        """
        return _MaxPlus.IParamBlock2_GetReferenceTarget(self, *args)

    def GetParamBlock2(self, *args):
        """
        GetParamBlock2(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> IParamBlock2
        GetParamBlock2(IParamBlock2 self, ParamID id, TimeValue t=0) -> IParamBlock2
        GetParamBlock2(IParamBlock2 self, ParamID id) -> IParamBlock2
        """
        return _MaxPlus.IParamBlock2_GetParamBlock2(self, *args)

    def GetMatrix3(self, *args):
        """
        GetMatrix3(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Matrix3
        GetMatrix3(IParamBlock2 self, ParamID id, TimeValue t=0) -> Matrix3
        GetMatrix3(IParamBlock2 self, ParamID id) -> Matrix3
        """
        return _MaxPlus.IParamBlock2_GetMatrix3(self, *args)

    def GetAsset(self, *args):
        """
        GetAsset(IParamBlock2 self, ParamID id, TimeValue t=0, int tabIndex=0) -> Asset
        GetAsset(IParamBlock2 self, ParamID id, TimeValue t=0) -> Asset
        GetAsset(IParamBlock2 self, ParamID id) -> Asset
        """
        return _MaxPlus.IParamBlock2_GetAsset(self, *args)

    def Count(self, *args):
        """Count(IParamBlock2 self, ParamID id) -> int"""
        return _MaxPlus.IParamBlock2_Count(self, *args)

    def ZeroCount(self, *args):
        """ZeroCount(IParamBlock2 self, ParamID id)"""
        return _MaxPlus.IParamBlock2_ZeroCount(self, *args)

    def SetCount(self, *args):
        """SetCount(IParamBlock2 self, ParamID id, int n)"""
        return _MaxPlus.IParamBlock2_SetCount(self, *args)

    def Delete(self, *args):
        """Delete(IParamBlock2 self, ParamID id, int start, int num) -> int"""
        return _MaxPlus.IParamBlock2_Delete(self, *args)

    def Resize(self, *args):
        """Resize(IParamBlock2 self, ParamID id, int num) -> int"""
        return _MaxPlus.IParamBlock2_Resize(self, *args)

    def Shrink(self, *args):
        """Shrink(IParamBlock2 self, ParamID id)"""
        return _MaxPlus.IParamBlock2_Shrink(self, *args)

    def Insert(self, *args):
        """
        Insert(IParamBlock2 self, ParamID id, int at, float v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, int v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, Point3 v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, Point4 v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, Color v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, AColor v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, wchar_t const * v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, Mtl v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, Texmap v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, PBBitmap v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, INode v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, ReferenceTarget v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, IParamBlock2 v) -> int
        Insert(IParamBlock2 self, ParamID id, int at, Matrix3 v) -> int
        """
        return _MaxPlus.IParamBlock2_Insert(self, *args)

    def Append(self, *args):
        """
        Append(IParamBlock2 self, ParamID id, float v) -> int
        Append(IParamBlock2 self, ParamID id, int v) -> int
        Append(IParamBlock2 self, ParamID id, Point3 v) -> int
        Append(IParamBlock2 self, ParamID id, Point4 v) -> int
        Append(IParamBlock2 self, ParamID id, Color v) -> int
        Append(IParamBlock2 self, ParamID id, AColor v) -> int
        Append(IParamBlock2 self, ParamID id, wchar_t const * v) -> int
        Append(IParamBlock2 self, ParamID id, Mtl v) -> int
        Append(IParamBlock2 self, ParamID id, Texmap v) -> int
        Append(IParamBlock2 self, ParamID id, PBBitmap v) -> int
        Append(IParamBlock2 self, ParamID id, INode v) -> int
        Append(IParamBlock2 self, ParamID id, ReferenceTarget v) -> int
        Append(IParamBlock2 self, ParamID id, IParamBlock2 v) -> int
        Append(IParamBlock2 self, ParamID id, Matrix3 v) -> int
        """
        return _MaxPlus.IParamBlock2_Append(self, *args)

    def KeyFrameAtTimeByIndex(self, *args):
        """
        KeyFrameAtTimeByIndex(IParamBlock2 self, int i, TimeValue t, int tabIndex=0) -> BOOL
        KeyFrameAtTimeByIndex(IParamBlock2 self, int i, TimeValue t) -> BOOL
        """
        return _MaxPlus.IParamBlock2_KeyFrameAtTimeByIndex(self, *args)

    def KeyFrameAtTimeByID(self, *args):
        """
        KeyFrameAtTimeByID(IParamBlock2 self, ParamID id, TimeValue t, int tabIndex=0) -> BOOL
        KeyFrameAtTimeByID(IParamBlock2 self, ParamID id, TimeValue t) -> BOOL
        """
        return _MaxPlus.IParamBlock2_KeyFrameAtTimeByID(self, *args)

    def RemoveControllerByIndex(self, *args):
        """RemoveControllerByIndex(IParamBlock2 self, int i, int tabIndex)"""
        return _MaxPlus.IParamBlock2_RemoveControllerByIndex(self, *args)

    def GetControllerByID(self, *args):
        """
        GetControllerByID(IParamBlock2 self, ParamID id, int tabIndex=0) -> Control
        GetControllerByID(IParamBlock2 self, ParamID id) -> Control
        """
        return _MaxPlus.IParamBlock2_GetControllerByID(self, *args)

    def GetControllerByIndex(self, *args):
        """
        GetControllerByIndex(IParamBlock2 self, int i, int tabIndex=0) -> Control
        GetControllerByIndex(IParamBlock2 self, int i) -> Control
        """
        return _MaxPlus.IParamBlock2_GetControllerByIndex(self, *args)

    def SetControllerByIndex(self, *args):
        """
        SetControllerByIndex(IParamBlock2 self, int i, int tabIndex, Control c, BOOL preserveFrame0Value=TRUE)
        SetControllerByIndex(IParamBlock2 self, int i, int tabIndex, Control c)
        """
        return _MaxPlus.IParamBlock2_SetControllerByIndex(self, *args)

    def SetControllerByID(self, *args):
        """
        SetControllerByID(IParamBlock2 self, ParamID id, int tabIndex, Control c, BOOL preserveFrame0Value=TRUE)
        SetControllerByID(IParamBlock2 self, ParamID id, int tabIndex, Control c)
        """
        return _MaxPlus.IParamBlock2_SetControllerByID(self, *args)

    def SwapControllers(self, *args):
        """SwapControllers(IParamBlock2 self, int i1, int tabIndex1, int i2, int tabIndex2)"""
        return _MaxPlus.IParamBlock2_SwapControllers(self, *args)

    def GetRefNum(self, *args):
        """
        GetRefNum(IParamBlock2 self, int i, int tabIndex=0) -> int
        GetRefNum(IParamBlock2 self, int i) -> int
        """
        return _MaxPlus.IParamBlock2_GetRefNum(self, *args)

    def GetControllerRefNum(self, *args):
        """
        GetControllerRefNum(IParamBlock2 self, int i, int tabIndex=0) -> int
        GetControllerRefNum(IParamBlock2 self, int i) -> int
        """
        return _MaxPlus.IParamBlock2_GetControllerRefNum(self, *args)

    def GetAnimNum(self, *args):
        """
        GetAnimNum(IParamBlock2 self, ParamID id, int tabIndex=0) -> int
        GetAnimNum(IParamBlock2 self, ParamID id) -> int
        """
        return _MaxPlus.IParamBlock2_GetAnimNum(self, *args)

    def AnimNumToParamNum(self, *args):
        """AnimNumToParamNum(IParamBlock2 self, int animNum, int & tabIndex) -> int"""
        return _MaxPlus.IParamBlock2_AnimNumToParamNum(self, *args)

    def GetParamDimension(self, *args):
        """GetParamDimension(IParamBlock2 self, int subAnim) -> ParamDimension"""
        return _MaxPlus.IParamBlock2_GetParamDimension(self, *args)

    def RescaleParam(self, *args):
        """RescaleParam(IParamBlock2 self, int paramNum, int tabIndex, float f)"""
        return _MaxPlus.IParamBlock2_RescaleParam(self, *args)

    def SetSubAnimNum(self, *args):
        """
        SetSubAnimNum(IParamBlock2 self, ParamID id, int subAnimNum, int tabIndex=0)
        SetSubAnimNum(IParamBlock2 self, ParamID id, int subAnimNum)
        """
        return _MaxPlus.IParamBlock2_SetSubAnimNum(self, *args)

    def ClearSubAnimMap(self):
        """ClearSubAnimMap(IParamBlock2 self)"""
        return _MaxPlus.IParamBlock2_ClearSubAnimMap(self)

    def Assign(self, *args):
        """Assign(IParamBlock2 self, ParamID id, IParamBlock2 src, ParamID src_id)"""
        return _MaxPlus.IParamBlock2_Assign(self, *args)

    def FindRefParam(self, *args):
        """FindRefParam(IParamBlock2 self, ReferenceTarget ref, int & tabIndex) -> ParamID"""
        return _MaxPlus.IParamBlock2_FindRefParam(self, *args)

    def ResetAll(self, *args):
        """
        ResetAll(IParamBlock2 self, BOOL updateUI=TRUE, BOOL callSetHandlers=TRUE)
        ResetAll(IParamBlock2 self, BOOL updateUI=TRUE)
        ResetAll(IParamBlock2 self)
        """
        return _MaxPlus.IParamBlock2_ResetAll(self, *args)

    def Reset(self, *args):
        """
        Reset(IParamBlock2 self, ParamID id, int tabIndex=-1, BOOL updateUI=TRUE, BOOL callSetHandlers=TRUE)
        Reset(IParamBlock2 self, ParamID id, int tabIndex=-1, BOOL updateUI=TRUE)
        Reset(IParamBlock2 self, ParamID id, int tabIndex=-1)
        Reset(IParamBlock2 self, ParamID id)
        """
        return _MaxPlus.IParamBlock2_Reset(self, *args)

    __swig_destroy__ = _MaxPlus.delete_IParamBlock2
    __del__ = lambda self : None;
IParamBlock2_swigregister = _MaxPlus.IParamBlock2_swigregister
IParamBlock2_swigregister(IParamBlock2)

def IParamBlock2__CastFrom(*args):
  """IParamBlock2__CastFrom(InterfaceServer b) -> IParamBlock2"""
  return _MaxPlus.IParamBlock2__CastFrom(*args)

class RendType(object):
    """Represents the kind of rendering to be done."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Normal = _MaxPlus.RendType_Normal
    Region = _MaxPlus.RendType_Region
    BlowUp = _MaxPlus.RendType_BlowUp
    Select = _MaxPlus.RendType_Select
    RegionCrop = _MaxPlus.RendType_RegionCrop
    RegionSel = _MaxPlus.RendType_RegionSel
    CropSel = _MaxPlus.RendType_CropSel
    BakeSel = _MaxPlus.RendType_BakeSel
    BakeAll = _MaxPlus.RendType_BakeAll
    BakeSelCrop = _MaxPlus.RendType_BakeSelCrop
    BlowUpSel = _MaxPlus.RendType_BlowUpSel
    __swig_destroy__ = _MaxPlus.delete_RendType
    __del__ = lambda self : None;
RendType_swigregister = _MaxPlus.RendType_swigregister
RendType_swigregister(RendType)

class FrameRendParams(BaseInterfaceServer):
    """Parameters passed to the renderer on every frame."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> FrameRendParams"""
        return _MaxPlus.FrameRendParams__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(FrameRendParams self, Wrapper w) -> bool"""
        return _MaxPlus.FrameRendParams___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(FrameRendParams self, Wrapper w) -> bool"""
        return _MaxPlus.FrameRendParams___ne__(self, *args)

    def GetAmbient(self):
        """GetAmbient(FrameRendParams self) -> Color"""
        return _MaxPlus.FrameRendParams_GetAmbient(self)

    def GetBackground(self):
        """GetBackground(FrameRendParams self) -> Color"""
        return _MaxPlus.FrameRendParams_GetBackground(self)

    def GetGlobalLightLevel(self):
        """GetGlobalLightLevel(FrameRendParams self) -> Color"""
        return _MaxPlus.FrameRendParams_GetGlobalLightLevel(self)

    def GetFrameDuration(self):
        """GetFrameDuration(FrameRendParams self) -> float"""
        return _MaxPlus.FrameRendParams_GetFrameDuration(self)

    def GetRelSubFrameDuration(self):
        """GetRelSubFrameDuration(FrameRendParams self) -> float"""
        return _MaxPlus.FrameRendParams_GetRelSubFrameDuration(self)

    def GetRegxmin(self):
        """GetRegxmin(FrameRendParams self) -> int"""
        return _MaxPlus.FrameRendParams_GetRegxmin(self)

    def GetRegxmax(self):
        """GetRegxmax(FrameRendParams self) -> int"""
        return _MaxPlus.FrameRendParams_GetRegxmax(self)

    def GetRegymin(self):
        """GetRegymin(FrameRendParams self) -> int"""
        return _MaxPlus.FrameRendParams_GetRegymin(self)

    def GetRegymax(self):
        """GetRegymax(FrameRendParams self) -> int"""
        return _MaxPlus.FrameRendParams_GetRegymax(self)

    def GetBlowupCenter(self):
        """GetBlowupCenter(FrameRendParams self) -> Point2"""
        return _MaxPlus.FrameRendParams_GetBlowupCenter(self)

    def GetBlowupFactor(self):
        """GetBlowupFactor(FrameRendParams self) -> Point2"""
        return _MaxPlus.FrameRendParams_GetBlowupFactor(self)

    def SetAmbient(self, *args):
        """SetAmbient(FrameRendParams self, Color value)"""
        return _MaxPlus.FrameRendParams_SetAmbient(self, *args)

    def SetBackground(self, *args):
        """SetBackground(FrameRendParams self, Color value)"""
        return _MaxPlus.FrameRendParams_SetBackground(self, *args)

    def SetGlobalLightLevel(self, *args):
        """SetGlobalLightLevel(FrameRendParams self, Color value)"""
        return _MaxPlus.FrameRendParams_SetGlobalLightLevel(self, *args)

    def SetFrameDuration(self, *args):
        """SetFrameDuration(FrameRendParams self, float value)"""
        return _MaxPlus.FrameRendParams_SetFrameDuration(self, *args)

    def SetRelSubFrameDuration(self, *args):
        """SetRelSubFrameDuration(FrameRendParams self, float value)"""
        return _MaxPlus.FrameRendParams_SetRelSubFrameDuration(self, *args)

    def SetRegxmin(self, *args):
        """SetRegxmin(FrameRendParams self, int value)"""
        return _MaxPlus.FrameRendParams_SetRegxmin(self, *args)

    def SetRegxmax(self, *args):
        """SetRegxmax(FrameRendParams self, int value)"""
        return _MaxPlus.FrameRendParams_SetRegxmax(self, *args)

    def SetRegymin(self, *args):
        """SetRegymin(FrameRendParams self, int value)"""
        return _MaxPlus.FrameRendParams_SetRegymin(self, *args)

    def SetRegymax(self, *args):
        """SetRegymax(FrameRendParams self, int value)"""
        return _MaxPlus.FrameRendParams_SetRegymax(self, *args)

    def SetBlowupCenter(self, *args):
        """SetBlowupCenter(FrameRendParams self, Point2 value)"""
        return _MaxPlus.FrameRendParams_SetBlowupCenter(self, *args)

    def SetBlowupFactor(self, *args):
        """SetBlowupFactor(FrameRendParams self, Point2 value)"""
        return _MaxPlus.FrameRendParams_SetBlowupFactor(self, *args)

    __swig_destroy__ = _MaxPlus.delete_FrameRendParams
    __del__ = lambda self : None;
FrameRendParams_swigregister = _MaxPlus.FrameRendParams_swigregister
FrameRendParams_swigregister(FrameRendParams)

def FrameRendParams__CastFrom(*args):
  """FrameRendParams__CastFrom(InterfaceServer b) -> FrameRendParams"""
  return _MaxPlus.FrameRendParams__CastFrom(*args)

class ViewParams(BaseInterfaceServer):
    """The properties of a view that is being rendered."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ViewParams"""
        return _MaxPlus.ViewParams__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ViewParams self, Wrapper w) -> bool"""
        return _MaxPlus.ViewParams___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ViewParams self, Wrapper w) -> bool"""
        return _MaxPlus.ViewParams___ne__(self, *args)

    def GetPrevAffineTM(self):
        """GetPrevAffineTM(ViewParams self) -> Matrix3"""
        return _MaxPlus.ViewParams_GetPrevAffineTM(self)

    def GetAffineTM(self):
        """GetAffineTM(ViewParams self) -> Matrix3"""
        return _MaxPlus.ViewParams_GetAffineTM(self)

    def GetProjType(self):
        """GetProjType(ViewParams self) -> int"""
        return _MaxPlus.ViewParams_GetProjType(self)

    def GetHither(self):
        """GetHither(ViewParams self) -> float"""
        return _MaxPlus.ViewParams_GetHither(self)

    def GetYon(self):
        """GetYon(ViewParams self) -> float"""
        return _MaxPlus.ViewParams_GetYon(self)

    def GetDistance(self):
        """GetDistance(ViewParams self) -> float"""
        return _MaxPlus.ViewParams_GetDistance(self)

    def GetZoom(self):
        """GetZoom(ViewParams self) -> float"""
        return _MaxPlus.ViewParams_GetZoom(self)

    def GetFov(self):
        """GetFov(ViewParams self) -> float"""
        return _MaxPlus.ViewParams_GetFov(self)

    def GetNearRange(self):
        """GetNearRange(ViewParams self) -> float"""
        return _MaxPlus.ViewParams_GetNearRange(self)

    def GetFarRange(self):
        """GetFarRange(ViewParams self) -> float"""
        return _MaxPlus.ViewParams_GetFarRange(self)

    def SetPrevAffineTM(self, *args):
        """SetPrevAffineTM(ViewParams self, Matrix3 value)"""
        return _MaxPlus.ViewParams_SetPrevAffineTM(self, *args)

    def SetAffineTM(self, *args):
        """SetAffineTM(ViewParams self, Matrix3 value)"""
        return _MaxPlus.ViewParams_SetAffineTM(self, *args)

    def SetProjType(self, *args):
        """SetProjType(ViewParams self, int value)"""
        return _MaxPlus.ViewParams_SetProjType(self, *args)

    def SetHither(self, *args):
        """SetHither(ViewParams self, float value)"""
        return _MaxPlus.ViewParams_SetHither(self, *args)

    def SetYon(self, *args):
        """SetYon(ViewParams self, float value)"""
        return _MaxPlus.ViewParams_SetYon(self, *args)

    def SetDistance(self, *args):
        """SetDistance(ViewParams self, float value)"""
        return _MaxPlus.ViewParams_SetDistance(self, *args)

    def SetZoom(self, *args):
        """SetZoom(ViewParams self, float value)"""
        return _MaxPlus.ViewParams_SetZoom(self, *args)

    def SetFov(self, *args):
        """SetFov(ViewParams self, float value)"""
        return _MaxPlus.ViewParams_SetFov(self, *args)

    def SetNearRange(self, *args):
        """SetNearRange(ViewParams self, float value)"""
        return _MaxPlus.ViewParams_SetNearRange(self, *args)

    def SetFarRange(self, *args):
        """SetFarRange(ViewParams self, float value)"""
        return _MaxPlus.ViewParams_SetFarRange(self, *args)

    __swig_destroy__ = _MaxPlus.delete_ViewParams
    __del__ = lambda self : None;
ViewParams_swigregister = _MaxPlus.ViewParams_swigregister
ViewParams_swigregister(ViewParams)

def ViewParams__CastFrom(*args):
  """ViewParams__CastFrom(InterfaceServer b) -> ViewParams"""
  return _MaxPlus.ViewParams__CastFrom(*args)

class SpecialFX(ReferenceTarget):
    """Base class for plug-ins that have an effect on the render like atmospherics and anti-aliasing kernels."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> SpecialFX"""
        return _MaxPlus.SpecialFX__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(SpecialFX self, Wrapper w) -> bool"""
        return _MaxPlus.SpecialFX___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(SpecialFX self, Wrapper w) -> bool"""
        return _MaxPlus.SpecialFX___ne__(self, *args)

    def GetName(self):
        """GetName(SpecialFX self) -> WStr"""
        return _MaxPlus.SpecialFX_GetName(self)

    def Active(self, *args):
        """
        Active(SpecialFX self, TimeValue t=Autodesk::Max::Now()) -> bool
        Active(SpecialFX self) -> bool
        """
        return _MaxPlus.SpecialFX_Active(self, *args)

    def Update(self, *args):
        """
        Update(SpecialFX self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Forever())
        Update(SpecialFX self, TimeValue t=Autodesk::Max::Now())
        Update(SpecialFX self)
        """
        return _MaxPlus.SpecialFX_Update(self, *args)

    def GetNumGizmos(self):
        """GetNumGizmos(SpecialFX self) -> int"""
        return _MaxPlus.SpecialFX_GetNumGizmos(self)

    def GetGizmo(self, *args):
        """GetGizmo(SpecialFX self, int i) -> INode"""
        return _MaxPlus.SpecialFX_GetGizmo(self, *args)

    def DeleteGizmo(self, *args):
        """DeleteGizmo(SpecialFX self, int i)"""
        return _MaxPlus.SpecialFX_DeleteGizmo(self, *args)

    def AppendGizmo(self, *args):
        """AppendGizmo(SpecialFX self, INode node)"""
        return _MaxPlus.SpecialFX_AppendGizmo(self, *args)

    def OKGizmo(self, *args):
        """OKGizmo(SpecialFX self, INode node) -> bool"""
        return _MaxPlus.SpecialFX_OKGizmo(self, *args)

    def EditGizmo(self, *args):
        """EditGizmo(SpecialFX self, INode node)"""
        return _MaxPlus.SpecialFX_EditGizmo(self, *args)

    def InsertGizmo(self, *args):
        """InsertGizmo(SpecialFX self, int i, INode node)"""
        return _MaxPlus.SpecialFX_InsertGizmo(self, *args)

    def GetSpecialFXName(self):
        """GetSpecialFXName(SpecialFX self) -> WStr"""
        return _MaxPlus.SpecialFX_GetSpecialFXName(self)

    def SetSpecialFXName(self, *args):
        """SetSpecialFXName(SpecialFX self, WStr value)"""
        return _MaxPlus.SpecialFX_SetSpecialFXName(self, *args)

    __swig_destroy__ = _MaxPlus.delete_SpecialFX
    __del__ = lambda self : None;
SpecialFX_swigregister = _MaxPlus.SpecialFX_swigregister
SpecialFX_swigregister(SpecialFX)

def SpecialFX__CastFrom(*args):
  """SpecialFX__CastFrom(InterfaceServer b) -> SpecialFX"""
  return _MaxPlus.SpecialFX__CastFrom(*args)

class FilterKernel(SpecialFX):
    """Anti-aliasing filter rendering effect."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> FilterKernel"""
        return _MaxPlus.FilterKernel__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(FilterKernel self, Wrapper w) -> bool"""
        return _MaxPlus.FilterKernel___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(FilterKernel self, Wrapper w) -> bool"""
        return _MaxPlus.FilterKernel___ne__(self, *args)

    def GetKernelSupport(self):
        """GetKernelSupport(FilterKernel self) -> long"""
        return _MaxPlus.FilterKernel_GetKernelSupport(self)

    def GetKernelSupportY(self):
        """GetKernelSupportY(FilterKernel self) -> long"""
        return _MaxPlus.FilterKernel_GetKernelSupportY(self)

    def Is2DKernel(self):
        """Is2DKernel(FilterKernel self) -> bool"""
        return _MaxPlus.FilterKernel_Is2DKernel(self)

    def IsVariableSz(self):
        """IsVariableSz(FilterKernel self) -> bool"""
        return _MaxPlus.FilterKernel_IsVariableSz(self)

    def SetKernelSz(self, *args):
        """
        SetKernelSz(FilterKernel self, double x, double y=0.0)
        SetKernelSz(FilterKernel self, double x)
        """
        return _MaxPlus.FilterKernel_SetKernelSz(self, *args)

    def GetKernelSzX(self):
        """GetKernelSzX(FilterKernel self) -> double"""
        return _MaxPlus.FilterKernel_GetKernelSzX(self)

    def GetKernelSzY(self):
        """GetKernelSzY(FilterKernel self) -> double"""
        return _MaxPlus.FilterKernel_GetKernelSzY(self)

    def IsNormalized(self):
        """IsNormalized(FilterKernel self) -> bool"""
        return _MaxPlus.FilterKernel_IsNormalized(self)

    def HasNegativeLobes(self):
        """HasNegativeLobes(FilterKernel self) -> bool"""
        return _MaxPlus.FilterKernel_HasNegativeLobes(self)

    def GetDefaultComment(self):
        """GetDefaultComment(FilterKernel self) -> wchar_t const *"""
        return _MaxPlus.FilterKernel_GetDefaultComment(self)

    def GetNumFilterParams(self):
        """GetNumFilterParams(FilterKernel self) -> long"""
        return _MaxPlus.FilterKernel_GetNumFilterParams(self)

    def GetFilterParamName(self, *args):
        """GetFilterParamName(FilterKernel self, long nParam) -> wchar_t const *"""
        return _MaxPlus.FilterKernel_GetFilterParamName(self, *args)

    def GetFilterParamMax(self, *args):
        """GetFilterParamMax(FilterKernel self, long nParam) -> double"""
        return _MaxPlus.FilterKernel_GetFilterParamMax(self, *args)

    def GetFilterParam(self, *args):
        """GetFilterParam(FilterKernel self, long nParam) -> double"""
        return _MaxPlus.FilterKernel_GetFilterParam(self, *args)

    def SetFilterParam(self, *args):
        """SetFilterParam(FilterKernel self, long nParam, double val)"""
        return _MaxPlus.FilterKernel_SetFilterParam(self, *args)

    __swig_destroy__ = _MaxPlus.delete_FilterKernel
    __del__ = lambda self : None;
FilterKernel_swigregister = _MaxPlus.FilterKernel_swigregister
FilterKernel_swigregister(FilterKernel)

def FilterKernel__CastFrom(*args):
  """FilterKernel__CastFrom(InterfaceServer b) -> FilterKernel"""
  return _MaxPlus.FilterKernel__CastFrom(*args)

class Effect(SpecialFX):
    """Base class of rendering effect plug-ins. These plug-in are added in sequence after a rendering is complete without the use of Video Post."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Effect"""
        return _MaxPlus.Effect__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Effect self, Wrapper w) -> bool"""
        return _MaxPlus.Effect___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Effect self, Wrapper w) -> bool"""
        return _MaxPlus.Effect___ne__(self, *args)

    def GBufferChannelsRequired(self, *args):
        """GBufferChannelsRequired(Effect self, TimeValue t) -> DWORD"""
        return _MaxPlus.Effect_GBufferChannelsRequired(self, *args)

    __swig_destroy__ = _MaxPlus.delete_Effect
    __del__ = lambda self : None;
Effect_swigregister = _MaxPlus.Effect_swigregister
Effect_swigregister(Effect)

def Effect__CastFrom(*args):
  """Effect__CastFrom(InterfaceServer b) -> Effect"""
  return _MaxPlus.Effect__CastFrom(*args)

class Atmospheric(SpecialFX):
    """Atmospheric effect plug-in."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Atmospheric"""
        return _MaxPlus.Atmospheric__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Atmospheric self, Wrapper w) -> bool"""
        return _MaxPlus.Atmospheric___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Atmospheric self, Wrapper w) -> bool"""
        return _MaxPlus.Atmospheric___ne__(self, *args)

    __swig_destroy__ = _MaxPlus.delete_Atmospheric
    __del__ = lambda self : None;
Atmospheric_swigregister = _MaxPlus.Atmospheric_swigregister
Atmospheric_swigregister(Atmospheric)

def Atmospheric__CastFrom(*args):
  """Atmospheric__CastFrom(InterfaceServer b) -> Atmospheric"""
  return _MaxPlus.Atmospheric__CastFrom(*args)

class RadiosityEffect(SpecialFX):
    """Behaves as a light in the scene. These plug-ins are controlled through the Advanced Lighting dialog from the render menu."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> RadiosityEffect"""
        return _MaxPlus.RadiosityEffect__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(RadiosityEffect self, Wrapper w) -> bool"""
        return _MaxPlus.RadiosityEffect___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(RadiosityEffect self, Wrapper w) -> bool"""
        return _MaxPlus.RadiosityEffect___ne__(self, *args)

    def SetActive(self, *args):
        """SetActive(RadiosityEffect self, bool active, TimeValue t)"""
        return _MaxPlus.RadiosityEffect_SetActive(self, *args)

    def UseLight(self, *args):
        """
        UseLight(RadiosityEffect self, INode node, bool recalcSolution=False) -> bool
        UseLight(RadiosityEffect self, INode node) -> bool
        """
        return _MaxPlus.RadiosityEffect_UseLight(self, *args)

    __swig_destroy__ = _MaxPlus.delete_RadiosityEffect
    __del__ = lambda self : None;
RadiosityEffect_swigregister = _MaxPlus.RadiosityEffect_swigregister
RadiosityEffect_swigregister(RadiosityEffect)

def RadiosityEffect__CastFrom(*args):
  """RadiosityEffect__CastFrom(InterfaceServer b) -> RadiosityEffect"""
  return _MaxPlus.RadiosityEffect__CastFrom(*args)

class ToneOperator(SpecialFX):
    """Converts physically based values to RGB for filtering and display. The renderer calls the tone operator immediately after Mtl::Shade is called. A tone operator also balances physical and non-physical lighting by providing a scale relationship between them."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ToneOperator"""
        return _MaxPlus.ToneOperator__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ToneOperator self, Wrapper w) -> bool"""
        return _MaxPlus.ToneOperator___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ToneOperator self, Wrapper w) -> bool"""
        return _MaxPlus.ToneOperator___ne__(self, *args)

    def GetActive(self, *args):
        """GetActive(ToneOperator self, TimeValue t) -> bool"""
        return _MaxPlus.ToneOperator_GetActive(self, *args)

    def SetActive(self, *args):
        """SetActive(ToneOperator self, bool active, TimeValue t)"""
        return _MaxPlus.ToneOperator_SetActive(self, *args)

    def GetProcessBackground(self):
        """GetProcessBackground(ToneOperator self) -> bool"""
        return _MaxPlus.ToneOperator_GetProcessBackground(self)

    def SetProcessBackground(self, *args):
        """SetProcessBackground(ToneOperator self, bool active)"""
        return _MaxPlus.ToneOperator_SetProcessBackground(self, *args)

    def GetIndirectOnly(self):
        """GetIndirectOnly(ToneOperator self) -> bool"""
        return _MaxPlus.ToneOperator_GetIndirectOnly(self)

    def SetIndirectOnly(self, *args):
        """SetIndirectOnly(ToneOperator self, bool active)"""
        return _MaxPlus.ToneOperator_SetIndirectOnly(self, *args)

    def IsPhysicalSpace(self):
        """IsPhysicalSpace(ToneOperator self) -> bool"""
        return _MaxPlus.ToneOperator_IsPhysicalSpace(self)

    def Update(self, *args):
        """
        Update(ToneOperator self, Interval valid, TimeValue t=Autodesk::Max::Now())
        Update(ToneOperator self, Interval valid)
        """
        return _MaxPlus.ToneOperator_Update(self, *args)

    def ScaledToRGB(self, *args):
        """ScaledToRGB(ToneOperator self, float energy) -> float"""
        return _MaxPlus.ToneOperator_ScaledToRGB(self, *args)

    def GetPhysicalUnit(self, *args):
        """
        GetPhysicalUnit(ToneOperator self, TimeValue t, Interval valid=Autodesk::Max::Interval(0, 0)) -> float
        GetPhysicalUnit(ToneOperator self, TimeValue t) -> float
        """
        return _MaxPlus.ToneOperator_GetPhysicalUnit(self, *args)

    def SetPhysicalUnit(self, *args):
        """SetPhysicalUnit(ToneOperator self, float value, TimeValue t)"""
        return _MaxPlus.ToneOperator_SetPhysicalUnit(self, *args)

    def ScalePhysical(self, *args):
        """ScalePhysical(ToneOperator self, float energy) -> float"""
        return _MaxPlus.ToneOperator_ScalePhysical(self, *args)

    def ScaleRGB(self, *args):
        """ScaleRGB(ToneOperator self, float color) -> float"""
        return _MaxPlus.ToneOperator_ScaleRGB(self, *args)

    def CanInvert(self):
        """CanInvert(ToneOperator self) -> bool"""
        return _MaxPlus.ToneOperator_CanInvert(self)

    def RGBToScaled(self, *args):
        """RGBToScaled(ToneOperator self, float energy) -> float"""
        return _MaxPlus.ToneOperator_RGBToScaled(self, *args)

    __swig_destroy__ = _MaxPlus.delete_ToneOperator
    __del__ = lambda self : None;
ToneOperator_swigregister = _MaxPlus.ToneOperator_swigregister
ToneOperator_swigregister(ToneOperator)

def ToneOperator__CastFrom(*args):
  """ToneOperator__CastFrom(InterfaceServer b) -> ToneOperator"""
  return _MaxPlus.ToneOperator__CastFrom(*args)

class RenderElement(SpecialFX):
    """Render Element plug-in."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> RenderElement"""
        return _MaxPlus.RenderElement__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(RenderElement self, Wrapper w) -> bool"""
        return _MaxPlus.RenderElement___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(RenderElement self, Wrapper w) -> bool"""
        return _MaxPlus.RenderElement___ne__(self, *args)

    def SetEnabled(self, *args):
        """SetEnabled(RenderElement self, bool enabled)"""
        return _MaxPlus.RenderElement_SetEnabled(self, *args)

    def IsEnabled(self):
        """IsEnabled(RenderElement self) -> bool"""
        return _MaxPlus.RenderElement_IsEnabled(self)

    def SetFilterEnabled(self, *args):
        """SetFilterEnabled(RenderElement self, bool filterEnabled)"""
        return _MaxPlus.RenderElement_SetFilterEnabled(self, *args)

    def IsFilterEnabled(self):
        """IsFilterEnabled(RenderElement self) -> bool"""
        return _MaxPlus.RenderElement_IsFilterEnabled(self)

    def BlendOnMultipass(self):
        """BlendOnMultipass(RenderElement self) -> bool"""
        return _MaxPlus.RenderElement_BlendOnMultipass(self)

    def AtmosphereApplied(self):
        """AtmosphereApplied(RenderElement self) -> bool"""
        return _MaxPlus.RenderElement_AtmosphereApplied(self)

    def ShadowsApplied(self):
        """ShadowsApplied(RenderElement self) -> bool"""
        return _MaxPlus.RenderElement_ShadowsApplied(self)

    def SetElementName(self, *args):
        """SetElementName(RenderElement self, wchar_t const * newName)"""
        return _MaxPlus.RenderElement_SetElementName(self, *args)

    def GetElementName(self):
        """GetElementName(RenderElement self) -> wchar_t const *"""
        return _MaxPlus.RenderElement_GetElementName(self)

    def SetPBBitmap(self, *args):
        """SetPBBitmap(RenderElement self, PBBitmap v)"""
        return _MaxPlus.RenderElement_SetPBBitmap(self, *args)

    def GetPBBitmap(self):
        """GetPBBitmap(RenderElement self) -> PBBitmap"""
        return _MaxPlus.RenderElement_GetPBBitmap(self)

    Enabled = _swig_property(IsEnabled, SetEnabled)
    FilterEnabled = _swig_property(IsFilterEnabled, SetFilterEnabled)
    ElementName = _swig_property(GetElementName, SetElementName)
    PBBitmap = _swig_property(GetPBBitmap, SetPBBitmap)

    __swig_destroy__ = _MaxPlus.delete_RenderElement
    __del__ = lambda self : None;
RenderElement_swigregister = _MaxPlus.RenderElement_swigregister
RenderElement_swigregister(RenderElement)

def RenderElement__CastFrom(*args):
  """RenderElement__CastFrom(InterfaceServer b) -> RenderElement"""
  return _MaxPlus.RenderElement__CastFrom(*args)

class RenderElementMgr(FPInterface):
    """The interface for the Render Element Manager."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> RenderElementMgr"""
        return _MaxPlus.RenderElementMgr__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(RenderElementMgr self, Wrapper w) -> bool"""
        return _MaxPlus.RenderElementMgr___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(RenderElementMgr self, Wrapper w) -> bool"""
        return _MaxPlus.RenderElementMgr___ne__(self, *args)

    def AddRenderElement(self, *args):
        """AddRenderElement(RenderElementMgr self, RenderElement pRenderElement) -> bool"""
        return _MaxPlus.RenderElementMgr_AddRenderElement(self, *args)

    def RemoveRenderElement(self, *args):
        """RemoveRenderElement(RenderElementMgr self, RenderElement pRenderElement) -> bool"""
        return _MaxPlus.RenderElementMgr_RemoveRenderElement(self, *args)

    def RemoveAllRenderElements(self):
        """RemoveAllRenderElements(RenderElementMgr self)"""
        return _MaxPlus.RenderElementMgr_RemoveAllRenderElements(self)

    def NumRenderElements(self):
        """NumRenderElements(RenderElementMgr self) -> int"""
        return _MaxPlus.RenderElementMgr_NumRenderElements(self)

    def GetRenderElement(self, *args):
        """GetRenderElement(RenderElementMgr self, int index) -> RenderElement"""
        return _MaxPlus.RenderElementMgr_GetRenderElement(self, *args)

    def SetElementsActive(self, *args):
        """SetElementsActive(RenderElementMgr self, bool elementsActive)"""
        return _MaxPlus.RenderElementMgr_SetElementsActive(self, *args)

    def GetElementsActive(self):
        """GetElementsActive(RenderElementMgr self) -> bool"""
        return _MaxPlus.RenderElementMgr_GetElementsActive(self)

    def SetDisplayElements(self, *args):
        """SetDisplayElements(RenderElementMgr self, bool displayElements)"""
        return _MaxPlus.RenderElementMgr_SetDisplayElements(self, *args)

    def GetDisplayElements(self):
        """GetDisplayElements(RenderElementMgr self) -> bool"""
        return _MaxPlus.RenderElementMgr_GetDisplayElements(self)

    def SetCombustionOutputEnabled(self, *args):
        """SetCombustionOutputEnabled(RenderElementMgr self, bool combustionOutEnabled)"""
        return _MaxPlus.RenderElementMgr_SetCombustionOutputEnabled(self, *args)

    def GetCombustionOutputEnabled(self):
        """GetCombustionOutputEnabled(RenderElementMgr self) -> bool"""
        return _MaxPlus.RenderElementMgr_GetCombustionOutputEnabled(self)

    def SetCombustionOutput(self, *args):
        """SetCombustionOutput(RenderElementMgr self, MaxSDK::AssetManagement::AssetUser const & combustionOutputPath)"""
        return _MaxPlus.RenderElementMgr_SetCombustionOutput(self, *args)

    def GetCombustionOutput(self):
        """GetCombustionOutput(RenderElementMgr self) -> MaxSDK::AssetManagement::AssetUser const &"""
        return _MaxPlus.RenderElementMgr_GetCombustionOutput(self)

    def __len__(self):
        """__len__(RenderElementMgr self) -> int"""
        return _MaxPlus.RenderElementMgr___len__(self)

    def __getitem__(self, *args):
        """__getitem__(RenderElementMgr self, int i) -> RenderElement"""
        return _MaxPlus.RenderElementMgr___getitem__(self, *args)

    ElementsActive = _swig_property(GetElementsActive, SetElementsActive)
    DisplayElements = _swig_property(GetDisplayElements, SetDisplayElements)
    CombustionOutputEnabled = _swig_property(GetCombustionOutputEnabled, SetCombustionOutputEnabled)

    CombustionOutput = _swig_property(GetCombustionOutput, SetCombustionOutput)

    RenderElements = _swig_property(lambda self: (self.GetRenderElement(i) for i in xrange(self.NumRenderElements())))

    __swig_destroy__ = _MaxPlus.delete_RenderElementMgr
    __del__ = lambda self : None;
RenderElementMgr_swigregister = _MaxPlus.RenderElementMgr_swigregister
RenderElementMgr_swigregister(RenderElementMgr)

def RenderElementMgr__CastFrom(*args):
  """RenderElementMgr__CastFrom(InterfaceServer b) -> RenderElementMgr"""
  return _MaxPlus.RenderElementMgr__CastFrom(*args)

class Renderer(ReferenceTarget):
    """The base class of renderer plugins."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Renderer"""
        return _MaxPlus.Renderer__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Renderer self, Wrapper w) -> bool"""
        return _MaxPlus.Renderer___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Renderer self, Wrapper w) -> bool"""
        return _MaxPlus.Renderer___ne__(self, *args)

    def ApplyRenderEffects(self, *args):
        """
        ApplyRenderEffects(Renderer self, Bitmap pBitmap, TimeValue t=Autodesk::Max::Now(), bool updateDisplay=True) -> bool
        ApplyRenderEffects(Renderer self, Bitmap pBitmap, TimeValue t=Autodesk::Max::Now()) -> bool
        ApplyRenderEffects(Renderer self, Bitmap pBitmap) -> bool
        """
        return _MaxPlus.Renderer_ApplyRenderEffects(self, *args)

    def ResetParams(self):
        """ResetParams(Renderer self)"""
        return _MaxPlus.Renderer_ResetParams(self)

    def GetAAFilterSupport(self):
        """GetAAFilterSupport(Renderer self) -> int"""
        return _MaxPlus.Renderer_GetAAFilterSupport(self)

    def DoesSupportTexureBaking(self):
        """DoesSupportTexureBaking(Renderer self) -> bool"""
        return _MaxPlus.Renderer_DoesSupportTexureBaking(self)

    def DoesSupportCustomRenderPresets(self):
        """DoesSupportCustomRenderPresets(Renderer self) -> bool"""
        return _MaxPlus.Renderer_DoesSupportCustomRenderPresets(self)

    def GetRenderPresetsFileVersion(self):
        """GetRenderPresetsFileVersion(Renderer self) -> int"""
        return _MaxPlus.Renderer_GetRenderPresetsFileVersion(self)

    def GetRenderPresetsIsCompatible(self, *args):
        """GetRenderPresetsIsCompatible(Renderer self, int version) -> bool"""
        return _MaxPlus.Renderer_GetRenderPresetsIsCompatible(self, *args)

    def RenderPresetsMapIndexToCategory(self, *args):
        """RenderPresetsMapIndexToCategory(Renderer self, int catIndex) -> wchar_t const *"""
        return _MaxPlus.Renderer_RenderPresetsMapIndexToCategory(self, *args)

    def RenderPresetsMapCategoryToIndex(self, *args):
        """RenderPresetsMapCategoryToIndex(Renderer self, wchar_t const * category) -> int"""
        return _MaxPlus.Renderer_RenderPresetsMapCategoryToIndex(self, *args)

    __swig_destroy__ = _MaxPlus.delete_Renderer
    __del__ = lambda self : None;
Renderer_swigregister = _MaxPlus.Renderer_swigregister
Renderer_swigregister(Renderer)

def Renderer__CastFrom(*args):
  """Renderer__CastFrom(InterfaceServer b) -> Renderer"""
  return _MaxPlus.Renderer__CastFrom(*args)

class IScanRenderer(Renderer):
    """The standard 3ds Max scanline renderer."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> IScanRenderer"""
        return _MaxPlus.IScanRenderer__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(IScanRenderer self, Wrapper w) -> bool"""
        return _MaxPlus.IScanRenderer___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(IScanRenderer self, Wrapper w) -> bool"""
        return _MaxPlus.IScanRenderer___ne__(self, *args)

    def SetAntialias(self, *args):
        """SetAntialias(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetAntialias(self, *args)

    def GetAntialias(self):
        """GetAntialias(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetAntialias(self)

    def SetFilter(self, *args):
        """SetFilter(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetFilter(self, *args)

    def GetFilter(self):
        """GetFilter(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetFilter(self)

    def SetShadows(self, *args):
        """SetShadows(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetShadows(self, *args)

    def GetShadows(self):
        """GetShadows(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetShadows(self)

    def SetMapping(self, *args):
        """SetMapping(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetMapping(self, *args)

    def GetMapping(self):
        """GetMapping(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetMapping(self)

    def SetForceWire(self, *args):
        """SetForceWire(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetForceWire(self, *args)

    def GetForceWire(self):
        """GetForceWire(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetForceWire(self)

    def SetAutoReflect(self, *args):
        """SetAutoReflect(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetAutoReflect(self, *args)

    def GetAutoReflect(self):
        """GetAutoReflect(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetAutoReflect(self)

    def SetObjMotBlur(self, *args):
        """SetObjMotBlur(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetObjMotBlur(self, *args)

    def GetObjMotBlur(self):
        """GetObjMotBlur(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetObjMotBlur(self)

    def SetVelMotBlur(self, *args):
        """SetVelMotBlur(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetVelMotBlur(self, *args)

    def GetVelMotBlur(self):
        """GetVelMotBlur(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetVelMotBlur(self)

    def SetPixelSize(self, *args):
        """SetPixelSize(IScanRenderer self, float size)"""
        return _MaxPlus.IScanRenderer_SetPixelSize(self, *args)

    def SetAutoReflLevels(self, *args):
        """SetAutoReflLevels(IScanRenderer self, int n)"""
        return _MaxPlus.IScanRenderer_SetAutoReflLevels(self, *args)

    def SetWireThickness(self, *args):
        """SetWireThickness(IScanRenderer self, float t)"""
        return _MaxPlus.IScanRenderer_SetWireThickness(self, *args)

    def SetObjBlurDuration(self, *args):
        """SetObjBlurDuration(IScanRenderer self, float dur)"""
        return _MaxPlus.IScanRenderer_SetObjBlurDuration(self, *args)

    def SetVelBlurDuration(self, *args):
        """SetVelBlurDuration(IScanRenderer self, float dur)"""
        return _MaxPlus.IScanRenderer_SetVelBlurDuration(self, *args)

    def SetNBlurFrames(self, *args):
        """SetNBlurFrames(IScanRenderer self, int n)"""
        return _MaxPlus.IScanRenderer_SetNBlurFrames(self, *args)

    def SetNBlurSamples(self, *args):
        """SetNBlurSamples(IScanRenderer self, int n)"""
        return _MaxPlus.IScanRenderer_SetNBlurSamples(self, *args)

    def SetMaxRayDepth(self, *args):
        """SetMaxRayDepth(IScanRenderer self, int n)"""
        return _MaxPlus.IScanRenderer_SetMaxRayDepth(self, *args)

    def GetMaxRayDepth(self):
        """GetMaxRayDepth(IScanRenderer self) -> int"""
        return _MaxPlus.IScanRenderer_GetMaxRayDepth(self)

    def SetAntiAliasFilter(self, *args):
        """SetAntiAliasFilter(IScanRenderer self, FilterKernel pKernel)"""
        return _MaxPlus.IScanRenderer_SetAntiAliasFilter(self, *args)

    def GetAntiAliasFilter(self):
        """GetAntiAliasFilter(IScanRenderer self) -> FilterKernel"""
        return _MaxPlus.IScanRenderer_GetAntiAliasFilter(self)

    def SetAntiAliasFilterSz(self, *args):
        """SetAntiAliasFilterSz(IScanRenderer self, float size)"""
        return _MaxPlus.IScanRenderer_SetAntiAliasFilterSz(self, *args)

    def GetAntiAliasFilterSz(self):
        """GetAntiAliasFilterSz(IScanRenderer self) -> float"""
        return _MaxPlus.IScanRenderer_GetAntiAliasFilterSz(self)

    def SetPixelSamplerEnable(self, *args):
        """SetPixelSamplerEnable(IScanRenderer self, bool on)"""
        return _MaxPlus.IScanRenderer_SetPixelSamplerEnable(self, *args)

    def GetPixelSamplerEnable(self):
        """GetPixelSamplerEnable(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetPixelSamplerEnable(self)

    def SetAntiAliasFilterRT(self, *args):
        """SetAntiAliasFilterRT(IScanRenderer self, ReferenceTarget op)"""
        return _MaxPlus.IScanRenderer_SetAntiAliasFilterRT(self, *args)

    def GetWireThickness(self):
        """GetWireThickness(IScanRenderer self) -> float"""
        return _MaxPlus.IScanRenderer_GetWireThickness(self)

    def SetColorClampType(self, *args):
        """SetColorClampType(IScanRenderer self, int i)"""
        return _MaxPlus.IScanRenderer_SetColorClampType(self, *args)

    def GetColorClampType(self):
        """GetColorClampType(IScanRenderer self) -> int"""
        return _MaxPlus.IScanRenderer_GetColorClampType(self)

    def GetObjBlurDuration(self):
        """GetObjBlurDuration(IScanRenderer self) -> float"""
        return _MaxPlus.IScanRenderer_GetObjBlurDuration(self)

    def GetNBlurSamples(self):
        """GetNBlurSamples(IScanRenderer self) -> int"""
        return _MaxPlus.IScanRenderer_GetNBlurSamples(self)

    def GetNBlurFrames(self):
        """GetNBlurFrames(IScanRenderer self) -> int"""
        return _MaxPlus.IScanRenderer_GetNBlurFrames(self)

    def GetVelBlurDuration(self):
        """GetVelBlurDuration(IScanRenderer self) -> float"""
        return _MaxPlus.IScanRenderer_GetVelBlurDuration(self)

    def SetApplyVelBlurEnv(self, *args):
        """SetApplyVelBlurEnv(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetApplyVelBlurEnv(self, *args)

    def GetApplyVelBlurEnv(self):
        """GetApplyVelBlurEnv(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetApplyVelBlurEnv(self)

    def SetVelBlurTrans(self, *args):
        """SetVelBlurTrans(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetVelBlurTrans(self, *args)

    def GetVelBlurTrans(self):
        """GetVelBlurTrans(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetVelBlurTrans(self)

    def GetAutoReflLevels(self):
        """GetAutoReflLevels(IScanRenderer self) -> int"""
        return _MaxPlus.IScanRenderer_GetAutoReflLevels(self)

    def SetMemFrugal(self, *args):
        """SetMemFrugal(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetMemFrugal(self, *args)

    def GetMemFrugal(self):
        """GetMemFrugal(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetMemFrugal(self)

    def SetEnableSSE(self, *args):
        """SetEnableSSE(IScanRenderer self, bool b)"""
        return _MaxPlus.IScanRenderer_SetEnableSSE(self, *args)

    def IsSSEEnabled(self):
        """IsSSEEnabled(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_IsSSEEnabled(self)

    def GetGlobalSamplerEnabled(self):
        """GetGlobalSamplerEnabled(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetGlobalSamplerEnabled(self)

    def SetGlobalSamplerEnabled(self, *args):
        """SetGlobalSamplerEnabled(IScanRenderer self, bool enable)"""
        return _MaxPlus.IScanRenderer_SetGlobalSamplerEnabled(self, *args)

    def GetGlobalSamplerClassByName(self):
        """GetGlobalSamplerClassByName(IScanRenderer self) -> WStr"""
        return _MaxPlus.IScanRenderer_GetGlobalSamplerClassByName(self)

    def SetGlobalSamplerClassByName(self, *args):
        """SetGlobalSamplerClassByName(IScanRenderer self, WStr name)"""
        return _MaxPlus.IScanRenderer_SetGlobalSamplerClassByName(self, *args)

    def GetGlobalSamplerSampleMaps(self):
        """GetGlobalSamplerSampleMaps(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetGlobalSamplerSampleMaps(self)

    def SetGlobalSamplerSampleMaps(self, *args):
        """SetGlobalSamplerSampleMaps(IScanRenderer self, bool enable)"""
        return _MaxPlus.IScanRenderer_SetGlobalSamplerSampleMaps(self, *args)

    def GetGlobalSamplerQuality(self):
        """GetGlobalSamplerQuality(IScanRenderer self) -> float"""
        return _MaxPlus.IScanRenderer_GetGlobalSamplerQuality(self)

    def SetGlobalSamplerQuality(self, *args):
        """SetGlobalSamplerQuality(IScanRenderer self, float f)"""
        return _MaxPlus.IScanRenderer_SetGlobalSamplerQuality(self, *args)

    def GetGlobalSamplerAdaptive(self):
        """GetGlobalSamplerAdaptive(IScanRenderer self) -> bool"""
        return _MaxPlus.IScanRenderer_GetGlobalSamplerAdaptive(self)

    def SetGlobalSamplerAdaptive(self, *args):
        """SetGlobalSamplerAdaptive(IScanRenderer self, bool enable)"""
        return _MaxPlus.IScanRenderer_SetGlobalSamplerAdaptive(self, *args)

    def GetGlobalSamplerAdaptiveThresh(self):
        """GetGlobalSamplerAdaptiveThresh(IScanRenderer self) -> float"""
        return _MaxPlus.IScanRenderer_GetGlobalSamplerAdaptiveThresh(self)

    def SetGlobalSamplerAdaptiveThresh(self, *args):
        """SetGlobalSamplerAdaptiveThresh(IScanRenderer self, float f)"""
        return _MaxPlus.IScanRenderer_SetGlobalSamplerAdaptiveThresh(self, *args)

    def GetGlobalSamplerParam1(self):
        """GetGlobalSamplerParam1(IScanRenderer self) -> float"""
        return _MaxPlus.IScanRenderer_GetGlobalSamplerParam1(self)

    def SetGlobalSamplerParam1(self, *args):
        """SetGlobalSamplerParam1(IScanRenderer self, float f)"""
        return _MaxPlus.IScanRenderer_SetGlobalSamplerParam1(self, *args)

    def GetGlobalSamplerParam2(self):
        """GetGlobalSamplerParam2(IScanRenderer self) -> float"""
        return _MaxPlus.IScanRenderer_GetGlobalSamplerParam2(self)

    def SetGlobalSamplerParam2(self, *args):
        """SetGlobalSamplerParam2(IScanRenderer self, float f)"""
        return _MaxPlus.IScanRenderer_SetGlobalSamplerParam2(self, *args)

    __swig_destroy__ = _MaxPlus.delete_IScanRenderer
    __del__ = lambda self : None;
IScanRenderer_swigregister = _MaxPlus.IScanRenderer_swigregister
IScanRenderer_swigregister(IScanRenderer)

def IScanRenderer__CastFrom(*args):
  """IScanRenderer__CastFrom(InterfaceServer b) -> IScanRenderer"""
  return _MaxPlus.IScanRenderer__CastFrom(*args)

class RendParams(Wrapper):
    """Parameters that are passed to the renderer when the renderer is opened."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    RM_Default = _MaxPlus.RendParams_RM_Default
    RM_IReshade = _MaxPlus.RendParams_RM_IReshade
    kCommand_IsToneOpPreview = _MaxPlus.RendParams_kCommand_IsToneOpPreview
    def __init__(self): 
        """__init__(Autodesk::Max::RendParams self) -> RendParams"""
        this = _MaxPlus.new_RendParams()
        try: self.this.append(this)
        except: self.this = this
    def IsToneOperatorPreviewRender(self):
        """IsToneOperatorPreviewRender(RendParams self) -> bool"""
        return _MaxPlus.RendParams_IsToneOperatorPreviewRender(self)

    def GetRendType(self):
        """GetRendType(RendParams self) -> Autodesk::Max::RendType::Type"""
        return _MaxPlus.RendParams_GetRendType(self)

    def GetIsNetRender(self):
        """GetIsNetRender(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetIsNetRender(self)

    def GetFieldRender(self):
        """GetFieldRender(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetFieldRender(self)

    def GetFieldOrder(self):
        """GetFieldOrder(RendParams self) -> int"""
        return _MaxPlus.RendParams_GetFieldOrder(self)

    def GetFrameDur(self):
        """GetFrameDur(RendParams self) -> TimeValue"""
        return _MaxPlus.RendParams_GetFrameDur(self)

    def GetColorCheck(self):
        """GetColorCheck(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetColorCheck(self)

    def GetVidCorrectMethod(self):
        """GetVidCorrectMethod(RendParams self) -> int"""
        return _MaxPlus.RendParams_GetVidCorrectMethod(self)

    def GetNtscPAL(self):
        """GetNtscPAL(RendParams self) -> int"""
        return _MaxPlus.RendParams_GetNtscPAL(self)

    def GetSuperBlack(self):
        """GetSuperBlack(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetSuperBlack(self)

    def GetSbThresh(self):
        """GetSbThresh(RendParams self) -> int"""
        return _MaxPlus.RendParams_GetSbThresh(self)

    def GetRendHidden(self):
        """GetRendHidden(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetRendHidden(self)

    def GetForce2Side(self):
        """GetForce2Side(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetForce2Side(self)

    def GetInMtlEdit(self):
        """GetInMtlEdit(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetInMtlEdit(self)

    def GetMtlEditTile(self):
        """GetMtlEditTile(RendParams self) -> float"""
        return _MaxPlus.RendParams_GetMtlEditTile(self)

    def GetMtlEditAA(self):
        """GetMtlEditAA(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetMtlEditAA(self)

    def GetMultiThread(self):
        """GetMultiThread(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetMultiThread(self)

    def GetUseEnvironAlpha(self):
        """GetUseEnvironAlpha(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetUseEnvironAlpha(self)

    def GetDontAntialiasBG(self):
        """GetDontAntialiasBG(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetDontAntialiasBG(self)

    def GetUseDisplacement(self):
        """GetUseDisplacement(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetUseDisplacement(self)

    def GetUseRadiosity(self):
        """GetUseRadiosity(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetUseRadiosity(self)

    def GetComputeRadiosity(self):
        """GetComputeRadiosity(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetComputeRadiosity(self)

    def GetEnvMap(self):
        """GetEnvMap(RendParams self) -> Texmap"""
        return _MaxPlus.RendParams_GetEnvMap(self)

    def GetAtmos(self):
        """GetAtmos(RendParams self) -> Atmospheric"""
        return _MaxPlus.RendParams_GetAtmos(self)

    def GetEffect(self):
        """GetEffect(RendParams self) -> Effect"""
        return _MaxPlus.RendParams_GetEffect(self)

    def GetPRadiosity(self):
        """GetPRadiosity(RendParams self) -> RadiosityEffect"""
        return _MaxPlus.RendParams_GetPRadiosity(self)

    def GetPToneOp(self):
        """GetPToneOp(RendParams self) -> ToneOperator"""
        return _MaxPlus.RendParams_GetPToneOp(self)

    def GetFirstFrame(self):
        """GetFirstFrame(RendParams self) -> TimeValue"""
        return _MaxPlus.RendParams_GetFirstFrame(self)

    def GetScanBandHeight(self):
        """GetScanBandHeight(RendParams self) -> int"""
        return _MaxPlus.RendParams_GetScanBandHeight(self)

    def GetExtraFlags(self):
        """GetExtraFlags(RendParams self) -> ULONG"""
        return _MaxPlus.RendParams_GetExtraFlags(self)

    def GetWidth(self):
        """GetWidth(RendParams self) -> int"""
        return _MaxPlus.RendParams_GetWidth(self)

    def GetHeight(self):
        """GetHeight(RendParams self) -> int"""
        return _MaxPlus.RendParams_GetHeight(self)

    def GetFilterBG(self):
        """GetFilterBG(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetFilterBG(self)

    def GetAlphaOutOnAdditive(self):
        """GetAlphaOutOnAdditive(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetAlphaOutOnAdditive(self)

    def GetSimplifyAreaLights(self):
        """GetSimplifyAreaLights(RendParams self) -> bool"""
        return _MaxPlus.RendParams_GetSimplifyAreaLights(self)

    def SetRendType(self, *args):
        """SetRendType(RendParams self, Autodesk::Max::RendType::Type value)"""
        return _MaxPlus.RendParams_SetRendType(self, *args)

    def SetIsNetRender(self, *args):
        """SetIsNetRender(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetIsNetRender(self, *args)

    def SetFieldRender(self, *args):
        """SetFieldRender(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetFieldRender(self, *args)

    def SetFieldOrder(self, *args):
        """SetFieldOrder(RendParams self, int value)"""
        return _MaxPlus.RendParams_SetFieldOrder(self, *args)

    def SetFrameDur(self, *args):
        """SetFrameDur(RendParams self, TimeValue value)"""
        return _MaxPlus.RendParams_SetFrameDur(self, *args)

    def SetColorCheck(self, *args):
        """SetColorCheck(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetColorCheck(self, *args)

    def SetVidCorrectMethod(self, *args):
        """SetVidCorrectMethod(RendParams self, int value)"""
        return _MaxPlus.RendParams_SetVidCorrectMethod(self, *args)

    def SetNtscPAL(self, *args):
        """SetNtscPAL(RendParams self, int value)"""
        return _MaxPlus.RendParams_SetNtscPAL(self, *args)

    def SetSuperBlack(self, *args):
        """SetSuperBlack(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetSuperBlack(self, *args)

    def SetSbThresh(self, *args):
        """SetSbThresh(RendParams self, int value)"""
        return _MaxPlus.RendParams_SetSbThresh(self, *args)

    def SetRendHidden(self, *args):
        """SetRendHidden(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetRendHidden(self, *args)

    def SetForce2Side(self, *args):
        """SetForce2Side(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetForce2Side(self, *args)

    def SetInMtlEdit(self, *args):
        """SetInMtlEdit(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetInMtlEdit(self, *args)

    def SetMtlEditTile(self, *args):
        """SetMtlEditTile(RendParams self, float value)"""
        return _MaxPlus.RendParams_SetMtlEditTile(self, *args)

    def SetMtlEditAA(self, *args):
        """SetMtlEditAA(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetMtlEditAA(self, *args)

    def SetMultiThread(self, *args):
        """SetMultiThread(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetMultiThread(self, *args)

    def SetUseEnvironAlpha(self, *args):
        """SetUseEnvironAlpha(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetUseEnvironAlpha(self, *args)

    def SetDontAntialiasBG(self, *args):
        """SetDontAntialiasBG(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetDontAntialiasBG(self, *args)

    def SetUseDisplacement(self, *args):
        """SetUseDisplacement(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetUseDisplacement(self, *args)

    def SetUseRadiosity(self, *args):
        """SetUseRadiosity(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetUseRadiosity(self, *args)

    def SetComputeRadiosity(self, *args):
        """SetComputeRadiosity(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetComputeRadiosity(self, *args)

    def SetEnvMap(self, *args):
        """SetEnvMap(RendParams self, Texmap value)"""
        return _MaxPlus.RendParams_SetEnvMap(self, *args)

    def SetEffect(self, *args):
        """SetEffect(RendParams self, Effect value)"""
        return _MaxPlus.RendParams_SetEffect(self, *args)

    def SetFirstFrame(self, *args):
        """SetFirstFrame(RendParams self, TimeValue value)"""
        return _MaxPlus.RendParams_SetFirstFrame(self, *args)

    def SetScanBandHeight(self, *args):
        """SetScanBandHeight(RendParams self, int value)"""
        return _MaxPlus.RendParams_SetScanBandHeight(self, *args)

    def SetExtraFlags(self, *args):
        """SetExtraFlags(RendParams self, ULONG value)"""
        return _MaxPlus.RendParams_SetExtraFlags(self, *args)

    def SetWidth(self, *args):
        """SetWidth(RendParams self, int value)"""
        return _MaxPlus.RendParams_SetWidth(self, *args)

    def SetHeight(self, *args):
        """SetHeight(RendParams self, int value)"""
        return _MaxPlus.RendParams_SetHeight(self, *args)

    def SetFilterBG(self, *args):
        """SetFilterBG(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetFilterBG(self, *args)

    def SetAlphaOutOnAdditive(self, *args):
        """SetAlphaOutOnAdditive(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetAlphaOutOnAdditive(self, *args)

    def SetSimplifyAreaLights(self, *args):
        """SetSimplifyAreaLights(RendParams self, bool value)"""
        return _MaxPlus.RendParams_SetSimplifyAreaLights(self, *args)

    __swig_destroy__ = _MaxPlus.delete_RendParams
    __del__ = lambda self : None;
RendParams_swigregister = _MaxPlus.RendParams_swigregister
RendParams_swigregister(RendParams)

class IMultiPassCameraEffect(ReferenceTarget):
    """Multi-pass camera rendering effect. Algorithms such as Depth of Field, Scene motion blur can be implemented using multipass techniques."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> IMultiPassCameraEffect"""
        return _MaxPlus.IMultiPassCameraEffect__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(IMultiPassCameraEffect self, Wrapper w) -> bool"""
        return _MaxPlus.IMultiPassCameraEffect___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(IMultiPassCameraEffect self, Wrapper w) -> bool"""
        return _MaxPlus.IMultiPassCameraEffect___ne__(self, *args)

    __swig_destroy__ = _MaxPlus.delete_IMultiPassCameraEffect
    __del__ = lambda self : None;
IMultiPassCameraEffect_swigregister = _MaxPlus.IMultiPassCameraEffect_swigregister
IMultiPassCameraEffect_swigregister(IMultiPassCameraEffect)

def IMultiPassCameraEffect__CastFrom(*args):
  """IMultiPassCameraEffect__CastFrom(InterfaceServer b) -> IMultiPassCameraEffect"""
  return _MaxPlus.IMultiPassCameraEffect__CastFrom(*args)

class PreviewParams(Wrapper):
    """Specifies the options for creating a preview of the active viewport."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::PreviewParams self) -> PreviewParams"""
        this = _MaxPlus.new_PreviewParams()
        try: self.this.append(this)
        except: self.this = this
    def GetOutputType(self):
        """GetOutputType(PreviewParams self) -> bool"""
        return _MaxPlus.PreviewParams_GetOutputType(self)

    def GetPctSize(self):
        """GetPctSize(PreviewParams self) -> int"""
        return _MaxPlus.PreviewParams_GetPctSize(self)

    def GetStart(self):
        """GetStart(PreviewParams self) -> int"""
        return _MaxPlus.PreviewParams_GetStart(self)

    def GetEnd(self):
        """GetEnd(PreviewParams self) -> int"""
        return _MaxPlus.PreviewParams_GetEnd(self)

    def GetSkip(self):
        """GetSkip(PreviewParams self) -> int"""
        return _MaxPlus.PreviewParams_GetSkip(self)

    def GetFps(self):
        """GetFps(PreviewParams self) -> int"""
        return _MaxPlus.PreviewParams_GetFps(self)

    def GetDspGeometry(self):
        """GetDspGeometry(PreviewParams self) -> bool"""
        return _MaxPlus.PreviewParams_GetDspGeometry(self)

    def GetDspShapes(self):
        """GetDspShapes(PreviewParams self) -> bool"""
        return _MaxPlus.PreviewParams_GetDspShapes(self)

    def GetDspLights(self):
        """GetDspLights(PreviewParams self) -> bool"""
        return _MaxPlus.PreviewParams_GetDspLights(self)

    def GetDspCameras(self):
        """GetDspCameras(PreviewParams self) -> bool"""
        return _MaxPlus.PreviewParams_GetDspCameras(self)

    def GetDspHelpers(self):
        """GetDspHelpers(PreviewParams self) -> bool"""
        return _MaxPlus.PreviewParams_GetDspHelpers(self)

    def GetDspSpaceWarps(self):
        """GetDspSpaceWarps(PreviewParams self) -> bool"""
        return _MaxPlus.PreviewParams_GetDspSpaceWarps(self)

    def GetDspGrid(self):
        """GetDspGrid(PreviewParams self) -> bool"""
        return _MaxPlus.PreviewParams_GetDspGrid(self)

    def GetDspSafeFrame(self):
        """GetDspSafeFrame(PreviewParams self) -> bool"""
        return _MaxPlus.PreviewParams_GetDspSafeFrame(self)

    def GetDspFrameNums(self):
        """GetDspFrameNums(PreviewParams self) -> bool"""
        return _MaxPlus.PreviewParams_GetDspFrameNums(self)

    def GetRndLevel(self):
        """GetRndLevel(PreviewParams self) -> int"""
        return _MaxPlus.PreviewParams_GetRndLevel(self)

    def GetDspBkg(self):
        """GetDspBkg(PreviewParams self) -> int"""
        return _MaxPlus.PreviewParams_GetDspBkg(self)

    def SetOutputType(self, *args):
        """SetOutputType(PreviewParams self, bool value)"""
        return _MaxPlus.PreviewParams_SetOutputType(self, *args)

    def SetPctSize(self, *args):
        """SetPctSize(PreviewParams self, int value)"""
        return _MaxPlus.PreviewParams_SetPctSize(self, *args)

    def SetStart(self, *args):
        """SetStart(PreviewParams self, int value)"""
        return _MaxPlus.PreviewParams_SetStart(self, *args)

    def SetEnd(self, *args):
        """SetEnd(PreviewParams self, int value)"""
        return _MaxPlus.PreviewParams_SetEnd(self, *args)

    def SetSkip(self, *args):
        """SetSkip(PreviewParams self, int value)"""
        return _MaxPlus.PreviewParams_SetSkip(self, *args)

    def SetFps(self, *args):
        """SetFps(PreviewParams self, int value)"""
        return _MaxPlus.PreviewParams_SetFps(self, *args)

    def SetDspGeometry(self, *args):
        """SetDspGeometry(PreviewParams self, bool value)"""
        return _MaxPlus.PreviewParams_SetDspGeometry(self, *args)

    def SetDspShapes(self, *args):
        """SetDspShapes(PreviewParams self, bool value)"""
        return _MaxPlus.PreviewParams_SetDspShapes(self, *args)

    def SetDspLights(self, *args):
        """SetDspLights(PreviewParams self, bool value)"""
        return _MaxPlus.PreviewParams_SetDspLights(self, *args)

    def SetDspCameras(self, *args):
        """SetDspCameras(PreviewParams self, bool value)"""
        return _MaxPlus.PreviewParams_SetDspCameras(self, *args)

    def SetDspHelpers(self, *args):
        """SetDspHelpers(PreviewParams self, bool value)"""
        return _MaxPlus.PreviewParams_SetDspHelpers(self, *args)

    def SetDspSpaceWarps(self, *args):
        """SetDspSpaceWarps(PreviewParams self, bool value)"""
        return _MaxPlus.PreviewParams_SetDspSpaceWarps(self, *args)

    def SetDspGrid(self, *args):
        """SetDspGrid(PreviewParams self, bool value)"""
        return _MaxPlus.PreviewParams_SetDspGrid(self, *args)

    def SetDspSafeFrame(self, *args):
        """SetDspSafeFrame(PreviewParams self, bool value)"""
        return _MaxPlus.PreviewParams_SetDspSafeFrame(self, *args)

    def SetDspFrameNums(self, *args):
        """SetDspFrameNums(PreviewParams self, bool value)"""
        return _MaxPlus.PreviewParams_SetDspFrameNums(self, *args)

    def SetRndLevel(self, *args):
        """SetRndLevel(PreviewParams self, int value)"""
        return _MaxPlus.PreviewParams_SetRndLevel(self, *args)

    def SetDspBkg(self, *args):
        """SetDspBkg(PreviewParams self, int value)"""
        return _MaxPlus.PreviewParams_SetDspBkg(self, *args)

    def GetViewportPreview():
        """GetViewportPreview() -> PreviewParams"""
        return _MaxPlus.PreviewParams_GetViewportPreview()

    GetViewportPreview = staticmethod(GetViewportPreview)
    __swig_destroy__ = _MaxPlus.delete_PreviewParams
    __del__ = lambda self : None;
PreviewParams_swigregister = _MaxPlus.PreviewParams_swigregister
PreviewParams_swigregister(PreviewParams)

def PreviewParams_GetViewportPreview():
  """PreviewParams_GetViewportPreview() -> PreviewParams"""
  return _MaxPlus.PreviewParams_GetViewportPreview()

class PreferencesRendering(object):
    """Exposes some options that are found in the Rendering Tab of the Preferences Dialog."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetRendDitherTrue():
        """GetRendDitherTrue() -> bool"""
        return _MaxPlus.PreferencesRendering_GetRendDitherTrue()

    GetRendDitherTrue = staticmethod(GetRendDitherTrue)
    def SetRendDitherTrue(*args):
        """SetRendDitherTrue(bool onOff)"""
        return _MaxPlus.PreferencesRendering_SetRendDitherTrue(*args)

    SetRendDitherTrue = staticmethod(SetRendDitherTrue)
    def GetRendDither256():
        """GetRendDither256() -> bool"""
        return _MaxPlus.PreferencesRendering_GetRendDither256()

    GetRendDither256 = staticmethod(GetRendDither256)
    def SetRendDither256(*args):
        """SetRendDither256(bool onOff)"""
        return _MaxPlus.PreferencesRendering_SetRendDither256(*args)

    SetRendDither256 = staticmethod(SetRendDither256)
    def GetRendMultiThread():
        """GetRendMultiThread() -> bool"""
        return _MaxPlus.PreferencesRendering_GetRendMultiThread()

    GetRendMultiThread = staticmethod(GetRendMultiThread)
    def SetRendMultiThread(*args):
        """SetRendMultiThread(bool onOff)"""
        return _MaxPlus.PreferencesRendering_SetRendMultiThread(*args)

    SetRendMultiThread = staticmethod(SetRendMultiThread)
    def GetRendNThSerial():
        """GetRendNThSerial() -> bool"""
        return _MaxPlus.PreferencesRendering_GetRendNThSerial()

    GetRendNThSerial = staticmethod(GetRendNThSerial)
    def SetRendNThSerial(*args):
        """SetRendNThSerial(bool onOff)"""
        return _MaxPlus.PreferencesRendering_SetRendNThSerial(*args)

    SetRendNThSerial = staticmethod(SetRendNThSerial)
    def GetRendFieldOrder():
        """GetRendFieldOrder() -> int"""
        return _MaxPlus.PreferencesRendering_GetRendFieldOrder()

    GetRendFieldOrder = staticmethod(GetRendFieldOrder)
    def SetRendFieldOrder(*args):
        """SetRendFieldOrder(int fo)"""
        return _MaxPlus.PreferencesRendering_SetRendFieldOrder(*args)

    SetRendFieldOrder = staticmethod(SetRendFieldOrder)
    def GetRendVidCorrectMethod():
        """GetRendVidCorrectMethod() -> int"""
        return _MaxPlus.PreferencesRendering_GetRendVidCorrectMethod()

    GetRendVidCorrectMethod = staticmethod(GetRendVidCorrectMethod)
    def SetRendVidCorrectMethod(*args):
        """SetRendVidCorrectMethod(int m)"""
        return _MaxPlus.PreferencesRendering_SetRendVidCorrectMethod(*args)

    SetRendVidCorrectMethod = staticmethod(SetRendVidCorrectMethod)
    def GetRendNTSC_PAL():
        """GetRendNTSC_PAL() -> int"""
        return _MaxPlus.PreferencesRendering_GetRendNTSC_PAL()

    GetRendNTSC_PAL = staticmethod(GetRendNTSC_PAL)
    def SetRendNTSC_PAL(*args):
        """SetRendNTSC_PAL(int np)"""
        return _MaxPlus.PreferencesRendering_SetRendNTSC_PAL(*args)

    SetRendNTSC_PAL = staticmethod(SetRendNTSC_PAL)
    def GetRendSuperBlackThresh():
        """GetRendSuperBlackThresh() -> int"""
        return _MaxPlus.PreferencesRendering_GetRendSuperBlackThresh()

    GetRendSuperBlackThresh = staticmethod(GetRendSuperBlackThresh)
    def SetRendSuperBlackThresh(*args):
        """SetRendSuperBlackThresh(int sb)"""
        return _MaxPlus.PreferencesRendering_SetRendSuperBlackThresh(*args)

    SetRendSuperBlackThresh = staticmethod(SetRendSuperBlackThresh)
    __swig_destroy__ = _MaxPlus.delete_PreferencesRendering
    __del__ = lambda self : None;
PreferencesRendering_swigregister = _MaxPlus.PreferencesRendering_swigregister
PreferencesRendering_swigregister(PreferencesRendering)

def PreferencesRendering_GetRendDitherTrue():
  """PreferencesRendering_GetRendDitherTrue() -> bool"""
  return _MaxPlus.PreferencesRendering_GetRendDitherTrue()

def PreferencesRendering_SetRendDitherTrue(*args):
  """PreferencesRendering_SetRendDitherTrue(bool onOff)"""
  return _MaxPlus.PreferencesRendering_SetRendDitherTrue(*args)

def PreferencesRendering_GetRendDither256():
  """PreferencesRendering_GetRendDither256() -> bool"""
  return _MaxPlus.PreferencesRendering_GetRendDither256()

def PreferencesRendering_SetRendDither256(*args):
  """PreferencesRendering_SetRendDither256(bool onOff)"""
  return _MaxPlus.PreferencesRendering_SetRendDither256(*args)

def PreferencesRendering_GetRendMultiThread():
  """PreferencesRendering_GetRendMultiThread() -> bool"""
  return _MaxPlus.PreferencesRendering_GetRendMultiThread()

def PreferencesRendering_SetRendMultiThread(*args):
  """PreferencesRendering_SetRendMultiThread(bool onOff)"""
  return _MaxPlus.PreferencesRendering_SetRendMultiThread(*args)

def PreferencesRendering_GetRendNThSerial():
  """PreferencesRendering_GetRendNThSerial() -> bool"""
  return _MaxPlus.PreferencesRendering_GetRendNThSerial()

def PreferencesRendering_SetRendNThSerial(*args):
  """PreferencesRendering_SetRendNThSerial(bool onOff)"""
  return _MaxPlus.PreferencesRendering_SetRendNThSerial(*args)

def PreferencesRendering_GetRendFieldOrder():
  """PreferencesRendering_GetRendFieldOrder() -> int"""
  return _MaxPlus.PreferencesRendering_GetRendFieldOrder()

def PreferencesRendering_SetRendFieldOrder(*args):
  """PreferencesRendering_SetRendFieldOrder(int fo)"""
  return _MaxPlus.PreferencesRendering_SetRendFieldOrder(*args)

def PreferencesRendering_GetRendVidCorrectMethod():
  """PreferencesRendering_GetRendVidCorrectMethod() -> int"""
  return _MaxPlus.PreferencesRendering_GetRendVidCorrectMethod()

def PreferencesRendering_SetRendVidCorrectMethod(*args):
  """PreferencesRendering_SetRendVidCorrectMethod(int m)"""
  return _MaxPlus.PreferencesRendering_SetRendVidCorrectMethod(*args)

def PreferencesRendering_GetRendNTSC_PAL():
  """PreferencesRendering_GetRendNTSC_PAL() -> int"""
  return _MaxPlus.PreferencesRendering_GetRendNTSC_PAL()

def PreferencesRendering_SetRendNTSC_PAL(*args):
  """PreferencesRendering_SetRendNTSC_PAL(int np)"""
  return _MaxPlus.PreferencesRendering_SetRendNTSC_PAL(*args)

def PreferencesRendering_GetRendSuperBlackThresh():
  """PreferencesRendering_GetRendSuperBlackThresh() -> int"""
  return _MaxPlus.PreferencesRendering_GetRendSuperBlackThresh()

def PreferencesRendering_SetRendSuperBlackThresh(*args):
  """PreferencesRendering_SetRendSuperBlackThresh(int sb)"""
  return _MaxPlus.PreferencesRendering_SetRendSuperBlackThresh(*args)

class PreferencesFileEncoding(object):
    """Exposes some options found in the Files tab of the Preferences Dialog."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def OverrideLanguageSpecifiedInSceneFile():
        """OverrideLanguageSpecifiedInSceneFile() -> bool"""
        return _MaxPlus.PreferencesFileEncoding_OverrideLanguageSpecifiedInSceneFile()

    OverrideLanguageSpecifiedInSceneFile = staticmethod(OverrideLanguageSpecifiedInSceneFile)
    def SetOverrideLanguageSpecifiedInSceneFile(*args):
        """SetOverrideLanguageSpecifiedInSceneFile(bool overrideFileLangID)"""
        return _MaxPlus.PreferencesFileEncoding_SetOverrideLanguageSpecifiedInSceneFile(*args)

    SetOverrideLanguageSpecifiedInSceneFile = staticmethod(SetOverrideLanguageSpecifiedInSceneFile)
    def UseCodePageSpecifiedInSceneFile():
        """UseCodePageSpecifiedInSceneFile() -> bool"""
        return _MaxPlus.PreferencesFileEncoding_UseCodePageSpecifiedInSceneFile()

    UseCodePageSpecifiedInSceneFile = staticmethod(UseCodePageSpecifiedInSceneFile)
    def SetUseCodePageSpecifiedInSceneFile(*args):
        """SetUseCodePageSpecifiedInSceneFile(bool useFileCodePage)"""
        return _MaxPlus.PreferencesFileEncoding_SetUseCodePageSpecifiedInSceneFile(*args)

    SetUseCodePageSpecifiedInSceneFile = staticmethod(SetUseCodePageSpecifiedInSceneFile)
    def LanguageToUseForFileIO():
        """LanguageToUseForFileIO() -> LANGID"""
        return _MaxPlus.PreferencesFileEncoding_LanguageToUseForFileIO()

    LanguageToUseForFileIO = staticmethod(LanguageToUseForFileIO)
    def SetLanguageToUseForFileIO(*args):
        """SetLanguageToUseForFileIO(LANGID id) -> bool"""
        return _MaxPlus.PreferencesFileEncoding_SetLanguageToUseForFileIO(*args)

    SetLanguageToUseForFileIO = staticmethod(SetLanguageToUseForFileIO)
    def CodePageForLanguage(*args):
        """CodePageForLanguage(LANGID id) -> UINT"""
        return _MaxPlus.PreferencesFileEncoding_CodePageForLanguage(*args)

    CodePageForLanguage = staticmethod(CodePageForLanguage)
    def LegacyFilesCanBeStoredUsingUTF8():
        """LegacyFilesCanBeStoredUsingUTF8() -> bool"""
        return _MaxPlus.PreferencesFileEncoding_LegacyFilesCanBeStoredUsingUTF8()

    LegacyFilesCanBeStoredUsingUTF8 = staticmethod(LegacyFilesCanBeStoredUsingUTF8)
    def SetLegacyFilesCanBeStoredUsingUTF8(*args):
        """SetLegacyFilesCanBeStoredUsingUTF8(bool allowUTF8)"""
        return _MaxPlus.PreferencesFileEncoding_SetLegacyFilesCanBeStoredUsingUTF8(*args)

    SetLegacyFilesCanBeStoredUsingUTF8 = staticmethod(SetLegacyFilesCanBeStoredUsingUTF8)
    def DefaultTextLoadCodePage():
        """DefaultTextLoadCodePage() -> UINT"""
        return _MaxPlus.PreferencesFileEncoding_DefaultTextLoadCodePage()

    DefaultTextLoadCodePage = staticmethod(DefaultTextLoadCodePage)
    def DefaultTextSaveCodePage(allow_utf8=False):
        """
        DefaultTextSaveCodePage(bool allow_utf8=False) -> UINT
        DefaultTextSaveCodePage() -> UINT
        """
        return _MaxPlus.PreferencesFileEncoding_DefaultTextSaveCodePage(allow_utf8)

    DefaultTextSaveCodePage = staticmethod(DefaultTextSaveCodePage)
    __swig_destroy__ = _MaxPlus.delete_PreferencesFileEncoding
    __del__ = lambda self : None;
PreferencesFileEncoding_swigregister = _MaxPlus.PreferencesFileEncoding_swigregister
PreferencesFileEncoding_swigregister(PreferencesFileEncoding)

def PreferencesFileEncoding_OverrideLanguageSpecifiedInSceneFile():
  """PreferencesFileEncoding_OverrideLanguageSpecifiedInSceneFile() -> bool"""
  return _MaxPlus.PreferencesFileEncoding_OverrideLanguageSpecifiedInSceneFile()

def PreferencesFileEncoding_SetOverrideLanguageSpecifiedInSceneFile(*args):
  """PreferencesFileEncoding_SetOverrideLanguageSpecifiedInSceneFile(bool overrideFileLangID)"""
  return _MaxPlus.PreferencesFileEncoding_SetOverrideLanguageSpecifiedInSceneFile(*args)

def PreferencesFileEncoding_UseCodePageSpecifiedInSceneFile():
  """PreferencesFileEncoding_UseCodePageSpecifiedInSceneFile() -> bool"""
  return _MaxPlus.PreferencesFileEncoding_UseCodePageSpecifiedInSceneFile()

def PreferencesFileEncoding_SetUseCodePageSpecifiedInSceneFile(*args):
  """PreferencesFileEncoding_SetUseCodePageSpecifiedInSceneFile(bool useFileCodePage)"""
  return _MaxPlus.PreferencesFileEncoding_SetUseCodePageSpecifiedInSceneFile(*args)

def PreferencesFileEncoding_LanguageToUseForFileIO():
  """PreferencesFileEncoding_LanguageToUseForFileIO() -> LANGID"""
  return _MaxPlus.PreferencesFileEncoding_LanguageToUseForFileIO()

def PreferencesFileEncoding_SetLanguageToUseForFileIO(*args):
  """PreferencesFileEncoding_SetLanguageToUseForFileIO(LANGID id) -> bool"""
  return _MaxPlus.PreferencesFileEncoding_SetLanguageToUseForFileIO(*args)

def PreferencesFileEncoding_CodePageForLanguage(*args):
  """PreferencesFileEncoding_CodePageForLanguage(LANGID id) -> UINT"""
  return _MaxPlus.PreferencesFileEncoding_CodePageForLanguage(*args)

def PreferencesFileEncoding_LegacyFilesCanBeStoredUsingUTF8():
  """PreferencesFileEncoding_LegacyFilesCanBeStoredUsingUTF8() -> bool"""
  return _MaxPlus.PreferencesFileEncoding_LegacyFilesCanBeStoredUsingUTF8()

def PreferencesFileEncoding_SetLegacyFilesCanBeStoredUsingUTF8(*args):
  """PreferencesFileEncoding_SetLegacyFilesCanBeStoredUsingUTF8(bool allowUTF8)"""
  return _MaxPlus.PreferencesFileEncoding_SetLegacyFilesCanBeStoredUsingUTF8(*args)

def PreferencesFileEncoding_DefaultTextLoadCodePage():
  """PreferencesFileEncoding_DefaultTextLoadCodePage() -> UINT"""
  return _MaxPlus.PreferencesFileEncoding_DefaultTextLoadCodePage()

def PreferencesFileEncoding_DefaultTextSaveCodePage(allow_utf8=False):
  """
    DefaultTextSaveCodePage(bool allow_utf8=False) -> UINT
    PreferencesFileEncoding_DefaultTextSaveCodePage() -> UINT
    """
  return _MaxPlus.PreferencesFileEncoding_DefaultTextSaveCodePage(allow_utf8)

class RenderSettingID(object):
    """Type of renderer."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Production = _MaxPlus.RenderSettingID_Production
    ActiveShade = _MaxPlus.RenderSettingID_ActiveShade
    MaterialEditor = _MaxPlus.RenderSettingID_MaterialEditor
    __swig_destroy__ = _MaxPlus.delete_RenderSettingID
    __del__ = lambda self : None;
RenderSettingID_swigregister = _MaxPlus.RenderSettingID_swigregister
RenderSettingID_swigregister(RenderSettingID)

class RenderSettings(object):
    """Contains render properties common to all renderers. These are found in the UI under the common tab in the render dialog."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def OpenDialog():
        """OpenDialog()"""
        return _MaxPlus.RenderSettings_OpenDialog()

    OpenDialog = staticmethod(OpenDialog)
    def CancelDialog():
        """CancelDialog()"""
        return _MaxPlus.RenderSettings_CancelDialog()

    CancelDialog = staticmethod(CancelDialog)
    def CloseDialog():
        """CloseDialog()"""
        return _MaxPlus.RenderSettings_CloseDialog()

    CloseDialog = staticmethod(CloseDialog)
    def CommitDialogParameters():
        """CommitDialogParameters()"""
        return _MaxPlus.RenderSettings_CommitDialogParameters()

    CommitDialogParameters = staticmethod(CommitDialogParameters)
    def UpdateDialogParameters():
        """UpdateDialogParameters()"""
        return _MaxPlus.RenderSettings_UpdateDialogParameters()

    UpdateDialogParameters = staticmethod(UpdateDialogParameters)
    def DialogOpen():
        """DialogOpen() -> bool"""
        return _MaxPlus.RenderSettings_DialogOpen()

    DialogOpen = staticmethod(DialogOpen)
    def GetUseIterative():
        """GetUseIterative() -> bool"""
        return _MaxPlus.RenderSettings_GetUseIterative()

    GetUseIterative = staticmethod(GetUseIterative)
    def SetUseIterative(*args):
        """SetUseIterative(bool b)"""
        return _MaxPlus.RenderSettings_SetUseIterative(*args)

    SetUseIterative = staticmethod(SetUseIterative)
    def InProgressiveMode():
        """InProgressiveMode() -> bool"""
        return _MaxPlus.RenderSettings_InProgressiveMode()

    InProgressiveMode = staticmethod(InProgressiveMode)
    def BeginProgressiveMode():
        """BeginProgressiveMode()"""
        return _MaxPlus.RenderSettings_BeginProgressiveMode()

    BeginProgressiveMode = staticmethod(BeginProgressiveMode)
    def EndProgressiveMode():
        """EndProgressiveMode()"""
        return _MaxPlus.RenderSettings_EndProgressiveMode()

    EndProgressiveMode = staticmethod(EndProgressiveMode)
    def FormatRenderTime(*args):
        """
        FormatRenderTime(DWORD msec, WStr str, bool hundredths=False)
        FormatRenderTime(DWORD msec, WStr str)
        """
        return _MaxPlus.RenderSettings_FormatRenderTime(*args)

    FormatRenderTime = staticmethod(FormatRenderTime)
    def GetFrameList(*args):
        """GetFrameList(IntList frameNums)"""
        return _MaxPlus.RenderSettings_GetFrameList(*args)

    GetFrameList = staticmethod(GetFrameList)
    def GetPickFramesString():
        """GetPickFramesString() -> WStr"""
        return _MaxPlus.RenderSettings_GetPickFramesString()

    GetPickFramesString = staticmethod(GetPickFramesString)
    def GetFileNumberBase():
        """GetFileNumberBase() -> int"""
        return _MaxPlus.RenderSettings_GetFileNumberBase()

    GetFileNumberBase = staticmethod(GetFileNumberBase)
    def SetFileNumberBase(*args):
        """SetFileNumberBase(int n)"""
        return _MaxPlus.RenderSettings_SetFileNumberBase(*args)

    SetFileNumberBase = staticmethod(SetFileNumberBase)
    def GetSkipFrames():
        """GetSkipFrames() -> bool"""
        return _MaxPlus.RenderSettings_GetSkipFrames()

    GetSkipFrames = staticmethod(GetSkipFrames)
    def SetSkipFrames(*args):
        """SetSkipFrames(bool onOff)"""
        return _MaxPlus.RenderSettings_SetSkipFrames(*args)

    SetSkipFrames = staticmethod(SetSkipFrames)
    def GetTimeType():
        """GetTimeType() -> int"""
        return _MaxPlus.RenderSettings_GetTimeType()

    GetTimeType = staticmethod(GetTimeType)
    def SetTimeType(*args):
        """SetTimeType(int type)"""
        return _MaxPlus.RenderSettings_SetTimeType(*args)

    SetTimeType = staticmethod(SetTimeType)
    def GetStart():
        """GetStart() -> TimeValue"""
        return _MaxPlus.RenderSettings_GetStart()

    GetStart = staticmethod(GetStart)
    def SetStart(*args):
        """SetStart(TimeValue start)"""
        return _MaxPlus.RenderSettings_SetStart(*args)

    SetStart = staticmethod(SetStart)
    def GetEnd():
        """GetEnd() -> TimeValue"""
        return _MaxPlus.RenderSettings_GetEnd()

    GetEnd = staticmethod(GetEnd)
    def SetEnd(*args):
        """SetEnd(TimeValue end)"""
        return _MaxPlus.RenderSettings_SetEnd(*args)

    SetEnd = staticmethod(SetEnd)
    def GetNThFrame():
        """GetNThFrame() -> int"""
        return _MaxPlus.RenderSettings_GetNThFrame()

    GetNThFrame = staticmethod(GetNThFrame)
    def SetNThFrame(*args):
        """SetNThFrame(int n)"""
        return _MaxPlus.RenderSettings_SetNThFrame(*args)

    SetNThFrame = staticmethod(SetNThFrame)
    def GetAreaType():
        """GetAreaType() -> int"""
        return _MaxPlus.RenderSettings_GetAreaType()

    GetAreaType = staticmethod(GetAreaType)
    def SetAreaType(*args):
        """SetAreaType(int rtype)"""
        return _MaxPlus.RenderSettings_SetAreaType(*args)

    SetAreaType = staticmethod(SetAreaType)
    def GetWidth():
        """GetWidth() -> int"""
        return _MaxPlus.RenderSettings_GetWidth()

    GetWidth = staticmethod(GetWidth)
    def SetWidth(*args):
        """SetWidth(int w)"""
        return _MaxPlus.RenderSettings_SetWidth(*args)

    SetWidth = staticmethod(SetWidth)
    def GetHeight():
        """GetHeight() -> int"""
        return _MaxPlus.RenderSettings_GetHeight()

    GetHeight = staticmethod(GetHeight)
    def SetHeight(*args):
        """SetHeight(int h)"""
        return _MaxPlus.RenderSettings_SetHeight(*args)

    SetHeight = staticmethod(SetHeight)
    def GetApertureWidth():
        """GetApertureWidth() -> float"""
        return _MaxPlus.RenderSettings_GetApertureWidth()

    GetApertureWidth = staticmethod(GetApertureWidth)
    def SetApertureWidth(*args):
        """SetApertureWidth(float aw)"""
        return _MaxPlus.RenderSettings_SetApertureWidth(*args)

    SetApertureWidth = staticmethod(SetApertureWidth)
    def GetPixelAspectRatio():
        """GetPixelAspectRatio() -> float"""
        return _MaxPlus.RenderSettings_GetPixelAspectRatio()

    GetPixelAspectRatio = staticmethod(GetPixelAspectRatio)
    def SetPixelAspectRatio(*args):
        """SetPixelAspectRatio(float a)"""
        return _MaxPlus.RenderSettings_SetPixelAspectRatio(*args)

    SetPixelAspectRatio = staticmethod(SetPixelAspectRatio)
    def GetImageAspectRatio():
        """GetImageAspectRatio() -> float"""
        return _MaxPlus.RenderSettings_GetImageAspectRatio()

    GetImageAspectRatio = staticmethod(GetImageAspectRatio)
    def GetAtmosphere():
        """GetAtmosphere() -> bool"""
        return _MaxPlus.RenderSettings_GetAtmosphere()

    GetAtmosphere = staticmethod(GetAtmosphere)
    def SetAtmosphere(*args):
        """SetAtmosphere(bool onOff)"""
        return _MaxPlus.RenderSettings_SetAtmosphere(*args)

    SetAtmosphere = staticmethod(SetAtmosphere)
    def GetEffects():
        """GetEffects() -> bool"""
        return _MaxPlus.RenderSettings_GetEffects()

    GetEffects = staticmethod(GetEffects)
    def SetEffects(*args):
        """SetEffects(bool onOff)"""
        return _MaxPlus.RenderSettings_SetEffects(*args)

    SetEffects = staticmethod(SetEffects)
    def GetDisplacement():
        """GetDisplacement() -> bool"""
        return _MaxPlus.RenderSettings_GetDisplacement()

    GetDisplacement = staticmethod(GetDisplacement)
    def SetDisplacement(*args):
        """SetDisplacement(bool onOff)"""
        return _MaxPlus.RenderSettings_SetDisplacement(*args)

    SetDisplacement = staticmethod(SetDisplacement)
    def GetColorCheck():
        """GetColorCheck() -> bool"""
        return _MaxPlus.RenderSettings_GetColorCheck()

    GetColorCheck = staticmethod(GetColorCheck)
    def SetColorCheck(*args):
        """SetColorCheck(bool onOff)"""
        return _MaxPlus.RenderSettings_SetColorCheck(*args)

    SetColorCheck = staticmethod(SetColorCheck)
    def GetToFields():
        """GetToFields() -> bool"""
        return _MaxPlus.RenderSettings_GetToFields()

    GetToFields = staticmethod(GetToFields)
    def SetToFields(*args):
        """SetToFields(bool onOff)"""
        return _MaxPlus.RenderSettings_SetToFields(*args)

    SetToFields = staticmethod(SetToFields)
    def GetHidden():
        """GetHidden() -> bool"""
        return _MaxPlus.RenderSettings_GetHidden()

    GetHidden = staticmethod(GetHidden)
    def SetHidden(*args):
        """SetHidden(bool onOff)"""
        return _MaxPlus.RenderSettings_SetHidden(*args)

    SetHidden = staticmethod(SetHidden)
    def GetSimplifyAreaLights():
        """GetSimplifyAreaLights() -> bool"""
        return _MaxPlus.RenderSettings_GetSimplifyAreaLights()

    GetSimplifyAreaLights = staticmethod(GetSimplifyAreaLights)
    def SetSimplifyAreaLights(*args):
        """SetSimplifyAreaLights(bool onOff)"""
        return _MaxPlus.RenderSettings_SetSimplifyAreaLights(*args)

    SetSimplifyAreaLights = staticmethod(SetSimplifyAreaLights)
    def GetForce2Side():
        """GetForce2Side() -> bool"""
        return _MaxPlus.RenderSettings_GetForce2Side()

    GetForce2Side = staticmethod(GetForce2Side)
    def SetForce2Side(*args):
        """SetForce2Side(bool onOff)"""
        return _MaxPlus.RenderSettings_SetForce2Side(*args)

    SetForce2Side = staticmethod(SetForce2Side)
    def GetSuperBlack():
        """GetSuperBlack() -> bool"""
        return _MaxPlus.RenderSettings_GetSuperBlack()

    GetSuperBlack = staticmethod(GetSuperBlack)
    def SetSuperBlack(*args):
        """SetSuperBlack(bool onOff)"""
        return _MaxPlus.RenderSettings_SetSuperBlack(*args)

    SetSuperBlack = staticmethod(SetSuperBlack)
    def GetSaveFile():
        """GetSaveFile() -> bool"""
        return _MaxPlus.RenderSettings_GetSaveFile()

    GetSaveFile = staticmethod(GetSaveFile)
    def SetSaveFile(*args):
        """SetSaveFile(bool onOff)"""
        return _MaxPlus.RenderSettings_SetSaveFile(*args)

    SetSaveFile = staticmethod(SetSaveFile)
    def SetOutputFile(*args):
        """SetOutputFile(wchar_t const * fileName)"""
        return _MaxPlus.RenderSettings_SetOutputFile(*args)

    SetOutputFile = staticmethod(SetOutputFile)
    def GetOutputFile():
        """GetOutputFile() -> wchar_t const *"""
        return _MaxPlus.RenderSettings_GetOutputFile()

    GetOutputFile = staticmethod(GetOutputFile)
    def GetUseImageSequence():
        """GetUseImageSequence() -> bool"""
        return _MaxPlus.RenderSettings_GetUseImageSequence()

    GetUseImageSequence = staticmethod(GetUseImageSequence)
    def SetUseImageSequence(*args):
        """SetUseImageSequence(bool onOff)"""
        return _MaxPlus.RenderSettings_SetUseImageSequence(*args)

    SetUseImageSequence = staticmethod(SetUseImageSequence)
    def GetImageSequenceType():
        """GetImageSequenceType() -> int"""
        return _MaxPlus.RenderSettings_GetImageSequenceType()

    GetImageSequenceType = staticmethod(GetImageSequenceType)
    def SetImageSequenceType(*args):
        """SetImageSequenceType(int type)"""
        return _MaxPlus.RenderSettings_SetImageSequenceType(*args)

    SetImageSequenceType = staticmethod(SetImageSequenceType)
    def GetUseNet():
        """GetUseNet() -> bool"""
        return _MaxPlus.RenderSettings_GetUseNet()

    GetUseNet = staticmethod(GetUseNet)
    def SetUseNet(*args):
        """SetUseNet(bool onOff)"""
        return _MaxPlus.RenderSettings_SetUseNet(*args)

    SetUseNet = staticmethod(SetUseNet)
    def GetUseDevice():
        """GetUseDevice() -> bool"""
        return _MaxPlus.RenderSettings_GetUseDevice()

    GetUseDevice = staticmethod(GetUseDevice)
    def SetUseDevice(*args):
        """SetUseDevice(bool onOff)"""
        return _MaxPlus.RenderSettings_SetUseDevice(*args)

    SetUseDevice = staticmethod(SetUseDevice)
    def GetFileBitmapInfo():
        """GetFileBitmapInfo() -> BitmapInfo"""
        return _MaxPlus.RenderSettings_GetFileBitmapInfo()

    GetFileBitmapInfo = staticmethod(GetFileBitmapInfo)
    def GetDeviceBitmapInfo():
        """GetDeviceBitmapInfo() -> BitmapInfo"""
        return _MaxPlus.RenderSettings_GetDeviceBitmapInfo()

    GetDeviceBitmapInfo = staticmethod(GetDeviceBitmapInfo)
    def GetShowVFB():
        """GetShowVFB() -> bool"""
        return _MaxPlus.RenderSettings_GetShowVFB()

    GetShowVFB = staticmethod(GetShowVFB)
    def SetShowVFB(*args):
        """SetShowVFB(bool onOff)"""
        return _MaxPlus.RenderSettings_SetShowVFB(*args)

    SetShowVFB = staticmethod(SetShowVFB)
    def GetPreScriptFile():
        """GetPreScriptFile() -> WStr"""
        return _MaxPlus.RenderSettings_GetPreScriptFile()

    GetPreScriptFile = staticmethod(GetPreScriptFile)
    def SetPreScriptFile(*args):
        """SetPreScriptFile(wchar_t const * filepath)"""
        return _MaxPlus.RenderSettings_SetPreScriptFile(*args)

    SetPreScriptFile = staticmethod(SetPreScriptFile)
    def GetUsePreScript():
        """GetUsePreScript() -> bool"""
        return _MaxPlus.RenderSettings_GetUsePreScript()

    GetUsePreScript = staticmethod(GetUsePreScript)
    def SetUsePreScript(*args):
        """SetUsePreScript(bool onOff)"""
        return _MaxPlus.RenderSettings_SetUsePreScript(*args)

    SetUsePreScript = staticmethod(SetUsePreScript)
    def GetLocalPreScript():
        """GetLocalPreScript() -> bool"""
        return _MaxPlus.RenderSettings_GetLocalPreScript()

    GetLocalPreScript = staticmethod(GetLocalPreScript)
    def SetLocalPreScript(*args):
        """SetLocalPreScript(bool onOff)"""
        return _MaxPlus.RenderSettings_SetLocalPreScript(*args)

    SetLocalPreScript = staticmethod(SetLocalPreScript)
    def GetPostScriptFile():
        """GetPostScriptFile() -> WStr"""
        return _MaxPlus.RenderSettings_GetPostScriptFile()

    GetPostScriptFile = staticmethod(GetPostScriptFile)
    def SetPostScriptFile(*args):
        """SetPostScriptFile(wchar_t const * filepath)"""
        return _MaxPlus.RenderSettings_SetPostScriptFile(*args)

    SetPostScriptFile = staticmethod(SetPostScriptFile)
    def GetUsePostScript():
        """GetUsePostScript() -> bool"""
        return _MaxPlus.RenderSettings_GetUsePostScript()

    GetUsePostScript = staticmethod(GetUsePostScript)
    def SetUsePostScript(*args):
        """SetUsePostScript(bool onOff)"""
        return _MaxPlus.RenderSettings_SetUsePostScript(*args)

    SetUsePostScript = staticmethod(SetUsePostScript)
    def CreateDefaultScanline():
        """CreateDefaultScanline() -> IScanRenderer"""
        return _MaxPlus.RenderSettings_CreateDefaultScanline()

    CreateDefaultScanline = staticmethod(CreateDefaultScanline)
    def CreateDefault(*args):
        """CreateDefault(Autodesk::Max::RenderSettingID::Type id) -> Renderer"""
        return _MaxPlus.RenderSettings_CreateDefault(*args)

    CreateDefault = staticmethod(CreateDefault)
    def GetDefaultRendererClassID(*args):
        """GetDefaultRendererClassID(Autodesk::Max::RenderSettingID::Type renderSettingID) -> Class_ID"""
        return _MaxPlus.RenderSettings_GetDefaultRendererClassID(*args)

    GetDefaultRendererClassID = staticmethod(GetDefaultRendererClassID)
    def SetDefaultRendererClassID(*args):
        """SetDefaultRendererClassID(Autodesk::Max::RenderSettingID::Type renderSettingID, Class_ID classID)"""
        return _MaxPlus.RenderSettings_SetDefaultRendererClassID(*args)

    SetDefaultRendererClassID = staticmethod(SetDefaultRendererClassID)
    def GetCurrent(createRendererIfItDoesntExist=True):
        """
        GetCurrent(bool createRendererIfItDoesntExist=True) -> Renderer
        GetCurrent() -> Renderer
        """
        return _MaxPlus.RenderSettings_GetCurrent(createRendererIfItDoesntExist)

    GetCurrent = staticmethod(GetCurrent)
    def SetCurrent(*args):
        """SetCurrent(Renderer rend)"""
        return _MaxPlus.RenderSettings_SetCurrent(*args)

    SetCurrent = staticmethod(SetCurrent)
    def GetProduction(createRendererIfItDoesntExist=True):
        """
        GetProduction(bool createRendererIfItDoesntExist=True) -> Renderer
        GetProduction() -> Renderer
        """
        return _MaxPlus.RenderSettings_GetProduction(createRendererIfItDoesntExist)

    GetProduction = staticmethod(GetProduction)
    def SetProduction(*args):
        """SetProduction(Renderer rend)"""
        return _MaxPlus.RenderSettings_SetProduction(*args)

    SetProduction = staticmethod(SetProduction)
    def GetDraft(createRendererIfItDoesntExist=True):
        """
        GetDraft(bool createRendererIfItDoesntExist=True) -> Renderer
        GetDraft() -> Renderer
        """
        return _MaxPlus.RenderSettings_GetDraft(createRendererIfItDoesntExist)

    GetDraft = staticmethod(GetDraft)
    def SetDraft(*args):
        """SetDraft(Renderer rend)"""
        return _MaxPlus.RenderSettings_SetDraft(*args)

    SetDraft = staticmethod(SetDraft)
    def Get(*args):
        """
        Get(Autodesk::Max::RenderSettingID::Type renderSettingID, bool createRendererIfItDoesntExist=True) -> Renderer
        Get(Autodesk::Max::RenderSettingID::Type renderSettingID) -> Renderer
        """
        return _MaxPlus.RenderSettings_Get(*args)

    Get = staticmethod(Get)
    def Set(*args):
        """Set(Autodesk::Max::RenderSettingID::Type renderSettingID, Renderer rend)"""
        return _MaxPlus.RenderSettings_Set(*args)

    Set = staticmethod(Set)
    def GetUseDraft():
        """GetUseDraft() -> bool"""
        return _MaxPlus.RenderSettings_GetUseDraft()

    GetUseDraft = staticmethod(GetUseDraft)
    def SetUseDraft(*args):
        """SetUseDraft(bool b)"""
        return _MaxPlus.RenderSettings_SetUseDraft(*args)

    SetUseDraft = staticmethod(SetUseDraft)
    def GetCurrentSetting():
        """GetCurrentSetting() -> Autodesk::Max::RenderSettingID::Type"""
        return _MaxPlus.RenderSettings_GetCurrentSetting()

    GetCurrentSetting = staticmethod(GetCurrentSetting)
    def SetCurrentSetting(*args):
        """SetCurrentSetting(Autodesk::Max::RenderSettingID::Type renderSettingID)"""
        return _MaxPlus.RenderSettings_SetCurrentSetting(*args)

    SetCurrentSetting = staticmethod(SetCurrentSetting)
    def GetMEditRenderer(createRendererIfItDoesntExist=True):
        """
        GetMEditRenderer(bool createRendererIfItDoesntExist=True) -> Renderer
        GetMEditRenderer() -> Renderer
        """
        return _MaxPlus.RenderSettings_GetMEditRenderer(createRendererIfItDoesntExist)

    GetMEditRenderer = staticmethod(GetMEditRenderer)
    def SetMEditRenderer(*args):
        """SetMEditRenderer(Renderer renderer)"""
        return _MaxPlus.RenderSettings_SetMEditRenderer(*args)

    SetMEditRenderer = staticmethod(SetMEditRenderer)
    def GetActualMEditRenderer(createRendererIfItDoesntExist=True):
        """
        GetActualMEditRenderer(bool createRendererIfItDoesntExist=True) -> Renderer
        GetActualMEditRenderer() -> Renderer
        """
        return _MaxPlus.RenderSettings_GetActualMEditRenderer(createRendererIfItDoesntExist)

    GetActualMEditRenderer = staticmethod(GetActualMEditRenderer)
    def GetMEditRendererLocked():
        """GetMEditRendererLocked() -> bool"""
        return _MaxPlus.RenderSettings_GetMEditRendererLocked()

    GetMEditRendererLocked = staticmethod(GetMEditRendererLocked)
    def SetMEditRendererLocked(*args):
        """SetMEditRendererLocked(bool locked)"""
        return _MaxPlus.RenderSettings_SetMEditRendererLocked(*args)

    SetMEditRendererLocked = staticmethod(SetMEditRendererLocked)
    def GetMEditRendererLocked_Default():
        """GetMEditRendererLocked_Default() -> bool"""
        return _MaxPlus.RenderSettings_GetMEditRendererLocked_Default()

    GetMEditRendererLocked_Default = staticmethod(GetMEditRendererLocked_Default)
    def SetMEditRendererLocked_Default(*args):
        """SetMEditRendererLocked_Default(bool locked)"""
        return _MaxPlus.RenderSettings_SetMEditRendererLocked_Default(*args)

    SetMEditRendererLocked_Default = staticmethod(SetMEditRendererLocked_Default)
    def ShouldContinueOnError():
        """ShouldContinueOnError() -> bool"""
        return _MaxPlus.RenderSettings_ShouldContinueOnError()

    ShouldContinueOnError = staticmethod(ShouldContinueOnError)
    def SetupParameters(*args):
        """
        SetupParameters(RendParams rp, Viewport vpt, Autodesk::Max::RendType::Type t=(RendType::Type) RENDTYPE_NORMAL)
        SetupParameters(RendParams rp, Viewport vpt)
        """
        return _MaxPlus.RenderSettings_SetupParameters(*args)

    SetupParameters = staticmethod(SetupParameters)
    def GetCamera():
        """GetCamera() -> INode"""
        return _MaxPlus.RenderSettings_GetCamera()

    GetCamera = staticmethod(GetCamera)
    def SetCamera(*args):
        """SetCamera(INode camNode)"""
        return _MaxPlus.RenderSettings_SetCamera(*args)

    SetCamera = staticmethod(SetCamera)
    def IsActive():
        """IsActive() -> bool"""
        return _MaxPlus.RenderSettings_IsActive()

    IsActive = staticmethod(IsActive)
    def GetLastRenderedImage():
        """GetLastRenderedImage() -> Bitmap"""
        return _MaxPlus.RenderSettings_GetLastRenderedImage()

    GetLastRenderedImage = staticmethod(GetLastRenderedImage)
    def ColorById(*args):
        """ColorById(DWORD id, Color c)"""
        return _MaxPlus.RenderSettings_ColorById(*args)

    ColorById = staticmethod(ColorById)
    def GetViewParamsFromNode(*args):
        """GetViewParamsFromNode(INode vnode, ViewParams vp, TimeValue t)"""
        return _MaxPlus.RenderSettings_GetViewParamsFromNode(*args)

    GetViewParamsFromNode = staticmethod(GetViewParamsFromNode)
    def GetUseActiveView():
        """GetUseActiveView() -> bool"""
        return _MaxPlus.RenderSettings_GetUseActiveView()

    GetUseActiveView = staticmethod(GetUseActiveView)
    def SetUseActiveView(*args):
        """SetUseActiveView(bool useActiveView)"""
        return _MaxPlus.RenderSettings_SetUseActiveView(*args)

    SetUseActiveView = staticmethod(SetUseActiveView)
    def GetViewID():
        """GetViewID() -> int"""
        return _MaxPlus.RenderSettings_GetViewID()

    GetViewID = staticmethod(GetViewID)
    def SetViewID(*args):
        """SetViewID(int n)"""
        return _MaxPlus.RenderSettings_SetViewID(*args)

    SetViewID = staticmethod(SetViewID)
    def GetPresetCount():
        """GetPresetCount() -> int"""
        return _MaxPlus.RenderSettings_GetPresetCount()

    GetPresetCount = staticmethod(GetPresetCount)
    def GetPresetDisplayName(*args):
        """GetPresetDisplayName(int i) -> wchar_t const *"""
        return _MaxPlus.RenderSettings_GetPresetDisplayName(*args)

    GetPresetDisplayName = staticmethod(GetPresetDisplayName)
    def GetPresetFileName(*args):
        """GetPresetFileName(int i) -> wchar_t const *"""
        return _MaxPlus.RenderSettings_GetPresetFileName(*args)

    GetPresetFileName = staticmethod(GetPresetFileName)
    def GetCurrentRenderElementManager():
        """GetCurrentRenderElementManager() -> RenderElementMgr"""
        return _MaxPlus.RenderSettings_GetCurrentRenderElementManager()

    GetCurrentRenderElementManager = staticmethod(GetCurrentRenderElementManager)
    def GetRenderElementMgr(*args):
        """GetRenderElementMgr(Autodesk::Max::RenderSettingID::Type renderSettingID) -> RenderElementMgr"""
        return _MaxPlus.RenderSettings_GetRenderElementMgr(*args)

    GetRenderElementMgr = staticmethod(GetRenderElementMgr)
    __swig_destroy__ = _MaxPlus.delete_RenderSettings
    __del__ = lambda self : None;
RenderSettings_swigregister = _MaxPlus.RenderSettings_swigregister
RenderSettings_swigregister(RenderSettings)

def RenderSettings_OpenDialog():
  """RenderSettings_OpenDialog()"""
  return _MaxPlus.RenderSettings_OpenDialog()

def RenderSettings_CancelDialog():
  """RenderSettings_CancelDialog()"""
  return _MaxPlus.RenderSettings_CancelDialog()

def RenderSettings_CloseDialog():
  """RenderSettings_CloseDialog()"""
  return _MaxPlus.RenderSettings_CloseDialog()

def RenderSettings_CommitDialogParameters():
  """RenderSettings_CommitDialogParameters()"""
  return _MaxPlus.RenderSettings_CommitDialogParameters()

def RenderSettings_UpdateDialogParameters():
  """RenderSettings_UpdateDialogParameters()"""
  return _MaxPlus.RenderSettings_UpdateDialogParameters()

def RenderSettings_DialogOpen():
  """RenderSettings_DialogOpen() -> bool"""
  return _MaxPlus.RenderSettings_DialogOpen()

def RenderSettings_GetUseIterative():
  """RenderSettings_GetUseIterative() -> bool"""
  return _MaxPlus.RenderSettings_GetUseIterative()

def RenderSettings_SetUseIterative(*args):
  """RenderSettings_SetUseIterative(bool b)"""
  return _MaxPlus.RenderSettings_SetUseIterative(*args)

def RenderSettings_InProgressiveMode():
  """RenderSettings_InProgressiveMode() -> bool"""
  return _MaxPlus.RenderSettings_InProgressiveMode()

def RenderSettings_BeginProgressiveMode():
  """RenderSettings_BeginProgressiveMode()"""
  return _MaxPlus.RenderSettings_BeginProgressiveMode()

def RenderSettings_EndProgressiveMode():
  """RenderSettings_EndProgressiveMode()"""
  return _MaxPlus.RenderSettings_EndProgressiveMode()

def RenderSettings_FormatRenderTime(*args):
  """
    FormatRenderTime(DWORD msec, WStr str, bool hundredths=False)
    RenderSettings_FormatRenderTime(DWORD msec, WStr str)
    """
  return _MaxPlus.RenderSettings_FormatRenderTime(*args)

def RenderSettings_GetFrameList(*args):
  """RenderSettings_GetFrameList(IntList frameNums)"""
  return _MaxPlus.RenderSettings_GetFrameList(*args)

def RenderSettings_GetPickFramesString():
  """RenderSettings_GetPickFramesString() -> WStr"""
  return _MaxPlus.RenderSettings_GetPickFramesString()

def RenderSettings_GetFileNumberBase():
  """RenderSettings_GetFileNumberBase() -> int"""
  return _MaxPlus.RenderSettings_GetFileNumberBase()

def RenderSettings_SetFileNumberBase(*args):
  """RenderSettings_SetFileNumberBase(int n)"""
  return _MaxPlus.RenderSettings_SetFileNumberBase(*args)

def RenderSettings_GetSkipFrames():
  """RenderSettings_GetSkipFrames() -> bool"""
  return _MaxPlus.RenderSettings_GetSkipFrames()

def RenderSettings_SetSkipFrames(*args):
  """RenderSettings_SetSkipFrames(bool onOff)"""
  return _MaxPlus.RenderSettings_SetSkipFrames(*args)

def RenderSettings_GetTimeType():
  """RenderSettings_GetTimeType() -> int"""
  return _MaxPlus.RenderSettings_GetTimeType()

def RenderSettings_SetTimeType(*args):
  """RenderSettings_SetTimeType(int type)"""
  return _MaxPlus.RenderSettings_SetTimeType(*args)

def RenderSettings_GetStart():
  """RenderSettings_GetStart() -> TimeValue"""
  return _MaxPlus.RenderSettings_GetStart()

def RenderSettings_SetStart(*args):
  """RenderSettings_SetStart(TimeValue start)"""
  return _MaxPlus.RenderSettings_SetStart(*args)

def RenderSettings_GetEnd():
  """RenderSettings_GetEnd() -> TimeValue"""
  return _MaxPlus.RenderSettings_GetEnd()

def RenderSettings_SetEnd(*args):
  """RenderSettings_SetEnd(TimeValue end)"""
  return _MaxPlus.RenderSettings_SetEnd(*args)

def RenderSettings_GetNThFrame():
  """RenderSettings_GetNThFrame() -> int"""
  return _MaxPlus.RenderSettings_GetNThFrame()

def RenderSettings_SetNThFrame(*args):
  """RenderSettings_SetNThFrame(int n)"""
  return _MaxPlus.RenderSettings_SetNThFrame(*args)

def RenderSettings_GetAreaType():
  """RenderSettings_GetAreaType() -> int"""
  return _MaxPlus.RenderSettings_GetAreaType()

def RenderSettings_SetAreaType(*args):
  """RenderSettings_SetAreaType(int rtype)"""
  return _MaxPlus.RenderSettings_SetAreaType(*args)

def RenderSettings_GetWidth():
  """RenderSettings_GetWidth() -> int"""
  return _MaxPlus.RenderSettings_GetWidth()

def RenderSettings_SetWidth(*args):
  """RenderSettings_SetWidth(int w)"""
  return _MaxPlus.RenderSettings_SetWidth(*args)

def RenderSettings_GetHeight():
  """RenderSettings_GetHeight() -> int"""
  return _MaxPlus.RenderSettings_GetHeight()

def RenderSettings_SetHeight(*args):
  """RenderSettings_SetHeight(int h)"""
  return _MaxPlus.RenderSettings_SetHeight(*args)

def RenderSettings_GetApertureWidth():
  """RenderSettings_GetApertureWidth() -> float"""
  return _MaxPlus.RenderSettings_GetApertureWidth()

def RenderSettings_SetApertureWidth(*args):
  """RenderSettings_SetApertureWidth(float aw)"""
  return _MaxPlus.RenderSettings_SetApertureWidth(*args)

def RenderSettings_GetPixelAspectRatio():
  """RenderSettings_GetPixelAspectRatio() -> float"""
  return _MaxPlus.RenderSettings_GetPixelAspectRatio()

def RenderSettings_SetPixelAspectRatio(*args):
  """RenderSettings_SetPixelAspectRatio(float a)"""
  return _MaxPlus.RenderSettings_SetPixelAspectRatio(*args)

def RenderSettings_GetImageAspectRatio():
  """RenderSettings_GetImageAspectRatio() -> float"""
  return _MaxPlus.RenderSettings_GetImageAspectRatio()

def RenderSettings_GetAtmosphere():
  """RenderSettings_GetAtmosphere() -> bool"""
  return _MaxPlus.RenderSettings_GetAtmosphere()

def RenderSettings_SetAtmosphere(*args):
  """RenderSettings_SetAtmosphere(bool onOff)"""
  return _MaxPlus.RenderSettings_SetAtmosphere(*args)

def RenderSettings_GetEffects():
  """RenderSettings_GetEffects() -> bool"""
  return _MaxPlus.RenderSettings_GetEffects()

def RenderSettings_SetEffects(*args):
  """RenderSettings_SetEffects(bool onOff)"""
  return _MaxPlus.RenderSettings_SetEffects(*args)

def RenderSettings_GetDisplacement():
  """RenderSettings_GetDisplacement() -> bool"""
  return _MaxPlus.RenderSettings_GetDisplacement()

def RenderSettings_SetDisplacement(*args):
  """RenderSettings_SetDisplacement(bool onOff)"""
  return _MaxPlus.RenderSettings_SetDisplacement(*args)

def RenderSettings_GetColorCheck():
  """RenderSettings_GetColorCheck() -> bool"""
  return _MaxPlus.RenderSettings_GetColorCheck()

def RenderSettings_SetColorCheck(*args):
  """RenderSettings_SetColorCheck(bool onOff)"""
  return _MaxPlus.RenderSettings_SetColorCheck(*args)

def RenderSettings_GetToFields():
  """RenderSettings_GetToFields() -> bool"""
  return _MaxPlus.RenderSettings_GetToFields()

def RenderSettings_SetToFields(*args):
  """RenderSettings_SetToFields(bool onOff)"""
  return _MaxPlus.RenderSettings_SetToFields(*args)

def RenderSettings_GetHidden():
  """RenderSettings_GetHidden() -> bool"""
  return _MaxPlus.RenderSettings_GetHidden()

def RenderSettings_SetHidden(*args):
  """RenderSettings_SetHidden(bool onOff)"""
  return _MaxPlus.RenderSettings_SetHidden(*args)

def RenderSettings_GetSimplifyAreaLights():
  """RenderSettings_GetSimplifyAreaLights() -> bool"""
  return _MaxPlus.RenderSettings_GetSimplifyAreaLights()

def RenderSettings_SetSimplifyAreaLights(*args):
  """RenderSettings_SetSimplifyAreaLights(bool onOff)"""
  return _MaxPlus.RenderSettings_SetSimplifyAreaLights(*args)

def RenderSettings_GetForce2Side():
  """RenderSettings_GetForce2Side() -> bool"""
  return _MaxPlus.RenderSettings_GetForce2Side()

def RenderSettings_SetForce2Side(*args):
  """RenderSettings_SetForce2Side(bool onOff)"""
  return _MaxPlus.RenderSettings_SetForce2Side(*args)

def RenderSettings_GetSuperBlack():
  """RenderSettings_GetSuperBlack() -> bool"""
  return _MaxPlus.RenderSettings_GetSuperBlack()

def RenderSettings_SetSuperBlack(*args):
  """RenderSettings_SetSuperBlack(bool onOff)"""
  return _MaxPlus.RenderSettings_SetSuperBlack(*args)

def RenderSettings_GetSaveFile():
  """RenderSettings_GetSaveFile() -> bool"""
  return _MaxPlus.RenderSettings_GetSaveFile()

def RenderSettings_SetSaveFile(*args):
  """RenderSettings_SetSaveFile(bool onOff)"""
  return _MaxPlus.RenderSettings_SetSaveFile(*args)

def RenderSettings_SetOutputFile(*args):
  """RenderSettings_SetOutputFile(wchar_t const * fileName)"""
  return _MaxPlus.RenderSettings_SetOutputFile(*args)

def RenderSettings_GetOutputFile():
  """RenderSettings_GetOutputFile() -> wchar_t const *"""
  return _MaxPlus.RenderSettings_GetOutputFile()

def RenderSettings_GetUseImageSequence():
  """RenderSettings_GetUseImageSequence() -> bool"""
  return _MaxPlus.RenderSettings_GetUseImageSequence()

def RenderSettings_SetUseImageSequence(*args):
  """RenderSettings_SetUseImageSequence(bool onOff)"""
  return _MaxPlus.RenderSettings_SetUseImageSequence(*args)

def RenderSettings_GetImageSequenceType():
  """RenderSettings_GetImageSequenceType() -> int"""
  return _MaxPlus.RenderSettings_GetImageSequenceType()

def RenderSettings_SetImageSequenceType(*args):
  """RenderSettings_SetImageSequenceType(int type)"""
  return _MaxPlus.RenderSettings_SetImageSequenceType(*args)

def RenderSettings_GetUseNet():
  """RenderSettings_GetUseNet() -> bool"""
  return _MaxPlus.RenderSettings_GetUseNet()

def RenderSettings_SetUseNet(*args):
  """RenderSettings_SetUseNet(bool onOff)"""
  return _MaxPlus.RenderSettings_SetUseNet(*args)

def RenderSettings_GetUseDevice():
  """RenderSettings_GetUseDevice() -> bool"""
  return _MaxPlus.RenderSettings_GetUseDevice()

def RenderSettings_SetUseDevice(*args):
  """RenderSettings_SetUseDevice(bool onOff)"""
  return _MaxPlus.RenderSettings_SetUseDevice(*args)

def RenderSettings_GetFileBitmapInfo():
  """RenderSettings_GetFileBitmapInfo() -> BitmapInfo"""
  return _MaxPlus.RenderSettings_GetFileBitmapInfo()

def RenderSettings_GetDeviceBitmapInfo():
  """RenderSettings_GetDeviceBitmapInfo() -> BitmapInfo"""
  return _MaxPlus.RenderSettings_GetDeviceBitmapInfo()

def RenderSettings_GetShowVFB():
  """RenderSettings_GetShowVFB() -> bool"""
  return _MaxPlus.RenderSettings_GetShowVFB()

def RenderSettings_SetShowVFB(*args):
  """RenderSettings_SetShowVFB(bool onOff)"""
  return _MaxPlus.RenderSettings_SetShowVFB(*args)

def RenderSettings_GetPreScriptFile():
  """RenderSettings_GetPreScriptFile() -> WStr"""
  return _MaxPlus.RenderSettings_GetPreScriptFile()

def RenderSettings_SetPreScriptFile(*args):
  """RenderSettings_SetPreScriptFile(wchar_t const * filepath)"""
  return _MaxPlus.RenderSettings_SetPreScriptFile(*args)

def RenderSettings_GetUsePreScript():
  """RenderSettings_GetUsePreScript() -> bool"""
  return _MaxPlus.RenderSettings_GetUsePreScript()

def RenderSettings_SetUsePreScript(*args):
  """RenderSettings_SetUsePreScript(bool onOff)"""
  return _MaxPlus.RenderSettings_SetUsePreScript(*args)

def RenderSettings_GetLocalPreScript():
  """RenderSettings_GetLocalPreScript() -> bool"""
  return _MaxPlus.RenderSettings_GetLocalPreScript()

def RenderSettings_SetLocalPreScript(*args):
  """RenderSettings_SetLocalPreScript(bool onOff)"""
  return _MaxPlus.RenderSettings_SetLocalPreScript(*args)

def RenderSettings_GetPostScriptFile():
  """RenderSettings_GetPostScriptFile() -> WStr"""
  return _MaxPlus.RenderSettings_GetPostScriptFile()

def RenderSettings_SetPostScriptFile(*args):
  """RenderSettings_SetPostScriptFile(wchar_t const * filepath)"""
  return _MaxPlus.RenderSettings_SetPostScriptFile(*args)

def RenderSettings_GetUsePostScript():
  """RenderSettings_GetUsePostScript() -> bool"""
  return _MaxPlus.RenderSettings_GetUsePostScript()

def RenderSettings_SetUsePostScript(*args):
  """RenderSettings_SetUsePostScript(bool onOff)"""
  return _MaxPlus.RenderSettings_SetUsePostScript(*args)

def RenderSettings_CreateDefaultScanline():
  """RenderSettings_CreateDefaultScanline() -> IScanRenderer"""
  return _MaxPlus.RenderSettings_CreateDefaultScanline()

def RenderSettings_CreateDefault(*args):
  """RenderSettings_CreateDefault(Autodesk::Max::RenderSettingID::Type id) -> Renderer"""
  return _MaxPlus.RenderSettings_CreateDefault(*args)

def RenderSettings_GetDefaultRendererClassID(*args):
  """RenderSettings_GetDefaultRendererClassID(Autodesk::Max::RenderSettingID::Type renderSettingID) -> Class_ID"""
  return _MaxPlus.RenderSettings_GetDefaultRendererClassID(*args)

def RenderSettings_SetDefaultRendererClassID(*args):
  """RenderSettings_SetDefaultRendererClassID(Autodesk::Max::RenderSettingID::Type renderSettingID, Class_ID classID)"""
  return _MaxPlus.RenderSettings_SetDefaultRendererClassID(*args)

def RenderSettings_GetCurrent(createRendererIfItDoesntExist=True):
  """
    GetCurrent(bool createRendererIfItDoesntExist=True) -> Renderer
    RenderSettings_GetCurrent() -> Renderer
    """
  return _MaxPlus.RenderSettings_GetCurrent(createRendererIfItDoesntExist)

def RenderSettings_SetCurrent(*args):
  """RenderSettings_SetCurrent(Renderer rend)"""
  return _MaxPlus.RenderSettings_SetCurrent(*args)

def RenderSettings_GetProduction(createRendererIfItDoesntExist=True):
  """
    GetProduction(bool createRendererIfItDoesntExist=True) -> Renderer
    RenderSettings_GetProduction() -> Renderer
    """
  return _MaxPlus.RenderSettings_GetProduction(createRendererIfItDoesntExist)

def RenderSettings_SetProduction(*args):
  """RenderSettings_SetProduction(Renderer rend)"""
  return _MaxPlus.RenderSettings_SetProduction(*args)

def RenderSettings_GetDraft(createRendererIfItDoesntExist=True):
  """
    GetDraft(bool createRendererIfItDoesntExist=True) -> Renderer
    RenderSettings_GetDraft() -> Renderer
    """
  return _MaxPlus.RenderSettings_GetDraft(createRendererIfItDoesntExist)

def RenderSettings_SetDraft(*args):
  """RenderSettings_SetDraft(Renderer rend)"""
  return _MaxPlus.RenderSettings_SetDraft(*args)

def RenderSettings_Get(*args):
  """
    Get(Autodesk::Max::RenderSettingID::Type renderSettingID, bool createRendererIfItDoesntExist=True) -> Renderer
    RenderSettings_Get(Autodesk::Max::RenderSettingID::Type renderSettingID) -> Renderer
    """
  return _MaxPlus.RenderSettings_Get(*args)

def RenderSettings_Set(*args):
  """RenderSettings_Set(Autodesk::Max::RenderSettingID::Type renderSettingID, Renderer rend)"""
  return _MaxPlus.RenderSettings_Set(*args)

def RenderSettings_GetUseDraft():
  """RenderSettings_GetUseDraft() -> bool"""
  return _MaxPlus.RenderSettings_GetUseDraft()

def RenderSettings_SetUseDraft(*args):
  """RenderSettings_SetUseDraft(bool b)"""
  return _MaxPlus.RenderSettings_SetUseDraft(*args)

def RenderSettings_GetCurrentSetting():
  """RenderSettings_GetCurrentSetting() -> Autodesk::Max::RenderSettingID::Type"""
  return _MaxPlus.RenderSettings_GetCurrentSetting()

def RenderSettings_SetCurrentSetting(*args):
  """RenderSettings_SetCurrentSetting(Autodesk::Max::RenderSettingID::Type renderSettingID)"""
  return _MaxPlus.RenderSettings_SetCurrentSetting(*args)

def RenderSettings_GetMEditRenderer(createRendererIfItDoesntExist=True):
  """
    GetMEditRenderer(bool createRendererIfItDoesntExist=True) -> Renderer
    RenderSettings_GetMEditRenderer() -> Renderer
    """
  return _MaxPlus.RenderSettings_GetMEditRenderer(createRendererIfItDoesntExist)

def RenderSettings_SetMEditRenderer(*args):
  """RenderSettings_SetMEditRenderer(Renderer renderer)"""
  return _MaxPlus.RenderSettings_SetMEditRenderer(*args)

def RenderSettings_GetActualMEditRenderer(createRendererIfItDoesntExist=True):
  """
    GetActualMEditRenderer(bool createRendererIfItDoesntExist=True) -> Renderer
    RenderSettings_GetActualMEditRenderer() -> Renderer
    """
  return _MaxPlus.RenderSettings_GetActualMEditRenderer(createRendererIfItDoesntExist)

def RenderSettings_GetMEditRendererLocked():
  """RenderSettings_GetMEditRendererLocked() -> bool"""
  return _MaxPlus.RenderSettings_GetMEditRendererLocked()

def RenderSettings_SetMEditRendererLocked(*args):
  """RenderSettings_SetMEditRendererLocked(bool locked)"""
  return _MaxPlus.RenderSettings_SetMEditRendererLocked(*args)

def RenderSettings_GetMEditRendererLocked_Default():
  """RenderSettings_GetMEditRendererLocked_Default() -> bool"""
  return _MaxPlus.RenderSettings_GetMEditRendererLocked_Default()

def RenderSettings_SetMEditRendererLocked_Default(*args):
  """RenderSettings_SetMEditRendererLocked_Default(bool locked)"""
  return _MaxPlus.RenderSettings_SetMEditRendererLocked_Default(*args)

def RenderSettings_ShouldContinueOnError():
  """RenderSettings_ShouldContinueOnError() -> bool"""
  return _MaxPlus.RenderSettings_ShouldContinueOnError()

def RenderSettings_SetupParameters(*args):
  """
    SetupParameters(RendParams rp, Viewport vpt, Autodesk::Max::RendType::Type t=(RendType::Type) RENDTYPE_NORMAL)
    RenderSettings_SetupParameters(RendParams rp, Viewport vpt)
    """
  return _MaxPlus.RenderSettings_SetupParameters(*args)

def RenderSettings_GetCamera():
  """RenderSettings_GetCamera() -> INode"""
  return _MaxPlus.RenderSettings_GetCamera()

def RenderSettings_SetCamera(*args):
  """RenderSettings_SetCamera(INode camNode)"""
  return _MaxPlus.RenderSettings_SetCamera(*args)

def RenderSettings_IsActive():
  """RenderSettings_IsActive() -> bool"""
  return _MaxPlus.RenderSettings_IsActive()

def RenderSettings_GetLastRenderedImage():
  """RenderSettings_GetLastRenderedImage() -> Bitmap"""
  return _MaxPlus.RenderSettings_GetLastRenderedImage()

def RenderSettings_ColorById(*args):
  """RenderSettings_ColorById(DWORD id, Color c)"""
  return _MaxPlus.RenderSettings_ColorById(*args)

def RenderSettings_GetViewParamsFromNode(*args):
  """RenderSettings_GetViewParamsFromNode(INode vnode, ViewParams vp, TimeValue t)"""
  return _MaxPlus.RenderSettings_GetViewParamsFromNode(*args)

def RenderSettings_GetUseActiveView():
  """RenderSettings_GetUseActiveView() -> bool"""
  return _MaxPlus.RenderSettings_GetUseActiveView()

def RenderSettings_SetUseActiveView(*args):
  """RenderSettings_SetUseActiveView(bool useActiveView)"""
  return _MaxPlus.RenderSettings_SetUseActiveView(*args)

def RenderSettings_GetViewID():
  """RenderSettings_GetViewID() -> int"""
  return _MaxPlus.RenderSettings_GetViewID()

def RenderSettings_SetViewID(*args):
  """RenderSettings_SetViewID(int n)"""
  return _MaxPlus.RenderSettings_SetViewID(*args)

def RenderSettings_GetPresetCount():
  """RenderSettings_GetPresetCount() -> int"""
  return _MaxPlus.RenderSettings_GetPresetCount()

def RenderSettings_GetPresetDisplayName(*args):
  """RenderSettings_GetPresetDisplayName(int i) -> wchar_t const *"""
  return _MaxPlus.RenderSettings_GetPresetDisplayName(*args)

def RenderSettings_GetPresetFileName(*args):
  """RenderSettings_GetPresetFileName(int i) -> wchar_t const *"""
  return _MaxPlus.RenderSettings_GetPresetFileName(*args)

def RenderSettings_GetCurrentRenderElementManager():
  """RenderSettings_GetCurrentRenderElementManager() -> RenderElementMgr"""
  return _MaxPlus.RenderSettings_GetCurrentRenderElementManager()

def RenderSettings_GetRenderElementMgr(*args):
  """RenderSettings_GetRenderElementMgr(Autodesk::Max::RenderSettingID::Type renderSettingID) -> RenderElementMgr"""
  return _MaxPlus.RenderSettings_GetRenderElementMgr(*args)

class RenderExecute(object):
    """Utility functions for controlling the rendering process."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Close(*args):
        """Close(Renderer pRenderer)"""
        return _MaxPlus.RenderExecute_Close(*args)

    Close = staticmethod(Close)
    def Open(*args):
        """
        Open(Renderer pRenderer, INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0, int h=0) -> bool
        Open(Renderer pRenderer, INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0) -> bool
        Open(Renderer pRenderer, INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
        Open(Renderer pRenderer, INode camNode) -> bool
        Open(Renderer pRenderer, Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0, int h=0) -> bool
        Open(Renderer pRenderer, Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0) -> bool
        Open(Renderer pRenderer, Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
        Open(Renderer pRenderer, Viewport view) -> bool
        Open(Renderer pRenderer, ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0, int h=0) -> bool
        Open(Renderer pRenderer, ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0) -> bool
        Open(Renderer pRenderer, ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
        Open(Renderer pRenderer, ViewParams vpar) -> bool
        Open(INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0, int h=0) -> bool
        Open(INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0) -> bool
        Open(INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
        Open(INode camNode) -> bool
        Open(Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0, int h=0) -> bool
        Open(Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0) -> bool
        Open(Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
        Open(Viewport view) -> bool
        Open(ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0, int h=0) -> bool
        Open(ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
            int w=0) -> bool
        Open(ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
        Open(ViewParams vpar) -> bool
        """
        return _MaxPlus.RenderExecute_Open(*args)

    Open = staticmethod(Open)
    def RenderFrame(*args):
        """
        RenderFrame(Renderer pRenderer, Bitmap rendbm, TimeValue t=Autodesk::Max::Now(), float frameDur=1.0) -> bool
        RenderFrame(Renderer pRenderer, Bitmap rendbm, TimeValue t=Autodesk::Max::Now()) -> bool
        RenderFrame(Renderer pRenderer, Bitmap rendbm) -> bool
        RenderFrame(Renderer pRenderer, Bitmap rendbm, ViewParams vpar, TimeValue t=Autodesk::Max::Now(), 
            float frameDur=1.0) -> bool
        RenderFrame(Renderer pRenderer, Bitmap rendbm, ViewParams vpar, TimeValue t=Autodesk::Max::Now()) -> bool
        RenderFrame(Renderer pRenderer, Bitmap rendbm, ViewParams vpar) -> bool
        RenderFrame(Bitmap rendbm, TimeValue t=Autodesk::Max::Now(), float frameDur=1.0) -> bool
        RenderFrame(Bitmap rendbm, TimeValue t=Autodesk::Max::Now()) -> bool
        RenderFrame(Bitmap rendbm) -> bool
        RenderFrame(Bitmap rendbm, ViewParams vpar, TimeValue t=Autodesk::Max::Now(), float frameDur=1.0) -> bool
        RenderFrame(Bitmap rendbm, ViewParams vpar, TimeValue t=Autodesk::Max::Now()) -> bool
        RenderFrame(Bitmap rendbm, ViewParams vpar) -> bool
        """
        return _MaxPlus.RenderExecute_RenderFrame(*args)

    RenderFrame = staticmethod(RenderFrame)
    def CloseCurrent():
        """CloseCurrent()"""
        return _MaxPlus.RenderExecute_CloseCurrent()

    CloseCurrent = staticmethod(CloseCurrent)
    def QuickRender(*args):
        """
        QuickRender(Bitmap rendbm, TimeValue t=Autodesk::Max::Now()) -> bool
        QuickRender(Bitmap rendbm) -> bool
        QuickRender(TimeValue t=Autodesk::Max::Now()) -> bool
        QuickRender() -> bool
        """
        return _MaxPlus.RenderExecute_QuickRender(*args)

    QuickRender = staticmethod(QuickRender)
    def CreatePreview(*args):
        """
        CreatePreview(PreviewParams pvp)
        CreatePreview()
        """
        return _MaxPlus.RenderExecute_CreatePreview(*args)

    CreatePreview = staticmethod(CreatePreview)
    __swig_destroy__ = _MaxPlus.delete_RenderExecute
    __del__ = lambda self : None;
RenderExecute_swigregister = _MaxPlus.RenderExecute_swigregister
RenderExecute_swigregister(RenderExecute)

def RenderExecute_Close(*args):
  """RenderExecute_Close(Renderer pRenderer)"""
  return _MaxPlus.RenderExecute_Close(*args)

def RenderExecute_Open(*args):
  """
    Open(Renderer pRenderer, INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0, int h=0) -> bool
    Open(Renderer pRenderer, INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0) -> bool
    Open(Renderer pRenderer, INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
    Open(Renderer pRenderer, INode camNode) -> bool
    Open(Renderer pRenderer, Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0, int h=0) -> bool
    Open(Renderer pRenderer, Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0) -> bool
    Open(Renderer pRenderer, Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
    Open(Renderer pRenderer, Viewport view) -> bool
    Open(Renderer pRenderer, ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0, int h=0) -> bool
    Open(Renderer pRenderer, ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0) -> bool
    Open(Renderer pRenderer, ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
    Open(Renderer pRenderer, ViewParams vpar) -> bool
    Open(INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0, int h=0) -> bool
    Open(INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0) -> bool
    Open(INode camNode, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
    Open(INode camNode) -> bool
    Open(Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0, int h=0) -> bool
    Open(Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0) -> bool
    Open(Viewport view, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
    Open(Viewport view) -> bool
    Open(ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0, int h=0) -> bool
    Open(ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL, 
        int w=0) -> bool
    Open(ViewParams vpar, Autodesk::Max::RendType::Type type=(RendType::Type) RENDTYPE_NORMAL) -> bool
    RenderExecute_Open(ViewParams vpar) -> bool
    """
  return _MaxPlus.RenderExecute_Open(*args)

def RenderExecute_RenderFrame(*args):
  """
    RenderFrame(Renderer pRenderer, Bitmap rendbm, TimeValue t=Autodesk::Max::Now(), float frameDur=1.0) -> bool
    RenderFrame(Renderer pRenderer, Bitmap rendbm, TimeValue t=Autodesk::Max::Now()) -> bool
    RenderFrame(Renderer pRenderer, Bitmap rendbm) -> bool
    RenderFrame(Renderer pRenderer, Bitmap rendbm, ViewParams vpar, TimeValue t=Autodesk::Max::Now(), 
        float frameDur=1.0) -> bool
    RenderFrame(Renderer pRenderer, Bitmap rendbm, ViewParams vpar, TimeValue t=Autodesk::Max::Now()) -> bool
    RenderFrame(Renderer pRenderer, Bitmap rendbm, ViewParams vpar) -> bool
    RenderFrame(Bitmap rendbm, TimeValue t=Autodesk::Max::Now(), float frameDur=1.0) -> bool
    RenderFrame(Bitmap rendbm, TimeValue t=Autodesk::Max::Now()) -> bool
    RenderFrame(Bitmap rendbm) -> bool
    RenderFrame(Bitmap rendbm, ViewParams vpar, TimeValue t=Autodesk::Max::Now(), float frameDur=1.0) -> bool
    RenderFrame(Bitmap rendbm, ViewParams vpar, TimeValue t=Autodesk::Max::Now()) -> bool
    RenderExecute_RenderFrame(Bitmap rendbm, ViewParams vpar) -> bool
    """
  return _MaxPlus.RenderExecute_RenderFrame(*args)

def RenderExecute_CloseCurrent():
  """RenderExecute_CloseCurrent()"""
  return _MaxPlus.RenderExecute_CloseCurrent()

def RenderExecute_QuickRender(*args):
  """
    QuickRender(Bitmap rendbm, TimeValue t=Autodesk::Max::Now()) -> bool
    QuickRender(Bitmap rendbm) -> bool
    QuickRender(TimeValue t=Autodesk::Max::Now()) -> bool
    RenderExecute_QuickRender() -> bool
    """
  return _MaxPlus.RenderExecute_QuickRender(*args)

def RenderExecute_CreatePreview(*args):
  """
    CreatePreview(PreviewParams pvp)
    RenderExecute_CreatePreview()
    """
  return _MaxPlus.RenderExecute_CreatePreview(*args)

class Viewport(InterfaceServer):
    """Represents a UI viewport used for displaying and interacting with the scene."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Viewport"""
        return _MaxPlus.Viewport__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Viewport self, Wrapper w) -> bool"""
        return _MaxPlus.Viewport___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Viewport self, Wrapper w) -> bool"""
        return _MaxPlus.Viewport___ne__(self, *args)

    def GetPointOnCP(self, *args):
        """GetPointOnCP(Viewport self, IPoint2 ps) -> Point3"""
        return _MaxPlus.Viewport_GetPointOnCP(self, *args)

    def SnapPoint(self, *args):
        """
        SnapPoint(Viewport self, IPoint2 inValue, IPoint2 outValue, Matrix3 plane2d, DWORD flags=0) -> Point3
        SnapPoint(Viewport self, IPoint2 inValue, IPoint2 outValue, Matrix3 plane2d) -> Point3
        SnapPoint(Viewport self, IPoint2 inValue, IPoint2 outValue, DWORD flags=0) -> Point3
        SnapPoint(Viewport self, IPoint2 inValue, IPoint2 outValue) -> Point3
        """
        return _MaxPlus.Viewport_SnapPoint(self, *args)

    def SnapPreview(self, *args):
        """
        SnapPreview(Viewport self, IPoint2 inValue, IPoint2 outValue, Matrix3 plane2d, DWORD flags=0)
        SnapPreview(Viewport self, IPoint2 inValue, IPoint2 outValue, Matrix3 plane2d)
        SnapPreview(Viewport self, IPoint2 inValue, IPoint2 outValue, DWORD flags=0)
        SnapPreview(Viewport self, IPoint2 inValue, IPoint2 outValue)
        """
        return _MaxPlus.Viewport_SnapPreview(self, *args)

    def SnapLength(self, *args):
        """SnapLength(Viewport self, float inValue) -> float"""
        return _MaxPlus.Viewport_SnapLength(self, *args)

    def GetCPDisp(self, *args):
        """
        GetCPDisp(Viewport self, Point3 base, Point3 dir, IPoint2 sp1, IPoint2 sp2, bool snap=True) -> float
        GetCPDisp(Viewport self, Point3 base, Point3 dir, IPoint2 sp1, IPoint2 sp2) -> float
        """
        return _MaxPlus.Viewport_GetCPDisp(self, *args)

    def IsWire(self):
        """IsWire(Viewport self) -> int"""
        return _MaxPlus.Viewport_IsWire(self)

    def GetDamageRect(self):
        """GetDamageRect(Viewport self) -> Box2"""
        return _MaxPlus.Viewport_GetDamageRect(self)

    def MapScreenToView(self, *args):
        """MapScreenToView(Viewport self, IPoint2 sp, float depth) -> Point3"""
        return _MaxPlus.Viewport_MapScreenToView(self, *args)

    def MapScreenToWorldRay(self, *args):
        """MapScreenToWorldRay(Viewport self, float sx, float sy, Ray ray)"""
        return _MaxPlus.Viewport_MapScreenToWorldRay(self, *args)

    def GetViewMatrix(self):
        """GetViewMatrix(Viewport self) -> Matrix3"""
        return _MaxPlus.Viewport_GetViewMatrix(self)

    def SetViewMatrix(self, *args):
        """SetViewMatrix(Viewport self, Matrix3 m) -> bool"""
        return _MaxPlus.Viewport_SetViewMatrix(self, *args)

    def GetViewType(self):
        """GetViewType(Viewport self) -> int"""
        return _MaxPlus.Viewport_GetViewType(self)

    def IsPerspView(self):
        """IsPerspView(Viewport self) -> bool"""
        return _MaxPlus.Viewport_IsPerspView(self)

    def GetFOV(self):
        """GetFOV(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetFOV(self)

    def GetFocalDist(self):
        """GetFocalDist(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetFocalDist(self)

    def SetFocalDist(self, *args):
        """SetFocalDist(Viewport self, float fd)"""
        return _MaxPlus.Viewport_SetFocalDist(self, *args)

    def GetScreenScaleFactor(self, *args):
        """GetScreenScaleFactor(Viewport self, Point3 worldPoint) -> float"""
        return _MaxPlus.Viewport_GetScreenScaleFactor(self, *args)

    def GetFPS(self):
        """GetFPS(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetFPS(self)

    def GetVPWorldWidth(self, *args):
        """GetVPWorldWidth(Viewport self, Point3 wPoint) -> float"""
        return _MaxPlus.Viewport_GetVPWorldWidth(self, *args)

    def MapCPToWorld(self, *args):
        """MapCPToWorld(Viewport self, Point3 cpPoint) -> Point3"""
        return _MaxPlus.Viewport_MapCPToWorld(self, *args)

    def GetConstructionTM(self, *args):
        """GetConstructionTM(Viewport self, Matrix3 tm)"""
        return _MaxPlus.Viewport_GetConstructionTM(self, *args)

    def SetGridSize(self, *args):
        """SetGridSize(Viewport self, float size)"""
        return _MaxPlus.Viewport_SetGridSize(self, *args)

    def GetGridSize(self):
        """GetGridSize(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetGridSize(self)

    def IsGridVisible(self):
        """IsGridVisible(Viewport self) -> bool"""
        return _MaxPlus.Viewport_IsGridVisible(self)

    def GetGridType(self):
        """GetGridType(Viewport self) -> int"""
        return _MaxPlus.Viewport_GetGridType(self)

    def GetViewCamera(self):
        """GetViewCamera(Viewport self) -> INode"""
        return _MaxPlus.Viewport_GetViewCamera(self)

    def SetViewCamera(self, *args):
        """SetViewCamera(Viewport self, INode camNode)"""
        return _MaxPlus.Viewport_SetViewCamera(self, *args)

    def SetViewUser(self, *args):
        """SetViewUser(Viewport self, bool persp)"""
        return _MaxPlus.Viewport_SetViewUser(self, *args)

    def GetViewSpot(self):
        """GetViewSpot(Viewport self) -> INode"""
        return _MaxPlus.Viewport_GetViewSpot(self)

    def SetViewSpot(self, *args):
        """SetViewSpot(Viewport self, INode spotNode)"""
        return _MaxPlus.Viewport_SetViewSpot(self, *args)

    def NonScalingObjectSize(self):
        """NonScalingObjectSize(Viewport self) -> float"""
        return _MaxPlus.Viewport_NonScalingObjectSize(self)

    def SetBkgImageDsp(self, *args):
        """SetBkgImageDsp(Viewport self, bool onOff) -> bool"""
        return _MaxPlus.Viewport_SetBkgImageDsp(self, *args)

    def GetBkgImageDsp(self):
        """GetBkgImageDsp(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetBkgImageDsp(self)

    def SetSFDisplay(self, *args):
        """SetSFDisplay(Viewport self, bool onOff)"""
        return _MaxPlus.Viewport_SetSFDisplay(self, *args)

    def GetSFDisplay(self):
        """GetSFDisplay(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetSFDisplay(self)

    def GetHWnd(self):
        """GetHWnd(Viewport self) -> HWND"""
        return _MaxPlus.Viewport_GetHWnd(self)

    def IsActive(self):
        """IsActive(Viewport self) -> bool"""
        return _MaxPlus.Viewport_IsActive(self)

    def IsEnabled(self):
        """IsEnabled(Viewport self) -> bool"""
        return _MaxPlus.Viewport_IsEnabled(self)

    def TrackImplicitGrid(self, *args):
        """
        TrackImplicitGrid(Viewport self, IPoint2 m, Matrix3 mat, ULONG hitTestFlags=0)
        TrackImplicitGrid(Viewport self, IPoint2 m, Matrix3 mat)
        TrackImplicitGrid(Viewport self, IPoint2 m, ULONG hitTestFlags=0)
        TrackImplicitGrid(Viewport self, IPoint2 m)
        """
        return _MaxPlus.Viewport_TrackImplicitGrid(self, *args)

    def CommitImplicitGrid(self, *args):
        """
        CommitImplicitGrid(Viewport self, IPoint2 m, int mouseflags, Matrix3 mat)
        CommitImplicitGrid(Viewport self, IPoint2 m, int mouseflags)
        """
        return _MaxPlus.Viewport_CommitImplicitGrid(self, *args)

    def ReleaseImplicitGrid(self):
        """ReleaseImplicitGrid(Viewport self)"""
        return _MaxPlus.Viewport_ReleaseImplicitGrid(self)

    def InvalidateRect(self, *args):
        """InvalidateRect(Viewport self, Box2 rect)"""
        return _MaxPlus.Viewport_InvalidateRect(self, *args)

    def Pan(self, *args):
        """Pan(Viewport self, Point2 screenDelta)"""
        return _MaxPlus.Viewport_Pan(self, *args)

    def Zoom(self, *args):
        """Zoom(Viewport self, float zoomFactor)"""
        return _MaxPlus.Viewport_Zoom(self, *args)

    def Rotate(self, *args):
        """
        Rotate(Viewport self, Quat rotData, Point3 center=Autodesk::Max::Point3())
        Rotate(Viewport self, Quat rotData)
        """
        return _MaxPlus.Viewport_Rotate(self, *args)

    def SetFocalDistance(self, *args):
        """SetFocalDistance(Viewport self, float dist)"""
        return _MaxPlus.Viewport_SetFocalDistance(self, *args)

    def UndoBegin(self):
        """UndoBegin(Viewport self) -> bool"""
        return _MaxPlus.Viewport_UndoBegin(self)

    def UndoAccept(self):
        """UndoAccept(Viewport self) -> bool"""
        return _MaxPlus.Viewport_UndoAccept(self)

    def Invalidate(self, bForegroundOnly=False):
        """
        Invalidate(Viewport self, bool bForegroundOnly=False)
        Invalidate(Viewport self)
        """
        return _MaxPlus.Viewport_Invalidate(self, bForegroundOnly)

    def IsValid(self):
        """IsValid(Viewport self) -> bool"""
        return _MaxPlus.Viewport_IsValid(self)

    def GetAdaptiveDegGoalFPS(self):
        """GetAdaptiveDegGoalFPS(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetAdaptiveDegGoalFPS(self)

    def SetAdaptiveDegGoalFPS(self, *args):
        """SetAdaptiveDegGoalFPS(Viewport self, float fFPS)"""
        return _MaxPlus.Viewport_SetAdaptiveDegGoalFPS(self, *args)

    def GetAdaptiveDegDisplayModeCurrent(self):
        """GetAdaptiveDegDisplayModeCurrent(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetAdaptiveDegDisplayModeCurrent(self)

    def SetAdaptiveDegDisplayModeCurrent(self, *args):
        """SetAdaptiveDegDisplayModeCurrent(Viewport self, bool bMode)"""
        return _MaxPlus.Viewport_SetAdaptiveDegDisplayModeCurrent(self, *args)

    def GetAdaptiveDegDisplayModeFastShaded(self):
        """GetAdaptiveDegDisplayModeFastShaded(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetAdaptiveDegDisplayModeFastShaded(self)

    def SetAdaptiveDegDisplayModeFastShaded(self, *args):
        """SetAdaptiveDegDisplayModeFastShaded(Viewport self, bool bMode)"""
        return _MaxPlus.Viewport_SetAdaptiveDegDisplayModeFastShaded(self, *args)

    def GetAdaptiveDegDisplayModeWire(self):
        """GetAdaptiveDegDisplayModeWire(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetAdaptiveDegDisplayModeWire(self)

    def SetAdaptiveDegDisplayModeWire(self, *args):
        """SetAdaptiveDegDisplayModeWire(Viewport self, bool bMode)"""
        return _MaxPlus.Viewport_SetAdaptiveDegDisplayModeWire(self, *args)

    def GetAdaptiveDegDisplayModeBox(self):
        """GetAdaptiveDegDisplayModeBox(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetAdaptiveDegDisplayModeBox(self)

    def SetAdaptiveDegDisplayModeBox(self, *args):
        """SetAdaptiveDegDisplayModeBox(Viewport self, bool bMode)"""
        return _MaxPlus.Viewport_SetAdaptiveDegDisplayModeBox(self, *args)

    def GetAdaptiveDegDisplayModePoint(self):
        """GetAdaptiveDegDisplayModePoint(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetAdaptiveDegDisplayModePoint(self)

    def SetAdaptiveDegDisplayModePoint(self, *args):
        """SetAdaptiveDegDisplayModePoint(Viewport self, bool bMode)"""
        return _MaxPlus.Viewport_SetAdaptiveDegDisplayModePoint(self, *args)

    def GetAdaptiveDegDisplayModeHide(self):
        """GetAdaptiveDegDisplayModeHide(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetAdaptiveDegDisplayModeHide(self)

    def SetAdaptiveDegDisplayModeHide(self, *args):
        """SetAdaptiveDegDisplayModeHide(Viewport self, bool bMode)"""
        return _MaxPlus.Viewport_SetAdaptiveDegDisplayModeHide(self, *args)

    def GetAdaptiveDegDrawBackface(self):
        """GetAdaptiveDegDrawBackface(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetAdaptiveDegDrawBackface(self)

    def SetAdaptiveDegDrawBackface(self, *args):
        """SetAdaptiveDegDrawBackface(Viewport self, bool bDraw)"""
        return _MaxPlus.Viewport_SetAdaptiveDegDrawBackface(self, *args)

    def GetAdaptiveDegNeverDegradeSelected(self):
        """GetAdaptiveDegNeverDegradeSelected(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetAdaptiveDegNeverDegradeSelected(self)

    def SetAdaptiveDegNeverDegradeSelected(self, *args):
        """SetAdaptiveDegNeverDegradeSelected(Viewport self, bool bNeverDegrade)"""
        return _MaxPlus.Viewport_SetAdaptiveDegNeverDegradeSelected(self, *args)

    def GetAdaptiveDegDegradeLight(self):
        """GetAdaptiveDegDegradeLight(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetAdaptiveDegDegradeLight(self)

    def SetAdaptiveDegDegradeLight(self, *args):
        """SetAdaptiveDegDegradeLight(Viewport self, bool bDegradeLight)"""
        return _MaxPlus.Viewport_SetAdaptiveDegDegradeLight(self, *args)

    def GetAdaptiveDegNeverRedrawAfterDegrade(self):
        """GetAdaptiveDegNeverRedrawAfterDegrade(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetAdaptiveDegNeverRedrawAfterDegrade(self)

    def SetAdaptiveDegNeverRedrawAfterDegrade(self, *args):
        """SetAdaptiveDegNeverRedrawAfterDegrade(Viewport self, bool bNeverRedraw)"""
        return _MaxPlus.Viewport_SetAdaptiveDegNeverRedrawAfterDegrade(self, *args)

    def GetAdaptiveDegCameraDistancePriority(self):
        """GetAdaptiveDegCameraDistancePriority(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetAdaptiveDegCameraDistancePriority(self)

    def SetAdaptiveDegCameraDistancePriority(self, *args):
        """SetAdaptiveDegCameraDistancePriority(Viewport self, float fPriority)"""
        return _MaxPlus.Viewport_SetAdaptiveDegCameraDistancePriority(self, *args)

    def GetAdaptiveDegScreenSizePriority(self):
        """GetAdaptiveDegScreenSizePriority(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetAdaptiveDegScreenSizePriority(self)

    def SetAdaptiveDegScreenSizePriority(self, *args):
        """SetAdaptiveDegScreenSizePriority(Viewport self, float fPriority)"""
        return _MaxPlus.Viewport_SetAdaptiveDegScreenSizePriority(self, *args)

    def GetAdaptiveDegMinSize(self):
        """GetAdaptiveDegMinSize(Viewport self) -> int"""
        return _MaxPlus.Viewport_GetAdaptiveDegMinSize(self)

    def SetAdaptiveDegMinSize(self, *args):
        """SetAdaptiveDegMinSize(Viewport self, int iMinSize)"""
        return _MaxPlus.Viewport_SetAdaptiveDegMinSize(self, *args)

    def SetFOV(self, *args):
        """SetFOV(Viewport self, float fov) -> bool"""
        return _MaxPlus.Viewport_SetFOV(self, *args)

    def GetViewportFPS(self):
        """GetViewportFPS(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetViewportFPS(self)

    def GetViewportClipScale(self):
        """GetViewportClipScale(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetViewportClipScale(self)

    def SetViewportClipScale(self, *args):
        """SetViewportClipScale(Viewport self, float fScale)"""
        return _MaxPlus.Viewport_SetViewportClipScale(self, *args)

    def IsDegrading(self):
        """IsDegrading(Viewport self) -> bool"""
        return _MaxPlus.Viewport_IsDegrading(self)

    def GetSingleDefaultLight(self):
        """GetSingleDefaultLight(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetSingleDefaultLight(self)

    def UpdateLabel(self):
        """UpdateLabel(Viewport self)"""
        return _MaxPlus.Viewport_UpdateLabel(self)

    def GetZoom(self):
        """GetZoom(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetZoom(self)

    def GetHither(self):
        """GetHither(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetHither(self)

    def GetYon(self):
        """GetYon(Viewport self) -> float"""
        return _MaxPlus.Viewport_GetYon(self)

    def SetEdgedFaces(self, *args):
        """SetEdgedFaces(Viewport self, bool md)"""
        return _MaxPlus.Viewport_SetEdgedFaces(self, *args)

    def GetEdgedFaces(self):
        """GetEdgedFaces(Viewport self) -> bool"""
        return _MaxPlus.Viewport_GetEdgedFaces(self)

    def GetDIB(self, *args):
        """GetDIB(Viewport self, BitmapInfo bi, Bitmap bmp) -> bool"""
        return _MaxPlus.Viewport_GetDIB(self, *args)

    __swig_destroy__ = _MaxPlus.delete_Viewport
    __del__ = lambda self : None;
Viewport_swigregister = _MaxPlus.Viewport_swigregister
Viewport_swigregister(Viewport)

def Viewport__CastFrom(*args):
  """Viewport__CastFrom(InterfaceServer b) -> Viewport"""
  return _MaxPlus.Viewport__CastFrom(*args)

class ViewportManager(object):
    """Utility functions for working with viewports."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetNumViewports():
        """GetNumViewports() -> int"""
        return _MaxPlus.ViewportManager_GetNumViewports()

    GetNumViewports = staticmethod(GetNumViewports)
    def GetViewport(*args):
        """GetViewport(int n) -> Viewport"""
        return _MaxPlus.ViewportManager_GetViewport(*args)

    GetViewport = staticmethod(GetViewport)
    def GetViewportByID(*args):
        """GetViewportByID(int n) -> Viewport"""
        return _MaxPlus.ViewportManager_GetViewportByID(*args)

    GetViewportByID = staticmethod(GetViewportByID)
    def GetActiveViewport():
        """GetActiveViewport() -> Viewport"""
        return _MaxPlus.ViewportManager_GetActiveViewport()

    GetActiveViewport = staticmethod(GetActiveViewport)
    def GetActiveViewportIndex():
        """GetActiveViewportIndex() -> int"""
        return _MaxPlus.ViewportManager_GetActiveViewportIndex()

    GetActiveViewportIndex = staticmethod(GetActiveViewportIndex)
    def SetActiveViewport(*args):
        """SetActiveViewport(int index) -> bool"""
        return _MaxPlus.ViewportManager_SetActiveViewport(*args)

    SetActiveViewport = staticmethod(SetActiveViewport)
    def ResetAllViews():
        """ResetAllViews()"""
        return _MaxPlus.ViewportManager_ResetAllViews()

    ResetAllViews = staticmethod(ResetAllViews)
    def DisableSceneRedraw():
        """DisableSceneRedraw()"""
        return _MaxPlus.ViewportManager_DisableSceneRedraw()

    DisableSceneRedraw = staticmethod(DisableSceneRedraw)
    def EnableSceneRedraw():
        """EnableSceneRedraw()"""
        return _MaxPlus.ViewportManager_EnableSceneRedraw()

    EnableSceneRedraw = staticmethod(EnableSceneRedraw)
    def IsSceneRedrawDisabled():
        """IsSceneRedrawDisabled() -> int"""
        return _MaxPlus.ViewportManager_IsSceneRedrawDisabled()

    IsSceneRedrawDisabled = staticmethod(IsSceneRedrawDisabled)
    def GetImportZoomExtents():
        """GetImportZoomExtents() -> bool"""
        return _MaxPlus.ViewportManager_GetImportZoomExtents()

    GetImportZoomExtents = staticmethod(GetImportZoomExtents)
    def SetImportZoomExtents(*args):
        """SetImportZoomExtents(bool onOff)"""
        return _MaxPlus.ViewportManager_SetImportZoomExtents(*args)

    SetImportZoomExtents = staticmethod(SetImportZoomExtents)
    def SetCrossHairCur(*args):
        """SetCrossHairCur(bool onOff)"""
        return _MaxPlus.ViewportManager_SetCrossHairCur(*args)

    SetCrossHairCur = staticmethod(SetCrossHairCur)
    def GetCrossHairCur():
        """GetCrossHairCur() -> bool"""
        return _MaxPlus.ViewportManager_GetCrossHairCur()

    GetCrossHairCur = staticmethod(GetCrossHairCur)
    def GetPerspMouseSpeed():
        """GetPerspMouseSpeed() -> float"""
        return _MaxPlus.ViewportManager_GetPerspMouseSpeed()

    GetPerspMouseSpeed = staticmethod(GetPerspMouseSpeed)
    def SetPerspMouseSpeed(*args):
        """SetPerspMouseSpeed(float speed)"""
        return _MaxPlus.ViewportManager_SetPerspMouseSpeed(*args)

    SetPerspMouseSpeed = staticmethod(SetPerspMouseSpeed)
    def SetMoveModeType(*args):
        """SetMoveModeType(int moveType)"""
        return _MaxPlus.ViewportManager_SetMoveModeType(*args)

    SetMoveModeType = staticmethod(SetMoveModeType)
    def GetMoveModeType():
        """GetMoveModeType() -> int"""
        return _MaxPlus.ViewportManager_GetMoveModeType()

    GetMoveModeType = staticmethod(GetMoveModeType)
    def SetRotationIncrement(*args):
        """SetRotationIncrement(float inc)"""
        return _MaxPlus.ViewportManager_SetRotationIncrement(*args)

    SetRotationIncrement = staticmethod(SetRotationIncrement)
    def GetRotationIncrement():
        """GetRotationIncrement() -> float"""
        return _MaxPlus.ViewportManager_GetRotationIncrement()

    GetRotationIncrement = staticmethod(GetRotationIncrement)
    def GetPaintSelBrushSize():
        """GetPaintSelBrushSize() -> int"""
        return _MaxPlus.ViewportManager_GetPaintSelBrushSize()

    GetPaintSelBrushSize = staticmethod(GetPaintSelBrushSize)
    def SetPaintSelBrushSize(*args):
        """SetPaintSelBrushSize(int size)"""
        return _MaxPlus.ViewportManager_SetPaintSelBrushSize(*args)

    SetPaintSelBrushSize = staticmethod(SetPaintSelBrushSize)
    def RedrawViews(*args):
        """
        RedrawViews(TimeValue t, DWORD vpFlags=REDRAW_NORMAL)
        RedrawViews(TimeValue t)
        RedrawViews(TimeValue t, DWORD vpFlags, ReferenceTarget change)
        """
        return _MaxPlus.ViewportManager_RedrawViews(*args)

    RedrawViews = staticmethod(RedrawViews)
    def ForceCompleteRedraw(doDisabled=True):
        """
        ForceCompleteRedraw(bool doDisabled=True)
        ForceCompleteRedraw()
        """
        return _MaxPlus.ViewportManager_ForceCompleteRedraw(doDisabled)

    ForceCompleteRedraw = staticmethod(ForceCompleteRedraw)
    def SetHWNDAsActiveViewport(*args):
        """SetHWNDAsActiveViewport(HWND hwnd) -> bool"""
        return _MaxPlus.ViewportManager_SetHWNDAsActiveViewport(*args)

    SetHWNDAsActiveViewport = staticmethod(SetHWNDAsActiveViewport)
    def SetActiveViewportTransparencyDisplay(*args):
        """SetActiveViewportTransparencyDisplay(int transType) -> bool"""
        return _MaxPlus.ViewportManager_SetActiveViewportTransparencyDisplay(*args)

    SetActiveViewportTransparencyDisplay = staticmethod(SetActiveViewportTransparencyDisplay)
    def SetExtendedDisplayMode(*args):
        """SetExtendedDisplayMode(int flags)"""
        return _MaxPlus.ViewportManager_SetExtendedDisplayMode(*args)

    SetExtendedDisplayMode = staticmethod(SetExtendedDisplayMode)
    def GetExtendedDisplayMode():
        """GetExtendedDisplayMode() -> int"""
        return _MaxPlus.ViewportManager_GetExtendedDisplayMode()

    GetExtendedDisplayMode = staticmethod(GetExtendedDisplayMode)
    def MakeExtendedViewportActive(*args):
        """MakeExtendedViewportActive(HWND hWnd)"""
        return _MaxPlus.ViewportManager_MakeExtendedViewportActive(*args)

    MakeExtendedViewportActive = staticmethod(MakeExtendedViewportActive)
    def SetViewportGridVisible(*args):
        """SetViewportGridVisible(int index, bool state)"""
        return _MaxPlus.ViewportManager_SetViewportGridVisible(*args)

    SetViewportGridVisible = staticmethod(SetViewportGridVisible)
    def GetViewportGridVisible(*args):
        """GetViewportGridVisible(int index) -> bool"""
        return _MaxPlus.ViewportManager_GetViewportGridVisible(*args)

    GetViewportGridVisible = staticmethod(GetViewportGridVisible)
    def ViewportInvalidate(*args):
        """ViewportInvalidate(int index)"""
        return _MaxPlus.ViewportManager_ViewportInvalidate(*args)

    ViewportInvalidate = staticmethod(ViewportInvalidate)
    def ViewportInvalidateBkgImage(*args):
        """ViewportInvalidateBkgImage(int index)"""
        return _MaxPlus.ViewportManager_ViewportInvalidateBkgImage(*args)

    ViewportInvalidateBkgImage = staticmethod(ViewportInvalidateBkgImage)
    def InvalidateAllViewportRects():
        """InvalidateAllViewportRects()"""
        return _MaxPlus.ViewportManager_InvalidateAllViewportRects()

    InvalidateAllViewportRects = staticmethod(InvalidateAllViewportRects)
    def RedrawViewportsNow(*args):
        """
        RedrawViewportsNow(TimeValue t, DWORD vpFlags=VP_DONT_SIMPLIFY)
        RedrawViewportsNow(TimeValue t)
        """
        return _MaxPlus.ViewportManager_RedrawViewportsNow(*args)

    RedrawViewportsNow = staticmethod(RedrawViewportsNow)
    def RedrawViewportsLater(*args):
        """
        RedrawViewportsLater(TimeValue t, DWORD vpFlags=VP_DONT_SIMPLIFY)
        RedrawViewportsLater(TimeValue t)
        """
        return _MaxPlus.ViewportManager_RedrawViewportsLater(*args)

    RedrawViewportsLater = staticmethod(RedrawViewportsLater)
    def SetActiveViewportRenderLevel(*args):
        """SetActiveViewportRenderLevel(int level)"""
        return _MaxPlus.ViewportManager_SetActiveViewportRenderLevel(*args)

    SetActiveViewportRenderLevel = staticmethod(SetActiveViewportRenderLevel)
    def GetActiveViewportRenderLevel():
        """GetActiveViewportRenderLevel() -> int"""
        return _MaxPlus.ViewportManager_GetActiveViewportRenderLevel()

    GetActiveViewportRenderLevel = staticmethod(GetActiveViewportRenderLevel)
    def SetActiveViewportShowEdgeFaces(*args):
        """SetActiveViewportShowEdgeFaces(bool show)"""
        return _MaxPlus.ViewportManager_SetActiveViewportShowEdgeFaces(*args)

    SetActiveViewportShowEdgeFaces = staticmethod(SetActiveViewportShowEdgeFaces)
    def GetActiveViewportShowEdgeFaces():
        """GetActiveViewportShowEdgeFaces() -> bool"""
        return _MaxPlus.ViewportManager_GetActiveViewportShowEdgeFaces()

    GetActiveViewportShowEdgeFaces = staticmethod(GetActiveViewportShowEdgeFaces)
    def SetActiveViewportTransparencyLevel(*args):
        """SetActiveViewportTransparencyLevel(int level)"""
        return _MaxPlus.ViewportManager_SetActiveViewportTransparencyLevel(*args)

    SetActiveViewportTransparencyLevel = staticmethod(SetActiveViewportTransparencyLevel)
    def GetActiveViewportTransparencyLevel():
        """GetActiveViewportTransparencyLevel() -> int"""
        return _MaxPlus.ViewportManager_GetActiveViewportTransparencyLevel()

    GetActiveViewportTransparencyLevel = staticmethod(GetActiveViewportTransparencyLevel)
    def getActiveViewportLabel():
        """getActiveViewportLabel() -> wchar_t const *"""
        return _MaxPlus.ViewportManager_getActiveViewportLabel()

    getActiveViewportLabel = staticmethod(getActiveViewportLabel)
    def getViewportLabel(*args):
        """getViewportLabel(int index) -> wchar_t const *"""
        return _MaxPlus.ViewportManager_getViewportLabel(*args)

    getViewportLabel = staticmethod(getViewportLabel)
    def GetViewportLayout():
        """GetViewportLayout() -> int"""
        return _MaxPlus.ViewportManager_GetViewportLayout()

    GetViewportLayout = staticmethod(GetViewportLayout)
    def SetViewportLayout(*args):
        """SetViewportLayout(int layout)"""
        return _MaxPlus.ViewportManager_SetViewportLayout(*args)

    SetViewportLayout = staticmethod(SetViewportLayout)
    def IsViewportMaxed():
        """IsViewportMaxed() -> bool"""
        return _MaxPlus.ViewportManager_IsViewportMaxed()

    IsViewportMaxed = staticmethod(IsViewportMaxed)
    def SetViewportMax(*args):
        """SetViewportMax(bool max)"""
        return _MaxPlus.ViewportManager_SetViewportMax(*args)

    SetViewportMax = staticmethod(SetViewportMax)
    def ViewportZoomExtents(*args):
        """
        ViewportZoomExtents(bool doAll, bool skipPersp=False)
        ViewportZoomExtents(bool doAll)
        """
        return _MaxPlus.ViewportManager_ViewportZoomExtents(*args)

    ViewportZoomExtents = staticmethod(ViewportZoomExtents)
    def DisplayViewportConfigDialogPage(*args):
        """DisplayViewportConfigDialogPage(int i)"""
        return _MaxPlus.ViewportManager_DisplayViewportConfigDialogPage(*args)

    DisplayViewportConfigDialogPage = staticmethod(DisplayViewportConfigDialogPage)
    def SetRegionRect(*args):
        """SetRegionRect(int index, Box2 r)"""
        return _MaxPlus.ViewportManager_SetRegionRect(*args)

    SetRegionRect = staticmethod(SetRegionRect)
    def GetRegionRect(*args):
        """GetRegionRect(int index) -> Box2"""
        return _MaxPlus.ViewportManager_GetRegionRect(*args)

    GetRegionRect = staticmethod(GetRegionRect)
    def SetBlowupRect(*args):
        """SetBlowupRect(int index, Box2 r)"""
        return _MaxPlus.ViewportManager_SetBlowupRect(*args)

    SetBlowupRect = staticmethod(SetBlowupRect)
    def GetBlowupRect(*args):
        """GetBlowupRect(int index) -> Box2"""
        return _MaxPlus.ViewportManager_GetBlowupRect(*args)

    GetBlowupRect = staticmethod(GetBlowupRect)
    def SetRegionRect2(*args):
        """SetRegionRect2(int index, Box2 r)"""
        return _MaxPlus.ViewportManager_SetRegionRect2(*args)

    SetRegionRect2 = staticmethod(SetRegionRect2)
    def GetRegionRect2(*args):
        """GetRegionRect2(int index) -> Box2"""
        return _MaxPlus.ViewportManager_GetRegionRect2(*args)

    GetRegionRect2 = staticmethod(GetRegionRect2)
    def SetBlowupRect2(*args):
        """SetBlowupRect2(int index, Box2 r)"""
        return _MaxPlus.ViewportManager_SetBlowupRect2(*args)

    SetBlowupRect2 = staticmethod(SetBlowupRect2)
    def GetBlowupRect2(*args):
        """GetBlowupRect2(int index) -> Box2"""
        return _MaxPlus.ViewportManager_GetBlowupRect2(*args)

    GetBlowupRect2 = staticmethod(GetBlowupRect2)
    def GetLockImageAspectRatio():
        """GetLockImageAspectRatio() -> bool"""
        return _MaxPlus.ViewportManager_GetLockImageAspectRatio()

    GetLockImageAspectRatio = staticmethod(GetLockImageAspectRatio)
    def SetLockImageAspectRatio(*args):
        """SetLockImageAspectRatio(bool on)"""
        return _MaxPlus.ViewportManager_SetLockImageAspectRatio(*args)

    SetLockImageAspectRatio = staticmethod(SetLockImageAspectRatio)
    def GetImageAspectRatio():
        """GetImageAspectRatio() -> float"""
        return _MaxPlus.ViewportManager_GetImageAspectRatio()

    GetImageAspectRatio = staticmethod(GetImageAspectRatio)
    def SetImageAspectRatio(*args):
        """SetImageAspectRatio(float on)"""
        return _MaxPlus.ViewportManager_SetImageAspectRatio(*args)

    SetImageAspectRatio = staticmethod(SetImageAspectRatio)
    def GetLockPixelAspectRatio():
        """GetLockPixelAspectRatio() -> bool"""
        return _MaxPlus.ViewportManager_GetLockPixelAspectRatio()

    GetLockPixelAspectRatio = staticmethod(GetLockPixelAspectRatio)
    def SetLockPixelAspectRatio(*args):
        """SetLockPixelAspectRatio(bool on)"""
        return _MaxPlus.ViewportManager_SetLockPixelAspectRatio(*args)

    SetLockPixelAspectRatio = staticmethod(SetLockPixelAspectRatio)
    def GetPixelAspectRatio():
        """GetPixelAspectRatio() -> float"""
        return _MaxPlus.ViewportManager_GetPixelAspectRatio()

    GetPixelAspectRatio = staticmethod(GetPixelAspectRatio)
    def SetPixelAspectRatio(*args):
        """SetPixelAspectRatio(float on)"""
        return _MaxPlus.ViewportManager_SetPixelAspectRatio(*args)

    SetPixelAspectRatio = staticmethod(SetPixelAspectRatio)
    def DisplayActiveCameraViewWithMultiPassEffect():
        """DisplayActiveCameraViewWithMultiPassEffect() -> bool"""
        return _MaxPlus.ViewportManager_DisplayActiveCameraViewWithMultiPassEffect()

    DisplayActiveCameraViewWithMultiPassEffect = staticmethod(DisplayActiveCameraViewWithMultiPassEffect)
    def GetDualPlanes():
        """GetDualPlanes() -> bool"""
        return _MaxPlus.ViewportManager_GetDualPlanes()

    GetDualPlanes = staticmethod(GetDualPlanes)
    def SetDualPlanes(*args):
        """SetDualPlanes(bool b)"""
        return _MaxPlus.ViewportManager_SetDualPlanes(*args)

    SetDualPlanes = staticmethod(SetDualPlanes)
    def ZoomToBounds(*args):
        """ZoomToBounds(bool doAll, Box3 box)"""
        return _MaxPlus.ViewportManager_ZoomToBounds(*args)

    ZoomToBounds = staticmethod(ZoomToBounds)
    def IsConstructionPlaneEdgeOnInView():
        """IsConstructionPlaneEdgeOnInView() -> bool"""
        return _MaxPlus.ViewportManager_IsConstructionPlaneEdgeOnInView()

    IsConstructionPlaneEdgeOnInView = staticmethod(IsConstructionPlaneEdgeOnInView)
    def DeactivateTexture(*args):
        """
        DeactivateTexture(MtlBase tx, Mtl mtl, int subNum=-1)
        DeactivateTexture(MtlBase tx, Mtl mtl)
        """
        return _MaxPlus.ViewportManager_DeactivateTexture(*args)

    DeactivateTexture = staticmethod(DeactivateTexture)
    def ActivateTexture(*args):
        """
        ActivateTexture(MtlBase tx, Mtl mtl, int subNum=-1)
        ActivateTexture(MtlBase tx, Mtl mtl)
        """
        return _MaxPlus.ViewportManager_ActivateTexture(*args)

    ActivateTexture = staticmethod(ActivateTexture)
    def GetHideByCategoryFlags(self):
        """GetHideByCategoryFlags(ViewportManager self) -> DWORD"""
        return _MaxPlus.ViewportManager_GetHideByCategoryFlags(self)

    def SetHideByCategoryFlags(self, *args):
        """SetHideByCategoryFlags(ViewportManager self, DWORD f)"""
        return _MaxPlus.ViewportManager_SetHideByCategoryFlags(self, *args)

    Viewports = _static_generator_property(GetNumViewports,GetViewport)

    __swig_destroy__ = _MaxPlus.delete_ViewportManager
    __del__ = lambda self : None;
ViewportManager_swigregister = _MaxPlus.ViewportManager_swigregister
ViewportManager_swigregister(ViewportManager)

def ViewportManager_GetNumViewports():
  """ViewportManager_GetNumViewports() -> int"""
  return _MaxPlus.ViewportManager_GetNumViewports()

def ViewportManager_GetViewport(*args):
  """ViewportManager_GetViewport(int n) -> Viewport"""
  return _MaxPlus.ViewportManager_GetViewport(*args)

def ViewportManager_GetViewportByID(*args):
  """ViewportManager_GetViewportByID(int n) -> Viewport"""
  return _MaxPlus.ViewportManager_GetViewportByID(*args)

def ViewportManager_GetActiveViewport():
  """ViewportManager_GetActiveViewport() -> Viewport"""
  return _MaxPlus.ViewportManager_GetActiveViewport()

def ViewportManager_GetActiveViewportIndex():
  """ViewportManager_GetActiveViewportIndex() -> int"""
  return _MaxPlus.ViewportManager_GetActiveViewportIndex()

def ViewportManager_SetActiveViewport(*args):
  """ViewportManager_SetActiveViewport(int index) -> bool"""
  return _MaxPlus.ViewportManager_SetActiveViewport(*args)

def ViewportManager_ResetAllViews():
  """ViewportManager_ResetAllViews()"""
  return _MaxPlus.ViewportManager_ResetAllViews()

def ViewportManager_DisableSceneRedraw():
  """ViewportManager_DisableSceneRedraw()"""
  return _MaxPlus.ViewportManager_DisableSceneRedraw()

def ViewportManager_EnableSceneRedraw():
  """ViewportManager_EnableSceneRedraw()"""
  return _MaxPlus.ViewportManager_EnableSceneRedraw()

def ViewportManager_IsSceneRedrawDisabled():
  """ViewportManager_IsSceneRedrawDisabled() -> int"""
  return _MaxPlus.ViewportManager_IsSceneRedrawDisabled()

def ViewportManager_GetImportZoomExtents():
  """ViewportManager_GetImportZoomExtents() -> bool"""
  return _MaxPlus.ViewportManager_GetImportZoomExtents()

def ViewportManager_SetImportZoomExtents(*args):
  """ViewportManager_SetImportZoomExtents(bool onOff)"""
  return _MaxPlus.ViewportManager_SetImportZoomExtents(*args)

def ViewportManager_SetCrossHairCur(*args):
  """ViewportManager_SetCrossHairCur(bool onOff)"""
  return _MaxPlus.ViewportManager_SetCrossHairCur(*args)

def ViewportManager_GetCrossHairCur():
  """ViewportManager_GetCrossHairCur() -> bool"""
  return _MaxPlus.ViewportManager_GetCrossHairCur()

def ViewportManager_GetPerspMouseSpeed():
  """ViewportManager_GetPerspMouseSpeed() -> float"""
  return _MaxPlus.ViewportManager_GetPerspMouseSpeed()

def ViewportManager_SetPerspMouseSpeed(*args):
  """ViewportManager_SetPerspMouseSpeed(float speed)"""
  return _MaxPlus.ViewportManager_SetPerspMouseSpeed(*args)

def ViewportManager_SetMoveModeType(*args):
  """ViewportManager_SetMoveModeType(int moveType)"""
  return _MaxPlus.ViewportManager_SetMoveModeType(*args)

def ViewportManager_GetMoveModeType():
  """ViewportManager_GetMoveModeType() -> int"""
  return _MaxPlus.ViewportManager_GetMoveModeType()

def ViewportManager_SetRotationIncrement(*args):
  """ViewportManager_SetRotationIncrement(float inc)"""
  return _MaxPlus.ViewportManager_SetRotationIncrement(*args)

def ViewportManager_GetRotationIncrement():
  """ViewportManager_GetRotationIncrement() -> float"""
  return _MaxPlus.ViewportManager_GetRotationIncrement()

def ViewportManager_GetPaintSelBrushSize():
  """ViewportManager_GetPaintSelBrushSize() -> int"""
  return _MaxPlus.ViewportManager_GetPaintSelBrushSize()

def ViewportManager_SetPaintSelBrushSize(*args):
  """ViewportManager_SetPaintSelBrushSize(int size)"""
  return _MaxPlus.ViewportManager_SetPaintSelBrushSize(*args)

def ViewportManager_RedrawViews(*args):
  """
    RedrawViews(TimeValue t, DWORD vpFlags=REDRAW_NORMAL)
    RedrawViews(TimeValue t)
    ViewportManager_RedrawViews(TimeValue t, DWORD vpFlags, ReferenceTarget change)
    """
  return _MaxPlus.ViewportManager_RedrawViews(*args)

def ViewportManager_ForceCompleteRedraw(doDisabled=True):
  """
    ForceCompleteRedraw(bool doDisabled=True)
    ViewportManager_ForceCompleteRedraw()
    """
  return _MaxPlus.ViewportManager_ForceCompleteRedraw(doDisabled)

def ViewportManager_SetHWNDAsActiveViewport(*args):
  """ViewportManager_SetHWNDAsActiveViewport(HWND hwnd) -> bool"""
  return _MaxPlus.ViewportManager_SetHWNDAsActiveViewport(*args)

def ViewportManager_SetActiveViewportTransparencyDisplay(*args):
  """ViewportManager_SetActiveViewportTransparencyDisplay(int transType) -> bool"""
  return _MaxPlus.ViewportManager_SetActiveViewportTransparencyDisplay(*args)

def ViewportManager_SetExtendedDisplayMode(*args):
  """ViewportManager_SetExtendedDisplayMode(int flags)"""
  return _MaxPlus.ViewportManager_SetExtendedDisplayMode(*args)

def ViewportManager_GetExtendedDisplayMode():
  """ViewportManager_GetExtendedDisplayMode() -> int"""
  return _MaxPlus.ViewportManager_GetExtendedDisplayMode()

def ViewportManager_MakeExtendedViewportActive(*args):
  """ViewportManager_MakeExtendedViewportActive(HWND hWnd)"""
  return _MaxPlus.ViewportManager_MakeExtendedViewportActive(*args)

def ViewportManager_SetViewportGridVisible(*args):
  """ViewportManager_SetViewportGridVisible(int index, bool state)"""
  return _MaxPlus.ViewportManager_SetViewportGridVisible(*args)

def ViewportManager_GetViewportGridVisible(*args):
  """ViewportManager_GetViewportGridVisible(int index) -> bool"""
  return _MaxPlus.ViewportManager_GetViewportGridVisible(*args)

def ViewportManager_ViewportInvalidate(*args):
  """ViewportManager_ViewportInvalidate(int index)"""
  return _MaxPlus.ViewportManager_ViewportInvalidate(*args)

def ViewportManager_ViewportInvalidateBkgImage(*args):
  """ViewportManager_ViewportInvalidateBkgImage(int index)"""
  return _MaxPlus.ViewportManager_ViewportInvalidateBkgImage(*args)

def ViewportManager_InvalidateAllViewportRects():
  """ViewportManager_InvalidateAllViewportRects()"""
  return _MaxPlus.ViewportManager_InvalidateAllViewportRects()

def ViewportManager_RedrawViewportsNow(*args):
  """
    RedrawViewportsNow(TimeValue t, DWORD vpFlags=VP_DONT_SIMPLIFY)
    ViewportManager_RedrawViewportsNow(TimeValue t)
    """
  return _MaxPlus.ViewportManager_RedrawViewportsNow(*args)

def ViewportManager_RedrawViewportsLater(*args):
  """
    RedrawViewportsLater(TimeValue t, DWORD vpFlags=VP_DONT_SIMPLIFY)
    ViewportManager_RedrawViewportsLater(TimeValue t)
    """
  return _MaxPlus.ViewportManager_RedrawViewportsLater(*args)

def ViewportManager_SetActiveViewportRenderLevel(*args):
  """ViewportManager_SetActiveViewportRenderLevel(int level)"""
  return _MaxPlus.ViewportManager_SetActiveViewportRenderLevel(*args)

def ViewportManager_GetActiveViewportRenderLevel():
  """ViewportManager_GetActiveViewportRenderLevel() -> int"""
  return _MaxPlus.ViewportManager_GetActiveViewportRenderLevel()

def ViewportManager_SetActiveViewportShowEdgeFaces(*args):
  """ViewportManager_SetActiveViewportShowEdgeFaces(bool show)"""
  return _MaxPlus.ViewportManager_SetActiveViewportShowEdgeFaces(*args)

def ViewportManager_GetActiveViewportShowEdgeFaces():
  """ViewportManager_GetActiveViewportShowEdgeFaces() -> bool"""
  return _MaxPlus.ViewportManager_GetActiveViewportShowEdgeFaces()

def ViewportManager_SetActiveViewportTransparencyLevel(*args):
  """ViewportManager_SetActiveViewportTransparencyLevel(int level)"""
  return _MaxPlus.ViewportManager_SetActiveViewportTransparencyLevel(*args)

def ViewportManager_GetActiveViewportTransparencyLevel():
  """ViewportManager_GetActiveViewportTransparencyLevel() -> int"""
  return _MaxPlus.ViewportManager_GetActiveViewportTransparencyLevel()

def ViewportManager_getActiveViewportLabel():
  """ViewportManager_getActiveViewportLabel() -> wchar_t const *"""
  return _MaxPlus.ViewportManager_getActiveViewportLabel()

def ViewportManager_getViewportLabel(*args):
  """ViewportManager_getViewportLabel(int index) -> wchar_t const *"""
  return _MaxPlus.ViewportManager_getViewportLabel(*args)

def ViewportManager_GetViewportLayout():
  """ViewportManager_GetViewportLayout() -> int"""
  return _MaxPlus.ViewportManager_GetViewportLayout()

def ViewportManager_SetViewportLayout(*args):
  """ViewportManager_SetViewportLayout(int layout)"""
  return _MaxPlus.ViewportManager_SetViewportLayout(*args)

def ViewportManager_IsViewportMaxed():
  """ViewportManager_IsViewportMaxed() -> bool"""
  return _MaxPlus.ViewportManager_IsViewportMaxed()

def ViewportManager_SetViewportMax(*args):
  """ViewportManager_SetViewportMax(bool max)"""
  return _MaxPlus.ViewportManager_SetViewportMax(*args)

def ViewportManager_ViewportZoomExtents(*args):
  """
    ViewportZoomExtents(bool doAll, bool skipPersp=False)
    ViewportManager_ViewportZoomExtents(bool doAll)
    """
  return _MaxPlus.ViewportManager_ViewportZoomExtents(*args)

def ViewportManager_DisplayViewportConfigDialogPage(*args):
  """ViewportManager_DisplayViewportConfigDialogPage(int i)"""
  return _MaxPlus.ViewportManager_DisplayViewportConfigDialogPage(*args)

def ViewportManager_SetRegionRect(*args):
  """ViewportManager_SetRegionRect(int index, Box2 r)"""
  return _MaxPlus.ViewportManager_SetRegionRect(*args)

def ViewportManager_GetRegionRect(*args):
  """ViewportManager_GetRegionRect(int index) -> Box2"""
  return _MaxPlus.ViewportManager_GetRegionRect(*args)

def ViewportManager_SetBlowupRect(*args):
  """ViewportManager_SetBlowupRect(int index, Box2 r)"""
  return _MaxPlus.ViewportManager_SetBlowupRect(*args)

def ViewportManager_GetBlowupRect(*args):
  """ViewportManager_GetBlowupRect(int index) -> Box2"""
  return _MaxPlus.ViewportManager_GetBlowupRect(*args)

def ViewportManager_SetRegionRect2(*args):
  """ViewportManager_SetRegionRect2(int index, Box2 r)"""
  return _MaxPlus.ViewportManager_SetRegionRect2(*args)

def ViewportManager_GetRegionRect2(*args):
  """ViewportManager_GetRegionRect2(int index) -> Box2"""
  return _MaxPlus.ViewportManager_GetRegionRect2(*args)

def ViewportManager_SetBlowupRect2(*args):
  """ViewportManager_SetBlowupRect2(int index, Box2 r)"""
  return _MaxPlus.ViewportManager_SetBlowupRect2(*args)

def ViewportManager_GetBlowupRect2(*args):
  """ViewportManager_GetBlowupRect2(int index) -> Box2"""
  return _MaxPlus.ViewportManager_GetBlowupRect2(*args)

def ViewportManager_GetLockImageAspectRatio():
  """ViewportManager_GetLockImageAspectRatio() -> bool"""
  return _MaxPlus.ViewportManager_GetLockImageAspectRatio()

def ViewportManager_SetLockImageAspectRatio(*args):
  """ViewportManager_SetLockImageAspectRatio(bool on)"""
  return _MaxPlus.ViewportManager_SetLockImageAspectRatio(*args)

def ViewportManager_GetImageAspectRatio():
  """ViewportManager_GetImageAspectRatio() -> float"""
  return _MaxPlus.ViewportManager_GetImageAspectRatio()

def ViewportManager_SetImageAspectRatio(*args):
  """ViewportManager_SetImageAspectRatio(float on)"""
  return _MaxPlus.ViewportManager_SetImageAspectRatio(*args)

def ViewportManager_GetLockPixelAspectRatio():
  """ViewportManager_GetLockPixelAspectRatio() -> bool"""
  return _MaxPlus.ViewportManager_GetLockPixelAspectRatio()

def ViewportManager_SetLockPixelAspectRatio(*args):
  """ViewportManager_SetLockPixelAspectRatio(bool on)"""
  return _MaxPlus.ViewportManager_SetLockPixelAspectRatio(*args)

def ViewportManager_GetPixelAspectRatio():
  """ViewportManager_GetPixelAspectRatio() -> float"""
  return _MaxPlus.ViewportManager_GetPixelAspectRatio()

def ViewportManager_SetPixelAspectRatio(*args):
  """ViewportManager_SetPixelAspectRatio(float on)"""
  return _MaxPlus.ViewportManager_SetPixelAspectRatio(*args)

def ViewportManager_DisplayActiveCameraViewWithMultiPassEffect():
  """ViewportManager_DisplayActiveCameraViewWithMultiPassEffect() -> bool"""
  return _MaxPlus.ViewportManager_DisplayActiveCameraViewWithMultiPassEffect()

def ViewportManager_GetDualPlanes():
  """ViewportManager_GetDualPlanes() -> bool"""
  return _MaxPlus.ViewportManager_GetDualPlanes()

def ViewportManager_SetDualPlanes(*args):
  """ViewportManager_SetDualPlanes(bool b)"""
  return _MaxPlus.ViewportManager_SetDualPlanes(*args)

def ViewportManager_ZoomToBounds(*args):
  """ViewportManager_ZoomToBounds(bool doAll, Box3 box)"""
  return _MaxPlus.ViewportManager_ZoomToBounds(*args)

def ViewportManager_IsConstructionPlaneEdgeOnInView():
  """ViewportManager_IsConstructionPlaneEdgeOnInView() -> bool"""
  return _MaxPlus.ViewportManager_IsConstructionPlaneEdgeOnInView()

def ViewportManager_DeactivateTexture(*args):
  """
    DeactivateTexture(MtlBase tx, Mtl mtl, int subNum=-1)
    ViewportManager_DeactivateTexture(MtlBase tx, Mtl mtl)
    """
  return _MaxPlus.ViewportManager_DeactivateTexture(*args)

def ViewportManager_ActivateTexture(*args):
  """
    ActivateTexture(MtlBase tx, Mtl mtl, int subNum=-1)
    ViewportManager_ActivateTexture(MtlBase tx, Mtl mtl)
    """
  return _MaxPlus.ViewportManager_ActivateTexture(*args)

class ViewportsBackground(object):
    """Utility functions for working with the backgrounds of viewports."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetColor(*args):
        """
        GetColor(TimeValue t, Interval valid) -> Point3
        GetColor() -> Point3
        """
        return _MaxPlus.ViewportsBackground_GetColor(*args)

    GetColor = staticmethod(GetColor)
    def SetColor(*args):
        """
        SetColor(TimeValue t, Point3 color)
        SetColor(Point3 color)
        """
        return _MaxPlus.ViewportsBackground_SetColor(*args)

    SetColor = staticmethod(SetColor)
    def GetColorController():
        """GetColorController() -> Control"""
        return _MaxPlus.ViewportsBackground_GetColorController()

    GetColorController = staticmethod(GetColorController)
    def SetColorController(*args):
        """SetColorController(Control c)"""
        return _MaxPlus.ViewportsBackground_SetColorController(*args)

    SetColorController = staticmethod(SetColorController)
    def GetImageAsset():
        """GetImageAsset() -> Asset"""
        return _MaxPlus.ViewportsBackground_GetImageAsset()

    GetImageAsset = staticmethod(GetImageAsset)
    def SetImageAsset(*args):
        """SetImageAsset(Asset asset) -> bool"""
        return _MaxPlus.ViewportsBackground_SetImageAsset(*args)

    SetImageAsset = staticmethod(SetImageAsset)
    def SetImageAspect(*args):
        """SetImageAspect(int t)"""
        return _MaxPlus.ViewportsBackground_SetImageAspect(*args)

    SetImageAspect = staticmethod(SetImageAspect)
    def GetImageAspect():
        """GetImageAspect() -> int"""
        return _MaxPlus.ViewportsBackground_GetImageAspect()

    GetImageAspect = staticmethod(GetImageAspect)
    def SetImageAnimate(*args):
        """SetImageAnimate(bool onOff)"""
        return _MaxPlus.ViewportsBackground_SetImageAnimate(*args)

    SetImageAnimate = staticmethod(SetImageAnimate)
    def GetImageAnimate():
        """GetImageAnimate() -> bool"""
        return _MaxPlus.ViewportsBackground_GetImageAnimate()

    GetImageAnimate = staticmethod(GetImageAnimate)
    def SetFrameRange(*args):
        """
        SetFrameRange(int start, int end, int step=1)
        SetFrameRange(int start, int end)
        """
        return _MaxPlus.ViewportsBackground_SetFrameRange(*args)

    SetFrameRange = staticmethod(SetFrameRange)
    def GetFrameRange(*args):
        """GetFrameRange(int which) -> int"""
        return _MaxPlus.ViewportsBackground_GetFrameRange(*args)

    GetFrameRange = staticmethod(GetFrameRange)
    def SetOutOfRangeType(*args):
        """SetOutOfRangeType(int which, int type)"""
        return _MaxPlus.ViewportsBackground_SetOutOfRangeType(*args)

    SetOutOfRangeType = staticmethod(SetOutOfRangeType)
    def GetOutOfRangeType(*args):
        """GetOutOfRangeType(int which) -> int"""
        return _MaxPlus.ViewportsBackground_GetOutOfRangeType(*args)

    GetOutOfRangeType = staticmethod(GetOutOfRangeType)
    def SetStartTime(*args):
        """SetStartTime(TimeValue t)"""
        return _MaxPlus.ViewportsBackground_SetStartTime(*args)

    SetStartTime = staticmethod(SetStartTime)
    def GetStartTime():
        """GetStartTime() -> TimeValue"""
        return _MaxPlus.ViewportsBackground_GetStartTime()

    GetStartTime = staticmethod(GetStartTime)
    def SetSyncFrame(*args):
        """SetSyncFrame(int f)"""
        return _MaxPlus.ViewportsBackground_SetSyncFrame(*args)

    SetSyncFrame = staticmethod(SetSyncFrame)
    def GetSyncFrame():
        """GetSyncFrame() -> int"""
        return _MaxPlus.ViewportsBackground_GetSyncFrame()

    GetSyncFrame = staticmethod(GetSyncFrame)
    def GetFrameNumber(*args):
        """GetFrameNumber(TimeValue t) -> int"""
        return _MaxPlus.ViewportsBackground_GetFrameNumber(*args)

    GetFrameNumber = staticmethod(GetFrameNumber)
    __swig_destroy__ = _MaxPlus.delete_ViewportsBackground
    __del__ = lambda self : None;
ViewportsBackground_swigregister = _MaxPlus.ViewportsBackground_swigregister
ViewportsBackground_swigregister(ViewportsBackground)

def ViewportsBackground_GetColor(*args):
  """
    GetColor(TimeValue t, Interval valid) -> Point3
    ViewportsBackground_GetColor() -> Point3
    """
  return _MaxPlus.ViewportsBackground_GetColor(*args)

def ViewportsBackground_SetColor(*args):
  """
    SetColor(TimeValue t, Point3 color)
    ViewportsBackground_SetColor(Point3 color)
    """
  return _MaxPlus.ViewportsBackground_SetColor(*args)

def ViewportsBackground_GetColorController():
  """ViewportsBackground_GetColorController() -> Control"""
  return _MaxPlus.ViewportsBackground_GetColorController()

def ViewportsBackground_SetColorController(*args):
  """ViewportsBackground_SetColorController(Control c)"""
  return _MaxPlus.ViewportsBackground_SetColorController(*args)

def ViewportsBackground_GetImageAsset():
  """ViewportsBackground_GetImageAsset() -> Asset"""
  return _MaxPlus.ViewportsBackground_GetImageAsset()

def ViewportsBackground_SetImageAsset(*args):
  """ViewportsBackground_SetImageAsset(Asset asset) -> bool"""
  return _MaxPlus.ViewportsBackground_SetImageAsset(*args)

def ViewportsBackground_SetImageAspect(*args):
  """ViewportsBackground_SetImageAspect(int t)"""
  return _MaxPlus.ViewportsBackground_SetImageAspect(*args)

def ViewportsBackground_GetImageAspect():
  """ViewportsBackground_GetImageAspect() -> int"""
  return _MaxPlus.ViewportsBackground_GetImageAspect()

def ViewportsBackground_SetImageAnimate(*args):
  """ViewportsBackground_SetImageAnimate(bool onOff)"""
  return _MaxPlus.ViewportsBackground_SetImageAnimate(*args)

def ViewportsBackground_GetImageAnimate():
  """ViewportsBackground_GetImageAnimate() -> bool"""
  return _MaxPlus.ViewportsBackground_GetImageAnimate()

def ViewportsBackground_SetFrameRange(*args):
  """
    SetFrameRange(int start, int end, int step=1)
    ViewportsBackground_SetFrameRange(int start, int end)
    """
  return _MaxPlus.ViewportsBackground_SetFrameRange(*args)

def ViewportsBackground_GetFrameRange(*args):
  """ViewportsBackground_GetFrameRange(int which) -> int"""
  return _MaxPlus.ViewportsBackground_GetFrameRange(*args)

def ViewportsBackground_SetOutOfRangeType(*args):
  """ViewportsBackground_SetOutOfRangeType(int which, int type)"""
  return _MaxPlus.ViewportsBackground_SetOutOfRangeType(*args)

def ViewportsBackground_GetOutOfRangeType(*args):
  """ViewportsBackground_GetOutOfRangeType(int which) -> int"""
  return _MaxPlus.ViewportsBackground_GetOutOfRangeType(*args)

def ViewportsBackground_SetStartTime(*args):
  """ViewportsBackground_SetStartTime(TimeValue t)"""
  return _MaxPlus.ViewportsBackground_SetStartTime(*args)

def ViewportsBackground_GetStartTime():
  """ViewportsBackground_GetStartTime() -> TimeValue"""
  return _MaxPlus.ViewportsBackground_GetStartTime()

def ViewportsBackground_SetSyncFrame(*args):
  """ViewportsBackground_SetSyncFrame(int f)"""
  return _MaxPlus.ViewportsBackground_SetSyncFrame(*args)

def ViewportsBackground_GetSyncFrame():
  """ViewportsBackground_GetSyncFrame() -> int"""
  return _MaxPlus.ViewportsBackground_GetSyncFrame()

def ViewportsBackground_GetFrameNumber(*args):
  """ViewportsBackground_GetFrameNumber(TimeValue t) -> int"""
  return _MaxPlus.ViewportsBackground_GetFrameNumber(*args)

class Constants(object):
    """Various constant values."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    AoDefault = _MaxPlus.Constants_AoDefault
    AoClosedialog = _MaxPlus.Constants_AoClosedialog
    BezfontTruetype = _MaxPlus.Constants_BezfontTruetype
    BezfontOther = _MaxPlus.Constants_BezfontOther
    IntBits = _MaxPlus.Constants_IntBits
    BmmNoType = _MaxPlus.Constants_BmmNoType
    BmmLineArt = _MaxPlus.Constants_BmmLineArt
    BmmPaletted = _MaxPlus.Constants_BmmPaletted
    BmmGray8 = _MaxPlus.Constants_BmmGray8
    BmmGray16 = _MaxPlus.Constants_BmmGray16
    BmmTrue16 = _MaxPlus.Constants_BmmTrue16
    BmmTrue32 = _MaxPlus.Constants_BmmTrue32
    BmmTrue64 = _MaxPlus.Constants_BmmTrue64
    BmmLogluv32 = _MaxPlus.Constants_BmmLogluv32
    BmmLogluv24 = _MaxPlus.Constants_BmmLogluv24
    BmmLogluv24a = _MaxPlus.Constants_BmmLogluv24a
    BmmRealpix32 = _MaxPlus.Constants_BmmRealpix32
    BmmFloatRgba32 = _MaxPlus.Constants_BmmFloatRgba32
    BmmFloatGray32 = _MaxPlus.Constants_BmmFloatGray32
    BmmTrue24 = _MaxPlus.Constants_BmmTrue24
    BmmTrue48 = _MaxPlus.Constants_BmmTrue48
    BmmYuv422 = _MaxPlus.Constants_BmmYuv422
    BmmBmp4 = _MaxPlus.Constants_BmmBmp4
    BmmPad24 = _MaxPlus.Constants_BmmPad24
    BmmFloatRgb32 = _MaxPlus.Constants_BmmFloatRgb32
    BmmFloatA32 = _MaxPlus.Constants_BmmFloatA32
    MaxDescription = _MaxPlus.Constants_MaxDescription
    BmmNotOpen = _MaxPlus.Constants_BmmNotOpen
    BmmOpenR = _MaxPlus.Constants_BmmOpenR
    BmmOpenW = _MaxPlus.Constants_BmmOpenW
    BmmresSuccess = _MaxPlus.Constants_BmmresSuccess
    BmmresErrortakencare = _MaxPlus.Constants_BmmresErrortakencare
    BmmresFilenotfound = _MaxPlus.Constants_BmmresFilenotfound
    BmmresMemoryerror = _MaxPlus.Constants_BmmresMemoryerror
    BmmresNodriver = _MaxPlus.Constants_BmmresNodriver
    BmmresIoerror = _MaxPlus.Constants_BmmresIoerror
    BmmresInvalidformat = _MaxPlus.Constants_BmmresInvalidformat
    BmmresCorruptfile = _MaxPlus.Constants_BmmresCorruptfile
    BmmresSingleframe = _MaxPlus.Constants_BmmresSingleframe
    BmmresInvalidusage = _MaxPlus.Constants_BmmresInvalidusage
    BmmresRetry = _MaxPlus.Constants_BmmresRetry
    BmmresNumberedfilenameerror = _MaxPlus.Constants_BmmresNumberedfilenameerror
    BmmresInternalerror = _MaxPlus.Constants_BmmresInternalerror
    BmmresBadfileheader = _MaxPlus.Constants_BmmresBadfileheader
    BmmresCantstorage = _MaxPlus.Constants_BmmresCantstorage
    BmmresBadframe = _MaxPlus.Constants_BmmresBadframe
    BmmioNone = _MaxPlus.Constants_BmmioNone
    BmmioReader = _MaxPlus.Constants_BmmioReader
    BmmioWriter = _MaxPlus.Constants_BmmioWriter
    BmmioExtension = _MaxPlus.Constants_BmmioExtension
    BmmioMultiframe = _MaxPlus.Constants_BmmioMultiframe
    BmmioThreaded = _MaxPlus.Constants_BmmioThreaded
    BmmioRandomAccess = _MaxPlus.Constants_BmmioRandomAccess
    BmmioNonConcurrentAccess = _MaxPlus.Constants_BmmioNonConcurrentAccess
    BmmioOwnViewer = _MaxPlus.Constants_BmmioOwnViewer
    BmmioFramebuffer = _MaxPlus.Constants_BmmioFramebuffer
    BmmioGrabber = _MaxPlus.Constants_BmmioGrabber
    BmmioInfodlg = _MaxPlus.Constants_BmmioInfodlg
    BmmioUninterruptible = _MaxPlus.Constants_BmmioUninterruptible
    BmmioEvalmatch = _MaxPlus.Constants_BmmioEvalmatch
    BmmioIfl = _MaxPlus.Constants_BmmioIfl
    BmmioControlread = _MaxPlus.Constants_BmmioControlread
    BmmioControlwrite = _MaxPlus.Constants_BmmioControlwrite
    BmmioControlgeneric = _MaxPlus.Constants_BmmioControlgeneric
    BmmCloseComplete = _MaxPlus.Constants_BmmCloseComplete
    BmmCloseAbandon = _MaxPlus.Constants_BmmCloseAbandon
    BmmFilterNone = _MaxPlus.Constants_BmmFilterNone
    BmmFilterDummy = _MaxPlus.Constants_BmmFilterDummy
    BmmFilterSum = _MaxPlus.Constants_BmmFilterSum
    BmmFilterPyramid = _MaxPlus.Constants_BmmFilterPyramid
    BmmFilterNoFlags = _MaxPlus.Constants_BmmFilterNoFlags
    BmmFilterLerpWrap = _MaxPlus.Constants_BmmFilterLerpWrap
    BmmFilterBuildFailed = _MaxPlus.Constants_BmmFilterBuildFailed
    BmmDitherNone = _MaxPlus.Constants_BmmDitherNone
    BmmDitherFloyd = _MaxPlus.Constants_BmmDitherFloyd
    MaxPyramidDepth = _MaxPlus.Constants_MaxPyramidDepth
    LayerDim = _MaxPlus.Constants_LayerDim
    CopyImageCrop = _MaxPlus.Constants_CopyImageCrop
    CopyImageResizeLoQuality = _MaxPlus.Constants_CopyImageResizeLoQuality
    CopyImageResizeHiQuality = _MaxPlus.Constants_CopyImageResizeHiQuality
    CopyImageUseCustom = _MaxPlus.Constants_CopyImageUseCustom
    MapNoFlags = _MaxPlus.Constants_MapNoFlags
    MapReady = _MaxPlus.Constants_MapReady
    MapHasAlpha = _MaxPlus.Constants_MapHasAlpha
    MapAlphaPremultiplied = _MaxPlus.Constants_MapAlphaPremultiplied
    MapPaletted = _MaxPlus.Constants_MapPaletted
    MapFrameSystemLocked = _MaxPlus.Constants_MapFrameSystemLocked
    MapDithered = _MaxPlus.Constants_MapDithered
    MapFlipped = _MaxPlus.Constants_MapFlipped
    MapInverted = _MaxPlus.Constants_MapInverted
    MapUseScaleColors = _MaxPlus.Constants_MapUseScaleColors
    MapProxy = _MaxPlus.Constants_MapProxy
    MapProxyrequest = _MaxPlus.Constants_MapProxyrequest
    MapHasBgimage = _MaxPlus.Constants_MapHasBgimage
    MapLegalDelete = _MaxPlus.Constants_MapLegalDelete
    MapViewFiltered = _MaxPlus.Constants_MapViewFiltered
    MapAllFlags = _MaxPlus.Constants_MapAllFlags
    BmmProgress = _MaxPlus.Constants_BmmProgress
    BmmCheckabort = _MaxPlus.Constants_BmmCheckabort
    BmmTextmsg = _MaxPlus.Constants_BmmTextmsg
    BmmUndefFrame = _MaxPlus.Constants_BmmUndefFrame
    BmmCustomGamma = _MaxPlus.Constants_BmmCustomGamma
    BmmCustomSize = _MaxPlus.Constants_BmmCustomSize
    BmmCustomResfit = _MaxPlus.Constants_BmmCustomResfit
    BmmCustomPos = _MaxPlus.Constants_BmmCustomPos
    BmmCustomFilegamma = _MaxPlus.Constants_BmmCustomFilegamma
    BmmCustomIflenumfiles = _MaxPlus.Constants_BmmCustomIflenumfiles
    BmmCustomHdrType = _MaxPlus.Constants_BmmCustomHdrType
    BmmCustomPosnw = _MaxPlus.Constants_BmmCustomPosnw
    BmmCustomPosn = _MaxPlus.Constants_BmmCustomPosn
    BmmCustomPosne = _MaxPlus.Constants_BmmCustomPosne
    BmmCustomPosw = _MaxPlus.Constants_BmmCustomPosw
    BmmCustomPoscn = _MaxPlus.Constants_BmmCustomPoscn
    BmmCustomPose = _MaxPlus.Constants_BmmCustomPose
    BmmCustomPossw = _MaxPlus.Constants_BmmCustomPossw
    BmmCustomPoss = _MaxPlus.Constants_BmmCustomPoss
    BmmCustomPosse = _MaxPlus.Constants_BmmCustomPosse
    BmmSeqWrap = _MaxPlus.Constants_BmmSeqWrap
    BmmSeqError = _MaxPlus.Constants_BmmSeqError
    BmmSeqHold = _MaxPlus.Constants_BmmSeqHold
    BmmChannelRed = _MaxPlus.Constants_BmmChannelRed
    BmmChannelGreen = _MaxPlus.Constants_BmmChannelGreen
    BmmChannelBlue = _MaxPlus.Constants_BmmChannelBlue
    BmmChannelAlpha = _MaxPlus.Constants_BmmChannelAlpha
    BmmChannelZ = _MaxPlus.Constants_BmmChannelZ
    BmmChannelLuminance = _MaxPlus.Constants_BmmChannelLuminance
    BmnotifyFlagStorageChange = _MaxPlus.Constants_BmnotifyFlagStorageChange
    BmnotifyFlagFileChange = _MaxPlus.Constants_BmnotifyFlagFileChange
    BmmUl = _MaxPlus.Constants_BmmUl
    BmmLl = _MaxPlus.Constants_BmmLl
    BmmUr = _MaxPlus.Constants_BmmUr
    BmmLr = _MaxPlus.Constants_BmmLr
    BmmCn = _MaxPlus.Constants_BmmCn
    BmmRnd = _MaxPlus.Constants_BmmRnd
    BmmVpp = _MaxPlus.Constants_BmmVpp
    BmmVps = _MaxPlus.Constants_BmmVps
    LgNolog = _MaxPlus.Constants_LgNolog
    LgFatal = _MaxPlus.Constants_LgFatal
    LgInfo = _MaxPlus.Constants_LgInfo
    LgDebug = _MaxPlus.Constants_LgDebug
    LgWarn = _MaxPlus.Constants_LgWarn
    BmmEnableSaveRegion = _MaxPlus.Constants_BmmEnableSaveRegion
    BmmDoSaveRegion = _MaxPlus.Constants_BmmDoSaveRegion
    BmmStoreGeorefData = _MaxPlus.Constants_BmmStoreGeorefData
    BmmRetrieveGeorefData = _MaxPlus.Constants_BmmRetrieveGeorefData
    BmmUseCustomFilterlist = _MaxPlus.Constants_BmmUseCustomFilterlist
    BmmSetFileInputSequenceFlag = _MaxPlus.Constants_BmmSetFileInputSequenceFlag
    BmmGetFileInputSequenceFlag = _MaxPlus.Constants_BmmGetFileInputSequenceFlag
    BmmFlushRelativeFileResolutionCache = _MaxPlus.Constants_BmmFlushRelativeFileResolutionCache
    BmmAssetGroup = _MaxPlus.Constants_BmmAssetGroup
    BmmAssetProxy = _MaxPlus.Constants_BmmAssetProxy
    ILayerInterface = _MaxPlus.Constants_ILayerInterface
    VersionInt = _MaxPlus.Constants_VersionInt
    CaptypeMorph = _MaxPlus.Constants_CaptypeMorph
    CaptypeGrid = _MaxPlus.Constants_CaptypeGrid
    CfAbline = _MaxPlus.Constants_CfAbline
    CfBcline = _MaxPlus.Constants_CfBcline
    CfCaline = _MaxPlus.Constants_CfCaline
    McvOriginal = _MaxPlus.Constants_McvOriginal
    McvFree = _MaxPlus.Constants_McvFree
    PcvertOriginal = _MaxPlus.Constants_PcvertOriginal
    PcvertFree = _MaxPlus.Constants_PcvertFree
    PcvecOriginal = _MaxPlus.Constants_PcvecOriginal
    PcvecNew = _MaxPlus.Constants_PcvecNew
    NumObjChans = _MaxPlus.Constants_NumObjChans
    TopoChannel = _MaxPlus.Constants_TopoChannel
    GeomChannel = _MaxPlus.Constants_GeomChannel
    TexmapChannel = _MaxPlus.Constants_TexmapChannel
    MtlChannel = _MaxPlus.Constants_MtlChannel
    SelectChannel = _MaxPlus.Constants_SelectChannel
    SubselTypeChannel = _MaxPlus.Constants_SubselTypeChannel
    DispAttribChannel = _MaxPlus.Constants_DispAttribChannel
    VertcolorChannel = _MaxPlus.Constants_VertcolorChannel
    GfxDataChannel = _MaxPlus.Constants_GfxDataChannel
    DispApproxChannel = _MaxPlus.Constants_DispApproxChannel
    ExtensionChannel = _MaxPlus.Constants_ExtensionChannel
    TmChannel = _MaxPlus.Constants_TmChannel
    EdgevisiblityChannel = _MaxPlus.Constants_EdgevisiblityChannel
    DontRecreateTristripChannel = _MaxPlus.Constants_DontRecreateTristripChannel
    GlobmtlChannel = _MaxPlus.Constants_GlobmtlChannel
    ObjChannels = _MaxPlus.Constants_ObjChannels
    AllChannels = _MaxPlus.Constants_AllChannels
    TopoChanNum = _MaxPlus.Constants_TopoChanNum
    GeomChanNum = _MaxPlus.Constants_GeomChanNum
    TexmapChanNum = _MaxPlus.Constants_TexmapChanNum
    MtlChanNum = _MaxPlus.Constants_MtlChanNum
    SelectChanNum = _MaxPlus.Constants_SelectChanNum
    SubselTypeChanNum = _MaxPlus.Constants_SubselTypeChanNum
    DispAttribChanNum = _MaxPlus.Constants_DispAttribChanNum
    VertColorChanNum = _MaxPlus.Constants_VertColorChanNum
    GfxDataChanNum = _MaxPlus.Constants_GfxDataChanNum
    DispApproxChanNum = _MaxPlus.Constants_DispApproxChanNum
    ExtensionChanNum = _MaxPlus.Constants_ExtensionChanNum
    DfMgrport = _MaxPlus.Constants_DfMgrport
    CidObjmove = _MaxPlus.Constants_CidObjmove
    CidObjrotate = _MaxPlus.Constants_CidObjrotate
    CidObjscale = _MaxPlus.Constants_CidObjscale
    CidObjuscale = _MaxPlus.Constants_CidObjuscale
    CidObjsquash = _MaxPlus.Constants_CidObjsquash
    CidObjselect = _MaxPlus.Constants_CidObjselect
    CidSubobjmove = _MaxPlus.Constants_CidSubobjmove
    CidSubobjrotate = _MaxPlus.Constants_CidSubobjrotate
    CidSubobjscale = _MaxPlus.Constants_CidSubobjscale
    CidSubobjuscale = _MaxPlus.Constants_CidSubobjuscale
    CidSubobjsquash = _MaxPlus.Constants_CidSubobjsquash
    CidSubobjselect = _MaxPlus.Constants_CidSubobjselect
    CidUnfreeze = _MaxPlus.Constants_CidUnfreeze
    CidUnhide = _MaxPlus.Constants_CidUnhide
    CidLink = _MaxPlus.Constants_CidLink
    CidBindwsm = _MaxPlus.Constants_CidBindwsm
    CidZoomview = _MaxPlus.Constants_CidZoomview
    CidZoomregion = _MaxPlus.Constants_CidZoomregion
    CidPanview = _MaxPlus.Constants_CidPanview
    CidRotateview = _MaxPlus.Constants_CidRotateview
    CidZoomall = _MaxPlus.Constants_CidZoomall
    CidRndregion = _MaxPlus.Constants_CidRndregion
    CidCamfov = _MaxPlus.Constants_CidCamfov
    CidCamdolly = _MaxPlus.Constants_CidCamdolly
    CidCampersp = _MaxPlus.Constants_CidCampersp
    CidCamtruck = _MaxPlus.Constants_CidCamtruck
    CidCamrotate = _MaxPlus.Constants_CidCamrotate
    CidCamroll = _MaxPlus.Constants_CidCamroll
    CidObjplace = _MaxPlus.Constants_CidObjplace
    TransformCmdSuper = _MaxPlus.Constants_TransformCmdSuper
    ViewportCommand = _MaxPlus.Constants_ViewportCommand
    MoveCommand = _MaxPlus.Constants_MoveCommand
    RotateCommand = _MaxPlus.Constants_RotateCommand
    ScaleCommand = _MaxPlus.Constants_ScaleCommand
    UscaleCommand = _MaxPlus.Constants_UscaleCommand
    SquashCommand = _MaxPlus.Constants_SquashCommand
    SelectCommand = _MaxPlus.Constants_SelectCommand
    HierarchyCommand = _MaxPlus.Constants_HierarchyCommand
    CreateCommand = _MaxPlus.Constants_CreateCommand
    ModifyCommand = _MaxPlus.Constants_ModifyCommand
    MotionCommand = _MaxPlus.Constants_MotionCommand
    AnimationCommand = _MaxPlus.Constants_AnimationCommand
    CameraCommand = _MaxPlus.Constants_CameraCommand
    NullCommand = _MaxPlus.Constants_NullCommand
    DisplayCommand = _MaxPlus.Constants_DisplayCommand
    SpotlightCommand = _MaxPlus.Constants_SpotlightCommand
    PickCommand = _MaxPlus.Constants_PickCommand
    ManipulateCommand = _MaxPlus.Constants_ManipulateCommand
    PickExCommand = _MaxPlus.Constants_PickExCommand
    PlaceCommand = _MaxPlus.Constants_PlaceCommand
    CidUser = _MaxPlus.Constants_CidUser
    CidPlayanimation = _MaxPlus.Constants_CidPlayanimation
    CidSimplecreate = _MaxPlus.Constants_CidSimplecreate
    CidModifyparam = _MaxPlus.Constants_CidModifyparam
    CidEditsoftselection = _MaxPlus.Constants_CidEditsoftselection
    CidNull = _MaxPlus.Constants_CidNull
    CidStdpick = _MaxPlus.Constants_CidStdpick
    CidPickaxisobject = _MaxPlus.Constants_CidPickaxisobject
    CidGrpAttach = _MaxPlus.Constants_CidGrpAttach
    CidAssemblyAttach = _MaxPlus.Constants_CidAssemblyAttach
    CidManipulate = _MaxPlus.Constants_CidManipulate
    CidScreenSpaceRotate = _MaxPlus.Constants_CidScreenSpaceRotate
    OrtBefore = _MaxPlus.Constants_OrtBefore
    OrtAfter = _MaxPlus.Constants_OrtAfter
    OrtConstant = _MaxPlus.Constants_OrtConstant
    OrtCycle = _MaxPlus.Constants_OrtCycle
    OrtLoop = _MaxPlus.Constants_OrtLoop
    OrtOscillate = _MaxPlus.Constants_OrtOscillate
    OrtLinear = _MaxPlus.Constants_OrtLinear
    OrtIdentity = _MaxPlus.Constants_OrtIdentity
    OrtRelativeRepeat = _MaxPlus.Constants_OrtRelativeRepeat
    KeyModeNoBuffer = _MaxPlus.Constants_KeyModeNoBuffer
    PositionDeriv = _MaxPlus.Constants_PositionDeriv
    RotationDeriv = _MaxPlus.Constants_RotationDeriv
    CopypasteIkpos = _MaxPlus.Constants_CopypasteIkpos
    CopypasteIkrot = _MaxPlus.Constants_CopypasteIkrot
    ControlbaseChunk = _MaxPlus.Constants_ControlbaseChunk
    InortChunk = _MaxPlus.Constants_InortChunk
    OutortChunk = _MaxPlus.Constants_OutortChunk
    ContDisabledChunk = _MaxPlus.Constants_ContDisabledChunk
    ContFlagsChunk = _MaxPlus.Constants_ContFlagsChunk
    InheritPosX = _MaxPlus.Constants_InheritPosX
    InheritPosY = _MaxPlus.Constants_InheritPosY
    InheritPosZ = _MaxPlus.Constants_InheritPosZ
    InheritRotX = _MaxPlus.Constants_InheritRotX
    InheritRotY = _MaxPlus.Constants_InheritRotY
    InheritRotZ = _MaxPlus.Constants_InheritRotZ
    InheritSclX = _MaxPlus.Constants_InheritSclX
    InheritSclY = _MaxPlus.Constants_InheritSclY
    InheritSclZ = _MaxPlus.Constants_InheritSclZ
    InheritAll = _MaxPlus.Constants_InheritAll
    IExecCbNoBorder = _MaxPlus.Constants_IExecCbNoBorder
    IExecCsNoBorder = _MaxPlus.Constants_IExecCsNoBorder
    IExecSpinnerReset = _MaxPlus.Constants_IExecSpinnerReset
    IExecSpinnerIsResetChange = _MaxPlus.Constants_IExecSpinnerIsResetChange
    IExecSpinnerAltDisable = _MaxPlus.Constants_IExecSpinnerAltDisable
    IExecSpinnerAltEnable = _MaxPlus.Constants_IExecSpinnerAltEnable
    IExecSpinnerOneClickDisable = _MaxPlus.Constants_IExecSpinnerOneClickDisable
    IExecSpinnerOneClickEnable = _MaxPlus.Constants_IExecSpinnerOneClickEnable
    IExecButtonDadEnable = _MaxPlus.Constants_IExecButtonDadEnable
    IExecGetTooltipHwnd = _MaxPlus.Constants_IExecGetTooltipHwnd
    OwnerMeditSample = _MaxPlus.Constants_OwnerMeditSample
    OwnerNode = _MaxPlus.Constants_OwnerNode
    OwnerMtlTex = _MaxPlus.Constants_OwnerMtlTex
    OwnerScene = _MaxPlus.Constants_OwnerScene
    OwnerBrowseNew = _MaxPlus.Constants_OwnerBrowseNew
    OwnerBrowseLib = _MaxPlus.Constants_OwnerBrowseLib
    OwnerBrowseMedit = _MaxPlus.Constants_OwnerBrowseMedit
    OwnerBrowseScene = _MaxPlus.Constants_OwnerBrowseScene
    OwnerMaterialExplorer = _MaxPlus.Constants_OwnerMaterialExplorer
    CuiToolbar = _MaxPlus.Constants_CuiToolbar
    CuiMenu = _MaxPlus.Constants_CuiMenu
    CuiHwnd = _MaxPlus.Constants_CuiHwnd
    CuiTopDock = _MaxPlus.Constants_CuiTopDock
    CuiBottomDock = _MaxPlus.Constants_CuiBottomDock
    CuiLeftDock = _MaxPlus.Constants_CuiLeftDock
    CuiRightDock = _MaxPlus.Constants_CuiRightDock
    CuiAllDock = _MaxPlus.Constants_CuiAllDock
    CuiHorizDock = _MaxPlus.Constants_CuiHorizDock
    CuiVertDock = _MaxPlus.Constants_CuiVertDock
    CuiFloatable = _MaxPlus.Constants_CuiFloatable
    CuiFloating = _MaxPlus.Constants_CuiFloating
    CuiConnectable = _MaxPlus.Constants_CuiConnectable
    CuiSmHandles = _MaxPlus.Constants_CuiSmHandles
    CuiSliding = _MaxPlus.Constants_CuiSliding
    CuiMaxSized = _MaxPlus.Constants_CuiMaxSized
    CuiDontSave = _MaxPlus.Constants_CuiDontSave
    CuiHasMenubar = _MaxPlus.Constants_CuiHasMenubar
    CuiMinimizedDockable = _MaxPlus.Constants_CuiMinimizedDockable
    CuiMinimizedDock = _MaxPlus.Constants_CuiMinimizedDock
    CuiNoPanel = _MaxPlus.Constants_CuiNoPanel
    CuiFixedPanels = _MaxPlus.Constants_CuiFixedPanels
    CuiFloatingPanels = _MaxPlus.Constants_CuiFloatingPanels
    CuiAllPanels = _MaxPlus.Constants_CuiAllPanels
    CuiPosdataMsg = _MaxPlus.Constants_CuiPosdataMsg
    CuiSubframeAddedMsg = _MaxPlus.Constants_CuiSubframeAddedMsg
    CuiSubframeRemovedMsg = _MaxPlus.Constants_CuiSubframeRemovedMsg
    CuiPresetMacrobuttons = _MaxPlus.Constants_CuiPresetMacrobuttons
    CuiSubframeActivateMsg = _MaxPlus.Constants_CuiSubframeActivateMsg
    CuiNone = _MaxPlus.Constants_CuiNone
    CuiMinTbWidth = _MaxPlus.Constants_CuiMinTbWidth
    CuiMenuHide = _MaxPlus.Constants_CuiMenuHide
    CuiMenuShowEnabled = _MaxPlus.Constants_CuiMenuShowEnabled
    CuiMenuShowDisabled = _MaxPlus.Constants_CuiMenuShowDisabled
    CuiMinSize = _MaxPlus.Constants_CuiMinSize
    CuiMaxSize = _MaxPlus.Constants_CuiMaxSize
    CuiPrefSize = _MaxPlus.Constants_CuiPrefSize
    CuiSize16 = _MaxPlus.Constants_CuiSize16
    CuiSize24 = _MaxPlus.Constants_CuiSize24
    CuiMaskNone = _MaxPlus.Constants_CuiMaskNone
    CuiMaskMono = _MaxPlus.Constants_CuiMaskMono
    CuiMaskAlpha = _MaxPlus.Constants_CuiMaskAlpha
    CuiMaskAlphaPremult = _MaxPlus.Constants_CuiMaskAlphaPremult
    CuiEditNone = _MaxPlus.Constants_CuiEditNone
    CuiEditKbd = _MaxPlus.Constants_CuiEditKbd
    CuiEditScript = _MaxPlus.Constants_CuiEditScript
    CuiEditMacro = _MaxPlus.Constants_CuiEditMacro
    CuiEditOrder = _MaxPlus.Constants_CuiEditOrder
    CuiModeNormal = _MaxPlus.Constants_CuiModeNormal
    CuiModeEdit = _MaxPlus.Constants_CuiModeEdit
    MbTypeKbd = _MaxPlus.Constants_MbTypeKbd
    MbTypeScript = _MaxPlus.Constants_MbTypeScript
    MbTypeAction = _MaxPlus.Constants_MbTypeAction
    MbTypeActionCustom = _MaxPlus.Constants_MbTypeActionCustom
    MbFlagEnabled = _MaxPlus.Constants_MbFlagEnabled
    MbFlagChecked = _MaxPlus.Constants_MbFlagChecked
    CcSpinnerChange = _MaxPlus.Constants_CcSpinnerChange
    CcSpinnerButtondown = _MaxPlus.Constants_CcSpinnerButtondown
    CcSpinnerButtonup = _MaxPlus.Constants_CcSpinnerButtonup
    SpinnerWrapDistance = _MaxPlus.Constants_SpinnerWrapDistance
    CcSliderChange = _MaxPlus.Constants_CcSliderChange
    CcSliderButtondown = _MaxPlus.Constants_CcSliderButtondown
    CcSliderButtonup = _MaxPlus.Constants_CcSliderButtonup
    WmCustrollupRecalclayout = _MaxPlus.Constants_WmCustrollupRecalclayout
    AppendrollClosed = _MaxPlus.Constants_AppendrollClosed
    Dontautoclose = _MaxPlus.Constants_Dontautoclose
    RollupSavecat = _MaxPlus.Constants_RollupSavecat
    RollupUsereplacedcat = _MaxPlus.Constants_RollupUsereplacedcat
    RollupNoborder = _MaxPlus.Constants_RollupNoborder
    WmCusteditEnter = _MaxPlus.Constants_WmCusteditEnter
    CcCommand = _MaxPlus.Constants_CcCommand
    CcCmdSetType = _MaxPlus.Constants_CcCmdSetType
    CcCmdSetState = _MaxPlus.Constants_CcCmdSetState
    CcCmdHiliteColor = _MaxPlus.Constants_CcCmdHiliteColor
    BnButtondown = _MaxPlus.Constants_BnButtondown
    BnButtonup = _MaxPlus.Constants_BnButtonup
    BnRightclick = _MaxPlus.Constants_BnRightclick
    BnFlyoff = _MaxPlus.Constants_BnFlyoff
    CmfToolbutton = _MaxPlus.Constants_CmfToolbutton
    FlyVariable = _MaxPlus.Constants_FlyVariable
    FlyUp = _MaxPlus.Constants_FlyUp
    FlyDown = _MaxPlus.Constants_FlyDown
    FlyHvariable = _MaxPlus.Constants_FlyHvariable
    FlyLeft = _MaxPlus.Constants_FlyLeft
    FlyRight = _MaxPlus.Constants_FlyRight
    TbRightclick = _MaxPlus.Constants_TbRightclick
    CenterToolVertically = _MaxPlus.Constants_CenterToolVertically
    CcColorChange = _MaxPlus.Constants_CcColorChange
    CcColorButtondown = _MaxPlus.Constants_CcColorButtondown
    CcColorButtonup = _MaxPlus.Constants_CcColorButtonup
    CcColorSel = _MaxPlus.Constants_CcColorSel
    CcColorDrop = _MaxPlus.Constants_CcColorDrop
    CcColorClose = _MaxPlus.Constants_CcColorClose
    EulertypeXyz = _MaxPlus.Constants_EulertypeXyz
    EulertypeXzy = _MaxPlus.Constants_EulertypeXzy
    EulertypeYzx = _MaxPlus.Constants_EulertypeYzx
    EulertypeYxz = _MaxPlus.Constants_EulertypeYxz
    EulertypeZxy = _MaxPlus.Constants_EulertypeZxy
    EulertypeZyx = _MaxPlus.Constants_EulertypeZyx
    EulertypeXyx = _MaxPlus.Constants_EulertypeXyx
    EulertypeYzy = _MaxPlus.Constants_EulertypeYzy
    EulertypeZxz = _MaxPlus.Constants_EulertypeZxz
    EulertypeRf = _MaxPlus.Constants_EulertypeRf
    Nummaskflags = _MaxPlus.Constants_Nummaskflags
    FltFilter = _MaxPlus.Constants_FltFilter
    FltLayer = _MaxPlus.Constants_FltLayer
    FltProgress = _MaxPlus.Constants_FltProgress
    FltCheckabort = _MaxPlus.Constants_FltCheckabort
    FltTextmsg = _MaxPlus.Constants_FltTextmsg
    FltTimechanged = _MaxPlus.Constants_FltTimechanged
    FltUndo = _MaxPlus.Constants_FltUndo
    ImgfltNone = _MaxPlus.Constants_ImgfltNone
    ImgfltMask = _MaxPlus.Constants_ImgfltMask
    ImgfltControl = _MaxPlus.Constants_ImgfltControl
    ImgfltFilter = _MaxPlus.Constants_ImgfltFilter
    ImgfltCompositor = _MaxPlus.Constants_ImgfltCompositor
    ImgfltThreaded = _MaxPlus.Constants_ImgfltThreaded
    PreviewBefore = _MaxPlus.Constants_PreviewBefore
    PreviewUp = _MaxPlus.Constants_PreviewUp
    PreviewWhole = _MaxPlus.Constants_PreviewWhole
    Wrdmax = _MaxPlus.Constants_Wrdmax
    Rcbits = _MaxPlus.Constants_Rcbits
    Rcoln = _MaxPlus.Constants_Rcoln
    Rcfracmask = _MaxPlus.Constants_Rcfracmask
    RcScl = _MaxPlus.Constants_RcScl
    RcSclhalf = _MaxPlus.Constants_RcSclhalf
    Rcshmask = _MaxPlus.Constants_Rcshmask
    Rcshmax = _MaxPlus.Constants_Rcshmax
    Numgbchan = _MaxPlus.Constants_Numgbchan
    GbZ = _MaxPlus.Constants_GbZ
    GbMtlId = _MaxPlus.Constants_GbMtlId
    GbNodeId = _MaxPlus.Constants_GbNodeId
    GbUv = _MaxPlus.Constants_GbUv
    GbNormal = _MaxPlus.Constants_GbNormal
    GbRealpix = _MaxPlus.Constants_GbRealpix
    GbCoverage = _MaxPlus.Constants_GbCoverage
    GbBg = _MaxPlus.Constants_GbBg
    GbNodeRenderId = _MaxPlus.Constants_GbNodeRenderId
    GbColor = _MaxPlus.Constants_GbColor
    GbTransp = _MaxPlus.Constants_GbTransp
    GbVeloc = _MaxPlus.Constants_GbVeloc
    GbWeight = _MaxPlus.Constants_GbWeight
    GbMask = _MaxPlus.Constants_GbMask
    BmmChanNone = _MaxPlus.Constants_BmmChanNone
    BmmChanZ = _MaxPlus.Constants_BmmChanZ
    BmmChanMtlId = _MaxPlus.Constants_BmmChanMtlId
    BmmChanNodeId = _MaxPlus.Constants_BmmChanNodeId
    BmmChanUv = _MaxPlus.Constants_BmmChanUv
    BmmChanNormal = _MaxPlus.Constants_BmmChanNormal
    BmmChanRealpix = _MaxPlus.Constants_BmmChanRealpix
    BmmChanCoverage = _MaxPlus.Constants_BmmChanCoverage
    BmmChanBg = _MaxPlus.Constants_BmmChanBg
    BmmChanNodeRenderId = _MaxPlus.Constants_BmmChanNodeRenderId
    BmmChanColor = _MaxPlus.Constants_BmmChanColor
    BmmChanTransp = _MaxPlus.Constants_BmmChanTransp
    BmmChanVeloc = _MaxPlus.Constants_BmmChanVeloc
    BmmChanWeight = _MaxPlus.Constants_BmmChanWeight
    BmmChanMask = _MaxPlus.Constants_BmmChanMask
    BmmChanTypeUnknown = _MaxPlus.Constants_BmmChanTypeUnknown
    BmmChanType8 = _MaxPlus.Constants_BmmChanType8
    BmmChanType16 = _MaxPlus.Constants_BmmChanType16
    BmmChanType24 = _MaxPlus.Constants_BmmChanType24
    BmmChanType32 = _MaxPlus.Constants_BmmChanType32
    BmmChanType48 = _MaxPlus.Constants_BmmChanType48
    BmmChanType64 = _MaxPlus.Constants_BmmChanType64
    BmmChanType96 = _MaxPlus.Constants_BmmChanType96
    FreeCamera = _MaxPlus.Constants_FreeCamera
    TargetedCamera = _MaxPlus.Constants_TargetedCamera
    ParallelCamera = _MaxPlus.Constants_ParallelCamera
    NumCamTypes = _MaxPlus.Constants_NumCamTypes
    InvalidHierarchy = _MaxPlus.Constants_InvalidHierarchy
    OmniLight = _MaxPlus.Constants_OmniLight
    TspotLight = _MaxPlus.Constants_TspotLight
    DirLight = _MaxPlus.Constants_DirLight
    FspotLight = _MaxPlus.Constants_FspotLight
    TdirLight = _MaxPlus.Constants_TdirLight
    NumLightTypes = _MaxPlus.Constants_NumLightTypes
    DecayNone = _MaxPlus.Constants_DecayNone
    DecayInv = _MaxPlus.Constants_DecayInv
    DecayInvsq = _MaxPlus.Constants_DecayInvsq
    Atten1Start = _MaxPlus.Constants_Atten1Start
    Atten1End = _MaxPlus.Constants_Atten1End
    AttenStart = _MaxPlus.Constants_AttenStart
    AttenEnd = _MaxPlus.Constants_AttenEnd
    RectLight = _MaxPlus.Constants_RectLight
    CircleLight = _MaxPlus.Constants_CircleLight
    PbGizmoRadius = _MaxPlus.Constants_PbGizmoRadius
    PbGizmoHemi = _MaxPlus.Constants_PbGizmoHemi
    PbGizmoSeed = _MaxPlus.Constants_PbGizmoSeed
    PbCylgizmoRadius = _MaxPlus.Constants_PbCylgizmoRadius
    PbCylgizmoHeight = _MaxPlus.Constants_PbCylgizmoHeight
    PbCylgizmoSeed = _MaxPlus.Constants_PbCylgizmoSeed
    PbBoxgizmoLength = _MaxPlus.Constants_PbBoxgizmoLength
    PbBoxgizmoWidth = _MaxPlus.Constants_PbBoxgizmoWidth
    PbBoxgizmoHeight = _MaxPlus.Constants_PbBoxgizmoHeight
    PbBoxgizmoSeed = _MaxPlus.Constants_PbBoxgizmoSeed
    GupresultKeep = _MaxPlus.Constants_GupresultKeep
    GupresultNokeep = _MaxPlus.Constants_GupresultNokeep
    GupresultAbort = _MaxPlus.Constants_GupresultAbort
    RestobjDoesReferencePointer = _MaxPlus.Constants_RestobjDoesReferencePointer
    RestobjGoingToDeletePointer = _MaxPlus.Constants_RestobjGoingToDeletePointer
    ReftargAutoDeleted = _MaxPlus.Constants_ReftargAutoDeleted
    HoldSystemEmpty = _MaxPlus.Constants_HoldSystemEmpty
    HoldPointerIsManager = _MaxPlus.Constants_HoldPointerIsManager
    HoldSuperlevel = _MaxPlus.Constants_HoldSuperlevel
    Maxcolors = _MaxPlus.Constants_Maxcolors
    WmAddColor = _MaxPlus.Constants_WmAddColor
    PointCollision = _MaxPlus.Constants_PointCollision
    SphereCollision = _MaxPlus.Constants_SphereCollision
    BoxCollision = _MaxPlus.Constants_BoxCollision
    EdgeCollision = _MaxPlus.Constants_EdgeCollision
    IResmakerInterface = _MaxPlus.Constants_IResmakerInterface
    WmCcSelCurvept = _MaxPlus.Constants_WmCcSelCurvept
    WmCcChangeCurvept = _MaxPlus.Constants_WmCcChangeCurvept
    WmCcChangeCurvetangent = _MaxPlus.Constants_WmCcChangeCurvetangent
    WmCcDelCurvept = _MaxPlus.Constants_WmCcDelCurvept
    WmCcInsertCurvept = _MaxPlus.Constants_WmCcInsertCurvept
    WmCcLbuttondown = _MaxPlus.Constants_WmCcLbuttondown
    WmCcRbuttondown = _MaxPlus.Constants_WmCcRbuttondown
    WmCcLbuttonup = _MaxPlus.Constants_WmCcLbuttonup
    InCurvetangentChanged = _MaxPlus.Constants_InCurvetangentChanged
    OutCurvetangentChanged = _MaxPlus.Constants_OutCurvetangentChanged
    CurveExtrapolateLinear = _MaxPlus.Constants_CurveExtrapolateLinear
    CurveExtrapolateConstant = _MaxPlus.Constants_CurveExtrapolateConstant
    CurvepBezier = _MaxPlus.Constants_CurvepBezier
    CurvepCorner = _MaxPlus.Constants_CurvepCorner
    CurvepLockedY = _MaxPlus.Constants_CurvepLockedY
    CurvepLockedX = _MaxPlus.Constants_CurvepLockedX
    CurvepSelected = _MaxPlus.Constants_CurvepSelected
    CurvepEndpoint = _MaxPlus.Constants_CurvepEndpoint
    CurvepNoXConstraint = _MaxPlus.Constants_CurvepNoXConstraint
    SelptsSelect = _MaxPlus.Constants_SelptsSelect
    SelptsDeselect = _MaxPlus.Constants_SelptsDeselect
    SelptsClearpts = _MaxPlus.Constants_SelptsClearpts
    FileDroptype = _MaxPlus.Constants_FileDroptype
    DropscriptDroptype = _MaxPlus.Constants_DropscriptDroptype
    ScenefileDroptype = _MaxPlus.Constants_ScenefileDroptype
    ImagefileDroptype = _MaxPlus.Constants_ImagefileDroptype
    ImportfileDroptype = _MaxPlus.Constants_ImportfileDroptype
    ScriptfileDroptype = _MaxPlus.Constants_ScriptfileDroptype
    DropscriptfileDroptype = _MaxPlus.Constants_DropscriptfileDroptype
    BitmapDroptype = _MaxPlus.Constants_BitmapDroptype
    MszipfileDroptype = _MaxPlus.Constants_MszipfileDroptype
    PathfileDroptype = _MaxPlus.Constants_PathfileDroptype
    FpsFail = _MaxPlus.Constants_FpsFail
    FpsNoSuchFunction = _MaxPlus.Constants_FpsNoSuchFunction
    FpsActionDisabled = _MaxPlus.Constants_FpsActionDisabled
    FpsOk = _MaxPlus.Constants_FpsOk
    FpActions = _MaxPlus.Constants_FpActions
    FpMixin = _MaxPlus.Constants_FpMixin
    FpCore = _MaxPlus.Constants_FpCore
    FpStaticMethods = _MaxPlus.Constants_FpStaticMethods
    FpTestInterface = _MaxPlus.Constants_FpTestInterface
    FpScriptedClass = _MaxPlus.Constants_FpScriptedClass
    FpTemporary = _MaxPlus.Constants_FpTemporary
    FpNoRedraw = _MaxPlus.Constants_FpNoRedraw
    FpVarArgs = _MaxPlus.Constants_FpVarArgs
    FpClientOwnsResult = _MaxPlus.Constants_FpClientOwnsResult
    FpAction = _MaxPlus.Constants_FpAction
    FpHasUi = _MaxPlus.Constants_FpHasUi
    FpIconres = _MaxPlus.Constants_FpIconres
    FpIconfile = _MaxPlus.Constants_FpIconfile
    FpHasShortcut = _MaxPlus.Constants_FpHasShortcut
    FpHasKeyargs = _MaxPlus.Constants_FpHasKeyargs
    FppHasRange = _MaxPlus.Constants_FppHasRange
    FppHasValidator = _MaxPlus.Constants_FppHasValidator
    FppInParam = _MaxPlus.Constants_FppInParam
    FppOutParam = _MaxPlus.Constants_FppOutParam
    FppInOutParam = _MaxPlus.Constants_FppInOutParam
    FppKeyarg = _MaxPlus.Constants_FppKeyarg
    FppIndex = _MaxPlus.Constants_FppIndex
    GfxMaxColors = _MaxPlus.Constants_GfxMaxColors
    WmBvToolbarRightclick = _MaxPlus.Constants_WmBvToolbarRightclick
    NodeLayerRef = _MaxPlus.Constants_NodeLayerRef
    MeDroppedScript = _MaxPlus.Constants_MeDroppedScript
    MeSilentErrors = _MaxPlus.Constants_MeSilentErrors
    MeHasExecute = _MaxPlus.Constants_MeHasExecute
    MeTemporary = _MaxPlus.Constants_MeTemporary
    MeNoAutoUndo = _MaxPlus.Constants_MeNoAutoUndo
    MeNeedsCompile = _MaxPlus.Constants_MeNeedsCompile
    BadMacroId = _MaxPlus.Constants_BadMacroId
    ImbTransp = _MaxPlus.Constants_ImbTransp
    ImpexpFail = _MaxPlus.Constants_ImpexpFail
    ImpexpSuccess = _MaxPlus.Constants_ImpexpSuccess
    ImpexpCancel = _MaxPlus.Constants_ImpexpCancel
    ZoomextNotImplemented = _MaxPlus.Constants_ZoomextNotImplemented
    ZoomextYes = _MaxPlus.Constants_ZoomextYes
    ZoomextNo = _MaxPlus.Constants_ZoomextNo
    SceneExportSelected = _MaxPlus.Constants_SceneExportSelected
    ProjPerspective = _MaxPlus.Constants_ProjPerspective
    ProjParallel = _MaxPlus.Constants_ProjParallel
    AxisUv = _MaxPlus.Constants_AxisUv
    AxisVw = _MaxPlus.Constants_AxisVw
    AxisWu = _MaxPlus.Constants_AxisWu
    UWrap = _MaxPlus.Constants_UWrap
    VWrap = _MaxPlus.Constants_VWrap
    UMirror = _MaxPlus.Constants_UMirror
    VMirror = _MaxPlus.Constants_VMirror
    UvNoise = _MaxPlus.Constants_UvNoise
    UvNoiseAni = _MaxPlus.Constants_UvNoiseAni
    XAxis = _MaxPlus.Constants_XAxis
    YAxis = _MaxPlus.Constants_YAxis
    ZAxis = _MaxPlus.Constants_ZAxis
    WmSubMtlButton = _MaxPlus.Constants_WmSubMtlButton
    WmTexmapButton = _MaxPlus.Constants_WmTexmapButton
    PsSmall = _MaxPlus.Constants_PsSmall
    PsLarge = _MaxPlus.Constants_PsLarge
    PsTiny = _MaxPlus.Constants_PsTiny
    PsTinySize = _MaxPlus.Constants_PsTinySize
    PsSmallSize = _MaxPlus.Constants_PsSmallSize
    PsLargeSize = _MaxPlus.Constants_PsLargeSize
    ExMultAlpha = _MaxPlus.Constants_ExMultAlpha
    ExRgbFromAlpha = _MaxPlus.Constants_ExRgbFromAlpha
    ExOpaqueAlpha = _MaxPlus.Constants_ExOpaqueAlpha
    ExAlphaFromRgb = _MaxPlus.Constants_ExAlphaFromRgb
    ShadelimFlat = _MaxPlus.Constants_ShadelimFlat
    ShadelimGouraud = _MaxPlus.Constants_ShadelimGouraud
    ShadelimPhong = _MaxPlus.Constants_ShadelimPhong
    NMaxRenderElements = _MaxPlus.Constants_NMaxRenderElements
    NoMotblur = _MaxPlus.Constants_NoMotblur
    ShadecontextRegatheringFlag = _MaxPlus.Constants_ShadecontextRegatheringFlag
    ShadecontextPrepassFlag = _MaxPlus.Constants_ShadecontextPrepassFlag
    ShadecontextRecursiveEvalFlag = _MaxPlus.Constants_ShadecontextRecursiveEvalFlag
    ShadecontextGuessShadowsFlag = _MaxPlus.Constants_ShadecontextGuessShadowsFlag
    ShadecontextThreadMask = _MaxPlus.Constants_ShadecontextThreadMask
    ShadecontextThreadShift = _MaxPlus.Constants_ShadecontextThreadShift
    ShadecontextWorkerMask = _MaxPlus.Constants_ShadecontextWorkerMask
    ShadecontextWorkerShift = _MaxPlus.Constants_ShadecontextWorkerShift
    ShadecontextBounceMask = _MaxPlus.Constants_ShadecontextBounceMask
    ScmodeNormal = _MaxPlus.Constants_ScmodeNormal
    ScmodeShadow = _MaxPlus.Constants_ScmodeShadow
    MtlInScene = _MaxPlus.Constants_MtlInScene
    MtlBeingEdited = _MaxPlus.Constants_MtlBeingEdited
    MtlSubBeingEdited = _MaxPlus.Constants_MtlSubBeingEdited
    MtlTexDisplayEnabled = _MaxPlus.Constants_MtlTexDisplayEnabled
    MtlMeditBackground = _MaxPlus.Constants_MtlMeditBackground
    MtlMeditBacklight = _MaxPlus.Constants_MtlMeditBacklight
    MtlObjtypeShift = _MaxPlus.Constants_MtlObjtypeShift
    MtlMeditObjtype = _MaxPlus.Constants_MtlMeditObjtype
    MtlMeditObjtypeMask = _MaxPlus.Constants_MtlMeditObjtypeMask
    MtlTilingShift = _MaxPlus.Constants_MtlTilingShift
    MtlMeditTiling = _MaxPlus.Constants_MtlMeditTiling
    MtlMeditTilingMask = _MaxPlus.Constants_MtlMeditTilingMask
    MtlMeditVidcheck = _MaxPlus.Constants_MtlMeditVidcheck
    MtlBrowseOpen1 = _MaxPlus.Constants_MtlBrowseOpen1
    MtlBrowseOpen2 = _MaxPlus.Constants_MtlBrowseOpen2
    MtlSubDisplayEnabled = _MaxPlus.Constants_MtlSubDisplayEnabled
    MtlCloned = _MaxPlus.Constants_MtlCloned
    MtlHwMatPresent = _MaxPlus.Constants_MtlHwMatPresent
    MtlHwMatEnabled = _MaxPlus.Constants_MtlHwMatEnabled
    MtlWorkFlag = _MaxPlus.Constants_MtlWorkFlag
    MtlDisplayEnableFlags = _MaxPlus.Constants_MtlDisplayEnableFlags
    MtlHwTexEnabled = _MaxPlus.Constants_MtlHwTexEnabled
    Mtlreq2side = _MaxPlus.Constants_Mtlreq2side
    MtlreqWire = _MaxPlus.Constants_MtlreqWire
    MtlreqWireAbs = _MaxPlus.Constants_MtlreqWireAbs
    MtlreqTransp = _MaxPlus.Constants_MtlreqTransp
    MtlreqUv = _MaxPlus.Constants_MtlreqUv
    MtlreqFacemap = _MaxPlus.Constants_MtlreqFacemap
    MtlreqXyz = _MaxPlus.Constants_MtlreqXyz
    MtlreqOxyz = _MaxPlus.Constants_MtlreqOxyz
    MtlreqBumpuv = _MaxPlus.Constants_MtlreqBumpuv
    MtlreqBgcol = _MaxPlus.Constants_MtlreqBgcol
    MtlreqPhong = _MaxPlus.Constants_MtlreqPhong
    MtlreqAutoreflect = _MaxPlus.Constants_MtlreqAutoreflect
    MtlreqAutomirror = _MaxPlus.Constants_MtlreqAutomirror
    MtlreqNoatmos = _MaxPlus.Constants_MtlreqNoatmos
    MtlreqAdditiveTransp = _MaxPlus.Constants_MtlreqAdditiveTransp
    MtlreqViewDep = _MaxPlus.Constants_MtlreqViewDep
    MtlreqUv2 = _MaxPlus.Constants_MtlreqUv2
    MtlreqBumpuv2 = _MaxPlus.Constants_MtlreqBumpuv2
    MtlreqPrepro = _MaxPlus.Constants_MtlreqPrepro
    MtlreqDontmergeFragments = _MaxPlus.Constants_MtlreqDontmergeFragments
    MtlreqDisplacemap = _MaxPlus.Constants_MtlreqDisplacemap
    MtlreqSupersample = _MaxPlus.Constants_MtlreqSupersample
    MtlreqWorldcoords = _MaxPlus.Constants_MtlreqWorldcoords
    MtlreqTranspInVp = _MaxPlus.Constants_MtlreqTranspInVp
    MtlreqFaceted = _MaxPlus.Constants_MtlreqFaceted
    MtlreqNoexposure = _MaxPlus.Constants_MtlreqNoexposure
    MtlreqSsGlobal = _MaxPlus.Constants_MtlreqSsGlobal
    MtlreqRend1 = _MaxPlus.Constants_MtlreqRend1
    MtlreqRend2 = _MaxPlus.Constants_MtlreqRend2
    MtlreqRend3 = _MaxPlus.Constants_MtlreqRend3
    MtlreqRend4 = _MaxPlus.Constants_MtlreqRend4
    MapslotTexture = _MaxPlus.Constants_MapslotTexture
    MapslotEnviron = _MaxPlus.Constants_MapslotEnviron
    MapslotDisplacement = _MaxPlus.Constants_MapslotDisplacement
    MapslotBackground = _MaxPlus.Constants_MapslotBackground
    UvwsrcExplicit = _MaxPlus.Constants_UvwsrcExplicit
    UvwsrcObjxyz = _MaxPlus.Constants_UvwsrcObjxyz
    UvwsrcExplicit2 = _MaxPlus.Constants_UvwsrcExplicit2
    UvwsrcWorldxyz = _MaxPlus.Constants_UvwsrcWorldxyz
    UvwsrcFacemap = _MaxPlus.Constants_UvwsrcFacemap
    UvwsrcHwgen = _MaxPlus.Constants_UvwsrcHwgen
    IidRaytraceMap = _MaxPlus.Constants_IidRaytraceMap
    Std2NmaxTexmaps = _MaxPlus.Constants_Std2NmaxTexmaps
    IidIreshading = _MaxPlus.Constants_IidIreshading
    IidIvaliditytoken = _MaxPlus.Constants_IidIvaliditytoken
    AttachmatIdtomat = _MaxPlus.Constants_AttachmatIdtomat
    AttachmatMattoid = _MaxPlus.Constants_AttachmatMattoid
    AttachmatNeither = _MaxPlus.Constants_AttachmatNeither
    XrefUpdateAuto = _MaxPlus.Constants_XrefUpdateAuto
    XrefBoxDisp = _MaxPlus.Constants_XrefBoxDisp
    XrefHidden = _MaxPlus.Constants_XrefHidden
    XrefDisabled = _MaxPlus.Constants_XrefDisabled
    XrefIgnoreLights = _MaxPlus.Constants_XrefIgnoreLights
    XrefIgnoreCameras = _MaxPlus.Constants_XrefIgnoreCameras
    XrefIgnoreShapes = _MaxPlus.Constants_XrefIgnoreShapes
    XrefIgnoreHelpers = _MaxPlus.Constants_XrefIgnoreHelpers
    XrefIgnoreAnim = _MaxPlus.Constants_XrefIgnoreAnim
    XrefFileChange = _MaxPlus.Constants_XrefFileChange
    XrefLoadError = _MaxPlus.Constants_XrefLoadError
    XrefSceneOverlay = _MaxPlus.Constants_XrefSceneOverlay
    XrefSceneHideinmanagerui = _MaxPlus.Constants_XrefSceneHideinmanagerui
    BoneScaletypeScale = _MaxPlus.Constants_BoneScaletypeScale
    BoneScaletypeSquash = _MaxPlus.Constants_BoneScaletypeSquash
    BoneScaletypeNone = _MaxPlus.Constants_BoneScaletypeNone
    BoneAxisX = _MaxPlus.Constants_BoneAxisX
    BoneAxisY = _MaxPlus.Constants_BoneAxisY
    BoneAxisZ = _MaxPlus.Constants_BoneAxisZ
    InodeLockpos = _MaxPlus.Constants_InodeLockpos
    InodeLockrot = _MaxPlus.Constants_InodeLockrot
    InodeLockscl = _MaxPlus.Constants_InodeLockscl
    InodeLockX = _MaxPlus.Constants_InodeLockX
    InodeLockY = _MaxPlus.Constants_InodeLockY
    InodeLockZ = _MaxPlus.Constants_InodeLockZ
    TreeContinue = _MaxPlus.Constants_TreeContinue
    TreeIgnorechildren = _MaxPlus.Constants_TreeIgnorechildren
    TreeAbort = _MaxPlus.Constants_TreeAbort
    PropidPinnode = _MaxPlus.Constants_PropidPinnode
    PropidPrecedence = _MaxPlus.Constants_PropidPrecedence
    PropidRelpos = _MaxPlus.Constants_PropidRelpos
    PropidRelrot = _MaxPlus.Constants_PropidRelrot
    IdIrenderPreshade = _MaxPlus.Constants_IdIrenderPreshade
    IdIrenderReshade = _MaxPlus.Constants_IdIrenderReshade
    IdIrenderAutomaticPreshade = _MaxPlus.Constants_IdIrenderAutomaticPreshade
    IdIrenderAutomaticReshade = _MaxPlus.Constants_IdIrenderAutomaticReshade
    IdIreshadeToggleToolbarDocked = _MaxPlus.Constants_IdIreshadeToggleToolbarDocked
    IdIreshadeActOnlyMouseUp = _MaxPlus.Constants_IdIreshadeActOnlyMouseUp
    PropidInterpui = _MaxPlus.Constants_PropidInterpui
    PropidJointparams = _MaxPlus.Constants_PropidJointparams
    PropidKeyinfo = _MaxPlus.Constants_PropidKeyinfo
    JntXactive = _MaxPlus.Constants_JntXactive
    JntYactive = _MaxPlus.Constants_JntYactive
    JntZactive = _MaxPlus.Constants_JntZactive
    JntXlimited = _MaxPlus.Constants_JntXlimited
    JntYlimited = _MaxPlus.Constants_JntYlimited
    JntZlimited = _MaxPlus.Constants_JntZlimited
    JntXease = _MaxPlus.Constants_JntXease
    JntYease = _MaxPlus.Constants_JntYease
    JntZease = _MaxPlus.Constants_JntZease
    JntXspring = _MaxPlus.Constants_JntXspring
    JntYspring = _MaxPlus.Constants_JntYspring
    JntZspring = _MaxPlus.Constants_JntZspring
    JntParams2 = _MaxPlus.Constants_JntParams2
    JntParamsEuler = _MaxPlus.Constants_JntParamsEuler
    JpHeld = _MaxPlus.Constants_JpHeld
    JntLimitexact = _MaxPlus.Constants_JntLimitexact
    JntRollopen = _MaxPlus.Constants_JntRollopen
    JntRot = _MaxPlus.Constants_JntRot
    JntPos = _MaxPlus.Constants_JntPos
    NoClassdescIdReturned = _MaxPlus.Constants_NoClassdescIdReturned
    PClassParams = _MaxPlus.Constants_PClassParams
    PAutoConstruct = _MaxPlus.Constants_PAutoConstruct
    PAutoUi = _MaxPlus.Constants_PAutoUi
    PUseParams = _MaxPlus.Constants_PUseParams
    PIncludeParams = _MaxPlus.Constants_PIncludeParams
    PMultimap = _MaxPlus.Constants_PMultimap
    PCallsetsOnLoad = _MaxPlus.Constants_PCallsetsOnLoad
    PHascategory = _MaxPlus.Constants_PHascategory
    PTemplateUi = _MaxPlus.Constants_PTemplateUi
    PVersion = _MaxPlus.Constants_PVersion
    PScriptedClass = _MaxPlus.Constants_PScriptedClass
    PTemporary = _MaxPlus.Constants_PTemporary
    PAnimatable = _MaxPlus.Constants_PAnimatable
    PTransient = _MaxPlus.Constants_PTransient
    PNoInit = _MaxPlus.Constants_PNoInit
    PComputedName = _MaxPlus.Constants_PComputedName
    PInvisible = _MaxPlus.Constants_PInvisible
    PResetDefault = _MaxPlus.Constants_PResetDefault
    PSubanim = _MaxPlus.Constants_PSubanim
    PTvShowAll = _MaxPlus.Constants_PTvShowAll
    PNoRef = _MaxPlus.Constants_PNoRef
    POwnersRef = _MaxPlus.Constants_POwnersRef
    PCanConvert = _MaxPlus.Constants_PCanConvert
    PSubtex = _MaxPlus.Constants_PSubtex
    PVariableSize = _MaxPlus.Constants_PVariableSize
    PNoAutoLabels = _MaxPlus.Constants_PNoAutoLabels
    PShortLabels = _MaxPlus.Constants_PShortLabels
    PReadOnly = _MaxPlus.Constants_PReadOnly
    PObsolete = _MaxPlus.Constants_PObsolete
    PReadSecondFlagValue = _MaxPlus.Constants_PReadSecondFlagValue
    PUseAccessorOnly = _MaxPlus.Constants_PUseAccessorOnly
    PUseNodeObjectValidity = _MaxPlus.Constants_PUseNodeObjectValidity
    PUseNodeTransformValidity = _MaxPlus.Constants_PUseNodeTransformValidity
    PNoMacroRecorder = _MaxPlus.Constants_PNoMacroRecorder
    PIsRef = _MaxPlus.Constants_PIsRef
    PHasDefault = _MaxPlus.Constants_PHasDefault
    PHasCurDefault = _MaxPlus.Constants_PHasCurDefault
    PHasMsDefault = _MaxPlus.Constants_PHasMsDefault
    PHasRange = _MaxPlus.Constants_PHasRange
    PHasClassId = _MaxPlus.Constants_PHasClassId
    PHasSclassId = _MaxPlus.Constants_PHasSclassId
    PUiEnabled = _MaxPlus.Constants_PUiEnabled
    PHasPrompt = _MaxPlus.Constants_PHasPrompt
    PHasCaption = _MaxPlus.Constants_PHasCaption
    PHasFiletypes = _MaxPlus.Constants_PHasFiletypes
    PHasRefno = _MaxPlus.Constants_PHasRefno
    PHasSubtexno = _MaxPlus.Constants_PHasSubtexno
    PIncluded = _MaxPlus.Constants_PIncluded
    PHasTooltip = _MaxPlus.Constants_PHasTooltip
    PHasAssettype = _MaxPlus.Constants_PHasAssettype
    PHasAssettypename = _MaxPlus.Constants_PHasAssettypename
    PbCountChunk = _MaxPlus.Constants_PbCountChunk
    PbParamChunk = _MaxPlus.Constants_PbParamChunk
    PbIndexChunk = _MaxPlus.Constants_PbIndexChunk
    PbAnimatableChunk = _MaxPlus.Constants_PbAnimatableChunk
    PbVersionChunk = _MaxPlus.Constants_PbVersionChunk
    PbLockedChunk = _MaxPlus.Constants_PbLockedChunk
    PbFloatChunk = _MaxPlus.Constants_PbFloatChunk
    PbIntChunk = _MaxPlus.Constants_PbIntChunk
    PbRgbaChunk = _MaxPlus.Constants_PbRgbaChunk
    PbPoint3Chunk = _MaxPlus.Constants_PbPoint3Chunk
    PbBoolChunk = _MaxPlus.Constants_PbBoolChunk
    PbTypeChunk = _MaxPlus.Constants_PbTypeChunk
    PbTypeFloatChunk = _MaxPlus.Constants_PbTypeFloatChunk
    PbTypeIntChunk = _MaxPlus.Constants_PbTypeIntChunk
    PbTypeRgbaChunk = _MaxPlus.Constants_PbTypeRgbaChunk
    PbTypePoint3Chunk = _MaxPlus.Constants_PbTypePoint3Chunk
    PbTypeBoolChunk = _MaxPlus.Constants_PbTypeBoolChunk
    PbTypeUserChunk = _MaxPlus.Constants_PbTypeUserChunk
    RedrawViews = _MaxPlus.Constants_RedrawViews
    PwmfLeftTarget = _MaxPlus.Constants_PwmfLeftTarget
    PwmfRightTarget = _MaxPlus.Constants_PwmfRightTarget
    PwmfHasMenu = _MaxPlus.Constants_PwmfHasMenu
    PwmfOpenEditor = _MaxPlus.Constants_PwmfOpenEditor
    BoneLockFlag = _MaxPlus.Constants_BoneLockFlag
    BoneAbsoluteFlag = _MaxPlus.Constants_BoneAbsoluteFlag
    BoneSplineFlag = _MaxPlus.Constants_BoneSplineFlag
    BoneSplineclosedFlag = _MaxPlus.Constants_BoneSplineclosedFlag
    BoneDrawEnvelopeFlag = _MaxPlus.Constants_BoneDrawEnvelopeFlag
    BoneBoneFlag = _MaxPlus.Constants_BoneBoneFlag
    BoneDeadFlag = _MaxPlus.Constants_BoneDeadFlag
    ISkin = _MaxPlus.Constants_ISkin
    ISkinimportdata = _MaxPlus.Constants_ISkinimportdata
    ISkin2 = _MaxPlus.Constants_ISkin2
    IGizmo = _MaxPlus.Constants_IGizmo
    IGizmo2 = _MaxPlus.Constants_IGizmo2
    IGizmo3 = _MaxPlus.Constants_IGizmo3
    SkinInvalidNodePtr = _MaxPlus.Constants_SkinInvalidNodePtr
    SkinOk = _MaxPlus.Constants_SkinOk
    Jigglepos = _MaxPlus.Constants_Jigglepos
    Jigglep3 = _MaxPlus.Constants_Jigglep3
    JiggleControlRef = _MaxPlus.Constants_JiggleControlRef
    JigglePblockRef1 = _MaxPlus.Constants_JigglePblockRef1
    JigglePblockRef2 = _MaxPlus.Constants_JigglePblockRef2
    SetParamsRelative = _MaxPlus.Constants_SetParamsRelative
    SetParamsAbsolute = _MaxPlus.Constants_SetParamsAbsolute
    ArcRadius = _MaxPlus.Constants_ArcRadius
    ArcFrom = _MaxPlus.Constants_ArcFrom
    ArcTo = _MaxPlus.Constants_ArcTo
    ArcPie = _MaxPlus.Constants_ArcPie
    ArcReverse = _MaxPlus.Constants_ArcReverse
    BoxobjLength = _MaxPlus.Constants_BoxobjLength
    BoxobjWidth = _MaxPlus.Constants_BoxobjWidth
    BoxobjHeight = _MaxPlus.Constants_BoxobjHeight
    BoxobjWsegs = _MaxPlus.Constants_BoxobjWsegs
    BoxobjLsegs = _MaxPlus.Constants_BoxobjLsegs
    BoxobjHsegs = _MaxPlus.Constants_BoxobjHsegs
    BoxobjGenuvs = _MaxPlus.Constants_BoxobjGenuvs
    CircleRadius = _MaxPlus.Constants_CircleRadius
    ConeRadius1 = _MaxPlus.Constants_ConeRadius1
    ConeRadius2 = _MaxPlus.Constants_ConeRadius2
    ConeHeight = _MaxPlus.Constants_ConeHeight
    ConeSegments = _MaxPlus.Constants_ConeSegments
    ConeCapsegments = _MaxPlus.Constants_ConeCapsegments
    ConeSides = _MaxPlus.Constants_ConeSides
    ConeSmooth = _MaxPlus.Constants_ConeSmooth
    ConeSliceon = _MaxPlus.Constants_ConeSliceon
    ConePieslice1 = _MaxPlus.Constants_ConePieslice1
    ConePieslice2 = _MaxPlus.Constants_ConePieslice2
    ConeGenuvs = _MaxPlus.Constants_ConeGenuvs
    CylinderRadius = _MaxPlus.Constants_CylinderRadius
    CylinderHeight = _MaxPlus.Constants_CylinderHeight
    CylinderSegments = _MaxPlus.Constants_CylinderSegments
    CylinderCapsegments = _MaxPlus.Constants_CylinderCapsegments
    CylinderSides = _MaxPlus.Constants_CylinderSides
    CylinderSmooth = _MaxPlus.Constants_CylinderSmooth
    CylinderSliceon = _MaxPlus.Constants_CylinderSliceon
    CylinderPieslice1 = _MaxPlus.Constants_CylinderPieslice1
    CylinderPieslice2 = _MaxPlus.Constants_CylinderPieslice2
    CylinderGenuvs = _MaxPlus.Constants_CylinderGenuvs
    DonutRadius1 = _MaxPlus.Constants_DonutRadius1
    DonutRadius2 = _MaxPlus.Constants_DonutRadius2
    EllipseLength = _MaxPlus.Constants_EllipseLength
    EllipseWidth = _MaxPlus.Constants_EllipseWidth
    HedraRadius = _MaxPlus.Constants_HedraRadius
    HedraFamily = _MaxPlus.Constants_HedraFamily
    HedraP = _MaxPlus.Constants_HedraP
    HedraQ = _MaxPlus.Constants_HedraQ
    HedraScalep = _MaxPlus.Constants_HedraScalep
    HedraScaleq = _MaxPlus.Constants_HedraScaleq
    HedraScaler = _MaxPlus.Constants_HedraScaler
    HedraVerts = _MaxPlus.Constants_HedraVerts
    HedraGenuvs = _MaxPlus.Constants_HedraGenuvs
    HelixRadius1 = _MaxPlus.Constants_HelixRadius1
    HelixRadius2 = _MaxPlus.Constants_HelixRadius2
    HelixHeight = _MaxPlus.Constants_HelixHeight
    HelixTurns = _MaxPlus.Constants_HelixTurns
    HelixBias = _MaxPlus.Constants_HelixBias
    HelixDirection = _MaxPlus.Constants_HelixDirection
    NgonRadius = _MaxPlus.Constants_NgonRadius
    NgonSides = _MaxPlus.Constants_NgonSides
    NgonCircular = _MaxPlus.Constants_NgonCircular
    PatchgridLength = _MaxPlus.Constants_PatchgridLength
    PatchgridWidth = _MaxPlus.Constants_PatchgridWidth
    PatchgridWsegs = _MaxPlus.Constants_PatchgridWsegs
    PatchgridLsegs = _MaxPlus.Constants_PatchgridLsegs
    PatchgridTexture = _MaxPlus.Constants_PatchgridTexture
    RspartVptparticles = _MaxPlus.Constants_RspartVptparticles
    RspartRndparticles = _MaxPlus.Constants_RspartRndparticles
    RspartDropsize = _MaxPlus.Constants_RspartDropsize
    RspartSpeed = _MaxPlus.Constants_RspartSpeed
    RspartVariation = _MaxPlus.Constants_RspartVariation
    RspartDisptype = _MaxPlus.Constants_RspartDisptype
    RspartStarttime = _MaxPlus.Constants_RspartStarttime
    RspartLifetime = _MaxPlus.Constants_RspartLifetime
    RspartEmitterwidth = _MaxPlus.Constants_RspartEmitterwidth
    RspartEmitterheight = _MaxPlus.Constants_RspartEmitterheight
    RspartHideemitter = _MaxPlus.Constants_RspartHideemitter
    RspartBirthrate = _MaxPlus.Constants_RspartBirthrate
    RspartConstant = _MaxPlus.Constants_RspartConstant
    RspartRender = _MaxPlus.Constants_RspartRender
    RspartTumble = _MaxPlus.Constants_RspartTumble
    RspartScale = _MaxPlus.Constants_RspartScale
    RectangleLength = _MaxPlus.Constants_RectangleLength
    RectangleWidth = _MaxPlus.Constants_RectangleWidth
    RectangleFillet = _MaxPlus.Constants_RectangleFillet
    SphereRadius = _MaxPlus.Constants_SphereRadius
    SphereSegs = _MaxPlus.Constants_SphereSegs
    SphereSmooth = _MaxPlus.Constants_SphereSmooth
    SphereHemi = _MaxPlus.Constants_SphereHemi
    SphereSquash = _MaxPlus.Constants_SphereSquash
    SphereRecenter = _MaxPlus.Constants_SphereRecenter
    SphereGenuvs = _MaxPlus.Constants_SphereGenuvs
    StartRadius1 = _MaxPlus.Constants_StartRadius1
    StartRadius2 = _MaxPlus.Constants_StartRadius2
    StartPoints = _MaxPlus.Constants_StartPoints
    StartDistort = _MaxPlus.Constants_StartDistort
    StartFillet1 = _MaxPlus.Constants_StartFillet1
    StartFillet2 = _MaxPlus.Constants_StartFillet2
    TeapotRadius = _MaxPlus.Constants_TeapotRadius
    TeapotSegs = _MaxPlus.Constants_TeapotSegs
    TeapotSmooth = _MaxPlus.Constants_TeapotSmooth
    TeapotTeapart = _MaxPlus.Constants_TeapotTeapart
    TeapotBody = _MaxPlus.Constants_TeapotBody
    TeapotHandle = _MaxPlus.Constants_TeapotHandle
    TeapotSpout = _MaxPlus.Constants_TeapotSpout
    TeapotLid = _MaxPlus.Constants_TeapotLid
    TeapotGenuvs = _MaxPlus.Constants_TeapotGenuvs
    TextSize = _MaxPlus.Constants_TextSize
    TextKerning = _MaxPlus.Constants_TextKerning
    TextLeading = _MaxPlus.Constants_TextLeading
    TorusRadius = _MaxPlus.Constants_TorusRadius
    TorusRadius2 = _MaxPlus.Constants_TorusRadius2
    TorusRotation = _MaxPlus.Constants_TorusRotation
    TorusTwist = _MaxPlus.Constants_TorusTwist
    TorusSegments = _MaxPlus.Constants_TorusSegments
    TorusSides = _MaxPlus.Constants_TorusSides
    TorusSmooth = _MaxPlus.Constants_TorusSmooth
    TorusSliceon = _MaxPlus.Constants_TorusSliceon
    TorusPieslice1 = _MaxPlus.Constants_TorusPieslice1
    TorusPieslice2 = _MaxPlus.Constants_TorusPieslice2
    TorusGenuvs = _MaxPlus.Constants_TorusGenuvs
    TubeRadius = _MaxPlus.Constants_TubeRadius
    TubeRadius2 = _MaxPlus.Constants_TubeRadius2
    TubeHeight = _MaxPlus.Constants_TubeHeight
    TubeSegments = _MaxPlus.Constants_TubeSegments
    TubeCapsegments = _MaxPlus.Constants_TubeCapsegments
    TubeSides = _MaxPlus.Constants_TubeSides
    TubeSmooth = _MaxPlus.Constants_TubeSmooth
    TubeSliceon = _MaxPlus.Constants_TubeSliceon
    TubePieslice1 = _MaxPlus.Constants_TubePieslice1
    TubePieslice2 = _MaxPlus.Constants_TubePieslice2
    TubeGenuvs = _MaxPlus.Constants_TubeGenuvs
    GridhelpLength = _MaxPlus.Constants_GridhelpLength
    GridhelpWidth = _MaxPlus.Constants_GridhelpWidth
    GridhelpGrid = _MaxPlus.Constants_GridhelpGrid
    BendAngle = _MaxPlus.Constants_BendAngle
    BendDir = _MaxPlus.Constants_BendDir
    BendAxis = _MaxPlus.Constants_BendAxis
    BendDoregion = _MaxPlus.Constants_BendDoregion
    BendFrom = _MaxPlus.Constants_BendFrom
    BendTo = _MaxPlus.Constants_BendTo
    BombStrength = _MaxPlus.Constants_BombStrength
    BombGravity = _MaxPlus.Constants_BombGravity
    BombChaos = _MaxPlus.Constants_BombChaos
    BombDetonation = _MaxPlus.Constants_BombDetonation
    DeflectorBounce = _MaxPlus.Constants_DeflectorBounce
    DeflectorWidth = _MaxPlus.Constants_DeflectorWidth
    DeflectorHeight = _MaxPlus.Constants_DeflectorHeight
    DisplaceMaptype = _MaxPlus.Constants_DisplaceMaptype
    DisplaceUtile = _MaxPlus.Constants_DisplaceUtile
    DisplaceVtile = _MaxPlus.Constants_DisplaceVtile
    DisplaceWtile = _MaxPlus.Constants_DisplaceWtile
    DisplaceBlur = _MaxPlus.Constants_DisplaceBlur
    DisplaceUsemap = _MaxPlus.Constants_DisplaceUsemap
    DisplaceApplymap = _MaxPlus.Constants_DisplaceApplymap
    DisplaceStrength = _MaxPlus.Constants_DisplaceStrength
    DisplaceDecay = _MaxPlus.Constants_DisplaceDecay
    DisplaceCenterlum = _MaxPlus.Constants_DisplaceCenterlum
    DisplaceUflip = _MaxPlus.Constants_DisplaceUflip
    DisplaceVflip = _MaxPlus.Constants_DisplaceVflip
    DisplaceWflip = _MaxPlus.Constants_DisplaceWflip
    DisplaceCenterl = _MaxPlus.Constants_DisplaceCenterl
    DisplaceCap = _MaxPlus.Constants_DisplaceCap
    DisplaceLength = _MaxPlus.Constants_DisplaceLength
    DisplaceWidth = _MaxPlus.Constants_DisplaceWidth
    DisplaceHeight = _MaxPlus.Constants_DisplaceHeight
    DisplaceAxis = _MaxPlus.Constants_DisplaceAxis
    ExtrudeAmount = _MaxPlus.Constants_ExtrudeAmount
    ExtrudeSegs = _MaxPlus.Constants_ExtrudeSegs
    ExtrudeCapstart = _MaxPlus.Constants_ExtrudeCapstart
    ExtrudeCapend = _MaxPlus.Constants_ExtrudeCapend
    ExtrudeCaptype = _MaxPlus.Constants_ExtrudeCaptype
    ExtrudeOutput = _MaxPlus.Constants_ExtrudeOutput
    ExtrudeMapping = _MaxPlus.Constants_ExtrudeMapping
    ExtrudeGenMatids = _MaxPlus.Constants_ExtrudeGenMatids
    ExtrudeUseShapeids = _MaxPlus.Constants_ExtrudeUseShapeids
    ExtrudeSmooth = _MaxPlus.Constants_ExtrudeSmooth
    GravityStrength = _MaxPlus.Constants_GravityStrength
    GravityDecay = _MaxPlus.Constants_GravityDecay
    GravityType = _MaxPlus.Constants_GravityType
    GravityDisplength = _MaxPlus.Constants_GravityDisplength
    WindStrength = _MaxPlus.Constants_WindStrength
    WindDecay = _MaxPlus.Constants_WindDecay
    WindType = _MaxPlus.Constants_WindType
    WindDisplength = _MaxPlus.Constants_WindDisplength
    WindTurbulence = _MaxPlus.Constants_WindTurbulence
    WindFrequency = _MaxPlus.Constants_WindFrequency
    WindScale = _MaxPlus.Constants_WindScale
    UvwmapMaptype = _MaxPlus.Constants_UvwmapMaptype
    UvwmapUtile = _MaxPlus.Constants_UvwmapUtile
    UvwmapVtile = _MaxPlus.Constants_UvwmapVtile
    UvwmapWtile = _MaxPlus.Constants_UvwmapWtile
    UvwmapUflip = _MaxPlus.Constants_UvwmapUflip
    UvwmapVflip = _MaxPlus.Constants_UvwmapVflip
    UvwmapWflip = _MaxPlus.Constants_UvwmapWflip
    UvwmapCap = _MaxPlus.Constants_UvwmapCap
    UvwmapChannel = _MaxPlus.Constants_UvwmapChannel
    UvwmapLength = _MaxPlus.Constants_UvwmapLength
    UvwmapWidth = _MaxPlus.Constants_UvwmapWidth
    UvwmapHeight = _MaxPlus.Constants_UvwmapHeight
    UvwmapAxis = _MaxPlus.Constants_UvwmapAxis
    NoisemodSeed = _MaxPlus.Constants_NoisemodSeed
    NoisemodScale = _MaxPlus.Constants_NoisemodScale
    NoisemodFractal = _MaxPlus.Constants_NoisemodFractal
    NoisemodRough = _MaxPlus.Constants_NoisemodRough
    NoisemodIterations = _MaxPlus.Constants_NoisemodIterations
    NoisemodAnimate = _MaxPlus.Constants_NoisemodAnimate
    NoisemodFreq = _MaxPlus.Constants_NoisemodFreq
    NoisemodPhase = _MaxPlus.Constants_NoisemodPhase
    NoisemodStrength = _MaxPlus.Constants_NoisemodStrength
    OptmodRender = _MaxPlus.Constants_OptmodRender
    OptmodViews = _MaxPlus.Constants_OptmodViews
    OptmodFacethresh1 = _MaxPlus.Constants_OptmodFacethresh1
    OptmodEdgethresh1 = _MaxPlus.Constants_OptmodEdgethresh1
    OptmodBias1 = _MaxPlus.Constants_OptmodBias1
    OptmodPreservemat1 = _MaxPlus.Constants_OptmodPreservemat1
    OptmodPreservesmooth1 = _MaxPlus.Constants_OptmodPreservesmooth1
    OptmodMaxedge1 = _MaxPlus.Constants_OptmodMaxedge1
    OptmodFacethresh2 = _MaxPlus.Constants_OptmodFacethresh2
    OptmodEdgethresh2 = _MaxPlus.Constants_OptmodEdgethresh2
    OptmodBias2 = _MaxPlus.Constants_OptmodBias2
    OptmodPreservemat2 = _MaxPlus.Constants_OptmodPreservemat2
    OptmodPreservesmooth2 = _MaxPlus.Constants_OptmodPreservesmooth2
    OptmodMaxedge2 = _MaxPlus.Constants_OptmodMaxedge2
    OptmodAutoedge = _MaxPlus.Constants_OptmodAutoedge
    OptmodManupdate = _MaxPlus.Constants_OptmodManupdate
    VolselLevel = _MaxPlus.Constants_VolselLevel
    VolselMethod = _MaxPlus.Constants_VolselMethod
    VolselType = _MaxPlus.Constants_VolselType
    VolselVolume = _MaxPlus.Constants_VolselVolume
    VolselInvert = _MaxPlus.Constants_VolselInvert
    RwaveAmplitude = _MaxPlus.Constants_RwaveAmplitude
    RwaveAmplitude2 = _MaxPlus.Constants_RwaveAmplitude2
    RwaveWavelen = _MaxPlus.Constants_RwaveWavelen
    RwavePhase = _MaxPlus.Constants_RwavePhase
    RwaveDecay = _MaxPlus.Constants_RwaveDecay
    RwaveCircles = _MaxPlus.Constants_RwaveCircles
    RwaveSegments = _MaxPlus.Constants_RwaveSegments
    RwaveDivisions = _MaxPlus.Constants_RwaveDivisions
    RwaveFlex = _MaxPlus.Constants_RwaveFlex
    SkewAmount = _MaxPlus.Constants_SkewAmount
    SkewDir = _MaxPlus.Constants_SkewDir
    SkewAxis = _MaxPlus.Constants_SkewAxis
    SkewDoregion = _MaxPlus.Constants_SkewDoregion
    SkewFrom = _MaxPlus.Constants_SkewFrom
    SkewTo = _MaxPlus.Constants_SkewTo
    MatmodMatid = _MaxPlus.Constants_MatmodMatid
    SmoothmodAutosmooth = _MaxPlus.Constants_SmoothmodAutosmooth
    SmoothmodThreshold = _MaxPlus.Constants_SmoothmodThreshold
    SmoothmodSmoothbits = _MaxPlus.Constants_SmoothmodSmoothbits
    NormmodUnify = _MaxPlus.Constants_NormmodUnify
    NormmodFlip = _MaxPlus.Constants_NormmodFlip
    SurfrevDegrees = _MaxPlus.Constants_SurfrevDegrees
    SurfrevSegs = _MaxPlus.Constants_SurfrevSegs
    SurfrevCapstart = _MaxPlus.Constants_SurfrevCapstart
    SurfrevCapend = _MaxPlus.Constants_SurfrevCapend
    SurfrevCaptype = _MaxPlus.Constants_SurfrevCaptype
    SurfrevWeldcore = _MaxPlus.Constants_SurfrevWeldcore
    SurfrevOutput = _MaxPlus.Constants_SurfrevOutput
    SurfrevMapping = _MaxPlus.Constants_SurfrevMapping
    TaperAmt = _MaxPlus.Constants_TaperAmt
    TaperCrv = _MaxPlus.Constants_TaperCrv
    TaperAxis = _MaxPlus.Constants_TaperAxis
    TaperEffectaxis = _MaxPlus.Constants_TaperEffectaxis
    TaperSymmetry = _MaxPlus.Constants_TaperSymmetry
    TaperDoregion = _MaxPlus.Constants_TaperDoregion
    TaperFrom = _MaxPlus.Constants_TaperFrom
    TaperTo = _MaxPlus.Constants_TaperTo
    TwistAngle = _MaxPlus.Constants_TwistAngle
    TwistBias = _MaxPlus.Constants_TwistBias
    TwistAxis = _MaxPlus.Constants_TwistAxis
    TwistDoregion = _MaxPlus.Constants_TwistDoregion
    TwistFrom = _MaxPlus.Constants_TwistFrom
    TwistTo = _MaxPlus.Constants_TwistTo
    SmoothAutosmooth = _MaxPlus.Constants_SmoothAutosmooth
    SmoothThreshold = _MaxPlus.Constants_SmoothThreshold
    SmoothSmoothbits = _MaxPlus.Constants_SmoothSmoothbits
    NormalmodUnify = _MaxPlus.Constants_NormalmodUnify
    NormalmodFlip = _MaxPlus.Constants_NormalmodFlip
    TessmodType = _MaxPlus.Constants_TessmodType
    TessmodTension = _MaxPlus.Constants_TessmodTension
    TessmodIterations = _MaxPlus.Constants_TessmodIterations
    TessmodFaceType = _MaxPlus.Constants_TessmodFaceType
    UvwxformUtile = _MaxPlus.Constants_UvwxformUtile
    UvwxformVtile = _MaxPlus.Constants_UvwxformVtile
    UvwxformWtile = _MaxPlus.Constants_UvwxformWtile
    UvwxformUoffset = _MaxPlus.Constants_UvwxformUoffset
    UvwxformVoffset = _MaxPlus.Constants_UvwxformVoffset
    UvwxformWoffset = _MaxPlus.Constants_UvwxformWoffset
    UvwxformUflip = _MaxPlus.Constants_UvwxformUflip
    UvwxformVflip = _MaxPlus.Constants_UvwxformVflip
    UvwxformWflip = _MaxPlus.Constants_UvwxformWflip
    UvwxformChannel = _MaxPlus.Constants_UvwxformChannel
    TextobjItalic = _MaxPlus.Constants_TextobjItalic
    TextobjUnderline = _MaxPlus.Constants_TextobjUnderline
    TextobjLeft = _MaxPlus.Constants_TextobjLeft
    TextobjCenter = _MaxPlus.Constants_TextobjCenter
    TextobjRight = _MaxPlus.Constants_TextobjRight
    TextobjJustified = _MaxPlus.Constants_TextobjJustified
    IkeySelected = _MaxPlus.Constants_IkeySelected
    IkeyXsel = _MaxPlus.Constants_IkeyXsel
    IkeyYsel = _MaxPlus.Constants_IkeyYsel
    IkeyZsel = _MaxPlus.Constants_IkeyZsel
    IkeyWsel = _MaxPlus.Constants_IkeyWsel
    IkeyFlagged = _MaxPlus.Constants_IkeyFlagged
    IkeyTimeLock = _MaxPlus.Constants_IkeyTimeLock
    IkeyAllsel = _MaxPlus.Constants_IkeyAllsel
    IkeyVallockShift = _MaxPlus.Constants_IkeyVallockShift
    IkeyValxLock = _MaxPlus.Constants_IkeyValxLock
    IkeyValyLock = _MaxPlus.Constants_IkeyValyLock
    IkeyValzLock = _MaxPlus.Constants_IkeyValzLock
    IkeyValaLock = _MaxPlus.Constants_IkeyValaLock
    TcbkeyQuatvalid = _MaxPlus.Constants_TcbkeyQuatvalid
    BezkeyXbroken = _MaxPlus.Constants_BezkeyXbroken
    BezkeyYbroken = _MaxPlus.Constants_BezkeyYbroken
    BezkeyZbroken = _MaxPlus.Constants_BezkeyZbroken
    BezkeyWbroken = _MaxPlus.Constants_BezkeyWbroken
    BezkeyNumtypebits = _MaxPlus.Constants_BezkeyNumtypebits
    BezkeyIntypeshift = _MaxPlus.Constants_BezkeyIntypeshift
    BezkeyOuttypeshift = _MaxPlus.Constants_BezkeyOuttypeshift
    BezkeyTypemask = _MaxPlus.Constants_BezkeyTypemask
    BezkeySmooth = _MaxPlus.Constants_BezkeySmooth
    BezkeyLinear = _MaxPlus.Constants_BezkeyLinear
    BezkeyStep = _MaxPlus.Constants_BezkeyStep
    BezkeyFast = _MaxPlus.Constants_BezkeyFast
    BezkeySlow = _MaxPlus.Constants_BezkeySlow
    BezkeyUser = _MaxPlus.Constants_BezkeyUser
    BezkeyFlat = _MaxPlus.Constants_BezkeyFlat
    NumTangenttypes = _MaxPlus.Constants_NumTangenttypes
    BezkeyConstvelocity = _MaxPlus.Constants_BezkeyConstvelocity
    BezkeyUnconstrainhandle = _MaxPlus.Constants_BezkeyUnconstrainhandle
    HitkeyIntan = _MaxPlus.Constants_HitkeyIntan
    HitkeyOuttan = _MaxPlus.Constants_HitkeyOuttan
    TflagCurvesel = _MaxPlus.Constants_TflagCurvesel
    TflagRangeUnlocked = _MaxPlus.Constants_TflagRangeUnlocked
    TflagLoopedin = _MaxPlus.Constants_TflagLoopedin
    TflagLoopedout = _MaxPlus.Constants_TflagLoopedout
    TflagColor = _MaxPlus.Constants_TflagColor
    TflagHsv = _MaxPlus.Constants_TflagHsv
    TrackXlocked = _MaxPlus.Constants_TrackXlocked
    KtFlagDelayKeyschanged = _MaxPlus.Constants_KtFlagDelayKeyschanged
    TflagNotkeyable = _MaxPlus.Constants_TflagNotkeyable
    TflagTcbquatNowindup = _MaxPlus.Constants_TflagTcbquatNowindup
    XdataEntry = _MaxPlus.Constants_XdataEntry
    XdataAppname = _MaxPlus.Constants_XdataAppname
    BoolopUnion = _MaxPlus.Constants_BoolopUnion
    BoolopIntersection = _MaxPlus.Constants_BoolopIntersection
    BoolopSubAb = _MaxPlus.Constants_BoolopSubAb
    BoolopSubBa = _MaxPlus.Constants_BoolopSubBa
    BoolopCut = _MaxPlus.Constants_BoolopCut
    BoolopCutRefine = _MaxPlus.Constants_BoolopCutRefine
    BoolopCutSeparate = _MaxPlus.Constants_BoolopCutSeparate
    BoolopCutRemoveIn = _MaxPlus.Constants_BoolopCutRemoveIn
    BoolopCutRemoveOut = _MaxPlus.Constants_BoolopCutRemoveOut
    BoolupdateAlways = _MaxPlus.Constants_BoolupdateAlways
    BoolupdateSelected = _MaxPlus.Constants_BoolupdateSelected
    BoolupdateRender = _MaxPlus.Constants_BoolupdateRender
    BoolupdateManual = _MaxPlus.Constants_BoolupdateManual
    BoolAddopReference = _MaxPlus.Constants_BoolAddopReference
    BoolAddopInstance = _MaxPlus.Constants_BoolAddopInstance
    BoolAddopCopy = _MaxPlus.Constants_BoolAddopCopy
    BoolAddopMove = _MaxPlus.Constants_BoolAddopMove
    BoolMatNoModify = _MaxPlus.Constants_BoolMatNoModify
    BoolMatIdtomat = _MaxPlus.Constants_BoolMatIdtomat
    BoolMatMattoid = _MaxPlus.Constants_BoolMatMattoid
    BoolMatDiscardOrig = _MaxPlus.Constants_BoolMatDiscardOrig
    BoolMatDiscardNew = _MaxPlus.Constants_BoolMatDiscardNew
    BoolrefObject1 = _MaxPlus.Constants_BoolrefObject1
    BoolrefObject2 = _MaxPlus.Constants_BoolrefObject2
    BoolrefCont1 = _MaxPlus.Constants_BoolrefCont1
    BoolrefCont2 = _MaxPlus.Constants_BoolrefCont2
    BoolrefPblock = _MaxPlus.Constants_BoolrefPblock
    PathposPathRef = _MaxPlus.Constants_PathposPathRef
    PathposPblockRef = _MaxPlus.Constants_PathposPblockRef
    PosposPblockRef = _MaxPlus.Constants_PosposPblockRef
    OrientRotPblockRef = _MaxPlus.Constants_OrientRotPblockRef
    LookatRotPblockRef = _MaxPlus.Constants_LookatRotPblockRef
    SurfcontURef = _MaxPlus.Constants_SurfcontURef
    SurfcontVRef = _MaxPlus.Constants_SurfcontVRef
    SurfcontSurfobjRef = _MaxPlus.Constants_SurfcontSurfobjRef
    AddWorldLink = _MaxPlus.Constants_AddWorldLink
    LinkctrlControlRef = _MaxPlus.Constants_LinkctrlControlRef
    LinkctrlFirstparentRef = _MaxPlus.Constants_LinkctrlFirstparentRef
    LinkctrlPblockRef = _MaxPlus.Constants_LinkctrlPblockRef
    LinkctrlLtctlRef = _MaxPlus.Constants_LinkctrlLtctlRef
    LinkctrlCoreRefs = _MaxPlus.Constants_LinkctrlCoreRefs
    LookatTargetRef = _MaxPlus.Constants_LookatTargetRef
    LookatPosRef = _MaxPlus.Constants_LookatPosRef
    LookatRollRef = _MaxPlus.Constants_LookatRollRef
    LookatSclRef = _MaxPlus.Constants_LookatSclRef
    BoolPblockRef = _MaxPlus.Constants_BoolPblockRef
    SplineikcontrolPblockRef = _MaxPlus.Constants_SplineikcontrolPblockRef
    ImeshselObject = _MaxPlus.Constants_ImeshselObject
    ImeshselVertex = _MaxPlus.Constants_ImeshselVertex
    ImeshselFace = _MaxPlus.Constants_ImeshselFace
    ImeshselEdge = _MaxPlus.Constants_ImeshselEdge
    WmTvSelchanged = _MaxPlus.Constants_WmTvSelchanged
    WmTvMeditTvDestroyed = _MaxPlus.Constants_WmTvMeditTvDestroyed
    WmTvDohzoomextents = _MaxPlus.Constants_WmTvDohzoomextents
    TvstyleMaximizebut = _MaxPlus.Constants_TvstyleMaximizebut
    TvstyleInviewport = _MaxPlus.Constants_TvstyleInviewport
    TvstyleNameable = _MaxPlus.Constants_TvstyleNameable
    TvstyleInmotionpan = _MaxPlus.Constants_TvstyleInmotionpan
    TvstyleShowNonanimatable = _MaxPlus.Constants_TvstyleShowNonanimatable
    TvstyleShowCui = _MaxPlus.Constants_TvstyleShowCui
    TvFloat = _MaxPlus.Constants_TvFloat
    TvDockTop = _MaxPlus.Constants_TvDockTop
    TvDockBottom = _MaxPlus.Constants_TvDockBottom
    TvCanDockTop = _MaxPlus.Constants_TvCanDockTop
    ModeEditkeys = _MaxPlus.Constants_ModeEditkeys
    ModeEdittime = _MaxPlus.Constants_ModeEdittime
    ModeEditranges = _MaxPlus.Constants_ModeEditranges
    ModePosranges = _MaxPlus.Constants_ModePosranges
    ModeEditfcurve = _MaxPlus.Constants_ModeEditfcurve
    EffectAllSelKeys = _MaxPlus.Constants_EffectAllSelKeys
    EffectSelKeysInSelTracks = _MaxPlus.Constants_EffectSelKeysInSelTracks
    EffectAllKeysInSelTracks = _MaxPlus.Constants_EffectAllKeysInSelTracks
    EffectAllKeys = _MaxPlus.Constants_EffectAllKeys
    OpentvSpecial = _MaxPlus.Constants_OpentvSpecial
    OpentvCustom = _MaxPlus.Constants_OpentvCustom
    OpentvLast = _MaxPlus.Constants_OpentvLast
    OpentvNew = _MaxPlus.Constants_OpentvNew
    WmTvToolbarRightclick = _MaxPlus.Constants_WmTvToolbarRightclick
    WmTvLabelDoubleClick = _MaxPlus.Constants_WmTvLabelDoubleClick
    IdTvToolbar = _MaxPlus.Constants_IdTvToolbar
    IdTvDeletetime = _MaxPlus.Constants_IdTvDeletetime
    IdTvMove = _MaxPlus.Constants_IdTvMove
    IdTvScale = _MaxPlus.Constants_IdTvScale
    IdTvScaletime = _MaxPlus.Constants_IdTvScaletime
    IdTvSnapkeys = _MaxPlus.Constants_IdTvSnapkeys
    IdTvAlignkeys = _MaxPlus.Constants_IdTvAlignkeys
    IdTvAdd = _MaxPlus.Constants_IdTvAdd
    IdTvFilters = _MaxPlus.Constants_IdTvFilters
    IdTvInsert = _MaxPlus.Constants_IdTvInsert
    IdTvCut = _MaxPlus.Constants_IdTvCut
    IdTvCopy = _MaxPlus.Constants_IdTvCopy
    IdTvPaste = _MaxPlus.Constants_IdTvPaste
    IdTvSlide = _MaxPlus.Constants_IdTvSlide
    IdTvSelect = _MaxPlus.Constants_IdTvSelect
    IdTvReverse = _MaxPlus.Constants_IdTvReverse
    IdTvLeftend = _MaxPlus.Constants_IdTvLeftend
    IdTvRightend = _MaxPlus.Constants_IdTvRightend
    IdTvSubtree = _MaxPlus.Constants_IdTvSubtree
    IdTvAssigncontrol = _MaxPlus.Constants_IdTvAssigncontrol
    IdTvMakeunique = _MaxPlus.Constants_IdTvMakeunique
    IdTvChooseort = _MaxPlus.Constants_IdTvChooseort
    IdTvShowtangents = _MaxPlus.Constants_IdTvShowtangents
    IdTvShowalltangents = _MaxPlus.Constants_IdTvShowalltangents
    IdTvScalevalues = _MaxPlus.Constants_IdTvScalevalues
    IdTvRegionTool = _MaxPlus.Constants_IdTvRegionTool
    IdTvIsolateCurve = _MaxPlus.Constants_IdTvIsolateCurve
    IdTvBreakTangents = _MaxPlus.Constants_IdTvBreakTangents
    IdTvUnifyTangents = _MaxPlus.Constants_IdTvUnifyTangents
    IdTvFreezesel = _MaxPlus.Constants_IdTvFreezesel
    IdTvShowkeysonfrozen = _MaxPlus.Constants_IdTvShowkeysonfrozen
    IdTvTemplate = _MaxPlus.Constants_IdTvTemplate
    IdTvFreezenonselcurves = _MaxPlus.Constants_IdTvFreezenonselcurves
    IdTvHidenonselcurves = _MaxPlus.Constants_IdTvHidenonselcurves
    IdTvLocktan = _MaxPlus.Constants_IdTvLocktan
    IdTvProperties = _MaxPlus.Constants_IdTvProperties
    IdTvNewease = _MaxPlus.Constants_IdTvNewease
    IdTvDelease = _MaxPlus.Constants_IdTvDelease
    IdTvToggleease = _MaxPlus.Constants_IdTvToggleease
    IdTvChooseEaseOrt = _MaxPlus.Constants_IdTvChooseEaseOrt
    IdTvChooseMultOrt = _MaxPlus.Constants_IdTvChooseMultOrt
    IdTvAddnote = _MaxPlus.Constants_IdTvAddnote
    IdTvDeletenote = _MaxPlus.Constants_IdTvDeletenote
    IdTvRecouplerange = _MaxPlus.Constants_IdTvRecouplerange
    IdTvCopytrack = _MaxPlus.Constants_IdTvCopytrack
    IdTvPastetrack = _MaxPlus.Constants_IdTvPastetrack
    IdTvReducekeys = _MaxPlus.Constants_IdTvReducekeys
    IdTvAddvis = _MaxPlus.Constants_IdTvAddvis
    IdTvDelvis = _MaxPlus.Constants_IdTvDelvis
    IdTvTvname = _MaxPlus.Constants_IdTvTvname
    IdTvTvutil = _MaxPlus.Constants_IdTvTvutil
    IdTvGetselected = _MaxPlus.Constants_IdTvGetselected
    IdTvDeletecontrol = _MaxPlus.Constants_IdTvDeletecontrol
    IdTvSetupperlimit = _MaxPlus.Constants_IdTvSetupperlimit
    IdTvSetlowerlimit = _MaxPlus.Constants_IdTvSetlowerlimit
    IdTvTogglelimit = _MaxPlus.Constants_IdTvTogglelimit
    IdTvRemovelimit = _MaxPlus.Constants_IdTvRemovelimit
    IdTvCopylimitonly = _MaxPlus.Constants_IdTvCopylimitonly
    IdTvPastelimitonly = _MaxPlus.Constants_IdTvPastelimitonly
    IdTvExpandnodes = _MaxPlus.Constants_IdTvExpandnodes
    IdTvExpandtracks = _MaxPlus.Constants_IdTvExpandtracks
    IdTvExpandall = _MaxPlus.Constants_IdTvExpandall
    IdTvCollapsenodes = _MaxPlus.Constants_IdTvCollapsenodes
    IdTvCollapsetracks = _MaxPlus.Constants_IdTvCollapsetracks
    IdTvCollapseall = _MaxPlus.Constants_IdTvCollapseall
    IdTvSelectall = _MaxPlus.Constants_IdTvSelectall
    IdTvSelectinvert = _MaxPlus.Constants_IdTvSelectinvert
    IdTvSelectnone = _MaxPlus.Constants_IdTvSelectnone
    IdTvSelectchildren = _MaxPlus.Constants_IdTvSelectchildren
    IdTvEdittrackset = _MaxPlus.Constants_IdTvEdittrackset
    IdTvTracksetlist = _MaxPlus.Constants_IdTvTracksetlist
    IdTvAutoexpandKeyable = _MaxPlus.Constants_IdTvAutoexpandKeyable
    IdTvAutoexpandAnimated = _MaxPlus.Constants_IdTvAutoexpandAnimated
    IdTvAutoexpandLimits = _MaxPlus.Constants_IdTvAutoexpandLimits
    IdTvAutoexpandLocked = _MaxPlus.Constants_IdTvAutoexpandLocked
    IdTvIgnoreAnimRange = _MaxPlus.Constants_IdTvIgnoreAnimRange
    IdTvRespectAnimRange = _MaxPlus.Constants_IdTvRespectAnimRange
    IdTvFilterSelectedtracks = _MaxPlus.Constants_IdTvFilterSelectedtracks
    IdTvEditTracksets = _MaxPlus.Constants_IdTvEditTracksets
    IdTvStatus = _MaxPlus.Constants_IdTvStatus
    IdTvZoomregion = _MaxPlus.Constants_IdTvZoomregion
    IdTvPan = _MaxPlus.Constants_IdTvPan
    IdTvVfittowindow = _MaxPlus.Constants_IdTvVfittowindow
    IdTvHfittowindow = _MaxPlus.Constants_IdTvHfittowindow
    IdTvShowstats = _MaxPlus.Constants_IdTvShowstats
    IdTvTimetypein = _MaxPlus.Constants_IdTvTimetypein
    IdTvValuetypein = _MaxPlus.Constants_IdTvValuetypein
    IdTvZoom = _MaxPlus.Constants_IdTvZoom
    IdTvMaximize = _MaxPlus.Constants_IdTvMaximize
    IdTvSelwildcard = _MaxPlus.Constants_IdTvSelwildcard
    IdTvZoomsel = _MaxPlus.Constants_IdTvZoomsel
    IdTvKSnap = _MaxPlus.Constants_IdTvKSnap
    IdTvKMovekeys = _MaxPlus.Constants_IdTvKMovekeys
    IdTvKMovevert = _MaxPlus.Constants_IdTvKMovevert
    IdTvKMovehorz = _MaxPlus.Constants_IdTvKMovehorz
    IdTvKSeltime = _MaxPlus.Constants_IdTvKSeltime
    IdTvKSubtree = _MaxPlus.Constants_IdTvKSubtree
    IdTvKLeftend = _MaxPlus.Constants_IdTvKLeftend
    IdTvKRightend = _MaxPlus.Constants_IdTvKRightend
    IdTvKTemplate = _MaxPlus.Constants_IdTvKTemplate
    IdTvKShowtan = _MaxPlus.Constants_IdTvKShowtan
    IdTvKLocktan = _MaxPlus.Constants_IdTvKLocktan
    IdTvKApplyease = _MaxPlus.Constants_IdTvKApplyease
    IdTvKApplymult = _MaxPlus.Constants_IdTvKApplymult
    IdTvKAccesstname = _MaxPlus.Constants_IdTvKAccesstname
    IdTvKAccessselname = _MaxPlus.Constants_IdTvKAccessselname
    IdTvKAccesstime = _MaxPlus.Constants_IdTvKAccesstime
    IdTvKAccessval = _MaxPlus.Constants_IdTvKAccessval
    IdTvKZoomhorz = _MaxPlus.Constants_IdTvKZoomhorz
    IdTvKZoomhorzkeys = _MaxPlus.Constants_IdTvKZoomhorzkeys
    IdTvKZoom = _MaxPlus.Constants_IdTvKZoom
    IdTvKZoomtime = _MaxPlus.Constants_IdTvKZoomtime
    IdTvKZoomvalue = _MaxPlus.Constants_IdTvKZoomvalue
    IdTvKShowstat = _MaxPlus.Constants_IdTvKShowstat
    IdTvKMovechildup = _MaxPlus.Constants_IdTvKMovechildup
    IdTvKMovechilddown = _MaxPlus.Constants_IdTvKMovechilddown
    IdTvTangentFlat = _MaxPlus.Constants_IdTvTangentFlat
    IdTvTangentCustom = _MaxPlus.Constants_IdTvTangentCustom
    IdTvTangentFast = _MaxPlus.Constants_IdTvTangentFast
    IdTvTangentSlow = _MaxPlus.Constants_IdTvTangentSlow
    IdTvTangentStep = _MaxPlus.Constants_IdTvTangentStep
    IdTvTangentLinear = _MaxPlus.Constants_IdTvTangentLinear
    IdTvTangentSmooth = _MaxPlus.Constants_IdTvTangentSmooth
    IdTvDrawcurves = _MaxPlus.Constants_IdTvDrawcurves
    IdTvToggleKeyable = _MaxPlus.Constants_IdTvToggleKeyable
    IdTvToggleLocked = _MaxPlus.Constants_IdTvToggleLocked
    FilterSelobjects = _MaxPlus.Constants_FilterSelobjects
    FilterSelchannels = _MaxPlus.Constants_FilterSelchannels
    FilterAnimchannels = _MaxPlus.Constants_FilterAnimchannels
    FilterWorldmods = _MaxPlus.Constants_FilterWorldmods
    FilterObjectmods = _MaxPlus.Constants_FilterObjectmods
    FilterTransform = _MaxPlus.Constants_FilterTransform
    FilterBaseparams = _MaxPlus.Constants_FilterBaseparams
    FilterPosx = _MaxPlus.Constants_FilterPosx
    FilterPosy = _MaxPlus.Constants_FilterPosy
    FilterPosz = _MaxPlus.Constants_FilterPosz
    FilterPosw = _MaxPlus.Constants_FilterPosw
    FilterRotx = _MaxPlus.Constants_FilterRotx
    FilterRoty = _MaxPlus.Constants_FilterRoty
    FilterRotz = _MaxPlus.Constants_FilterRotz
    FilterScalex = _MaxPlus.Constants_FilterScalex
    FilterScaley = _MaxPlus.Constants_FilterScaley
    FilterScalez = _MaxPlus.Constants_FilterScalez
    FilterRed = _MaxPlus.Constants_FilterRed
    FilterGreen = _MaxPlus.Constants_FilterGreen
    FilterBlue = _MaxPlus.Constants_FilterBlue
    FilterAlpha = _MaxPlus.Constants_FilterAlpha
    FilterConttypes = _MaxPlus.Constants_FilterConttypes
    FilterNotetracks = _MaxPlus.Constants_FilterNotetracks
    FilterSound = _MaxPlus.Constants_FilterSound
    FilterMatmaps = _MaxPlus.Constants_FilterMatmaps
    FilterMatparams = _MaxPlus.Constants_FilterMatparams
    FilterVistracks = _MaxPlus.Constants_FilterVistracks
    FilterGlobaltracks = _MaxPlus.Constants_FilterGlobaltracks
    FilterGeom = _MaxPlus.Constants_FilterGeom
    FilterShapes = _MaxPlus.Constants_FilterShapes
    FilterLights = _MaxPlus.Constants_FilterLights
    FilterCameras = _MaxPlus.Constants_FilterCameras
    FilterHelpers = _MaxPlus.Constants_FilterHelpers
    FilterWarps = _MaxPlus.Constants_FilterWarps
    FilterVisibleObjs = _MaxPlus.Constants_FilterVisibleObjs
    FilterPosition = _MaxPlus.Constants_FilterPosition
    FilterRotation = _MaxPlus.Constants_FilterRotation
    FilterScale = _MaxPlus.Constants_FilterScale
    FilterContx = _MaxPlus.Constants_FilterContx
    FilterConty = _MaxPlus.Constants_FilterConty
    FilterContz = _MaxPlus.Constants_FilterContz
    FilterContw = _MaxPlus.Constants_FilterContw
    FilterStaticvals = _MaxPlus.Constants_FilterStaticvals
    FilterHierarchy = _MaxPlus.Constants_FilterHierarchy
    FilterNodes = _MaxPlus.Constants_FilterNodes
    FilterBones = _MaxPlus.Constants_FilterBones
    FilterKeyable = _MaxPlus.Constants_FilterKeyable
    FilterActivelayer = _MaxPlus.Constants_FilterActivelayer
    FilterLocked = _MaxPlus.Constants_FilterLocked
    DisplayTangentsNone = _MaxPlus.Constants_DisplayTangentsNone
    DisplayTangentsSelected = _MaxPlus.Constants_DisplayTangentsSelected
    DisplayTangentsAll = _MaxPlus.Constants_DisplayTangentsAll
    ControlFit = _MaxPlus.Constants_ControlFit
    ControlCenter = _MaxPlus.Constants_ControlCenter
    ControlAspect = _MaxPlus.Constants_ControlAspect
    ControlUniform = _MaxPlus.Constants_ControlUniform
    ControlHold = _MaxPlus.Constants_ControlHold
    ControlInit = _MaxPlus.Constants_ControlInit
    ControlOp = _MaxPlus.Constants_ControlOp
    ControlInitparams = _MaxPlus.Constants_ControlInitparams
    IsMesh = _MaxPlus.Constants_IsMesh
    IsPatch = _MaxPlus.Constants_IsPatch
    IsNurbs = _MaxPlus.Constants_IsNurbs
    IsMnmesh = _MaxPlus.Constants_IsMnmesh
    FlagDead = _MaxPlus.Constants_FlagDead
    FlagHidden = _MaxPlus.Constants_FlagHidden
    FlagFrozen = _MaxPlus.Constants_FlagFrozen
    FlagRigpoint = _MaxPlus.Constants_FlagRigpoint
    FlagSelected = _MaxPlus.Constants_FlagSelected
    FlagCurvedmapping = _MaxPlus.Constants_FlagCurvedmapping
    FlagInterior = _MaxPlus.Constants_FlagInterior
    FlagWeightmodified = _MaxPlus.Constants_FlagWeightmodified
    FlagHiddenedgea = _MaxPlus.Constants_FlagHiddenedgea
    FlagHiddenedgeb = _MaxPlus.Constants_FlagHiddenedgeb
    FlagHiddenedgec = _MaxPlus.Constants_FlagHiddenedgec
    IdToolSelect = _MaxPlus.Constants_IdToolSelect
    IdToolMovepivot = _MaxPlus.Constants_IdToolMovepivot
    IdToolMove = _MaxPlus.Constants_IdToolMove
    IdToolRotate = _MaxPlus.Constants_IdToolRotate
    IdToolScale = _MaxPlus.Constants_IdToolScale
    IdToolPan = _MaxPlus.Constants_IdToolPan
    IdToolZoom = _MaxPlus.Constants_IdToolZoom
    IdToolPickmap = _MaxPlus.Constants_IdToolPickmap
    IdToolZoomreg = _MaxPlus.Constants_IdToolZoomreg
    IdToolUvw = _MaxPlus.Constants_IdToolUvw
    IdToolProp = _MaxPlus.Constants_IdToolProp
    IdToolShowmap = _MaxPlus.Constants_IdToolShowmap
    IdToolUpdate = _MaxPlus.Constants_IdToolUpdate
    IdToolZoomext = _MaxPlus.Constants_IdToolZoomext
    IdToolBreak = _MaxPlus.Constants_IdToolBreak
    IdToolWeld = _MaxPlus.Constants_IdToolWeld
    IdToolWeldSel = _MaxPlus.Constants_IdToolWeldSel
    IdToolHide = _MaxPlus.Constants_IdToolHide
    IdToolUnhide = _MaxPlus.Constants_IdToolUnhide
    IdToolFreeze = _MaxPlus.Constants_IdToolFreeze
    IdToolUnfreeze = _MaxPlus.Constants_IdToolUnfreeze
    IdToolTextureCombo = _MaxPlus.Constants_IdToolTextureCombo
    IdToolSnap = _MaxPlus.Constants_IdToolSnap
    IdToolLockselected = _MaxPlus.Constants_IdToolLockselected
    IdToolMirror = _MaxPlus.Constants_IdToolMirror
    IdToolFilterSelectedfaces = _MaxPlus.Constants_IdToolFilterSelectedfaces
    IdToolFilterMatid = _MaxPlus.Constants_IdToolFilterMatid
    IdToolIncselected = _MaxPlus.Constants_IdToolIncselected
    IdToolFalloff = _MaxPlus.Constants_IdToolFalloff
    IdToolFalloffSpace = _MaxPlus.Constants_IdToolFalloffSpace
    IdToolFlip = _MaxPlus.Constants_IdToolFlip
    IdToolDecselected = _MaxPlus.Constants_IdToolDecselected
    FillModeOff = _MaxPlus.Constants_FillModeOff
    FillModeSolid = _MaxPlus.Constants_FillModeSolid
    FillModeBdiagonal = _MaxPlus.Constants_FillModeBdiagonal
    FillModeCross = _MaxPlus.Constants_FillModeCross
    FillModeDiagcross = _MaxPlus.Constants_FillModeDiagcross
    FillModeFdiagonal = _MaxPlus.Constants_FillModeFdiagonal
    FillModeHorizonal = _MaxPlus.Constants_FillModeHorizonal
    FillModeVertical = _MaxPlus.Constants_FillModeVertical
    SketchSelpick = _MaxPlus.Constants_SketchSelpick
    SketchSeldrag = _MaxPlus.Constants_SketchSeldrag
    SketchSelcurrent = _MaxPlus.Constants_SketchSelcurrent
    SketchDrawmode = _MaxPlus.Constants_SketchDrawmode
    SketchApplymode = _MaxPlus.Constants_SketchApplymode
    SketchFreeform = _MaxPlus.Constants_SketchFreeform
    SketchLine = _MaxPlus.Constants_SketchLine
    SketchBox = _MaxPlus.Constants_SketchBox
    SketchCircle = _MaxPlus.Constants_SketchCircle
    InstanceMgrMakeUniquePrompt = _MaxPlus.Constants_InstanceMgrMakeUniquePrompt
    InstanceMgrMakeUniqueIndividual = _MaxPlus.Constants_InstanceMgrMakeUniqueIndividual
    InstanceMgrMakeUniqueGroup = _MaxPlus.Constants_InstanceMgrMakeUniqueGroup
    RenderPresetsCategoryCount = _MaxPlus.Constants_RenderPresetsCategoryCount
    RenderPresetsCustomCategoryIndexBegin = _MaxPlus.Constants_RenderPresetsCustomCategoryIndexBegin
    RenderPresetsSuccess = _MaxPlus.Constants_RenderPresetsSuccess
    RpErrorObsoleteFile = _MaxPlus.Constants_RpErrorObsoleteFile
    RpErrorIncompatableFile = _MaxPlus.Constants_RpErrorIncompatableFile
    RpErrorCategoryNotCompatable = _MaxPlus.Constants_RpErrorCategoryNotCompatable
    RpErrorSavingFile = _MaxPlus.Constants_RpErrorSavingFile
    RpErrorLoadingFile = _MaxPlus.Constants_RpErrorLoadingFile
    RpErrorCancel = _MaxPlus.Constants_RpErrorCancel
    RpErrorFileNotFound = _MaxPlus.Constants_RpErrorFileNotFound
    KeyreduceAbort = _MaxPlus.Constants_KeyreduceAbort
    KeyreduceStop = _MaxPlus.Constants_KeyreduceStop
    KeyreduceContinue = _MaxPlus.Constants_KeyreduceContinue
    ListenerStyleInput = _MaxPlus.Constants_ListenerStyleInput
    ListenerStyleOutput = _MaxPlus.Constants_ListenerStyleOutput
    ListenerStyleMessage = _MaxPlus.Constants_ListenerStyleMessage
    ListenerStyleLabel = _MaxPlus.Constants_ListenerStyleLabel
    LsnrInputModeMask = _MaxPlus.Constants_LsnrInputModeMask
    LsnrKeyinputOff = _MaxPlus.Constants_LsnrKeyinputOff
    LsnrKeyinputLine = _MaxPlus.Constants_LsnrKeyinputLine
    LsnrKeyinputChar = _MaxPlus.Constants_LsnrKeyinputChar
    LsnrShowing = _MaxPlus.Constants_LsnrShowing
    LsnrNoMacroRedraw = _MaxPlus.Constants_LsnrNoMacroRedraw
    LsnrQuitmaxRun = _MaxPlus.Constants_LsnrQuitmaxRun
    LsnrStyleMask = _MaxPlus.Constants_LsnrStyleMask
    LsnrStyleInput = _MaxPlus.Constants_LsnrStyleInput
    LsnrStyleOutput = _MaxPlus.Constants_LsnrStyleOutput
    LsnrStyleMessage = _MaxPlus.Constants_LsnrStyleMessage
    LsnrBlockMiniUpdates = _MaxPlus.Constants_LsnrBlockMiniUpdates
    EditBoxItem = _MaxPlus.Constants_EditBoxItem
    MacrorecBoxItem = _MaxPlus.Constants_MacrorecBoxItem
    ClickStackSize = _MaxPlus.Constants_ClickStackSize
    NoDialog = _MaxPlus.Constants_NoDialog
    DisplayDialog = _MaxPlus.Constants_DisplayDialog
    SyslogError = _MaxPlus.Constants_SyslogError
    SyslogWarn = _MaxPlus.Constants_SyslogWarn
    SyslogInfo = _MaxPlus.Constants_SyslogInfo
    SyslogDebug = _MaxPlus.Constants_SyslogDebug
    SyslogBroadcast = _MaxPlus.Constants_SyslogBroadcast
    SyslogMr = _MaxPlus.Constants_SyslogMr
    SyslogLifeEver = _MaxPlus.Constants_SyslogLifeEver
    SyslogLifeDays = _MaxPlus.Constants_SyslogLifeDays
    SyslogLifeSize = _MaxPlus.Constants_SyslogLifeSize
    PosIdent = _MaxPlus.Constants_PosIdent
    RotIdent = _MaxPlus.Constants_RotIdent
    SclIdent = _MaxPlus.Constants_SclIdent
    MatIdent = _MaxPlus.Constants_MatIdent
    MergeDupsPrompt = _MaxPlus.Constants_MergeDupsPrompt
    MergeDupsMerge = _MaxPlus.Constants_MergeDupsMerge
    MergeDupsSkip = _MaxPlus.Constants_MergeDupsSkip
    MergeDupsDelold = _MaxPlus.Constants_MergeDupsDelold
    MergeListNames = _MaxPlus.Constants_MergeListNames
    MergeDupsRename = _MaxPlus.Constants_MergeDupsRename
    MergeReparentPrompt = _MaxPlus.Constants_MergeReparentPrompt
    MergeReparentAlways = _MaxPlus.Constants_MergeReparentAlways
    MergeReparentNever = _MaxPlus.Constants_MergeReparentNever
    XrefAsProxy = _MaxPlus.Constants_XrefAsProxy
    XrefXrefModifiers = _MaxPlus.Constants_XrefXrefModifiers
    XrefDropModifiers = _MaxPlus.Constants_XrefDropModifiers
    XrefMergeModifiers = _MaxPlus.Constants_XrefMergeModifiers
    XrefMergeManipulators = _MaxPlus.Constants_XrefMergeManipulators
    XrefSelectNodes = _MaxPlus.Constants_XrefSelectNodes
    XrefMergeControllers = _MaxPlus.Constants_XrefMergeControllers
    XrefMergeMaterials = _MaxPlus.Constants_XrefMergeMaterials
    PropsetSummaryinfo = _MaxPlus.Constants_PropsetSummaryinfo
    PropsetDocsummaryinfo = _MaxPlus.Constants_PropsetDocsummaryinfo
    PropsetUserdefined = _MaxPlus.Constants_PropsetUserdefined
    PidsiContentstatus = _MaxPlus.Constants_PidsiContentstatus
    PidsiContenttype = _MaxPlus.Constants_PidsiContenttype
    PidsiCreator = _MaxPlus.Constants_PidsiCreator
    PidsiIdentifier = _MaxPlus.Constants_PidsiIdentifier
    PidsiLanguage = _MaxPlus.Constants_PidsiLanguage
    PidsiVersion = _MaxPlus.Constants_PidsiVersion
    IExecActivateTexture = _MaxPlus.Constants_IExecActivateTexture
    IExecDeactivateTexture = _MaxPlus.Constants_IExecDeactivateTexture
    IExecRenderMtlSample = _MaxPlus.Constants_IExecRenderMtlSample
    IExecGetVpdisplayDib = _MaxPlus.Constants_IExecGetVpdisplayDib
    IExecSetDir = _MaxPlus.Constants_IExecSetDir
    IExecOffsetSpline = _MaxPlus.Constants_IExecOffsetSpline
    IExecOffsetMeasure = _MaxPlus.Constants_IExecOffsetMeasure
    IExecTrimExtend = _MaxPlus.Constants_IExecTrimExtend
    IExecNewObjXrefDlg = _MaxPlus.Constants_IExecNewObjXrefDlg
    IExecModifytaskInvalidatepanel = _MaxPlus.Constants_IExecModifytaskInvalidatepanel
    IExecInvalidateViewexp = _MaxPlus.Constants_IExecInvalidateViewexp
    IExecSetNudge = _MaxPlus.Constants_IExecSetNudge
    IExecCountMtlScenerefs = _MaxPlus.Constants_IExecCountMtlScenerefs
    IExecRetNullNode = _MaxPlus.Constants_IExecRetNullNode
    IExecRetNullObject = _MaxPlus.Constants_IExecRetNullObject
    IExecRetNotSpline = _MaxPlus.Constants_IExecRetNotSpline
    IExecRetOffsetFail = _MaxPlus.Constants_IExecRetOffsetFail
    VpDefaultRender = _MaxPlus.Constants_VpDefaultRender
    VpDontRender = _MaxPlus.Constants_VpDontRender
    VpDontSimplify = _MaxPlus.Constants_VpDontSimplify
    VpStartSequence = _MaxPlus.Constants_VpStartSequence
    VpEndSequence = _MaxPlus.Constants_VpEndSequence
    VpSecondPass = _MaxPlus.Constants_VpSecondPass
    ShadeLevels = _MaxPlus.Constants_ShadeLevels
    TrackbarFilterAll = _MaxPlus.Constants_TrackbarFilterAll
    TrackbarFilterTmonly = _MaxPlus.Constants_TrackbarFilterTmonly
    TrackbarFilterCurrenttm = _MaxPlus.Constants_TrackbarFilterCurrenttm
    TrackbarFilterObject = _MaxPlus.Constants_TrackbarFilterObject
    TrackbarFilterMaterial = _MaxPlus.Constants_TrackbarFilterMaterial
    CreateContinue = _MaxPlus.Constants_CreateContinue
    CreateStop = _MaxPlus.Constants_CreateStop
    CreateAbort = _MaxPlus.Constants_CreateAbort
    MouseStop = _MaxPlus.Constants_MouseStop
    MouseContinue = _MaxPlus.Constants_MouseContinue
    MouseCaptureContinue = _MaxPlus.Constants_MouseCaptureContinue
    ViewportBkgStart = _MaxPlus.Constants_ViewportBkgStart
    ViewportBkgEnd = _MaxPlus.Constants_ViewportBkgEnd
    ViewportBkgBlank = _MaxPlus.Constants_ViewportBkgBlank
    ViewportBkgHold = _MaxPlus.Constants_ViewportBkgHold
    ViewportBkgLoop = _MaxPlus.Constants_ViewportBkgLoop
    ViewportBkgAspectView = _MaxPlus.Constants_ViewportBkgAspectView
    ViewportBkgAspectBitmap = _MaxPlus.Constants_ViewportBkgAspectBitmap
    ViewportBkgAspectOutput = _MaxPlus.Constants_ViewportBkgAspectOutput
    MoveButton = _MaxPlus.Constants_MoveButton
    RotateButton = _MaxPlus.Constants_RotateButton
    NuscaleButton = _MaxPlus.Constants_NuscaleButton
    UscaleButton = _MaxPlus.Constants_UscaleButton
    SquashButton = _MaxPlus.Constants_SquashButton
    SelectButton = _MaxPlus.Constants_SelectButton
    PlaceButton = _MaxPlus.Constants_PlaceButton
    AxisXy = _MaxPlus.Constants_AxisXy
    AxisZx = _MaxPlus.Constants_AxisZx
    AxisYz = _MaxPlus.Constants_AxisYz
    AxisX = _MaxPlus.Constants_AxisX
    AxisY = _MaxPlus.Constants_AxisY
    AxisZ = _MaxPlus.Constants_AxisZ
    OriginLocal = _MaxPlus.Constants_OriginLocal
    OriginSelection = _MaxPlus.Constants_OriginSelection
    OriginSystem = _MaxPlus.Constants_OriginSystem
    CoordsHybrid = _MaxPlus.Constants_CoordsHybrid
    CoordsScreen = _MaxPlus.Constants_CoordsScreen
    CoordsWorld = _MaxPlus.Constants_CoordsWorld
    CoordsParent = _MaxPlus.Constants_CoordsParent
    CoordsLocal = _MaxPlus.Constants_CoordsLocal
    CoordsObject = _MaxPlus.Constants_CoordsObject
    CoordsGimbal = _MaxPlus.Constants_CoordsGimbal
    CoordsWorkingpivot = _MaxPlus.Constants_CoordsWorkingpivot
    TaskModeCreate = _MaxPlus.Constants_TaskModeCreate
    TaskModeModify = _MaxPlus.Constants_TaskModeModify
    TaskModeHierarchy = _MaxPlus.Constants_TaskModeHierarchy
    TaskModeMotion = _MaxPlus.Constants_TaskModeMotion
    TaskModeDisplay = _MaxPlus.Constants_TaskModeDisplay
    TaskModeUtility = _MaxPlus.Constants_TaskModeUtility
    SyscurMove = _MaxPlus.Constants_SyscurMove
    SyscurRotate = _MaxPlus.Constants_SyscurRotate
    SyscurUscale = _MaxPlus.Constants_SyscurUscale
    SyscurNuscale = _MaxPlus.Constants_SyscurNuscale
    SyscurSquash = _MaxPlus.Constants_SyscurSquash
    SyscurSelect = _MaxPlus.Constants_SyscurSelect
    SyscurDefarrow = _MaxPlus.Constants_SyscurDefarrow
    SyscurMoveSnap = _MaxPlus.Constants_SyscurMoveSnap
    RedrawBegin = _MaxPlus.Constants_RedrawBegin
    RedrawInteractive = _MaxPlus.Constants_RedrawInteractive
    RedrawEnd = _MaxPlus.Constants_RedrawEnd
    RedrawNormal = _MaxPlus.Constants_RedrawNormal
    NumaxisZero = _MaxPlus.Constants_NumaxisZero
    NumaxisAll = _MaxPlus.Constants_NumaxisAll
    NumaxisIndividual = _MaxPlus.Constants_NumaxisIndividual
    StatusUniverse = _MaxPlus.Constants_StatusUniverse
    StatusScale = _MaxPlus.Constants_StatusScale
    StatusAngle = _MaxPlus.Constants_StatusAngle
    StatusOther = _MaxPlus.Constants_StatusOther
    StatusUniverseRelative = _MaxPlus.Constants_StatusUniverseRelative
    StatusPolar = _MaxPlus.Constants_StatusPolar
    StatusPolarRelative = _MaxPlus.Constants_StatusPolarRelative
    ExtDispNone = _MaxPlus.Constants_ExtDispNone
    ExtDispSelected = _MaxPlus.Constants_ExtDispSelected
    ExtDispTargetSelected = _MaxPlus.Constants_ExtDispTargetSelected
    ExtDispLookatSelected = _MaxPlus.Constants_ExtDispLookatSelected
    ExtDispOnlySelected = _MaxPlus.Constants_ExtDispOnlySelected
    ExtDispDragging = _MaxPlus.Constants_ExtDispDragging
    ExtDispZoomExt = _MaxPlus.Constants_ExtDispZoomExt
    ExtDispGroupExt = _MaxPlus.Constants_ExtDispGroupExt
    ExtDispZoomselExt = _MaxPlus.Constants_ExtDispZoomselExt
    RendTimesingle = _MaxPlus.Constants_RendTimesingle
    RendTimesegment = _MaxPlus.Constants_RendTimesegment
    RendTimerange = _MaxPlus.Constants_RendTimerange
    RendTimepickup = _MaxPlus.Constants_RendTimepickup
    HideObjects = _MaxPlus.Constants_HideObjects
    HideShapes = _MaxPlus.Constants_HideShapes
    HideLights = _MaxPlus.Constants_HideLights
    HideCameras = _MaxPlus.Constants_HideCameras
    HideHelpers = _MaxPlus.Constants_HideHelpers
    HideWsms = _MaxPlus.Constants_HideWsms
    HideSystems = _MaxPlus.Constants_HideSystems
    HideParticles = _MaxPlus.Constants_HideParticles
    HideBoneobjects = _MaxPlus.Constants_HideBoneobjects
    HideAll = _MaxPlus.Constants_HideAll
    HideNone = _MaxPlus.Constants_HideNone
    VpLayout1 = _MaxPlus.Constants_VpLayout1
    VpLayout2v = _MaxPlus.Constants_VpLayout2v
    VpLayout2h = _MaxPlus.Constants_VpLayout2h
    VpLayout2ht = _MaxPlus.Constants_VpLayout2ht
    VpLayout2hb = _MaxPlus.Constants_VpLayout2hb
    VpLayout3vl = _MaxPlus.Constants_VpLayout3vl
    VpLayout3vr = _MaxPlus.Constants_VpLayout3vr
    VpLayout3ht = _MaxPlus.Constants_VpLayout3ht
    VpLayout3hb = _MaxPlus.Constants_VpLayout3hb
    VpLayout4 = _MaxPlus.Constants_VpLayout4
    VpLayout4vl = _MaxPlus.Constants_VpLayout4vl
    VpLayout4vr = _MaxPlus.Constants_VpLayout4vr
    VpLayout4ht = _MaxPlus.Constants_VpLayout4ht
    VpLayout4hb = _MaxPlus.Constants_VpLayout4hb
    VpLayout1c = _MaxPlus.Constants_VpLayout1c
    VpNumViewsMask = _MaxPlus.Constants_VpNumViewsMask
    AttribHide = _MaxPlus.Constants_AttribHide
    AttribFreeze = _MaxPlus.Constants_AttribFreeze
    AttribBoxmode = _MaxPlus.Constants_AttribBoxmode
    AttribBackcull = _MaxPlus.Constants_AttribBackcull
    AttribAlledges = _MaxPlus.Constants_AttribAlledges
    AttribLinkdisp = _MaxPlus.Constants_AttribLinkdisp
    AttribLinkrepl = _MaxPlus.Constants_AttribLinkrepl
    AttribUnsel = _MaxPlus.Constants_AttribUnsel
    AttribHideUnsel = _MaxPlus.Constants_AttribHideUnsel
    AttribFreezeUnsel = _MaxPlus.Constants_AttribFreezeUnsel
    AttribVertticks = _MaxPlus.Constants_AttribVertticks
    AttribUnhide = _MaxPlus.Constants_AttribUnhide
    AttribUnfreeze = _MaxPlus.Constants_AttribUnfreeze
    AttribCverts = _MaxPlus.Constants_AttribCverts
    AttribShadeCverts = _MaxPlus.Constants_AttribShadeCverts
    AttribXray = _MaxPlus.Constants_AttribXray
    AttribIgnoreExt = _MaxPlus.Constants_AttribIgnoreExt
    AttribTrajectory = _MaxPlus.Constants_AttribTrajectory
    AttribFrzmtl = _MaxPlus.Constants_AttribFrzmtl
    AttribHideWithLayer = _MaxPlus.Constants_AttribHideWithLayer
    AttribFreezeWithLayer = _MaxPlus.Constants_AttribFreezeWithLayer
    AttribInheritvisibility = _MaxPlus.Constants_AttribInheritvisibility
    AttribCastshadows = _MaxPlus.Constants_AttribCastshadows
    AttribReceiveshadows = _MaxPlus.Constants_AttribReceiveshadows
    AttribIstarget = _MaxPlus.Constants_AttribIstarget
    AttribRenderable = _MaxPlus.Constants_AttribRenderable
    AttribRenderoccluded = _MaxPlus.Constants_AttribRenderoccluded
    AttribRcvcaustics = _MaxPlus.Constants_AttribRcvcaustics
    AttribGeneratecaustics = _MaxPlus.Constants_AttribGeneratecaustics
    AttribRcvglobalillum = _MaxPlus.Constants_AttribRcvglobalillum
    AttribGenerateglobalillum = _MaxPlus.Constants_AttribGenerateglobalillum
    AttribSetwirecolor = _MaxPlus.Constants_AttribSetwirecolor
    AttribSetgbufid = _MaxPlus.Constants_AttribSetgbufid
    AttribPrimaryvisibility = _MaxPlus.Constants_AttribPrimaryvisibility
    AttribSecondaryvisibility = _MaxPlus.Constants_AttribSecondaryvisibility
    AttribMotionblur = _MaxPlus.Constants_AttribMotionblur
    IExecRegisterPostsaveCb = _MaxPlus.Constants_IExecRegisterPostsaveCb
    IExecUnregisterPostsaveCb = _MaxPlus.Constants_IExecUnregisterPostsaveCb
    IExecRegisterPresaveCb = _MaxPlus.Constants_IExecRegisterPresaveCb
    IExecUnregisterPresaveCb = _MaxPlus.Constants_IExecUnregisterPresaveCb
    VptTransNone = _MaxPlus.Constants_VptTransNone
    VptTransStipple = _MaxPlus.Constants_VptTransStipple
    VptTransBlend = _MaxPlus.Constants_VptTransBlend
    VptTransSortBlend = _MaxPlus.Constants_VptTransSortBlend
    DisplayWireAsMtl = _MaxPlus.Constants_DisplayWireAsMtl
    DisplayShadedAsMtl = _MaxPlus.Constants_DisplayShadedAsMtl
    DisplaySelectedOnly = _MaxPlus.Constants_DisplaySelectedOnly
    PicktrackFlagAnimated = _MaxPlus.Constants_PicktrackFlagAnimated
    PicktrackFlagVistracks = _MaxPlus.Constants_PicktrackFlagVistracks
    PicktrackFlagSelobjects = _MaxPlus.Constants_PicktrackFlagSelobjects
    PicktrackFlagWorldmods = _MaxPlus.Constants_PicktrackFlagWorldmods
    PicktrackFlagObjectmods = _MaxPlus.Constants_PicktrackFlagObjectmods
    PicktrackFlagTransform = _MaxPlus.Constants_PicktrackFlagTransform
    PicktrackFlagBaseparams = _MaxPlus.Constants_PicktrackFlagBaseparams
    PicktrackFlagConttypes = _MaxPlus.Constants_PicktrackFlagConttypes
    PicktrackFlagNotetracks = _MaxPlus.Constants_PicktrackFlagNotetracks
    PicktrackFlagSound = _MaxPlus.Constants_PicktrackFlagSound
    PicktrackFlagMatmaps = _MaxPlus.Constants_PicktrackFlagMatmaps
    PicktrackFlagMatparams = _MaxPlus.Constants_PicktrackFlagMatparams
    PicktrackFlagVisibleObjs = _MaxPlus.Constants_PicktrackFlagVisibleObjs
    PicktrackFlagHierarchy = _MaxPlus.Constants_PicktrackFlagHierarchy
    PicktrackFlagKeyable = _MaxPlus.Constants_PicktrackFlagKeyable
    PicktrackFlagNodes = _MaxPlus.Constants_PicktrackFlagNodes
    PicktrackFlagGeom = _MaxPlus.Constants_PicktrackFlagGeom
    PicktrackFlagShapes = _MaxPlus.Constants_PicktrackFlagShapes
    PicktrackFlagLights = _MaxPlus.Constants_PicktrackFlagLights
    PicktrackFlagCameras = _MaxPlus.Constants_PicktrackFlagCameras
    PicktrackFlagHelpers = _MaxPlus.Constants_PicktrackFlagHelpers
    PicktrackFlagWarps = _MaxPlus.Constants_PicktrackFlagWarps
    PicktrackFlagPosition = _MaxPlus.Constants_PicktrackFlagPosition
    PicktrackFlagRotation = _MaxPlus.Constants_PicktrackFlagRotation
    PicktrackFlagScale = _MaxPlus.Constants_PicktrackFlagScale
    PicktrackFlagBones = _MaxPlus.Constants_PicktrackFlagBones
    PicktrackFlagFocusSelNodes = _MaxPlus.Constants_PicktrackFlagFocusSelNodes
    PicktrackFlagActivelayer = _MaxPlus.Constants_PicktrackFlagActivelayer
    PicktrackFlagLocked = _MaxPlus.Constants_PicktrackFlagLocked
    DownloaddlgNoplace = _MaxPlus.Constants_DownloaddlgNoplace
    SceneVideocolorcheck = _MaxPlus.Constants_SceneVideocolorcheck
    SceneTwosided = _MaxPlus.Constants_SceneTwosided
    SceneRenderhiden = _MaxPlus.Constants_SceneRenderhiden
    SceneRenderatmospher = _MaxPlus.Constants_SceneRenderatmospher
    SceneSuperblack = _MaxPlus.Constants_SceneSuperblack
    SceneSerialnumbering = _MaxPlus.Constants_SceneSerialnumbering
    SceneDither256 = _MaxPlus.Constants_SceneDither256
    SceneDithertrue = _MaxPlus.Constants_SceneDithertrue
    SceneRenderfields = _MaxPlus.Constants_SceneRenderfields
    SceneDisplacement = _MaxPlus.Constants_SceneDisplacement
    SceneEffects = _MaxPlus.Constants_SceneEffects
    SceneFieldorder = _MaxPlus.Constants_SceneFieldorder
    NotifyFailure = _MaxPlus.Constants_NotifyFailure
    NotifyProgress = _MaxPlus.Constants_NotifyProgress
    NotifyCompletion = _MaxPlus.Constants_NotifyCompletion
    JobVp = _MaxPlus.Constants_JobVp
    JobNonc = _MaxPlus.Constants_JobNonc
    JobMaps = _MaxPlus.Constants_JobMaps
    JobNonstop = _MaxPlus.Constants_JobNonstop
    JobSkipexst = _MaxPlus.Constants_JobSkipexst
    JobAllservers = _MaxPlus.Constants_JobAllservers
    JobInactive = _MaxPlus.Constants_JobInactive
    JobComplete = _MaxPlus.Constants_JobComplete
    JobIgnoreshare = _MaxPlus.Constants_JobIgnoreshare
    JobSkipoutputtst = _MaxPlus.Constants_JobSkipoutputtst
    JobNonseqframes = _MaxPlus.Constants_JobNonseqframes
    JobCombustionjob = _MaxPlus.Constants_JobCombustionjob
    JobNotarchived = _MaxPlus.Constants_JobNotarchived
    JobVfb = _MaxPlus.Constants_JobVfb
    JobRenderCrop = _MaxPlus.Constants_JobRenderCrop
    JobAssignRnd = _MaxPlus.Constants_JobAssignRnd
    JobPriorityCritical = _MaxPlus.Constants_JobPriorityCritical
    JobDefaultPriority = _MaxPlus.Constants_JobDefaultPriority
    JobVersion = _MaxPlus.Constants_JobVersion
    JobStateComplete = _MaxPlus.Constants_JobStateComplete
    JobStateWaiting = _MaxPlus.Constants_JobStateWaiting
    JobStateBusy = _MaxPlus.Constants_JobStateBusy
    JobStateError = _MaxPlus.Constants_JobStateError
    JobStateSuspended = _MaxPlus.Constants_JobStateSuspended
    InterruptEval = _MaxPlus.Constants_InterruptEval
    ExitListener = _MaxPlus.Constants_ExitListener
    TimeTickspersec = _MaxPlus.Constants_TimeTickspersec
    MeshSelconvRequireAll = _MaxPlus.Constants_MeshSelconvRequireAll
    MdeltaVmove = _MaxPlus.Constants_MdeltaVmove
    MdeltaVclone = _MaxPlus.Constants_MdeltaVclone
    MdeltaVdelete = _MaxPlus.Constants_MdeltaVdelete
    MdeltaVdata = _MaxPlus.Constants_MdeltaVdata
    MdeltaFremap = _MaxPlus.Constants_MdeltaFremap
    MdeltaFchange = _MaxPlus.Constants_MdeltaFchange
    MdeltaFcreate = _MaxPlus.Constants_MdeltaFcreate
    MdeltaFdelete = _MaxPlus.Constants_MdeltaFdelete
    MdeltaFdata = _MaxPlus.Constants_MdeltaFdata
    MdeltaNumbers = _MaxPlus.Constants_MdeltaNumbers
    MdeltaFsmooth = _MaxPlus.Constants_MdeltaFsmooth
    MdeltaAll = _MaxPlus.Constants_MdeltaAll
    FrV0 = _MaxPlus.Constants_FrV0
    FrV1 = _MaxPlus.Constants_FrV1
    FrV2 = _MaxPlus.Constants_FrV2
    FrAll = _MaxPlus.Constants_FrAll
    AttribEdgeA = _MaxPlus.Constants_AttribEdgeA
    AttribEdgeB = _MaxPlus.Constants_AttribEdgeB
    AttribEdgeC = _MaxPlus.Constants_AttribEdgeC
    AttribEdgeAll = _MaxPlus.Constants_AttribEdgeAll
    AttribHideFace = _MaxPlus.Constants_AttribHideFace
    AttribMatid = _MaxPlus.Constants_AttribMatid
    AttribMatidShift = _MaxPlus.Constants_AttribMatidShift
    AttribMatidMask = _MaxPlus.Constants_AttribMatidMask
    EmSlObject = _MaxPlus.Constants_EmSlObject
    EmSlVertex = _MaxPlus.Constants_EmSlVertex
    EmSlEdge = _MaxPlus.Constants_EmSlEdge
    EmSlFace = _MaxPlus.Constants_EmSlFace
    EmSlPolygon = _MaxPlus.Constants_EmSlPolygon
    EmSlElement = _MaxPlus.Constants_EmSlElement
    EmShortcutId = _MaxPlus.Constants_EmShortcutId
    MduidEmSeltype = _MaxPlus.Constants_MduidEmSeltype
    MduidEmSeltypeBack = _MaxPlus.Constants_MduidEmSeltypeBack
    MduidEmSeltypeVertex = _MaxPlus.Constants_MduidEmSeltypeVertex
    MduidEmSeltypeEdge = _MaxPlus.Constants_MduidEmSeltypeEdge
    MduidEmSeltypeFace = _MaxPlus.Constants_MduidEmSeltypeFace
    MduidEmSeltypePolygon = _MaxPlus.Constants_MduidEmSeltypePolygon
    MduidEmSeltypeElement = _MaxPlus.Constants_MduidEmSeltypeElement
    MduidEmSeltypeObj = _MaxPlus.Constants_MduidEmSeltypeObj
    MduidEmAutosmooth = _MaxPlus.Constants_MduidEmAutosmooth
    MduidEmAttach = _MaxPlus.Constants_MduidEmAttach
    MduidEmBreak = _MaxPlus.Constants_MduidEmBreak
    MduidEmIgback = _MaxPlus.Constants_MduidEmIgback
    MduidEmBevel = _MaxPlus.Constants_MduidEmBevel
    MduidEmCreate = _MaxPlus.Constants_MduidEmCreate
    MduidEmCut = _MaxPlus.Constants_MduidEmCut
    MduidEmDivide = _MaxPlus.Constants_MduidEmDivide
    MduidEmExtrude = _MaxPlus.Constants_MduidEmExtrude
    MduidEmFlipnorm = _MaxPlus.Constants_MduidEmFlipnorm
    MduidEmSsBackface = _MaxPlus.Constants_MduidEmSsBackface
    MduidEmUnifyNormals = _MaxPlus.Constants_MduidEmUnifyNormals
    MduidEmHide = _MaxPlus.Constants_MduidEmHide
    MduidEmEdgeInvis = _MaxPlus.Constants_MduidEmEdgeInvis
    MduidEmIgnoreInvis = _MaxPlus.Constants_MduidEmIgnoreInvis
    MduidEmCollapse = _MaxPlus.Constants_MduidEmCollapse
    MduidEmShownormal = _MaxPlus.Constants_MduidEmShownormal
    MduidEmSelopen = _MaxPlus.Constants_MduidEmSelopen
    MduidEmRemoveIso = _MaxPlus.Constants_MduidEmRemoveIso
    MduidEmSliceplane = _MaxPlus.Constants_MduidEmSliceplane
    MduidEmSoftsel = _MaxPlus.Constants_MduidEmSoftsel
    MduidEmSlice = _MaxPlus.Constants_MduidEmSlice
    MduidEmDetach = _MaxPlus.Constants_MduidEmDetach
    MduidEmTurnedge = _MaxPlus.Constants_MduidEmTurnedge
    MduidEmUnhide = _MaxPlus.Constants_MduidEmUnhide
    MduidEmEdgeVis = _MaxPlus.Constants_MduidEmEdgeVis
    MduidEmSelbyvert = _MaxPlus.Constants_MduidEmSelbyvert
    MduidEmAutoedge = _MaxPlus.Constants_MduidEmAutoedge
    MduidEmWeld = _MaxPlus.Constants_MduidEmWeld
    MduidEmExplode = _MaxPlus.Constants_MduidEmExplode
    MduidEmChamfer = _MaxPlus.Constants_MduidEmChamfer
    MduidEmWeldTarget = _MaxPlus.Constants_MduidEmWeldTarget
    MduidEmAttachList = _MaxPlus.Constants_MduidEmAttachList
    MduidEmViewAlign = _MaxPlus.Constants_MduidEmViewAlign
    MduidEmGridAlign = _MaxPlus.Constants_MduidEmGridAlign
    MduidEmSplit = _MaxPlus.Constants_MduidEmSplit
    MduidEmRefineCutends = _MaxPlus.Constants_MduidEmRefineCutends
    MduidEmCopyNamedsel = _MaxPlus.Constants_MduidEmCopyNamedsel
    MduidEmPasteNamedsel = _MaxPlus.Constants_MduidEmPasteNamedsel
    MduidEmMakePlanar = _MaxPlus.Constants_MduidEmMakePlanar
    MduidEmVertColor = _MaxPlus.Constants_MduidEmVertColor
    MduidEmVertIllum = _MaxPlus.Constants_MduidEmVertIllum
    MduidEmFlipNormalMode = _MaxPlus.Constants_MduidEmFlipNormalMode
    MeshUseExtCvarray = _MaxPlus.Constants_MeshUseExtCvarray
    MeshMultiProcessing = _MaxPlus.Constants_MeshMultiProcessing
    MaxMeshmaps = _MaxPlus.Constants_MaxMeshmaps
    MeshmapUsed = _MaxPlus.Constants_MeshmapUsed
    MeshmapTexture = _MaxPlus.Constants_MeshmapTexture
    MeshmapVertcolor = _MaxPlus.Constants_MeshmapVertcolor
    MeshmapUser = _MaxPlus.Constants_MeshmapUser
    NumHiddenmaps = _MaxPlus.Constants_NumHiddenmaps
    MapShading = _MaxPlus.Constants_MapShading
    MapAlpha = _MaxPlus.Constants_MapAlpha
    MaxVertdata = _MaxPlus.Constants_MaxVertdata
    VdataUser = _MaxPlus.Constants_VdataUser
    VdataSelect = _MaxPlus.Constants_VdataSelect
    VdataWeight = _MaxPlus.Constants_VdataWeight
    VdataAlpha = _MaxPlus.Constants_VdataAlpha
    VdataCorner = _MaxPlus.Constants_VdataCorner
    PerdataTypeFloat = _MaxPlus.Constants_PerdataTypeFloat
    MeshEdgeList = _MaxPlus.Constants_MeshEdgeList
    MeshLockRenddata = _MaxPlus.Constants_MeshLockRenddata
    MeshSmoothBit1 = _MaxPlus.Constants_MeshSmoothBit1
    MeshSmoothBit2 = _MaxPlus.Constants_MeshSmoothBit2
    MeshSmoothBit3 = _MaxPlus.Constants_MeshSmoothBit3
    MeshSmoothBit4 = _MaxPlus.Constants_MeshSmoothBit4
    MeshSmoothMask = _MaxPlus.Constants_MeshSmoothMask
    MeshBeenDsp = _MaxPlus.Constants_MeshBeenDsp
    MeshSmoothSubsel = _MaxPlus.Constants_MeshSmoothSubsel
    MeshFacenormalsinvalid = _MaxPlus.Constants_MeshFacenormalsinvalid
    MeshCacheinvalid = _MaxPlus.Constants_MeshCacheinvalid
    MeshBackfacescomputed = _MaxPlus.Constants_MeshBackfacescomputed
    MeshPartialcacheinvalid = _MaxPlus.Constants_MeshPartialcacheinvalid
    MeshTemp1 = _MaxPlus.Constants_MeshTemp1
    MeshTemp2 = _MaxPlus.Constants_MeshTemp2
    MeshDonttristrip = _MaxPlus.Constants_MeshDonttristrip
    SubhitSelonly = _MaxPlus.Constants_SubhitSelonly
    SubhitUnselonly = _MaxPlus.Constants_SubhitUnselonly
    SubhitAbortonhit = _MaxPlus.Constants_SubhitAbortonhit
    SubhitSelsolid = _MaxPlus.Constants_SubhitSelsolid
    SubhitUsefacesel = _MaxPlus.Constants_SubhitUsefacesel
    SubhitVerts = _MaxPlus.Constants_SubhitVerts
    SubhitFaces = _MaxPlus.Constants_SubhitFaces
    SubhitEdges = _MaxPlus.Constants_SubhitEdges
    SubhitTypemask = _MaxPlus.Constants_SubhitTypemask
    MeshObject = _MaxPlus.Constants_MeshObject
    MeshVertex = _MaxPlus.Constants_MeshVertex
    MeshFace = _MaxPlus.Constants_MeshFace
    MeshEdge = _MaxPlus.Constants_MeshEdge
    MeshDispNoNormals = _MaxPlus.Constants_MeshDispNoNormals
    MeshDispFaceNormals = _MaxPlus.Constants_MeshDispFaceNormals
    MeshDispVertexNormals = _MaxPlus.Constants_MeshDispVertexNormals
    OptimizeSavematboundries = _MaxPlus.Constants_OptimizeSavematboundries
    OptimizeSavesmoothboundries = _MaxPlus.Constants_OptimizeSavesmoothboundries
    OptimizeAutoedge = _MaxPlus.Constants_OptimizeAutoedge
    SmallVertexDots = _MaxPlus.Constants_SmallVertexDots
    LargeVertexDots = _MaxPlus.Constants_LargeVertexDots
    VertexDot2 = _MaxPlus.Constants_VertexDot2
    VertexDot3 = _MaxPlus.Constants_VertexDot3
    VertexDot4 = _MaxPlus.Constants_VertexDot4
    VertexDot5 = _MaxPlus.Constants_VertexDot5
    VertexDot6 = _MaxPlus.Constants_VertexDot6
    VertexDot7 = _MaxPlus.Constants_VertexDot7
    HandleBox2 = _MaxPlus.Constants_HandleBox2
    HandleBox3 = _MaxPlus.Constants_HandleBox3
    HandleBox4 = _MaxPlus.Constants_HandleBox4
    HandleBox5 = _MaxPlus.Constants_HandleBox5
    HandleBox6 = _MaxPlus.Constants_HandleBox6
    HandleBox7 = _MaxPlus.Constants_HandleBox7
    MeshboolUnion = _MaxPlus.Constants_MeshboolUnion
    MeshboolIntersection = _MaxPlus.Constants_MeshboolIntersection
    MeshboolDifference = _MaxPlus.Constants_MeshboolDifference
    BigmatMaxSize = _MaxPlus.Constants_BigmatMaxSize
    MnSelDefault = _MaxPlus.Constants_MnSelDefault
    MnSelObject = _MaxPlus.Constants_MnSelObject
    MnSelVertex = _MaxPlus.Constants_MnSelVertex
    MnSelEdge = _MaxPlus.Constants_MnSelEdge
    MnSelFace = _MaxPlus.Constants_MnSelFace
    MnSel = _MaxPlus.Constants_MnSel
    MnDead = _MaxPlus.Constants_MnDead
    MnTarg = _MaxPlus.Constants_MnTarg
    MnBackfacing = _MaxPlus.Constants_MnBackfacing
    MnHidden = _MaxPlus.Constants_MnHidden
    MnCacheinvalid = _MaxPlus.Constants_MnCacheinvalid
    MnInforeground = _MaxPlus.Constants_MnInforeground
    MnWhatever = _MaxPlus.Constants_MnWhatever
    MnLocalSel = _MaxPlus.Constants_MnLocalSel
    MnHittestCulled = _MaxPlus.Constants_MnHittestCulled
    MnUser = _MaxPlus.Constants_MnUser
    MnVertDone = _MaxPlus.Constants_MnVertDone
    MnVertWelded = _MaxPlus.Constants_MnVertWelded
    MnVertSubdivisionCorner = _MaxPlus.Constants_MnVertSubdivisionCorner
    MnEdgeInvis = _MaxPlus.Constants_MnEdgeInvis
    MnEdgeNocross = _MaxPlus.Constants_MnEdgeNocross
    MnEdgeMapSeam = _MaxPlus.Constants_MnEdgeMapSeam
    MnEdgeSubdivisionBoundary = _MaxPlus.Constants_MnEdgeSubdivisionBoundary
    MnEdgeCutExtra = _MaxPlus.Constants_MnEdgeCutExtra
    MnFaceOpenRegion = _MaxPlus.Constants_MnFaceOpenRegion
    MnFaceChecked = _MaxPlus.Constants_MnFaceChecked
    MnFaceChanged = _MaxPlus.Constants_MnFaceChanged
    MnFaceCulled = _MaxPlus.Constants_MnFaceCulled
    MaxEdgedata = _MaxPlus.Constants_MaxEdgedata
    EdataKnot = _MaxPlus.Constants_EdataKnot
    EdataCrease = _MaxPlus.Constants_EdataCrease
    MnMeshTemp1 = _MaxPlus.Constants_MnMeshTemp1
    MnMeshTemp2 = _MaxPlus.Constants_MnMeshTemp2
    MnMeshDonttristrip = _MaxPlus.Constants_MnMeshDonttristrip
    SubhitMnusecurrentsel = _MaxPlus.Constants_SubhitMnusecurrentsel
    SubhitOpenonly = _MaxPlus.Constants_SubhitOpenonly
    SubhitMnverts = _MaxPlus.Constants_SubhitMnverts
    SubhitMnfaces = _MaxPlus.Constants_SubhitMnfaces
    SubhitMnedges = _MaxPlus.Constants_SubhitMnedges
    SubhitMndiagonals = _MaxPlus.Constants_SubhitMndiagonals
    SubhitMntypemask = _MaxPlus.Constants_SubhitMntypemask
    MnSubdivNewmap = _MaxPlus.Constants_MnSubdivNewmap
    MnSubdivHideInternalEdges = _MaxPlus.Constants_MnSubdivHideInternalEdges
    ReallocSize = _MaxPlus.Constants_ReallocSize
    MnmSelconvRequireAll = _MaxPlus.Constants_MnmSelconvRequireAll
    MnMeshNontri = _MaxPlus.Constants_MnMeshNontri
    MnMeshFilledIn = _MaxPlus.Constants_MnMeshFilledIn
    MnMeshRatsnest = _MaxPlus.Constants_MnMeshRatsnest
    MnMeshNoBadVerts = _MaxPlus.Constants_MnMeshNoBadVerts
    MnMeshVertsOrdered = _MaxPlus.Constants_MnMeshVertsOrdered
    MnMeshFaceNormalsInvalid = _MaxPlus.Constants_MnMeshFaceNormalsInvalid
    MnMeshHasVolume = _MaxPlus.Constants_MnMeshHasVolume
    MnMeshHittestRequireAll = _MaxPlus.Constants_MnMeshHittestRequireAll
    MnMeshPartialcacheinvalid = _MaxPlus.Constants_MnMeshPartialcacheinvalid
    MnMeshCacheFlags = _MaxPlus.Constants_MnMeshCacheFlags
    MndispVertticks = _MaxPlus.Constants_MndispVertticks
    MndispSelverts = _MaxPlus.Constants_MndispSelverts
    MndispSelfaces = _MaxPlus.Constants_MndispSelfaces
    MndispSeledges = _MaxPlus.Constants_MndispSeledges
    MndispNormals = _MaxPlus.Constants_MndispNormals
    MndispSmoothSubsel = _MaxPlus.Constants_MndispSmoothSubsel
    MndispBeenDisp = _MaxPlus.Constants_MndispBeenDisp
    MndispDiagonals = _MaxPlus.Constants_MndispDiagonals
    MndispHideSubdivisionInteriors = _MaxPlus.Constants_MndispHideSubdivisionInteriors
    MouseAbort = _MaxPlus.Constants_MouseAbort
    MouseIdle = _MaxPlus.Constants_MouseIdle
    MousePoint = _MaxPlus.Constants_MousePoint
    MouseMove = _MaxPlus.Constants_MouseMove
    MouseDblclick = _MaxPlus.Constants_MouseDblclick
    MouseInit = _MaxPlus.Constants_MouseInit
    MouseUninit = _MaxPlus.Constants_MouseUninit
    MouseFreemove = _MaxPlus.Constants_MouseFreemove
    MouseKeyboard = _MaxPlus.Constants_MouseKeyboard
    MousePropclick = _MaxPlus.Constants_MousePropclick
    MouseSnapclick = _MaxPlus.Constants_MouseSnapclick
    ClickModeDefault = _MaxPlus.Constants_ClickModeDefault
    ClickDragClick = _MaxPlus.Constants_ClickDragClick
    ClickMoveClick = _MaxPlus.Constants_ClickMoveClick
    ClickDownPoint = _MaxPlus.Constants_ClickDownPoint
    LeftButton = _MaxPlus.Constants_LeftButton
    MiddleButton = _MaxPlus.Constants_MiddleButton
    RightButton = _MaxPlus.Constants_RightButton
    MouseShift = _MaxPlus.Constants_MouseShift
    MouseCtrl = _MaxPlus.Constants_MouseCtrl
    MouseAlt = _MaxPlus.Constants_MouseAlt
    MouseLbutton = _MaxPlus.Constants_MouseLbutton
    MouseMbutton = _MaxPlus.Constants_MouseMbutton
    MouseRbutton = _MaxPlus.Constants_MouseRbutton
    WmMouseabort = _MaxPlus.Constants_WmMouseabort
    UvsourceMesh = _MaxPlus.Constants_UvsourceMesh
    UvsourceXyz = _MaxPlus.Constants_UvsourceXyz
    UvsourceMesh2 = _MaxPlus.Constants_UvsourceMesh2
    UvsourceWorldxyz = _MaxPlus.Constants_UvsourceWorldxyz
    UvsourceFacemap = _MaxPlus.Constants_UvsourceFacemap
    UvsourceHwgen = _MaxPlus.Constants_UvsourceHwgen
    INodedisplaycontrol = _MaxPlus.Constants_INodedisplaycontrol
    NotekeySelected = _MaxPlus.Constants_NotekeySelected
    NotekeyLocked = _MaxPlus.Constants_NotekeyLocked
    NotekeyFlagged = _MaxPlus.Constants_NotekeyFlagged
    PreNewNewAll = _MaxPlus.Constants_PreNewNewAll
    PreNewKeepObjects = _MaxPlus.Constants_PreNewKeepObjects
    PreNewKeepObjectsAndHierarchy = _MaxPlus.Constants_PreNewKeepObjectsAndHierarchy
    FileProcessScene = _MaxPlus.Constants_FileProcessScene
    FileProcessHoldFetch = _MaxPlus.Constants_FileProcessHoldFetch
    FileProcessAutobak = _MaxPlus.Constants_FileProcessAutobak
    ClipVert = _MaxPlus.Constants_ClipVert
    ClipFace = _MaxPlus.Constants_ClipFace
    ClipEdge = _MaxPlus.Constants_ClipEdge
    ClipPVert = _MaxPlus.Constants_ClipPVert
    ClipPPatch = _MaxPlus.Constants_ClipPPatch
    ClipPEdge = _MaxPlus.Constants_ClipPEdge
    ClipPHandle = _MaxPlus.Constants_ClipPHandle
    HittypePoint = _MaxPlus.Constants_HittypePoint
    HittypeBox = _MaxPlus.Constants_HittypeBox
    HittypeCircle = _MaxPlus.Constants_HittypeCircle
    HittypeSolid = _MaxPlus.Constants_HittypeSolid
    HittypeFence = _MaxPlus.Constants_HittypeFence
    HittypeLasso = _MaxPlus.Constants_HittypeLasso
    HittypePaint = _MaxPlus.Constants_HittypePaint
    HitSelonly = _MaxPlus.Constants_HitSelonly
    HitUnselonly = _MaxPlus.Constants_HitUnselonly
    HitAbortonhit = _MaxPlus.Constants_HitAbortonhit
    HitSelsolid = _MaxPlus.Constants_HitSelsolid
    HitAnysolid = _MaxPlus.Constants_HitAnysolid
    HitTransformgizmo = _MaxPlus.Constants_HitTransformgizmo
    HitSwitchGizmo = _MaxPlus.Constants_HitSwitchGizmo
    HitManipSubhit = _MaxPlus.Constants_HitManipSubhit
    HitfltrAll = _MaxPlus.Constants_HitfltrAll
    HitfltrObjects = _MaxPlus.Constants_HitfltrObjects
    HitfltrCameras = _MaxPlus.Constants_HitfltrCameras
    HitfltrLights = _MaxPlus.Constants_HitfltrLights
    HitfltrHelpers = _MaxPlus.Constants_HitfltrHelpers
    HitfltrWsmobjects = _MaxPlus.Constants_HitfltrWsmobjects
    HitfltrSplines = _MaxPlus.Constants_HitfltrSplines
    HitfltrBones = _MaxPlus.Constants_HitfltrBones
    HitScenexrefs = _MaxPlus.Constants_HitScenexrefs
    HitManagerHiddenScenexrefs = _MaxPlus.Constants_HitManagerHiddenScenexrefs
    HitflagStartuserbit = _MaxPlus.Constants_HitflagStartuserbit
    RenderMeshDisplacementMap = _MaxPlus.Constants_RenderMeshDisplacementMap
    NewsetMerge = _MaxPlus.Constants_NewsetMerge
    NewsetIntersection = _MaxPlus.Constants_NewsetIntersection
    NewsetSubtract = _MaxPlus.Constants_NewsetSubtract
    UseDamageRect = _MaxPlus.Constants_UseDamageRect
    DispShowsubobject = _MaxPlus.Constants_DispShowsubobject
    CamHitherClip = _MaxPlus.Constants_CamHitherClip
    CamYonClip = _MaxPlus.Constants_CamYonClip
    EnvNearRange = _MaxPlus.Constants_EnvNearRange
    EnvFarRange = _MaxPlus.Constants_EnvFarRange
    LightAttenStart = _MaxPlus.Constants_LightAttenStart
    LightAttenEnd = _MaxPlus.Constants_LightAttenEnd
    TraverseLowfiltshadows = _MaxPlus.Constants_TraverseLowfiltshadows
    TraverseHifiltshadows = _MaxPlus.Constants_TraverseHifiltshadows
    TraverseUsesamplesize = _MaxPlus.Constants_TraverseUsesamplesize
    LightshadowNone = _MaxPlus.Constants_LightshadowNone
    LightshadowMapped = _MaxPlus.Constants_LightshadowMapped
    LightshadowRaytraced = _MaxPlus.Constants_LightshadowRaytraced
    GridPlaneNone = _MaxPlus.Constants_GridPlaneNone
    GridPlaneTop = _MaxPlus.Constants_GridPlaneTop
    GridPlaneLeft = _MaxPlus.Constants_GridPlaneLeft
    GridPlaneFront = _MaxPlus.Constants_GridPlaneFront
    GridPlaneBottom = _MaxPlus.Constants_GridPlaneBottom
    GridPlaneRight = _MaxPlus.Constants_GridPlaneRight
    GridPlaneBack = _MaxPlus.Constants_GridPlaneBack
    PartcenterHead = _MaxPlus.Constants_PartcenterHead
    PartcenterCenter = _MaxPlus.Constants_PartcenterCenter
    PartcenterTail = _MaxPlus.Constants_PartcenterTail
    GenmeshDefault = _MaxPlus.Constants_GenmeshDefault
    GenmeshViewport = _MaxPlus.Constants_GenmeshViewport
    GenmeshRender = _MaxPlus.Constants_GenmeshRender
    ShapeObjNumRefs = _MaxPlus.Constants_ShapeObjNumRefs
    ShapeObjNumSubs = _MaxPlus.Constants_ShapeObjNumSubs
    Ipblock = _MaxPlus.Constants_Ipblock
    ShapeRectRenderparamsPropid = _MaxPlus.Constants_ShapeRectRenderparamsPropid
    SpacewarpCatGeomdef = _MaxPlus.Constants_SpacewarpCatGeomdef
    SpacewarpCatModbased = _MaxPlus.Constants_SpacewarpCatModbased
    SpacewarpCatParticle = _MaxPlus.Constants_SpacewarpCatParticle
    MoveIntersection = _MaxPlus.Constants_MoveIntersection
    MoveProjection = _MaxPlus.Constants_MoveProjection
    ShowPreview = _MaxPlus.Constants_ShowPreview
    HighlightGeom = _MaxPlus.Constants_HighlightGeom
    HighlightPoint = _MaxPlus.Constants_HighlightPoint
    ShowCursor = _MaxPlus.Constants_ShowCursor
    XyzConstraint = _MaxPlus.Constants_XyzConstraint
    SnapFrozen = _MaxPlus.Constants_SnapFrozen
    DisplayRubberBand = _MaxPlus.Constants_DisplayRubberBand
    BufferHolding = _MaxPlus.Constants_BufferHolding
    Reset = _MaxPlus.Constants_Reset
    Next = _MaxPlus.Constants_Next
    IconWidth = _MaxPlus.Constants_IconWidth
    HiliteNormal = _MaxPlus.Constants_HiliteNormal
    HiliteBox = _MaxPlus.Constants_HiliteBox
    HiliteNode = _MaxPlus.Constants_HiliteNode
    HiliteCrosshair = _MaxPlus.Constants_HiliteCrosshair
    TypeByRef = _MaxPlus.Constants_TypeByRef
    TypeByVal = _MaxPlus.Constants_TypeByVal
    TypeByPtr = _MaxPlus.Constants_TypeByPtr
    TypeTab = _MaxPlus.Constants_TypeTab
    ParticleVels = _MaxPlus.Constants_ParticleVels
    ParticleAges = _MaxPlus.Constants_ParticleAges
    ParticleRadius = _MaxPlus.Constants_ParticleRadius
    ParticleTension = _MaxPlus.Constants_ParticleTension
    NsPoVert = _MaxPlus.Constants_NsPoVert
    NsPoEdge = _MaxPlus.Constants_NsPoEdge
    NsPoPatch = _MaxPlus.Constants_NsPoPatch
    DefPickboxSize = _MaxPlus.Constants_DefPickboxSize
    PoObject = _MaxPlus.Constants_PoObject
    PoVertex = _MaxPlus.Constants_PoVertex
    PoEdge = _MaxPlus.Constants_PoEdge
    PoPatch = _MaxPlus.Constants_PoPatch
    PoElement = _MaxPlus.Constants_PoElement
    PoHandle = _MaxPlus.Constants_PoHandle
    PoLevels = _MaxPlus.Constants_PoLevels
    CidEpBind = _MaxPlus.Constants_CidEpBind
    CidEpExtrude = _MaxPlus.Constants_CidEpExtrude
    CidEpBevel = _MaxPlus.Constants_CidEpBevel
    CidEpNormalFlip = _MaxPlus.Constants_CidEpNormalFlip
    CidCreateVert = _MaxPlus.Constants_CidCreateVert
    CidCreatePatch = _MaxPlus.Constants_CidCreatePatch
    CidVertWeld = _MaxPlus.Constants_CidVertWeld
    CidCopyTangent = _MaxPlus.Constants_CidCopyTangent
    CidPasteTangent = _MaxPlus.Constants_CidPasteTangent
    EpDispResult = _MaxPlus.Constants_EpDispResult
    EpMasterControlRef = _MaxPlus.Constants_EpMasterControlRef
    EpVertBaseRef = _MaxPlus.Constants_EpVertBaseRef
    IdPatchMenu = _MaxPlus.Constants_IdPatchMenu
    ConvertKeepsel = _MaxPlus.Constants_ConvertKeepsel
    ConvertUsesoftsel = _MaxPlus.Constants_ConvertUsesoftsel
    ConvertSelLevel = _MaxPlus.Constants_ConvertSelLevel
    ConvertPatchUsequads = _MaxPlus.Constants_ConvertPatchUsequads
    ConvertNoRelax = _MaxPlus.Constants_ConvertNoRelax
    PatchUndefined = _MaxPlus.Constants_PatchUndefined
    PvecInterior = _MaxPlus.Constants_PvecInterior
    PvecInteriorMask = _MaxPlus.Constants_PvecInteriorMask
    NumPatchVecFlags = _MaxPlus.Constants_NumPatchVecFlags
    PvertCoplanar = _MaxPlus.Constants_PvertCoplanar
    PvertCorner = _MaxPlus.Constants_PvertCorner
    PvertTypeMask = _MaxPlus.Constants_PvertTypeMask
    PvertHidden = _MaxPlus.Constants_PvertHidden
    PvertHiddenMask = _MaxPlus.Constants_PvertHiddenMask
    PvertReset = _MaxPlus.Constants_PvertReset
    NumPatchVertFlags = _MaxPlus.Constants_NumPatchVertFlags
    PatchAuto = _MaxPlus.Constants_PatchAuto
    PatchManual = _MaxPlus.Constants_PatchManual
    PatchInteriorMask = _MaxPlus.Constants_PatchInteriorMask
    PatchHidden = _MaxPlus.Constants_PatchHidden
    PatchLinearmapping = _MaxPlus.Constants_PatchLinearmapping
    PatchUseCurvedMappingOnVertexColor = _MaxPlus.Constants_PatchUseCurvedMappingOnVertexColor
    PatchMatidShift = _MaxPlus.Constants_PatchMatidShift
    PatchMatidMask = _MaxPlus.Constants_PatchMatidMask
    NumPatchPatchFlags = _MaxPlus.Constants_NumPatchPatchFlags
    PatchHitPatch = _MaxPlus.Constants_PatchHitPatch
    PatchHitEdge = _MaxPlus.Constants_PatchHitEdge
    PatchHitVertex = _MaxPlus.Constants_PatchHitVertex
    PatchHitVector = _MaxPlus.Constants_PatchHitVector
    PatchHitInterior = _MaxPlus.Constants_PatchHitInterior
    SubhitPatchSelonly = _MaxPlus.Constants_SubhitPatchSelonly
    SubhitPatchUnselonly = _MaxPlus.Constants_SubhitPatchUnselonly
    SubhitPatchAbortonhit = _MaxPlus.Constants_SubhitPatchAbortonhit
    SubhitPatchSelsolid = _MaxPlus.Constants_SubhitPatchSelsolid
    SubhitPatchVerts = _MaxPlus.Constants_SubhitPatchVerts
    SubhitPatchVecs = _MaxPlus.Constants_SubhitPatchVecs
    SubhitPatchPatches = _MaxPlus.Constants_SubhitPatchPatches
    SubhitPatchEdges = _MaxPlus.Constants_SubhitPatchEdges
    SubhitPatchTypemask = _MaxPlus.Constants_SubhitPatchTypemask
    SubhitPatchIgnoreBackfacing = _MaxPlus.Constants_SubhitPatchIgnoreBackfacing
    PatchObject = _MaxPlus.Constants_PatchObject
    PatchVertex = _MaxPlus.Constants_PatchVertex
    PatchPatch = _MaxPlus.Constants_PatchPatch
    PatchEdge = _MaxPlus.Constants_PatchEdge
    PatchHandle = _MaxPlus.Constants_PatchHandle
    SubdivEdges = _MaxPlus.Constants_SubdivEdges
    SubdivPatches = _MaxPlus.Constants_SubdivPatches
    DefPmRelax = _MaxPlus.Constants_DefPmRelax
    DefPmRelaxViewports = _MaxPlus.Constants_DefPmRelaxViewports
    DefPmIter = _MaxPlus.Constants_DefPmIter
    DefPmBoundary = _MaxPlus.Constants_DefPmBoundary
    DefPmSaddle = _MaxPlus.Constants_DefPmSaddle
    PmHittestRequireAll = _MaxPlus.Constants_PmHittestRequireAll
    MaxReleaseUnsupported = _MaxPlus.Constants_MaxReleaseUnsupported
    MaxReleaseR7 = _MaxPlus.Constants_MaxReleaseR7
    MaxReleaseR8Alpha = _MaxPlus.Constants_MaxReleaseR8Alpha
    MaxReleaseR8 = _MaxPlus.Constants_MaxReleaseR8
    MaxReleaseR9Alpha = _MaxPlus.Constants_MaxReleaseR9Alpha
    MaxReleaseR9Alpha2 = _MaxPlus.Constants_MaxReleaseR9Alpha2
    MaxReleaseR9 = _MaxPlus.Constants_MaxReleaseR9
    MaxReleaseR10Alpha = _MaxPlus.Constants_MaxReleaseR10Alpha
    MaxReleaseR10 = _MaxPlus.Constants_MaxReleaseR10
    MaxReleaseR11Alpha = _MaxPlus.Constants_MaxReleaseR11Alpha
    MaxReleaseR11 = _MaxPlus.Constants_MaxReleaseR11
    MaxReleaseR12Alpha = _MaxPlus.Constants_MaxReleaseR12Alpha
    MaxReleaseR12 = _MaxPlus.Constants_MaxReleaseR12
    MaxReleaseR13Alpha = _MaxPlus.Constants_MaxReleaseR13Alpha
    MaxReleaseR13 = _MaxPlus.Constants_MaxReleaseR13
    MaxReleaseR14Alpha = _MaxPlus.Constants_MaxReleaseR14Alpha
    MaxReleaseR14 = _MaxPlus.Constants_MaxReleaseR14
    MaxApiNumR20 = _MaxPlus.Constants_MaxApiNumR20
    MaxApiNumR25 = _MaxPlus.Constants_MaxApiNumR25
    MaxApiNumR30 = _MaxPlus.Constants_MaxApiNumR30
    MaxApiNumR31 = _MaxPlus.Constants_MaxApiNumR31
    MaxApiNumR40 = _MaxPlus.Constants_MaxApiNumR40
    MaxApiNumR42 = _MaxPlus.Constants_MaxApiNumR42
    MaxApiNumR50 = _MaxPlus.Constants_MaxApiNumR50
    MaxApiNumR60PreRel = _MaxPlus.Constants_MaxApiNumR60PreRel
    MaxApiNumR60 = _MaxPlus.Constants_MaxApiNumR60
    MaxApiNumR70PreRel = _MaxPlus.Constants_MaxApiNumR70PreRel
    MaxApiNumR70 = _MaxPlus.Constants_MaxApiNumR70
    MaxApiNumR80PreRel = _MaxPlus.Constants_MaxApiNumR80PreRel
    MaxApiNumR80 = _MaxPlus.Constants_MaxApiNumR80
    MaxApiNumR90Alpha = _MaxPlus.Constants_MaxApiNumR90Alpha
    MaxApiNumR90Beta1 = _MaxPlus.Constants_MaxApiNumR90Beta1
    MaxApiNumR90Beta3 = _MaxPlus.Constants_MaxApiNumR90Beta3
    MaxApiNumR90 = _MaxPlus.Constants_MaxApiNumR90
    MaxApiNumR100Beta5 = _MaxPlus.Constants_MaxApiNumR100Beta5
    MaxApiNumR100 = _MaxPlus.Constants_MaxApiNumR100
    MaxApiNumR110Alpha = _MaxPlus.Constants_MaxApiNumR110Alpha
    MaxApiNumR110 = _MaxPlus.Constants_MaxApiNumR110
    MaxApiNumR120Alpha2 = _MaxPlus.Constants_MaxApiNumR120Alpha2
    MaxApiNumR120Alpha3 = _MaxPlus.Constants_MaxApiNumR120Alpha3
    MaxApiNumR120Alpha4 = _MaxPlus.Constants_MaxApiNumR120Alpha4
    MaxApiNumR120Beta1 = _MaxPlus.Constants_MaxApiNumR120Beta1
    MaxApiNumR120Beta3 = _MaxPlus.Constants_MaxApiNumR120Beta3
    MaxApiNumR120Beta4 = _MaxPlus.Constants_MaxApiNumR120Beta4
    MaxApiNumR120Beta5 = _MaxPlus.Constants_MaxApiNumR120Beta5
    MaxApiNumR120 = _MaxPlus.Constants_MaxApiNumR120
    MaxApiNumR130Beta1 = _MaxPlus.Constants_MaxApiNumR130Beta1
    MaxApiNumR130 = _MaxPlus.Constants_MaxApiNumR130
    MaxApiNumR140Alpha1 = _MaxPlus.Constants_MaxApiNumR140Alpha1
    MaxApiNumR140Beta2 = _MaxPlus.Constants_MaxApiNumR140Beta2
    MaxApiNumR140 = _MaxPlus.Constants_MaxApiNumR140
    MaxSdkRev = _MaxPlus.Constants_MaxSdkRev
    Version3dsmax = _MaxPlus.Constants_Version3dsmax
    AccPublic = _MaxPlus.Constants_AccPublic
    AccPrivate = _MaxPlus.Constants_AccPrivate
    AccAll = _MaxPlus.Constants_AccAll
    PolyMultiProcessing = _MaxPlus.Constants_PolyMultiProcessing
    PshapeSnapIgnorelast = _MaxPlus.Constants_PshapeSnapIgnorelast
    PshapeSnapNoedges = _MaxPlus.Constants_PshapeSnapNoedges
    PolyshpInterpSimple = _MaxPlus.Constants_PolyshpInterpSimple
    PolyshpInterpNormalized = _MaxPlus.Constants_PolyshpInterpNormalized
    CapvertVisedge = _MaxPlus.Constants_CapvertVisedge
    PolyptKnot = _MaxPlus.Constants_PolyptKnot
    PolyptInterpolated = _MaxPlus.Constants_PolyptInterpolated
    PolyptSmooth = _MaxPlus.Constants_PolyptSmooth
    PolyptSegSelected = _MaxPlus.Constants_PolyptSegSelected
    PolyptBridge = _MaxPlus.Constants_PolyptBridge
    PolyptSplice = _MaxPlus.Constants_PolyptSplice
    PolyptVisedge = _MaxPlus.Constants_PolyptVisedge
    PolyptNoSplice = _MaxPlus.Constants_PolyptNoSplice
    PolyptInvisEdge = _MaxPlus.Constants_PolyptInvisEdge
    PolyptNoSnap = _MaxPlus.Constants_PolyptNoSnap
    PolyptMatidShift = _MaxPlus.Constants_PolyptMatidShift
    PolyptMatidMask = _MaxPlus.Constants_PolyptMatidMask
    Cap3dsOptClosestBridge = _MaxPlus.Constants_Cap3dsOptClosestBridge
    PolylineClosed = _MaxPlus.Constants_PolylineClosed
    PolylineNoSelfInt = _MaxPlus.Constants_PolylineNoSelfInt
    CapfaceAb = _MaxPlus.Constants_CapfaceAb
    CapfaceBc = _MaxPlus.Constants_CapfaceBc
    CapfaceCa = _MaxPlus.Constants_CapfaceCa
    PropNodeBone = _MaxPlus.Constants_PropNodeBone
    PropColor = _MaxPlus.Constants_PropColor
    PropMaster = _MaxPlus.Constants_PropMaster
    PartPutInFg = _MaxPlus.Constants_PartPutInFg
    PartShowDependencies = _MaxPlus.Constants_PartShowDependencies
    PartShowdepOn = _MaxPlus.Constants_PartShowdepOn
    RefmsgObjxrefGetnodes = _MaxPlus.Constants_RefmsgObjxrefGetnodes
    RefmsgCtrlxrefGetnodes = _MaxPlus.Constants_RefmsgCtrlxrefGetnodes
    RefmsgMtlxrefGetnodes = _MaxPlus.Constants_RefmsgMtlxrefGetnodes
    TargetmsgUser = _MaxPlus.Constants_TargetmsgUser
    TargetmsgAttachingNode = _MaxPlus.Constants_TargetmsgAttachingNode
    TargetmsgDeletingNode = _MaxPlus.Constants_TargetmsgDeletingNode
    TargetmsgDetachingNode = _MaxPlus.Constants_TargetmsgDetachingNode
    DepEnumContinue = _MaxPlus.Constants_DepEnumContinue
    DepEnumHalt = _MaxPlus.Constants_DepEnumHalt
    DepEnumSkip = _MaxPlus.Constants_DepEnumSkip
    RefEnumContinue = _MaxPlus.Constants_RefEnumContinue
    RefEnumHalt = _MaxPlus.Constants_RefEnumHalt
    RefEnumSkip = _MaxPlus.Constants_RefEnumSkip
    RefmsgLooptest = _MaxPlus.Constants_RefmsgLooptest
    RefmsgTargetDeleted = _MaxPlus.Constants_RefmsgTargetDeleted
    RefmsgModappDeleting = _MaxPlus.Constants_RefmsgModappDeleting
    RefmsgEval = _MaxPlus.Constants_RefmsgEval
    RefmsgResetOrigin = _MaxPlus.Constants_RefmsgResetOrigin
    RefmsgChange = _MaxPlus.Constants_RefmsgChange
    RefmsgFlagdependents = _MaxPlus.Constants_RefmsgFlagdependents
    RefmsgTargetSelectionchange = _MaxPlus.Constants_RefmsgTargetSelectionchange
    RefmsgBeginEdit = _MaxPlus.Constants_RefmsgBeginEdit
    RefmsgEndEdit = _MaxPlus.Constants_RefmsgEndEdit
    RefmsgDisable = _MaxPlus.Constants_RefmsgDisable
    RefmsgEnable = _MaxPlus.Constants_RefmsgEnable
    RefmsgTurnon = _MaxPlus.Constants_RefmsgTurnon
    RefmsgTurnoff = _MaxPlus.Constants_RefmsgTurnoff
    RefmsgLookatTargetDeleted = _MaxPlus.Constants_RefmsgLookatTargetDeleted
    RefmsgInvalidateIfBg = _MaxPlus.Constants_RefmsgInvalidateIfBg
    RefmsgModDisplayOn = _MaxPlus.Constants_RefmsgModDisplayOn
    RefmsgModDisplayOff = _MaxPlus.Constants_RefmsgModDisplayOff
    RefmsgModEval = _MaxPlus.Constants_RefmsgModEval
    RefmsgIsOkToChangeTopology = _MaxPlus.Constants_RefmsgIsOkToChangeTopology
    RefmsgNodeLink = _MaxPlus.Constants_RefmsgNodeLink
    RefmsgNodeNamechange = _MaxPlus.Constants_RefmsgNodeNamechange
    RefmsgObrefChange = _MaxPlus.Constants_RefmsgObrefChange
    RefmsgModifierAdded = _MaxPlus.Constants_RefmsgModifierAdded
    RefmsgControlrefChange = _MaxPlus.Constants_RefmsgControlrefChange
    RefmsgGetParamName = _MaxPlus.Constants_RefmsgGetParamName
    RefmsgGetParamDim = _MaxPlus.Constants_RefmsgGetParamDim
    RefmsgGetControlDim = _MaxPlus.Constants_RefmsgGetControlDim
    RefmsgTmChange = _MaxPlus.Constants_RefmsgTmChange
    RefmsgRangeChange = _MaxPlus.Constants_RefmsgRangeChange
    RefmsgLineheightChange = _MaxPlus.Constants_RefmsgLineheightChange
    RefmsgBecomingAnimated = _MaxPlus.Constants_RefmsgBecomingAnimated
    RefmsgSubanimStructureChanged = _MaxPlus.Constants_RefmsgSubanimStructureChanged
    RefmsgRefDeleted = _MaxPlus.Constants_RefmsgRefDeleted
    RefmsgRefAdded = _MaxPlus.Constants_RefmsgRefAdded
    RefmsgBranchedHistoryChanged = _MaxPlus.Constants_RefmsgBranchedHistoryChanged
    RefmsgNodeinselsetChanged = _MaxPlus.Constants_RefmsgNodeinselsetChanged
    RefmsgTestDependency = _MaxPlus.Constants_RefmsgTestDependency
    RefmsgWantShowparamlevel = _MaxPlus.Constants_RefmsgWantShowparamlevel
    RefmsgBeforePaste = _MaxPlus.Constants_RefmsgBeforePaste
    RefmsgNotifyPaste = _MaxPlus.Constants_RefmsgNotifyPaste
    RefmsgUvSymChange = _MaxPlus.Constants_RefmsgUvSymChange
    RefmsgGetNodeName = _MaxPlus.Constants_RefmsgGetNodeName
    RefmsgSelNodesDeleted = _MaxPlus.Constants_RefmsgSelNodesDeleted
    RefmsgPrenotifyPaste = _MaxPlus.Constants_RefmsgPrenotifyPaste
    RefmsgShapeStartChange = _MaxPlus.Constants_RefmsgShapeStartChange
    RefmsgShapeEndChange = _MaxPlus.Constants_RefmsgShapeEndChange
    RefmsgTexmapRemoved = _MaxPlus.Constants_RefmsgTexmapRemoved
    RefmsgFlagNodesWithSelDependents = _MaxPlus.Constants_RefmsgFlagNodesWithSelDependents
    RefmsgContainedShapePosChange = _MaxPlus.Constants_RefmsgContainedShapePosChange
    RefmsgContainedShapeSelChange = _MaxPlus.Constants_RefmsgContainedShapeSelChange
    RefmsgContainedShapeGeneralChange = _MaxPlus.Constants_RefmsgContainedShapeGeneralChange
    RefmsgSelectBranch = _MaxPlus.Constants_RefmsgSelectBranch
    RefmsgMouseCycleStarted = _MaxPlus.Constants_RefmsgMouseCycleStarted
    RefmsgMouseCycleCompleted = _MaxPlus.Constants_RefmsgMouseCycleCompleted
    RefmsgCheckForInvalidBind = _MaxPlus.Constants_RefmsgCheckForInvalidBind
    RefmsgObjectCacheDumped = _MaxPlus.Constants_RefmsgObjectCacheDumped
    RefmsgSfxChange = _MaxPlus.Constants_RefmsgSfxChange
    RefmsgObjxrefUpdatemat = _MaxPlus.Constants_RefmsgObjxrefUpdatemat
    RefmsgObjxrefUpdatectrl = _MaxPlus.Constants_RefmsgObjxrefUpdatectrl
    RefmsgObjectReplaced = _MaxPlus.Constants_RefmsgObjectReplaced
    RefmsgNodeWirecolorChanged = _MaxPlus.Constants_RefmsgNodeWirecolorChanged
    RefmsgNumSubobjecttypesChanged = _MaxPlus.Constants_RefmsgNumSubobjecttypesChanged
    RefmsgGetNodeHandle = _MaxPlus.Constants_RefmsgGetNodeHandle
    RefmsgEndModifyParams = _MaxPlus.Constants_RefmsgEndModifyParams
    RefmsgBeginModifyParams = _MaxPlus.Constants_RefmsgBeginModifyParams
    RefmsgContainerElementNulled = _MaxPlus.Constants_RefmsgContainerElementNulled
    RefmsgNodeHandleChanged = _MaxPlus.Constants_RefmsgNodeHandleChanged
    RefmsgNodeWscacheUpdated = _MaxPlus.Constants_RefmsgNodeWscacheUpdated
    RefmsgNodeMaterialChanged = _MaxPlus.Constants_RefmsgNodeMaterialChanged
    RefmsgSubanimNumberChanged = _MaxPlus.Constants_RefmsgSubanimNumberChanged
    RefmsgNodeFlagombRender = _MaxPlus.Constants_RefmsgNodeFlagombRender
    RefmsgNodeGiPropChanged = _MaxPlus.Constants_RefmsgNodeGiPropChanged
    RefmsgKeySelectionChanged = _MaxPlus.Constants_RefmsgKeySelectionChanged
    RefmsgNodeRenderingPropChanged = _MaxPlus.Constants_RefmsgNodeRenderingPropChanged
    RefmsgNodeDisplayPropChanged = _MaxPlus.Constants_RefmsgNodeDisplayPropChanged
    RefmsgMxsCustattribChange = _MaxPlus.Constants_RefmsgMxsCustattribChange
    RefmsgNodePreDelete = _MaxPlus.Constants_RefmsgNodePreDelete
    RefmsgLocked = _MaxPlus.Constants_RefmsgLocked
    RefmsgUnlocked = _MaxPlus.Constants_RefmsgUnlocked
    RefmsgObjectDefinitionChangeBegin = _MaxPlus.Constants_RefmsgObjectDefinitionChangeBegin
    RefmsgObjectDefinitionChangeEnd = _MaxPlus.Constants_RefmsgObjectDefinitionChangeEnd
    RefmsgUser = _MaxPlus.Constants_RefmsgUser
    NotifyAll = _MaxPlus.Constants_NotifyAll
    ReferenceMakerInterface = _MaxPlus.Constants_ReferenceMakerInterface
    ReferenceTargetInterface = _MaxPlus.Constants_ReferenceTargetInterface
    FieldEven = _MaxPlus.Constants_FieldEven
    FieldOdd = _MaxPlus.Constants_FieldOdd
    RenderR25shadows = _MaxPlus.Constants_RenderR25shadows
    RenderHideFrozen = _MaxPlus.Constants_RenderHideFrozen
    RpAntialiasOff = _MaxPlus.Constants_RpAntialiasOff
    BrowseMatsonly = _MaxPlus.Constants_BrowseMatsonly
    BrowseMapsonly = _MaxPlus.Constants_BrowseMapsonly
    BrowseIncnone = _MaxPlus.Constants_BrowseIncnone
    BrowseInstanceonly = _MaxPlus.Constants_BrowseInstanceonly
    BrowseToMeditSlot = _MaxPlus.Constants_BrowseToMeditSlot
    BrowseExistingOnly = _MaxPlus.Constants_BrowseExistingOnly
    InstHide = _MaxPlus.Constants_InstHide
    InstClip = _MaxPlus.Constants_InstClip
    InstBlur = _MaxPlus.Constants_InstBlur
    InstRcvShadows = _MaxPlus.Constants_InstRcvShadows
    InstTmNegparity = _MaxPlus.Constants_InstTmNegparity
    InstMtlByface = _MaxPlus.Constants_InstMtlByface
    RendprogContinue = _MaxPlus.Constants_RendprogContinue
    RendprogAbort = _MaxPlus.Constants_RendprogAbort
    FieldFirst = _MaxPlus.Constants_FieldFirst
    FieldSecond = _MaxPlus.Constants_FieldSecond
    FieldNone = _MaxPlus.Constants_FieldNone
    RendmapShowNode = _MaxPlus.Constants_RendmapShowNode
    IsAdaptive = _MaxPlus.Constants_IsAdaptive
    AdaptiveCheckBox = _MaxPlus.Constants_AdaptiveCheckBox
    AdaptiveThreshold = _MaxPlus.Constants_AdaptiveThreshold
    SuperSampleTexCheckBox = _MaxPlus.Constants_SuperSampleTexCheckBox
    AdvancedDlgButton = _MaxPlus.Constants_AdvancedDlgButton
    OptionalParam0 = _MaxPlus.Constants_OptionalParam0
    OptionalParam1 = _MaxPlus.Constants_OptionalParam1
    R3Adaptive = _MaxPlus.Constants_R3Adaptive
    SamplerbaseChunk = _MaxPlus.Constants_SamplerbaseChunk
    SamplernameChunk = _MaxPlus.Constants_SamplernameChunk
    SamplerVersChunk = _MaxPlus.Constants_SamplerVersChunk
    ISetkeymode = _MaxPlus.Constants_ISetkeymode
    SetkeyIkParams = _MaxPlus.Constants_SetkeyIkParams
    SetkeyPos = _MaxPlus.Constants_SetkeyPos
    SetkeyRot = _MaxPlus.Constants_SetkeyRot
    SetkeyScale = _MaxPlus.Constants_SetkeyScale
    SetkeyModifier = _MaxPlus.Constants_SetkeyModifier
    SetkeyMaterial = _MaxPlus.Constants_SetkeyMaterial
    SetkeyAttributes = _MaxPlus.Constants_SetkeyAttributes
    SetkeySelectedNodes = _MaxPlus.Constants_SetkeySelectedNodes
    SetkeyObjparams = _MaxPlus.Constants_SetkeyObjparams
    TimesliderRbuttonDown = _MaxPlus.Constants_TimesliderRbuttonDown
    HotkeyAllPosrotscale = _MaxPlus.Constants_HotkeyAllPosrotscale
    HotkeyAllPos = _MaxPlus.Constants_HotkeyAllPos
    HotkeyAllPosx = _MaxPlus.Constants_HotkeyAllPosx
    HotkeyAllPosy = _MaxPlus.Constants_HotkeyAllPosy
    HotkeyAllPosz = _MaxPlus.Constants_HotkeyAllPosz
    HotkeyAllRot = _MaxPlus.Constants_HotkeyAllRot
    HotkeyAllRotx = _MaxPlus.Constants_HotkeyAllRotx
    HotkeyAllRoty = _MaxPlus.Constants_HotkeyAllRoty
    HotkeyAllRotz = _MaxPlus.Constants_HotkeyAllRotz
    HotkeyAllScale = _MaxPlus.Constants_HotkeyAllScale
    HotkeyAllScalex = _MaxPlus.Constants_HotkeyAllScalex
    HotkeyAllScaley = _MaxPlus.Constants_HotkeyAllScaley
    HotkeyAllScalez = _MaxPlus.Constants_HotkeyAllScalez
    SetkeySettingKeys = _MaxPlus.Constants_SetkeySettingKeys
    HotkeyAll = _MaxPlus.Constants_HotkeyAll
    SetkeyAll = _MaxPlus.Constants_SetkeyAll
    SetkeyOther = _MaxPlus.Constants_SetkeyOther
    SfxbaseChunk = _MaxPlus.Constants_SfxbaseChunk
    SfxnameChunk = _MaxPlus.Constants_SfxnameChunk
    FilterkernelbaseChunk = _MaxPlus.Constants_FilterkernelbaseChunk
    FilterkernelnameChunk = _MaxPlus.Constants_FilterkernelnameChunk
    NIdChannels = _MaxPlus.Constants_NIdChannels
    OpacityParam = _MaxPlus.Constants_OpacityParam
    SelfillumClrOn = _MaxPlus.Constants_SelfillumClrOn
    HasBumps = _MaxPlus.Constants_HasBumps
    HasReflect = _MaxPlus.Constants_HasReflect
    HasRefract = _MaxPlus.Constants_HasRefract
    HasOpacity = _MaxPlus.Constants_HasOpacity
    HasReflectMap = _MaxPlus.Constants_HasReflectMap
    HasRefractMap = _MaxPlus.Constants_HasRefractMap
    HasMatteMtl = _MaxPlus.Constants_HasMatteMtl
    UnsupportedChannel = _MaxPlus.Constants_UnsupportedChannel
    ClrChannel = _MaxPlus.Constants_ClrChannel
    MonoChannel = _MaxPlus.Constants_MonoChannel
    BumpChannel = _MaxPlus.Constants_BumpChannel
    ReflChannel = _MaxPlus.Constants_ReflChannel
    RefrChannel = _MaxPlus.Constants_RefrChannel
    DispChannel = _MaxPlus.Constants_DispChannel
    SlevChannel = _MaxPlus.Constants_SlevChannel
    EliminateChannel = _MaxPlus.Constants_EliminateChannel
    SkipChannels = _MaxPlus.Constants_SkipChannels
    ShaderbaseChunk = _MaxPlus.Constants_ShaderbaseChunk
    ShadernameChunk = _MaxPlus.Constants_ShadernameChunk
    StdParamNone = _MaxPlus.Constants_StdParamNone
    StdParamAll = _MaxPlus.Constants_StdParamAll
    StdParamMetal = _MaxPlus.Constants_StdParamMetal
    StdParamLockds = _MaxPlus.Constants_StdParamLockds
    StdParamLockad = _MaxPlus.Constants_StdParamLockad
    StdParamLockadtex = _MaxPlus.Constants_StdParamLockadtex
    StdParamSelfillum = _MaxPlus.Constants_StdParamSelfillum
    StdParamSelfillumClr = _MaxPlus.Constants_StdParamSelfillumClr
    StdParamAmbientClr = _MaxPlus.Constants_StdParamAmbientClr
    StdParamDiffuseClr = _MaxPlus.Constants_StdParamDiffuseClr
    StdParamSpecularClr = _MaxPlus.Constants_StdParamSpecularClr
    StdParamFilterClr = _MaxPlus.Constants_StdParamFilterClr
    StdParamGlossiness = _MaxPlus.Constants_StdParamGlossiness
    StdParamSoftenLev = _MaxPlus.Constants_StdParamSoftenLev
    StdParamSpecularLev = _MaxPlus.Constants_StdParamSpecularLev
    StdParamDiffuseLev = _MaxPlus.Constants_StdParamDiffuseLev
    StdParamDiffuseRho = _MaxPlus.Constants_StdParamDiffuseRho
    StdParamAniso = _MaxPlus.Constants_StdParamAniso
    StdParamOrientation = _MaxPlus.Constants_StdParamOrientation
    StdParamReflLev = _MaxPlus.Constants_StdParamReflLev
    StdParamSelfillumClrOn = _MaxPlus.Constants_StdParamSelfillumClrOn
    StdBasic2Dlg = _MaxPlus.Constants_StdBasic2Dlg
    StdExtraDlg = _MaxPlus.Constants_StdExtraDlg
    StdExtraReflection = _MaxPlus.Constants_StdExtraReflection
    StdExtraRefraction = _MaxPlus.Constants_StdExtraRefraction
    StdExtraOpacity = _MaxPlus.Constants_StdExtraOpacity
    StdBasic = _MaxPlus.Constants_StdBasic
    StdBasicMetal = _MaxPlus.Constants_StdBasicMetal
    StdAniso = _MaxPlus.Constants_StdAniso
    StdMultilayer = _MaxPlus.Constants_StdMultilayer
    StdOnb = _MaxPlus.Constants_StdOnb
    StdWard = _MaxPlus.Constants_StdWard
    ShadParallel = _MaxPlus.Constants_ShadParallel
    ShadOmni = _MaxPlus.Constants_ShadOmni
    Shad2sided = _MaxPlus.Constants_Shad2sided
    TwoSidedShadowDefault = _MaxPlus.Constants_TwoSidedShadowDefault
    ShapeTrim = _MaxPlus.Constants_ShapeTrim
    ShapeExtend = _MaxPlus.Constants_ShapeExtend
    SimpmodPblockref = _MaxPlus.Constants_SimpmodPblockref
    SimpwsmmodObref = _MaxPlus.Constants_SimpwsmmodObref
    SimpwsmmodNoderef = _MaxPlus.Constants_SimpwsmmodNoderef
    SimpwsmmodPblockref = _MaxPlus.Constants_SimpwsmmodPblockref
    PbOsmtowsmLength = _MaxPlus.Constants_PbOsmtowsmLength
    PbOsmtowsmWidth = _MaxPlus.Constants_PbOsmtowsmWidth
    PbOsmtowsmHeight = _MaxPlus.Constants_PbOsmtowsmHeight
    PbOsmtowsmDecay = _MaxPlus.Constants_PbOsmtowsmDecay
    Shapeobjpblock = _MaxPlus.Constants_Shapeobjpblock
    Snap2d = _MaxPlus.Constants_Snap2d
    Snap25d = _MaxPlus.Constants_Snap25d
    Snap3d = _MaxPlus.Constants_Snap3d
    SnapmodeRelative = _MaxPlus.Constants_SnapmodeRelative
    SnapmodeAbsolute = _MaxPlus.Constants_SnapmodeAbsolute
    SnapIn3d = _MaxPlus.Constants_SnapIn3d
    SnapInPlane = _MaxPlus.Constants_SnapInPlane
    SnapUnselObjsOnly = _MaxPlus.Constants_SnapUnselObjsOnly
    SnapSelObjsOnly = _MaxPlus.Constants_SnapSelObjsOnly
    SnapUnselSubobjOnly = _MaxPlus.Constants_SnapUnselSubobjOnly
    SnapSelSubobjOnly = _MaxPlus.Constants_SnapSelSubobjOnly
    SnapForce3dResult = _MaxPlus.Constants_SnapForce3dResult
    SnapOffPlane = _MaxPlus.Constants_SnapOffPlane
    SnapTransparently = _MaxPlus.Constants_SnapTransparently
    SnapApplyConstraints = _MaxPlus.Constants_SnapApplyConstraints
    SnapProjXaxis = _MaxPlus.Constants_SnapProjXaxis
    SnapProjYaxis = _MaxPlus.Constants_SnapProjYaxis
    SnapProjZaxis = _MaxPlus.Constants_SnapProjZaxis
    SnapXformAxis = _MaxPlus.Constants_SnapXformAxis
    SnapBeginSeq = _MaxPlus.Constants_SnapBeginSeq
    SnapEndSeq = _MaxPlus.Constants_SnapEndSeq
    SnapUseXformAxisAsStartSnapPoint = _MaxPlus.Constants_SnapUseXformAxisAsStartSnapPoint
    IWavepaint = _MaxPlus.Constants_IWavepaint
    BezShapeKnot = _MaxPlus.Constants_BezShapeKnot
    BezShapeInterpolated = _MaxPlus.Constants_BezShapeInterpolated
    LtypeCurve = _MaxPlus.Constants_LtypeCurve
    LtypeLine = _MaxPlus.Constants_LtypeLine
    CurveCurve = _MaxPlus.Constants_CurveCurve
    LineCurve = _MaxPlus.Constants_LineCurve
    CurveLine = _MaxPlus.Constants_CurveLine
    LineLine = _MaxPlus.Constants_LineLine
    KtypeAuto = _MaxPlus.Constants_KtypeAuto
    KtypeCorner = _MaxPlus.Constants_KtypeCorner
    KtypeBezier = _MaxPlus.Constants_KtypeBezier
    KtypeBezierCorner = _MaxPlus.Constants_KtypeBezierCorner
    KtypeReset = _MaxPlus.Constants_KtypeReset
    ParmUniform = _MaxPlus.Constants_ParmUniform
    ParmArclength = _MaxPlus.Constants_ParmArclength
    ParmCentripetal = _MaxPlus.Constants_ParmCentripetal
    ParmCustom = _MaxPlus.Constants_ParmCustom
    DrawIdle = _MaxPlus.Constants_DrawIdle
    DrawInitialMouseDown = _MaxPlus.Constants_DrawInitialMouseDown
    DrawFreemovePoint = _MaxPlus.Constants_DrawFreemovePoint
    DrawFreemovePointMouseDown = _MaxPlus.Constants_DrawFreemovePointMouseDown
    DrawInitialBezAdj = _MaxPlus.Constants_DrawInitialBezAdj
    DrawDraggingVector = _MaxPlus.Constants_DrawDraggingVector
    SplineInterpSimple = _MaxPlus.Constants_SplineInterpSimple
    SplineInterpNormalized = _MaxPlus.Constants_SplineInterpNormalized
    SplineMatidShift = _MaxPlus.Constants_SplineMatidShift
    SplineMatidMask = _MaxPlus.Constants_SplineMatidMask
    SegmentVisible = _MaxPlus.Constants_SegmentVisible
    SplineknotNoSnap = _MaxPlus.Constants_SplineknotNoSnap
    SplineknotAddSel = _MaxPlus.Constants_SplineknotAddSel
    SplineClosed = _MaxPlus.Constants_SplineClosed
    SplineOrthog = _MaxPlus.Constants_SplineOrthog
    BoolUnion = _MaxPlus.Constants_BoolUnion
    BoolSubtraction = _MaxPlus.Constants_BoolSubtraction
    BoolIntersection = _MaxPlus.Constants_BoolIntersection
    MirrorHorizontal = _MaxPlus.Constants_MirrorHorizontal
    MirrorVertical = _MaxPlus.Constants_MirrorVertical
    MirrorBoth = _MaxPlus.Constants_MirrorBoth
    Polybool = _MaxPlus.Constants_Polybool
    Polyoutside = _MaxPlus.Constants_Polyoutside
    Polyinside = _MaxPlus.Constants_Polyinside
    EsDispResult = _MaxPlus.Constants_EsDispResult
    EsAddedSelect = _MaxPlus.Constants_EsAddedSelect
    EsVertBaseRef = _MaxPlus.Constants_EsVertBaseRef
    SsObject = _MaxPlus.Constants_SsObject
    SsVertex = _MaxPlus.Constants_SsVertex
    SsSegment = _MaxPlus.Constants_SsSegment
    SsSpline = _MaxPlus.Constants_SsSpline
    CidOutline = _MaxPlus.Constants_CidOutline
    CidSegbreak = _MaxPlus.Constants_CidSegbreak
    CidSegrefine = _MaxPlus.Constants_CidSegrefine
    CidVertconnect = _MaxPlus.Constants_CidVertconnect
    CidVertinsert = _MaxPlus.Constants_CidVertinsert
    CidBoolean = _MaxPlus.Constants_CidBoolean
    CidCreateline = _MaxPlus.Constants_CidCreateline
    CidCrossinsert = _MaxPlus.Constants_CidCrossinsert
    CidFillet = _MaxPlus.Constants_CidFillet
    CidChamfer = _MaxPlus.Constants_CidChamfer
    CidTrim = _MaxPlus.Constants_CidTrim
    CidExtend = _MaxPlus.Constants_CidExtend
    CidSplinebind = _MaxPlus.Constants_CidSplinebind
    CidRefineconnect = _MaxPlus.Constants_CidRefineconnect
    CidCrosssection = _MaxPlus.Constants_CidCrosssection
    CidCopytangent = _MaxPlus.Constants_CidCopytangent
    CidPastetangent = _MaxPlus.Constants_CidPastetangent
    NsSsVert = _MaxPlus.Constants_NsSsVert
    NsSsSeg = _MaxPlus.Constants_NsSsSeg
    NsSsPoly = _MaxPlus.Constants_NsSsPoly
    RefineVert = _MaxPlus.Constants_RefineVert
    RefineSeg = _MaxPlus.Constants_RefineSeg
    IdSplineMenu = _MaxPlus.Constants_IdSplineMenu
    StackDepth = _MaxPlus.Constants_StackDepth
    Nshades = _MaxPlus.Constants_Nshades
    ShadeConst = _MaxPlus.Constants_ShadeConst
    ShadePhong = _MaxPlus.Constants_ShadePhong
    ShadeMetal = _MaxPlus.Constants_ShadeMetal
    ShadeBlinn = _MaxPlus.Constants_ShadeBlinn
    TranspSubtractive = _MaxPlus.Constants_TranspSubtractive
    TranspAdditive = _MaxPlus.Constants_TranspAdditive
    TranspFilter = _MaxPlus.Constants_TranspFilter
    IdRayReflection = _MaxPlus.Constants_IdRayReflection
    IdRayRefraction = _MaxPlus.Constants_IdRayRefraction
    IdRayRefractionIor = _MaxPlus.Constants_IdRayRefractionIor
    IdTranslucentClr = _MaxPlus.Constants_IdTranslucentClr
    UvmapExplicit = _MaxPlus.Constants_UvmapExplicit
    UvmapSphereEnv = _MaxPlus.Constants_UvmapSphereEnv
    UvmapCylEnv = _MaxPlus.Constants_UvmapCylEnv
    UvmapShrinkEnv = _MaxPlus.Constants_UvmapShrinkEnv
    UvmapScreenEnv = _MaxPlus.Constants_UvmapScreenEnv
    XyzCoords = _MaxPlus.Constants_XyzCoords
    UvwCoords = _MaxPlus.Constants_UvwCoords
    Uvw2Coords = _MaxPlus.Constants_Uvw2Coords
    XyzWorldCoords = _MaxPlus.Constants_XyzWorldCoords
    TexoutXxxxx = _MaxPlus.Constants_TexoutXxxxx
    TexoutInvert = _MaxPlus.Constants_TexoutInvert
    TexoutClamp = _MaxPlus.Constants_TexoutClamp
    TexoutAlphaRgb = _MaxPlus.Constants_TexoutAlphaRgb
    TexoutColorMap = _MaxPlus.Constants_TexoutColorMap
    TexoutColorMapRgb = _MaxPlus.Constants_TexoutColorMapRgb
    FilterPyr = _MaxPlus.Constants_FilterPyr
    FilterSat = _MaxPlus.Constants_FilterSat
    FilterNada = _MaxPlus.Constants_FilterNada
    AlphaFile = _MaxPlus.Constants_AlphaFile
    AlphaRgb = _MaxPlus.Constants_AlphaRgb
    AlphaNone = _MaxPlus.Constants_AlphaNone
    EndLoop = _MaxPlus.Constants_EndLoop
    EndPingpong = _MaxPlus.Constants_EndPingpong
    EndHold = _MaxPlus.Constants_EndHold
    FalloffTop = _MaxPlus.Constants_FalloffTop
    FalloffBottom = _MaxPlus.Constants_FalloffBottom
    FalloffNone = _MaxPlus.Constants_FalloffNone
    AppMapDir = _MaxPlus.Constants_AppMapDir
    AppFoliageDir = _MaxPlus.Constants_AppFoliageDir
    AppXrefDir = _MaxPlus.Constants_AppXrefDir
    AppPluginIniDir = _MaxPlus.Constants_AppPluginIniDir
    AppStdplugsDir = _MaxPlus.Constants_AppStdplugsDir
    AppPluginsDir = _MaxPlus.Constants_AppPluginsDir
    AppFilelinkDir = _MaxPlus.Constants_AppFilelinkDir
    AppCatalogsDir = _MaxPlus.Constants_AppCatalogsDir
    AppCuiScriptsDir = _MaxPlus.Constants_AppCuiScriptsDir
    AppIntOffset = _MaxPlus.Constants_AppIntOffset
    AppCuiDir = _MaxPlus.Constants_AppCuiDir
    AppFxDir = _MaxPlus.Constants_AppFxDir
    AppCuiWriteDir = _MaxPlus.Constants_AppCuiWriteDir
    AppMarketDefWriteDir = _MaxPlus.Constants_AppMarketDefWriteDir
    AppLastSpecDir = _MaxPlus.Constants_AppLastSpecDir
    WmSettcbgraphparams = _MaxPlus.Constants_WmSettcbgraphparams
    MaxOctaves = _MaxPlus.Constants_MaxOctaves
    MaxCellLevels = _MaxPlus.Constants_MaxCellLevels
    TriMultiProcessing = _MaxPlus.Constants_TriMultiProcessing
    TvnodeAppend = _MaxPlus.Constants_TvnodeAppend
    TvmodeEditkeys = _MaxPlus.Constants_TvmodeEditkeys
    TvmodeEdittime = _MaxPlus.Constants_TvmodeEdittime
    TvmodeEditranges = _MaxPlus.Constants_TvmodeEditranges
    TvmodePosranges = _MaxPlus.Constants_TvmodePosranges
    TvmodeEditfcurve = _MaxPlus.Constants_TvmodeEditfcurve
    FilterSubtree = _MaxPlus.Constants_FilterSubtree
    FilterNone = _MaxPlus.Constants_FilterNone
    FilterAnim = _MaxPlus.Constants_FilterAnim
    FilterNode = _MaxPlus.Constants_FilterNode
    UnitsInches = _MaxPlus.Constants_UnitsInches
    UnitsFeet = _MaxPlus.Constants_UnitsFeet
    UnitsMiles = _MaxPlus.Constants_UnitsMiles
    UnitsMillimeters = _MaxPlus.Constants_UnitsMillimeters
    UnitsCentimeters = _MaxPlus.Constants_UnitsCentimeters
    UnitsMeters = _MaxPlus.Constants_UnitsMeters
    UnitsKilometers = _MaxPlus.Constants_UnitsKilometers
    MaxUnitTypes = _MaxPlus.Constants_MaxUnitTypes
    UnitdispGeneric = _MaxPlus.Constants_UnitdispGeneric
    UnitdispMetric = _MaxPlus.Constants_UnitdispMetric
    UnitdispUs = _MaxPlus.Constants_UnitdispUs
    UnitdispCustom = _MaxPlus.Constants_UnitdispCustom
    MaxUnitdispTypes = _MaxPlus.Constants_MaxUnitdispTypes
    UnitMetricDispMm = _MaxPlus.Constants_UnitMetricDispMm
    UnitMetricDispCm = _MaxPlus.Constants_UnitMetricDispCm
    UnitMetricDispM = _MaxPlus.Constants_UnitMetricDispM
    UnitMetricDispKm = _MaxPlus.Constants_UnitMetricDispKm
    MaxMetricDispTypes = _MaxPlus.Constants_MaxMetricDispTypes
    UnitUsDispFracIn = _MaxPlus.Constants_UnitUsDispFracIn
    UnitUsDispDecIn = _MaxPlus.Constants_UnitUsDispDecIn
    UnitUsDispFracFt = _MaxPlus.Constants_UnitUsDispFracFt
    UnitUsDispDecFt = _MaxPlus.Constants_UnitUsDispDecFt
    UnitUsDispFtFracIn = _MaxPlus.Constants_UnitUsDispFtFracIn
    UnitUsDispFtDecIn = _MaxPlus.Constants_UnitUsDispFtDecIn
    MaxUsDispTypes = _MaxPlus.Constants_MaxUsDispTypes
    UnitFrac11 = _MaxPlus.Constants_UnitFrac11
    UnitFrac12 = _MaxPlus.Constants_UnitFrac12
    UnitFrac14 = _MaxPlus.Constants_UnitFrac14
    UnitFrac18 = _MaxPlus.Constants_UnitFrac18
    UnitFrac110 = _MaxPlus.Constants_UnitFrac110
    UnitFrac116 = _MaxPlus.Constants_UnitFrac116
    UnitFrac132 = _MaxPlus.Constants_UnitFrac132
    UnitFrac164 = _MaxPlus.Constants_UnitFrac164
    UnitFrac1100 = _MaxPlus.Constants_UnitFrac1100
    MaxFracTypes = _MaxPlus.Constants_MaxFracTypes
    UnitDesigMm = _MaxPlus.Constants_UnitDesigMm
    UnitDesigCm = _MaxPlus.Constants_UnitDesigCm
    UnitDesigM = _MaxPlus.Constants_UnitDesigM
    UnitDesigKm = _MaxPlus.Constants_UnitDesigKm
    UnitDesigIn = _MaxPlus.Constants_UnitDesigIn
    UnitDesigFt = _MaxPlus.Constants_UnitDesigFt
    UnitDesigCustom = _MaxPlus.Constants_UnitDesigCustom
    UnitDesigTypes = _MaxPlus.Constants_UnitDesigTypes
    UsUnitDefaultFeet = _MaxPlus.Constants_UsUnitDefaultFeet
    UsUnitDefaultInches = _MaxPlus.Constants_UsUnitDefaultInches
    UndefFace = _MaxPlus.Constants_UndefFace
    CustlistDisabled = _MaxPlus.Constants_CustlistDisabled
    CustlistMedDisabled = _MaxPlus.Constants_CustlistMedDisabled
    CustlistSeparator = _MaxPlus.Constants_CustlistSeparator
    CustlistDblSerparator = _MaxPlus.Constants_CustlistDblSerparator
    CustlistRed = _MaxPlus.Constants_CustlistRed
    MaxMbHold = _MaxPlus.Constants_MaxMbHold
    MaxMbDontshowagain = _MaxPlus.Constants_MaxMbDontshowagain
    AAtmosDisabled = _MaxPlus.Constants_AAtmosDisabled
    AAtmosObjectxref = _MaxPlus.Constants_AAtmosObjectxref
    AAtmosScenexref = _MaxPlus.Constants_AAtmosScenexref
    AToneopDisabled = _MaxPlus.Constants_AToneopDisabled
    AToneopProcessBg = _MaxPlus.Constants_AToneopProcessBg
    AToneopIndirectOnly = _MaxPlus.Constants_AToneopIndirectOnly
    AObjCreating = _MaxPlus.Constants_AObjCreating
    AObjBeingEdited = _MaxPlus.Constants_AObjBeingEdited
    AModDisabled = _MaxPlus.Constants_AModDisabled
    AModBeingEdited = _MaxPlus.Constants_AModBeingEdited
    AModUseSel = _MaxPlus.Constants_AModUseSel
    AModDisabledInviews = _MaxPlus.Constants_AModDisabledInviews
    AModDisabledInrender = _MaxPlus.Constants_AModDisabledInrender
    AModappDisabled = _MaxPlus.Constants_AModappDisabled
    AModappSelected = _MaxPlus.Constants_AModappSelected
    AModappDisplayActive = _MaxPlus.Constants_AModappDisplayActive
    AModappDynamicBox = _MaxPlus.Constants_AModappDynamicBox
    AModappRendering = _MaxPlus.Constants_AModappRendering
    AOrtMask = _MaxPlus.Constants_AOrtMask
    AOrtBeforeshift = _MaxPlus.Constants_AOrtBeforeshift
    AOrtAftershift = _MaxPlus.Constants_AOrtAftershift
    ACtrlDisabled = _MaxPlus.Constants_ACtrlDisabled
    AOrtDisabled = _MaxPlus.Constants_AOrtDisabled
    AInodeIkTerminator = _MaxPlus.Constants_AInodeIkTerminator
    AInodeIkPosPinned = _MaxPlus.Constants_AInodeIkPosPinned
    AInodeIkRotPinned = _MaxPlus.Constants_AInodeIkRotPinned
    AInodeInUpdate = _MaxPlus.Constants_AInodeInUpdate
    AInodeInUpdateTm = _MaxPlus.Constants_AInodeInUpdateTm
    AHeld = _MaxPlus.Constants_AHeld
    ASet = _MaxPlus.Constants_ASet
    AIsDeleted = _MaxPlus.Constants_AIsDeleted
    ABeingAutoDeleted = _MaxPlus.Constants_ABeingAutoDeleted
    ASuperclass1 = _MaxPlus.Constants_ASuperclass1
    ASuperclass2 = _MaxPlus.Constants_ASuperclass2
    APlugin1 = _MaxPlus.Constants_APlugin1
    APlugin2 = _MaxPlus.Constants_APlugin2
    APlugin3 = _MaxPlus.Constants_APlugin3
    APlugin4 = _MaxPlus.Constants_APlugin4
    AWork1 = _MaxPlus.Constants_AWork1
    AWork2 = _MaxPlus.Constants_AWork2
    AWork3 = _MaxPlus.Constants_AWork3
    AWork4 = _MaxPlus.Constants_AWork4
    AEvaluating = _MaxPlus.Constants_AEvaluating
    ANotifydep = _MaxPlus.Constants_ANotifydep
    ADependentsBeingEnumerated = _MaxPlus.Constants_ADependentsBeingEnumerated
    AObjectReduced = _MaxPlus.Constants_AObjectReduced
    AnimtypeNode = _MaxPlus.Constants_AnimtypeNode
    AnimtypeRootnode = _MaxPlus.Constants_AnimtypeRootnode
    AnimtypeControl = _MaxPlus.Constants_AnimtypeControl
    MaxTrackViews = _MaxPlus.Constants_MaxTrackViews
    AllTrackViews = _MaxPlus.Constants_AllTrackViews
    MaxTrackviewSelsets = _MaxPlus.Constants_MaxTrackviewSelsets
    TrackviewNode = _MaxPlus.Constants_TrackviewNode
    TrackviewAnim = _MaxPlus.Constants_TrackviewAnim
    ADerivedobjDontdelete = _MaxPlus.Constants_ADerivedobjDontdelete
    AComponentLocked = _MaxPlus.Constants_AComponentLocked
    ATvnodeDontresaclecontrollers = _MaxPlus.Constants_ATvnodeDontresaclecontrollers
    AReservedB16 = _MaxPlus.Constants_AReservedB16
    AChangeParentsDone = _MaxPlus.Constants_AChangeParentsDone
    ARefmakerRefsChecked = _MaxPlus.Constants_ARefmakerRefsChecked
    ADependencyTest = _MaxPlus.Constants_ADependencyTest
    ALockTarget = _MaxPlus.Constants_ALockTarget
    IControl = _MaxPlus.Constants_IControl
    ScopeDoclosed = _MaxPlus.Constants_ScopeDoclosed
    ScopeSubanim = _MaxPlus.Constants_ScopeSubanim
    ScopeChildren = _MaxPlus.Constants_ScopeChildren
    ScopeOpen = _MaxPlus.Constants_ScopeOpen
    ScopeAll = _MaxPlus.Constants_ScopeAll
    AnimEnumProceed = _MaxPlus.Constants_AnimEnumProceed
    AnimEnumStop = _MaxPlus.Constants_AnimEnumStop
    AnimEnumAbort = _MaxPlus.Constants_AnimEnumAbort
    AnimEnumSkip = _MaxPlus.Constants_AnimEnumSkip
    AnimEnumSkipNode = _MaxPlus.Constants_AnimEnumSkipNode
    PropidAppdata = _MaxPlus.Constants_PropidAppdata
    PropidEaselist = _MaxPlus.Constants_PropidEaselist
    PropidMultlist = _MaxPlus.Constants_PropidMultlist
    PropidNotetrack = _MaxPlus.Constants_PropidNotetrack
    PropidClearcaches = _MaxPlus.Constants_PropidClearcaches
    PropidHasWsm = _MaxPlus.Constants_PropidHasWsm
    PropidPstampSmall = _MaxPlus.Constants_PropidPstampSmall
    PropidPstampLarge = _MaxPlus.Constants_PropidPstampLarge
    PropidCustattrib = _MaxPlus.Constants_PropidCustattrib
    PropidHardwareMaterial = _MaxPlus.Constants_PropidHardwareMaterial
    PropidSimpleMaterial = _MaxPlus.Constants_PropidSimpleMaterial
    PropidPstampTiny = _MaxPlus.Constants_PropidPstampTiny
    PropidSvdata = _MaxPlus.Constants_PropidSvdata
    PropidForceRenderMeshCopy = _MaxPlus.Constants_PropidForceRenderMeshCopy
    PropidEvalStepsizeBugFixed = _MaxPlus.Constants_PropidEvalStepsizeBugFixed
    PropidUser = _MaxPlus.Constants_PropidUser
    SyssetEnableEditablemesh = _MaxPlus.Constants_SyssetEnableEditablemesh
    SyssetClearUndo = _MaxPlus.Constants_SyssetClearUndo
    SyssetEditablemeshEnableKeyboardAccel = _MaxPlus.Constants_SyssetEditablemeshEnableKeyboardAccel
    SyssetEnableEditmeshmod = _MaxPlus.Constants_SyssetEnableEditmeshmod
    McapIniChannel = _MaxPlus.Constants_McapIniChannel
    McapIniPreset = _MaxPlus.Constants_McapIniPreset
    McapIniStop = _MaxPlus.Constants_McapIniStop
    McapIniPlay = _MaxPlus.Constants_McapIniPlay
    McapIniRecord = _MaxPlus.Constants_McapIniRecord
    McapIniSsenable = _MaxPlus.Constants_McapIniSsenable
    DefaultactionsDefaultMsgLogMaxsize = _MaxPlus.Constants_DefaultactionsDefaultMsgLogMaxsize
    DefaultactionsLogtofile = _MaxPlus.Constants_DefaultactionsLogtofile
    DefaultactionsLogmsg = _MaxPlus.Constants_DefaultactionsLogmsg
    DefaultactionsAbort = _MaxPlus.Constants_DefaultactionsAbort
    TypeMissingExternalFiles = _MaxPlus.Constants_TypeMissingExternalFiles
    TypeMissingDllFiles = _MaxPlus.Constants_TypeMissingDllFiles
    TypeMissingXrefFiles = _MaxPlus.Constants_TypeMissingXrefFiles
    TypeMissingUvws = _MaxPlus.Constants_TypeMissingUvws
    TypeUnsupportedRendereffect = _MaxPlus.Constants_TypeUnsupportedRendereffect
    TypeInvalidXrefFiles = _MaxPlus.Constants_TypeInvalidXrefFiles
    BeginEditCreate = _MaxPlus.Constants_BeginEditCreate
    BeginEditMotion = _MaxPlus.Constants_BeginEditMotion
    BeginEditHierarchy = _MaxPlus.Constants_BeginEditHierarchy
    BeginEditIk = _MaxPlus.Constants_BeginEditIk
    BeginEditLinkinfo = _MaxPlus.Constants_BeginEditLinkinfo
    BeginEditShapeNoRendparam = _MaxPlus.Constants_BeginEditShapeNoRendparam
    EndEditRemoveui = _MaxPlus.Constants_EndEditRemoveui
    NtInclude = _MaxPlus.Constants_NtInclude
    NtAffectIllum = _MaxPlus.Constants_NtAffectIllum
    NtAffectShadowcast = _MaxPlus.Constants_NtAffectShadowcast
    FileEnumInactive = _MaxPlus.Constants_FileEnumInactive
    FileEnumVp = _MaxPlus.Constants_FileEnumVp
    FileEnumRender = _MaxPlus.Constants_FileEnumRender
    FileEnumAll = _MaxPlus.Constants_FileEnumAll
    FileEnumFileSave = _MaxPlus.Constants_FileEnumFileSave
    FileEnumMissingOnly = _MaxPlus.Constants_FileEnumMissingOnly
    FileEnum1stsubMissing = _MaxPlus.Constants_FileEnum1stsubMissing
    FileEnumDontRecurse = _MaxPlus.Constants_FileEnumDontRecurse
    FileEnumCheckAwork1 = _MaxPlus.Constants_FileEnumCheckAwork1
    FileEnumDontcheckCustattr = _MaxPlus.Constants_FileEnumDontcheckCustattr
    FileEnumSkipVprenderOnly = _MaxPlus.Constants_FileEnumSkipVprenderOnly
    FileEnumAccessorInterface = _MaxPlus.Constants_FileEnumAccessorInterface
    FileEnumReserved1 = _MaxPlus.Constants_FileEnumReserved1
    FileEnumMissingActive = _MaxPlus.Constants_FileEnumMissingActive
    FileEnumMissingActive1 = _MaxPlus.Constants_FileEnumMissingActive1
    DispVertticks = _MaxPlus.Constants_DispVertticks
    DispBezhandles = _MaxPlus.Constants_DispBezhandles
    DispObjselected = _MaxPlus.Constants_DispObjselected
    DispSelverts = _MaxPlus.Constants_DispSelverts
    DispSelfaces = _MaxPlus.Constants_DispSelfaces
    DispSelsegments = _MaxPlus.Constants_DispSelsegments
    DispSelpatches = _MaxPlus.Constants_DispSelpatches
    DispSeledges = _MaxPlus.Constants_DispSeledges
    DispSelpolys = _MaxPlus.Constants_DispSelpolys
    DispSelhandles = _MaxPlus.Constants_DispSelhandles
    DispUnselected = _MaxPlus.Constants_DispUnselected
    DispSelected = _MaxPlus.Constants_DispSelected
    DispLattice = _MaxPlus.Constants_DispLattice
    DispAtshapelevel = _MaxPlus.Constants_DispAtshapelevel
    DispVertNumbers = _MaxPlus.Constants_DispVertNumbers
    DispVerts = _MaxPlus.Constants_DispVerts
    DispVertNumbersSelonly = _MaxPlus.Constants_DispVertNumbersSelonly
    DispSplinesOrthog = _MaxPlus.Constants_DispSplinesOrthog
    PshapeBuiltinSteps = _MaxPlus.Constants_PshapeBuiltinSteps
    PshapeAdaptiveSteps = _MaxPlus.Constants_PshapeAdaptiveSteps
    ShapeObject = _MaxPlus.Constants_ShapeObject
    ShapeSpline = _MaxPlus.Constants_ShapeSpline
    ShapeSegment = _MaxPlus.Constants_ShapeSegment
    ShapeVertex = _MaxPlus.Constants_ShapeVertex
    SubhitShapeSelonly = _MaxPlus.Constants_SubhitShapeSelonly
    SubhitShapeUnselonly = _MaxPlus.Constants_SubhitShapeUnselonly
    SubhitShapeAbortonhit = _MaxPlus.Constants_SubhitShapeAbortonhit
    SubhitShapeSelsolid = _MaxPlus.Constants_SubhitShapeSelsolid
    SubhitShapeVerts = _MaxPlus.Constants_SubhitShapeVerts
    SubhitShapeSegments = _MaxPlus.Constants_SubhitShapeSegments
    SubhitShapePolys = _MaxPlus.Constants_SubhitShapePolys
    SubhitShapeTypemask = _MaxPlus.Constants_SubhitShapeTypemask
    IpbSteps = _MaxPlus.Constants_IpbSteps
    IpbOptimize = _MaxPlus.Constants_IpbOptimize
    IpbAdaptive = _MaxPlus.Constants_IpbAdaptive
    DefSteps = _MaxPlus.Constants_DefSteps
    DefOptimize = _MaxPlus.Constants_DefOptimize
    DefAdaptive = _MaxPlus.Constants_DefAdaptive
    DefRenderable = _MaxPlus.Constants_DefRenderable
    DefDisprendermesh = _MaxPlus.Constants_DefDisprendermesh
    DefRenderableSides = _MaxPlus.Constants_DefRenderableSides
    DefGenuvs = _MaxPlus.Constants_DefGenuvs
    ParamSimple = _MaxPlus.Constants_ParamSimple
    ParamNormalized = _MaxPlus.Constants_ParamNormalized
    GwDrvRenderer = _MaxPlus.Constants_GwDrvRenderer
    GwDrvDevice = _MaxPlus.Constants_GwDrvDevice
    GwHeidi = _MaxPlus.Constants_GwHeidi
    GwOpengl = _MaxPlus.Constants_GwOpengl
    GwDirect3d = _MaxPlus.Constants_GwDirect3d
    GwHeidi3d = _MaxPlus.Constants_GwHeidi3d
    GwNull = _MaxPlus.Constants_GwNull
    GwCustom = _MaxPlus.Constants_GwCustom
    GwNitrous = _MaxPlus.Constants_GwNitrous
    PointRgn = _MaxPlus.Constants_PointRgn
    RectRgn = _MaxPlus.Constants_RectRgn
    CircleRgn = _MaxPlus.Constants_CircleRgn
    FenceRgn = _MaxPlus.Constants_FenceRgn
    RgnDirUndef = _MaxPlus.Constants_RgnDirUndef
    RgnDirRight = _MaxPlus.Constants_RgnDirRight
    RgnDirLeft = _MaxPlus.Constants_RgnDirLeft
    AcDirRlCross = _MaxPlus.Constants_AcDirRlCross
    AcDirLrCross = _MaxPlus.Constants_AcDirLrCross
    WmShutdown = _MaxPlus.Constants_WmShutdown
    WmInitComplete = _MaxPlus.Constants_WmInitComplete
    GwMaxFileLen = _MaxPlus.Constants_GwMaxFileLen
    GwMaxCaptionLen = _MaxPlus.Constants_GwMaxCaptionLen
    GwMaxVerts = _MaxPlus.Constants_GwMaxVerts
    GfxMaxStrip = _MaxPlus.Constants_GfxMaxStrip
    GfxMaxTextures = _MaxPlus.Constants_GfxMaxTextures
    GwNoAtts = _MaxPlus.Constants_GwNoAtts
    GwWireframe = _MaxPlus.Constants_GwWireframe
    GwIllum = _MaxPlus.Constants_GwIllum
    GwFlat = _MaxPlus.Constants_GwFlat
    GwSpecular = _MaxPlus.Constants_GwSpecular
    GwTexture = _MaxPlus.Constants_GwTexture
    GwZBuffer = _MaxPlus.Constants_GwZBuffer
    GwPerspCorrect = _MaxPlus.Constants_GwPerspCorrect
    GwPolyEdges = _MaxPlus.Constants_GwPolyEdges
    GwBackcull = _MaxPlus.Constants_GwBackcull
    GwTwoSided = _MaxPlus.Constants_GwTwoSided
    GwColorVerts = _MaxPlus.Constants_GwColorVerts
    GwShadeCverts = _MaxPlus.Constants_GwShadeCverts
    GwPick = _MaxPlus.Constants_GwPick
    GwBoxMode = _MaxPlus.Constants_GwBoxMode
    GwAllEdges = _MaxPlus.Constants_GwAllEdges
    GwVertTicks = _MaxPlus.Constants_GwVertTicks
    GwShadeSelFaces = _MaxPlus.Constants_GwShadeSelFaces
    GwTransparency = _MaxPlus.Constants_GwTransparency
    GwTransparentPass = _MaxPlus.Constants_GwTransparentPass
    GwEmissiveVerts = _MaxPlus.Constants_GwEmissiveVerts
    GwAllOpaque = _MaxPlus.Constants_GwAllOpaque
    GwEdgesOnly = _MaxPlus.Constants_GwEdgesOnly
    GwConstant = _MaxPlus.Constants_GwConstant
    GwHiddenline = _MaxPlus.Constants_GwHiddenline
    GwBlending = _MaxPlus.Constants_GwBlending
    GwDepthwriteDisable = _MaxPlus.Constants_GwDepthwriteDisable
    GwLighting = _MaxPlus.Constants_GwLighting
    GwShapeRect = _MaxPlus.Constants_GwShapeRect
    GwShapeCircular = _MaxPlus.Constants_GwShapeCircular
    GwTexNoTiling = _MaxPlus.Constants_GwTexNoTiling
    GwTexRepeat = _MaxPlus.Constants_GwTexRepeat
    GwTexMirror = _MaxPlus.Constants_GwTexMirror
    GwTexLeave = _MaxPlus.Constants_GwTexLeave
    GwTexReplace = _MaxPlus.Constants_GwTexReplace
    GwTexModulate = _MaxPlus.Constants_GwTexModulate
    GwTexAdd = _MaxPlus.Constants_GwTexAdd
    GwTexAddSigned = _MaxPlus.Constants_GwTexAddSigned
    GwTexSubtract = _MaxPlus.Constants_GwTexSubtract
    GwTexAddSmooth = _MaxPlus.Constants_GwTexAddSmooth
    GwTexAlphaBlend = _MaxPlus.Constants_GwTexAlphaBlend
    GwTexPremultAlphaBlend = _MaxPlus.Constants_GwTexPremultAlphaBlend
    GwTexAlphaBlend2 = _MaxPlus.Constants_GwTexAlphaBlend2
    GwTexScale1x = _MaxPlus.Constants_GwTexScale1x
    GwTexScale2x = _MaxPlus.Constants_GwTexScale2x
    GwTexScale4x = _MaxPlus.Constants_GwTexScale4x
    GwTexZero = _MaxPlus.Constants_GwTexZero
    GwTexSource = _MaxPlus.Constants_GwTexSource
    GwTexTexture = _MaxPlus.Constants_GwTexTexture
    GwTexConstant = _MaxPlus.Constants_GwTexConstant
    GwTexPrevious = _MaxPlus.Constants_GwTexPrevious
    GwLeftPlane = _MaxPlus.Constants_GwLeftPlane
    GwRightPlane = _MaxPlus.Constants_GwRightPlane
    GwBottomPlane = _MaxPlus.Constants_GwBottomPlane
    GwTopPlane = _MaxPlus.Constants_GwTopPlane
    GwFrontPlane = _MaxPlus.Constants_GwFrontPlane
    GwBackPlane = _MaxPlus.Constants_GwBackPlane
    GwPlaneMask = _MaxPlus.Constants_GwPlaneMask
    GwEdgeSkip = _MaxPlus.Constants_GwEdgeSkip
    GwEdgeVis = _MaxPlus.Constants_GwEdgeVis
    GwEdgeInvis = _MaxPlus.Constants_GwEdgeInvis
    BufFBuffer = _MaxPlus.Constants_BufFBuffer
    BufZBuffer = _MaxPlus.Constants_BufZBuffer
    GwDoesSupport = _MaxPlus.Constants_GwDoesSupport
    GwDoesNotSupport = _MaxPlus.Constants_GwDoesNotSupport
    GwSptTxtCorrect = _MaxPlus.Constants_GwSptTxtCorrect
    GwSptGeomAccel = _MaxPlus.Constants_GwSptGeomAccel
    GwSptTriStrips = _MaxPlus.Constants_GwSptTriStrips
    GwSptDualPlanes = _MaxPlus.Constants_GwSptDualPlanes
    GwSptSwapModel = _MaxPlus.Constants_GwSptSwapModel
    GwSptIncrUpdate = _MaxPlus.Constants_GwSptIncrUpdate
    GwSpt1PassDecal = _MaxPlus.Constants_GwSpt1PassDecal
    GwSptDriverConfig = _MaxPlus.Constants_GwSptDriverConfig
    GwSptTexturedBkg = _MaxPlus.Constants_GwSptTexturedBkg
    GwSptVirtualVpts = _MaxPlus.Constants_GwSptVirtualVpts
    GwSptPaintDoesBlit = _MaxPlus.Constants_GwSptPaintDoesBlit
    GwSptWireframeStrips = _MaxPlus.Constants_GwSptWireframeStrips
    GwSptOrgUpperLeft = _MaxPlus.Constants_GwSptOrgUpperLeft
    GwSptArrayProcessing = _MaxPlus.Constants_GwSptArrayProcessing
    GwSptNumLights = _MaxPlus.Constants_GwSptNumLights
    GwSptNumTextures = _MaxPlus.Constants_GwSptNumTextures
    GwSptWireFaces = _MaxPlus.Constants_GwSptWireFaces
    GwSptTotal = _MaxPlus.Constants_GwSptTotal
    GwDisplayMaximized = _MaxPlus.Constants_GwDisplayMaximized
    GwDisplayWindowed = _MaxPlus.Constants_GwDisplayWindowed
    GwDisplayInvisible = _MaxPlus.Constants_GwDisplayInvisible
    GwPassOne = _MaxPlus.Constants_GwPassOne
    GwPassTwo = _MaxPlus.Constants_GwPassTwo
    GwAttenNone = _MaxPlus.Constants_GwAttenNone
    GwAttenStart = _MaxPlus.Constants_GwAttenStart
    GwAttenEnd = _MaxPlus.Constants_GwAttenEnd
    GwAttenLinear = _MaxPlus.Constants_GwAttenLinear
    GwAttenQuad = _MaxPlus.Constants_GwAttenQuad
    SystemLockReturn = _MaxPlus.Constants_SystemLockReturn
    SystemRemoteReturn = _MaxPlus.Constants_SystemRemoteReturn
    IidIindirectreferencemaker = _MaxPlus.Constants_IidIindirectreferencemaker
    AnimlayermgrComboboxId = _MaxPlus.Constants_AnimlayermgrComboboxId
    AnimlayermgrEditId = _MaxPlus.Constants_AnimlayermgrEditId
    AnimlayermgrSpinnerId = _MaxPlus.Constants_AnimlayermgrSpinnerId
    DefaultBakeChannel = _MaxPlus.Constants_DefaultBakeChannel
    DefaultNDilations = _MaxPlus.Constants_DefaultNDilations
    RefmsgNodemonitorTargetDeleted = _MaxPlus.Constants_RefmsgNodemonitorTargetDeleted
    RefmsgNodetransformmonitorTargetDeleted = _MaxPlus.Constants_RefmsgNodetransformmonitorTargetDeleted
    PainterinterfaceV5 = _MaxPlus.Constants_PainterinterfaceV5
    PainterinterfaceV7 = _MaxPlus.Constants_PainterinterfaceV7
    PainterinterfaceV14 = _MaxPlus.Constants_PainterinterfaceV14
    PaintercanvasinterfaceV5 = _MaxPlus.Constants_PaintercanvasinterfaceV5
    PaintercanvasinterfaceV51 = _MaxPlus.Constants_PaintercanvasinterfaceV51
    PaintercanvasinterfaceV7 = _MaxPlus.Constants_PaintercanvasinterfaceV7
    NoMirrror = _MaxPlus.Constants_NoMirrror
    Mirrrored = _MaxPlus.Constants_Mirrrored
    MirrrorShared = _MaxPlus.Constants_MirrrorShared
    Ringcolor = _MaxPlus.Constants_Ringcolor
    Normalcolor = _MaxPlus.Constants_Normalcolor
    Ringpressedcolor = _MaxPlus.Constants_Ringpressedcolor
    Normalpressedcolor = _MaxPlus.Constants_Normalpressedcolor
    Tracecolor = _MaxPlus.Constants_Tracecolor
    Gizmocolor = _MaxPlus.Constants_Gizmocolor
    PressureAffectsNone = _MaxPlus.Constants_PressureAffectsNone
    PressureAffectsStr = _MaxPlus.Constants_PressureAffectsStr
    PressureAffectsSize = _MaxPlus.Constants_PressureAffectsSize
    PressureAffectsBoth = _MaxPlus.Constants_PressureAffectsBoth
    IidReftargMonitor = _MaxPlus.Constants_IidReftargMonitor
    RefmsgReftargmonitorTargetSet = _MaxPlus.Constants_RefmsgReftargmonitorTargetSet
    RefmsgReftargmonitorTargetDeleted = _MaxPlus.Constants_RefmsgReftargmonitorTargetDeleted
    ScenestatePartsCount = _MaxPlus.Constants_ScenestatePartsCount
    IMixslaveinterface = _MaxPlus.Constants_IMixslaveinterface
    EdgeVis = _MaxPlus.Constants_EdgeVis
    EdgeInvis = _MaxPlus.Constants_EdgeInvis
    VisBit = _MaxPlus.Constants_VisBit
    VisMask = _MaxPlus.Constants_VisMask
    EdgeA = _MaxPlus.Constants_EdgeA
    EdgeB = _MaxPlus.Constants_EdgeB
    EdgeC = _MaxPlus.Constants_EdgeC
    EdgeAll = _MaxPlus.Constants_EdgeAll
    FaceHidden = _MaxPlus.Constants_FaceHidden
    FaceWork = _MaxPlus.Constants_FaceWork
    FaceStrip = _MaxPlus.Constants_FaceStrip
    FaceNormA = _MaxPlus.Constants_FaceNormA
    FaceNormB = _MaxPlus.Constants_FaceNormB
    FaceNormC = _MaxPlus.Constants_FaceNormC
    FaceNormMask = _MaxPlus.Constants_FaceNormMask
    FaceInforeground = _MaxPlus.Constants_FaceInforeground
    FaceBackfacing = _MaxPlus.Constants_FaceBackfacing
    FaceMatidShift = _MaxPlus.Constants_FaceMatidShift
    FaceMatidMask = _MaxPlus.Constants_FaceMatidMask
    CompTransform = _MaxPlus.Constants_CompTransform
    CompIgnRect = _MaxPlus.Constants_CompIgnRect
    CompLighting = _MaxPlus.Constants_CompLighting
    CompAll = _MaxPlus.Constants_CompAll
    CompObjselected = _MaxPlus.Constants_CompObjselected
    CompObjfrozen = _MaxPlus.Constants_CompObjfrozen
    NorctMask = _MaxPlus.Constants_NorctMask
    SpecifiedNormal = _MaxPlus.Constants_SpecifiedNormal
    OutLeft = _MaxPlus.Constants_OutLeft
    OutRight = _MaxPlus.Constants_OutRight
    OutTop = _MaxPlus.Constants_OutTop
    OutBottom = _MaxPlus.Constants_OutBottom
    RectMask = _MaxPlus.Constants_RectMask
    RndMask = _MaxPlus.Constants_RndMask
    RndNor0 = _MaxPlus.Constants_RndNor0
    MeshNormalNormalsBuilt = _MaxPlus.Constants_MeshNormalNormalsBuilt
    MeshNormalNormalsComputed = _MaxPlus.Constants_MeshNormalNormalsComputed
    MeshNormalDisplayHandles = _MaxPlus.Constants_MeshNormalDisplayHandles
    MeshNormalFaceAngles = _MaxPlus.Constants_MeshNormalFaceAngles
    MeshNormalModifierSupport = _MaxPlus.Constants_MeshNormalModifierSupport
    MnnormalNormalsBuilt = _MaxPlus.Constants_MnnormalNormalsBuilt
    MnnormalNormalsComputed = _MaxPlus.Constants_MnnormalNormalsComputed
    MnnormalDisplayHandles = _MaxPlus.Constants_MnnormalDisplayHandles
    MnnormalFaceAngles = _MaxPlus.Constants_MnnormalFaceAngles
    NumBuiltinDims = _MaxPlus.Constants_NumBuiltinDims
    PatchUndef = _MaxPlus.Constants_PatchUndef
    PatchTri = _MaxPlus.Constants_PatchTri
    PatchQuad = _MaxPlus.Constants_PatchQuad
    FileSupportNone = _MaxPlus.Constants_FileSupportNone
    FileSupportOpen = _MaxPlus.Constants_FileSupportOpen
    FileSupportSave = _MaxPlus.Constants_FileSupportSave
    FileSupportDefault = _MaxPlus.Constants_FileSupportDefault
    FileSupportExport = _MaxPlus.Constants_FileSupportExport
    FileSupportImport = _MaxPlus.Constants_FileSupportImport
    FileSupportMerge = _MaxPlus.Constants_FileSupportMerge
    FileSupportReplace = _MaxPlus.Constants_FileSupportReplace
    FileSupportXref = _MaxPlus.Constants_FileSupportXref
    FileSupportRpsOpen = _MaxPlus.Constants_FileSupportRpsOpen
    FileSupportRpsSave = _MaxPlus.Constants_FileSupportRpsSave
    FileFormatRps = _MaxPlus.Constants_FileFormatRps
    FileFormatChr = _MaxPlus.Constants_FileFormatChr
    RollupCatSystem = _MaxPlus.Constants_RollupCatSystem
    RollupCatStandard = _MaxPlus.Constants_RollupCatStandard
    RollupCatCustattrib = _MaxPlus.Constants_RollupCatCustattrib
    SoCenterSelection = _MaxPlus.Constants_SoCenterSelection
    SoCenterPivot = _MaxPlus.Constants_SoCenterPivot
    IdAm = _MaxPlus.Constants_IdAm
    IdDi = _MaxPlus.Constants_IdDi
    IdSp = _MaxPlus.Constants_IdSp
    IdSh = _MaxPlus.Constants_IdSh
    IdSs = _MaxPlus.Constants_IdSs
    IdSi = _MaxPlus.Constants_IdSi
    IdOp = _MaxPlus.Constants_IdOp
    IdFi = _MaxPlus.Constants_IdFi
    IdBu = _MaxPlus.Constants_IdBu
    IdRl = _MaxPlus.Constants_IdRl
    IdRr = _MaxPlus.Constants_IdRr
    IdDp = _MaxPlus.Constants_IdDp
    Ntexmaps = _MaxPlus.Constants_Ntexmaps
    TrackDosel = _MaxPlus.Constants_TrackDosel
    TrackDoall = _MaxPlus.Constants_TrackDoall
    TrackSlideunsel = _MaxPlus.Constants_TrackSlideunsel
    TrackRighttoleft = _MaxPlus.Constants_TrackRighttoleft
    TrackDosubanims = _MaxPlus.Constants_TrackDosubanims
    TrackDochildnodes = _MaxPlus.Constants_TrackDochildnodes
    TrackMaprange = _MaxPlus.Constants_TrackMaprange
    TrackDosoftselect = _MaxPlus.Constants_TrackDosoftselect
    TrackInsertkeys = _MaxPlus.Constants_TrackInsertkeys
    TrackReplacekeys = _MaxPlus.Constants_TrackReplacekeys
    EditrangeLinktokeys = _MaxPlus.Constants_EditrangeLinktokeys
    HittrackSelonly = _MaxPlus.Constants_HittrackSelonly
    HittrackUnselonly = _MaxPlus.Constants_HittrackUnselonly
    HittrackAbortonhit = _MaxPlus.Constants_HittrackAbortonhit
    HitcurveTesttangents = _MaxPlus.Constants_HitcurveTesttangents
    HittrackSubtreemode = _MaxPlus.Constants_HittrackSubtreemode
    HitcurveTestalltangents = _MaxPlus.Constants_HitcurveTestalltangents
    SelkeysSelect = _MaxPlus.Constants_SelkeysSelect
    SelkeysDeselect = _MaxPlus.Constants_SelkeysDeselect
    SelkeysClearkeys = _MaxPlus.Constants_SelkeysClearkeys
    SelkeysClearcurve = _MaxPlus.Constants_SelkeysClearcurve
    SelkeysFcurve = _MaxPlus.Constants_SelkeysFcurve
    TimerangeSelonly = _MaxPlus.Constants_TimerangeSelonly
    TimerangeAll = _MaxPlus.Constants_TimerangeAll
    TimerangeChildnodes = _MaxPlus.Constants_TimerangeChildnodes
    TimerangeChildanims = _MaxPlus.Constants_TimerangeChildanims
    TimeIncleft = _MaxPlus.Constants_TimeIncleft
    TimeIncright = _MaxPlus.Constants_TimeIncright
    TimeNoslide = _MaxPlus.Constants_TimeNoslide
    PasteRelative = _MaxPlus.Constants_PasteRelative
    AddkeySelect = _MaxPlus.Constants_AddkeySelect
    AddkeyInterp = _MaxPlus.Constants_AddkeyInterp
    AddkeyFlagged = _MaxPlus.Constants_AddkeyFlagged
    CopykeyPos = _MaxPlus.Constants_CopykeyPos
    CopykeyRot = _MaxPlus.Constants_CopykeyRot
    CopykeyScale = _MaxPlus.Constants_CopykeyScale
    NextkeyLeft = _MaxPlus.Constants_NextkeyLeft
    NextkeyRight = _MaxPlus.Constants_NextkeyRight
    NextkeyPos = _MaxPlus.Constants_NextkeyPos
    NextkeyRot = _MaxPlus.Constants_NextkeyRot
    NextkeyScale = _MaxPlus.Constants_NextkeyScale
    KeyatPosition = _MaxPlus.Constants_KeyatPosition
    KeyatRotation = _MaxPlus.Constants_KeyatRotation
    KeyatScale = _MaxPlus.Constants_KeyatScale
    PainttrackShowsel = _MaxPlus.Constants_PainttrackShowsel
    PainttrackShowstats = _MaxPlus.Constants_PainttrackShowstats
    PaintcurveShowtangents = _MaxPlus.Constants_PaintcurveShowtangents
    PaintcurveFrozen = _MaxPlus.Constants_PaintcurveFrozen
    PaintcurveGencolor = _MaxPlus.Constants_PaintcurveGencolor
    PaintcurveXcolor = _MaxPlus.Constants_PaintcurveXcolor
    PaintcurveYcolor = _MaxPlus.Constants_PaintcurveYcolor
    PaintcurveZcolor = _MaxPlus.Constants_PaintcurveZcolor
    PainttrackSubtreemode = _MaxPlus.Constants_PainttrackSubtreemode
    PainttrackHidestaticvalues = _MaxPlus.Constants_PainttrackHidestaticvalues
    PaintcurveFrozenkeys = _MaxPlus.Constants_PaintcurveFrozenkeys
    PaintcurveShowalltangents = _MaxPlus.Constants_PaintcurveShowalltangents
    PaintcurveSoftselect = _MaxPlus.Constants_PaintcurveSoftselect
    PaintcurveWcolor = _MaxPlus.Constants_PaintcurveWcolor
    ExtentsShowtangents = _MaxPlus.Constants_ExtentsShowtangents
    ExtentsShowalltangents = _MaxPlus.Constants_ExtentsShowalltangents
    ExtentsFitinrange = _MaxPlus.Constants_ExtentsFitinrange
    ExtentsSelectedKeys = _MaxPlus.Constants_ExtentsSelectedKeys
    TrackDone = _MaxPlus.Constants_TrackDone
    TrackDorange = _MaxPlus.Constants_TrackDorange
    TrackAskclient = _MaxPlus.Constants_TrackAskclient
    TrackDostandard = _MaxPlus.Constants_TrackDostandard
    HitcurveKey = _MaxPlus.Constants_HitcurveKey
    HitcurveWhole = _MaxPlus.Constants_HitcurveWhole
    HitcurveTangent = _MaxPlus.Constants_HitcurveTangent
    HitcurveNone = _MaxPlus.Constants_HitcurveNone
    HitcurveAskclient = _MaxPlus.Constants_HitcurveAskclient
    DisplayXcurve = _MaxPlus.Constants_DisplayXcurve
    DisplayYcurve = _MaxPlus.Constants_DisplayYcurve
    DisplayZcurve = _MaxPlus.Constants_DisplayZcurve
    DisplayWcurve = _MaxPlus.Constants_DisplayWcurve
    KeysNoneselected = _MaxPlus.Constants_KeysNoneselected
    KeysMultiselected = _MaxPlus.Constants_KeysMultiselected
    KeysCommontime = _MaxPlus.Constants_KeysCommontime
    KeysCommonvalue = _MaxPlus.Constants_KeysCommonvalue
    KeycoordsTimeonly = _MaxPlus.Constants_KeycoordsTimeonly
    KeycoordsValueonly = _MaxPlus.Constants_KeycoordsValueonly
    KeycoordsExprUnsupported = _MaxPlus.Constants_KeycoordsExprUnsupported
    KeycoordsExprError = _MaxPlus.Constants_KeycoordsExprError
    KeycoordsExprOk = _MaxPlus.Constants_KeycoordsExprOk
    NotKeyframeable = _MaxPlus.Constants_NotKeyframeable
    AdjtanLock = _MaxPlus.Constants_AdjtanLock
    AdjtanBreak = _MaxPlus.Constants_AdjtanBreak
    EdittrackFcurve = _MaxPlus.Constants_EdittrackFcurve
    EdittrackTrack = _MaxPlus.Constants_EdittrackTrack
    EdittrackScene = _MaxPlus.Constants_EdittrackScene
    EdittrackButton = _MaxPlus.Constants_EdittrackButton
    EdittrackMouse = _MaxPlus.Constants_EdittrackMouse
    TrackparamsNone = _MaxPlus.Constants_TrackparamsNone
    TrackparamsKey = _MaxPlus.Constants_TrackparamsKey
    TrackparamsWhole = _MaxPlus.Constants_TrackparamsWhole
    RenderbeginInMedit = _MaxPlus.Constants_RenderbeginInMedit
    MapPlanar = _MaxPlus.Constants_MapPlanar
    MapCylindrical = _MaxPlus.Constants_MapCylindrical
    MapSpherical = _MaxPlus.Constants_MapSpherical
    MapBall = _MaxPlus.Constants_MapBall
    MapBox = _MaxPlus.Constants_MapBox
    MapFace = _MaxPlus.Constants_MapFace
    MapAcadPlanar = _MaxPlus.Constants_MapAcadPlanar
    MapAcadBox = _MaxPlus.Constants_MapAcadBox
    MapAcadCylindrical = _MaxPlus.Constants_MapAcadCylindrical
    MapAcadSpherical = _MaxPlus.Constants_MapAcadSpherical
    ExposeWorldTransformSclassId = _MaxPlus.Constants_ExposeWorldTransformSclassId
    __swig_destroy__ = _MaxPlus.delete_Constants
    __del__ = lambda self : None;
Constants_swigregister = _MaxPlus.Constants_swigregister
Constants_swigregister(Constants)

class SuperClassIds(object):
    """Super class IDs constant values."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GenModApp = _MaxPlus.SuperClassIds_GenModApp
    ModApp = _MaxPlus.SuperClassIds_ModApp
    ObjectRefModApp = _MaxPlus.SuperClassIds_ObjectRefModApp
    BaseNode = _MaxPlus.SuperClassIds_BaseNode
    GenDerivedObject = _MaxPlus.SuperClassIds_GenDerivedObject
    DerivedObject = _MaxPlus.SuperClassIds_DerivedObject
    WsmDerivedObject = _MaxPlus.SuperClassIds_WsmDerivedObject
    ParamBlock = _MaxPlus.SuperClassIds_ParamBlock
    ParamBlock2 = _MaxPlus.SuperClassIds_ParamBlock2
    EaseList = _MaxPlus.SuperClassIds_EaseList
    AxisDisplay = _MaxPlus.SuperClassIds_AxisDisplay
    MultiList = _MaxPlus.SuperClassIds_MultiList
    NoteTrack = _MaxPlus.SuperClassIds_NoteTrack
    TreeView = _MaxPlus.SuperClassIds_TreeView
    Scene = _MaxPlus.SuperClassIds_Scene
    GridRef = _MaxPlus.SuperClassIds_GridRef
    ViewRef = _MaxPlus.SuperClassIds_ViewRef
    BitmapDragAndDrop = _MaxPlus.SuperClassIds_BitmapDragAndDrop
    ParticleSys = _MaxPlus.SuperClassIds_ParticleSys
    AggMan = _MaxPlus.SuperClassIds_AggMan
    MSWrapper = _MaxPlus.SuperClassIds_MSWrapper
    Trackbar = _MaxPlus.SuperClassIds_Trackbar
    MakeRefRest = _MaxPlus.SuperClassIds_MakeRefRest
    DelRefRest = _MaxPlus.SuperClassIds_DelRefRest
    AssignRef = _MaxPlus.SuperClassIds_AssignRef
    Layer = _MaxPlus.SuperClassIds_Layer
    GeomObject = _MaxPlus.SuperClassIds_GeomObject
    Camera = _MaxPlus.SuperClassIds_Camera
    Light = _MaxPlus.SuperClassIds_Light
    Shape = _MaxPlus.SuperClassIds_Shape
    Helper = _MaxPlus.SuperClassIds_Helper
    System = _MaxPlus.SuperClassIds_System
    Osm = _MaxPlus.SuperClassIds_Osm
    Wsm = _MaxPlus.SuperClassIds_Wsm
    WSMObject = _MaxPlus.SuperClassIds_WSMObject
    Import = _MaxPlus.SuperClassIds_Import
    Export = _MaxPlus.SuperClassIds_Export
    BmmStorage = _MaxPlus.SuperClassIds_BmmStorage
    BmmFilter = _MaxPlus.SuperClassIds_BmmFilter
    BmmIO = _MaxPlus.SuperClassIds_BmmIO
    BmmDiter = _MaxPlus.SuperClassIds_BmmDiter
    BmmColorcut = _MaxPlus.SuperClassIds_BmmColorcut
    UserDataType = _MaxPlus.SuperClassIds_UserDataType
    Material = _MaxPlus.SuperClassIds_Material
    Texmap = _MaxPlus.SuperClassIds_Texmap
    UVGen = _MaxPlus.SuperClassIds_UVGen
    XYZGen = _MaxPlus.SuperClassIds_XYZGen
    TexOutput = _MaxPlus.SuperClassIds_TexOutput
    SoundObj = _MaxPlus.SuperClassIds_SoundObj
    Flt = _MaxPlus.SuperClassIds_Flt
    Renderer = _MaxPlus.SuperClassIds_Renderer
    BezFont = _MaxPlus.SuperClassIds_BezFont
    RefMaker = _MaxPlus.SuperClassIds_RefMaker
    Atmospheric = _MaxPlus.SuperClassIds_Atmospheric
    Utility = _MaxPlus.SuperClassIds_Utility
    TrackView = _MaxPlus.SuperClassIds_TrackView
    MoCapDevice = _MaxPlus.SuperClassIds_MoCapDevice
    MoCapDeviceBInding = _MaxPlus.SuperClassIds_MoCapDeviceBInding
    OSnap = _MaxPlus.SuperClassIds_OSnap
    TexMapContainer = _MaxPlus.SuperClassIds_TexMapContainer
    RenderEffect = _MaxPlus.SuperClassIds_RenderEffect
    RenderElement = _MaxPlus.SuperClassIds_RenderElement
    FilterKernel = _MaxPlus.SuperClassIds_FilterKernel
    Shader = _MaxPlus.SuperClassIds_Shader
    ColorPicker = _MaxPlus.SuperClassIds_ColorPicker
    ShadowGenerator = _MaxPlus.SuperClassIds_ShadowGenerator
    Gup = _MaxPlus.SuperClassIds_Gup
    SchematicViewUtility = _MaxPlus.SuperClassIds_SchematicViewUtility
    Sampler = _MaxPlus.SuperClassIds_Sampler
    ControllerFloat = _MaxPlus.SuperClassIds_ControllerFloat
    ControllerPoint3 = _MaxPlus.SuperClassIds_ControllerPoint3
    ControllerMatrix3 = _MaxPlus.SuperClassIds_ControllerMatrix3
    ControllerPosition = _MaxPlus.SuperClassIds_ControllerPosition
    ControllerRotation = _MaxPlus.SuperClassIds_ControllerRotation
    ControllerScale = _MaxPlus.SuperClassIds_ControllerScale
    ControllerMorph = _MaxPlus.SuperClassIds_ControllerMorph
    ControllerMasterpoint = _MaxPlus.SuperClassIds_ControllerMasterpoint
    ControllerPoint4 = _MaxPlus.SuperClassIds_ControllerPoint4
    ControllerPoint2 = _MaxPlus.SuperClassIds_ControllerPoint2
    ControllerUsertype = _MaxPlus.SuperClassIds_ControllerUsertype
    ControllerMasterblock = _MaxPlus.SuperClassIds_ControllerMasterblock
    __swig_destroy__ = _MaxPlus.delete_SuperClassIds
    __del__ = lambda self : None;
SuperClassIds_swigregister = _MaxPlus.SuperClassIds_swigregister
SuperClassIds_swigregister(SuperClassIds)

class ClassIds(object):
    """Class ID constant values."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _MaxPlus.delete_ClassIds
    __del__ = lambda self : None;
ClassIds_swigregister = _MaxPlus.ClassIds_swigregister
ClassIds_swigregister(ClassIds)
cvar = _MaxPlus.cvar
ClassIds._3D_Studio = _MaxPlus.cvar.ClassIds__3D_Studio
ClassIds._3D_Studio_Shape = _MaxPlus.cvar.ClassIds__3D_Studio_Shape
ClassIds._3D_StudioExporterPlugin = _MaxPlus.cvar.ClassIds__3D_StudioExporterPlugin
ClassIds.add = _MaxPlus.cvar.ClassIds_add
ClassIds.Add_UV_Texsurf__base = _MaxPlus.cvar.ClassIds_Add_UV_Texsurf__base
ClassIds.Adjustments__lume = _MaxPlus.cvar.ClassIds_Adjustments__lume
ClassIds.Adobe_Illustrator = _MaxPlus.cvar.ClassIds_Adobe_Illustrator
ClassIds.Adobe_Illustrator_Shape = _MaxPlus.cvar.ClassIds_Adobe_Illustrator_Shape
ClassIds.adsk_area_shadow_samples = _MaxPlus.cvar.ClassIds_adsk_area_shadow_samples
ClassIds.adsk_aspect_ratio_height_per_width = _MaxPlus.cvar.ClassIds_adsk_aspect_ratio_height_per_width
ClassIds.adsk_aspect_ratio_width_per_height = _MaxPlus.cvar.ClassIds_adsk_aspect_ratio_width_per_height
ClassIds.adsk_base_UVGenerator = _MaxPlus.cvar.ClassIds_adsk_base_UVGenerator
ClassIds.adsk_bitmap = _MaxPlus.cvar.ClassIds_adsk_bitmap
ClassIds.adsk_bitmaptextureMap = _MaxPlus.cvar.ClassIds_adsk_bitmaptextureMap
ClassIds.adsk_blurred_reflection_multiplier = _MaxPlus.cvar.ClassIds_adsk_blurred_reflection_multiplier
ClassIds.adsk_blurred_refraction_multiplier = _MaxPlus.cvar.ClassIds_adsk_blurred_refraction_multiplier
ClassIds.adsk_core_glossy_sampler = _MaxPlus.cvar.ClassIds_adsk_core_glossy_sampler
ClassIds.adsk_decal = _MaxPlus.cvar.ClassIds_adsk_decal
ClassIds.adsk_environment = _MaxPlus.cvar.ClassIds_adsk_environment
ClassIds.adsk_KelvinToColor = _MaxPlus.cvar.ClassIds_adsk_KelvinToColor
ClassIds.adsk_Light_Default = _MaxPlus.cvar.ClassIds_adsk_Light_Default
ClassIds.adsk_Light_Photometric = _MaxPlus.cvar.ClassIds_adsk_Light_Photometric
ClassIds.adsk_Metal_Cutouts_Shape = _MaxPlus.cvar.ClassIds_adsk_Metal_Cutouts_Shape
ClassIds.adsk_Metal_Noise_Anodized = _MaxPlus.cvar.ClassIds_adsk_Metal_Noise_Anodized
ClassIds.adsk_Metal_Noise_Anodized_V2 = _MaxPlus.cvar.ClassIds_adsk_Metal_Noise_Anodized_V2
ClassIds.adsk_Metal_Patterns__Knurls = _MaxPlus.cvar.ClassIds_adsk_Metal_Patterns__Knurls
ClassIds.adsk_Metal_Patterns__Knurls_V2 = _MaxPlus.cvar.ClassIds_adsk_Metal_Patterns__Knurls_V2
ClassIds.adsk_Metal_switch_color_shader = _MaxPlus.cvar.ClassIds_adsk_Metal_switch_color_shader
ClassIds.adsk_Metal_switch_color_shader_V2 = _MaxPlus.cvar.ClassIds_adsk_Metal_switch_color_shader_V2
ClassIds.adsk_Mia_Optimizer = _MaxPlus.cvar.ClassIds_adsk_Mia_Optimizer
ClassIds.adsk_mrStoreElements = _MaxPlus.cvar.ClassIds_adsk_mrStoreElements
ClassIds.adsk_scale_internal_to_meters = _MaxPlus.cvar.ClassIds_adsk_scale_internal_to_meters
ClassIds.adsk_scale_meters_to_internal = _MaxPlus.cvar.ClassIds_adsk_scale_meters_to_internal
ClassIds.adsk_scale_meters_to_internal_inverse = _MaxPlus.cvar.ClassIds_adsk_scale_meters_to_internal_inverse
ClassIds.adsk_Shd_Brick_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_Brick_spider
ClassIds.adsk_Shd_Ceramic = _MaxPlus.cvar.ClassIds_adsk_Shd_Ceramic
ClassIds.adsk_Shd_Ceramic_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_Ceramic_spider
ClassIds.adsk_Shd_Ceramic_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_Ceramic_V2
ClassIds.adsk_Shd_Concrete = _MaxPlus.cvar.ClassIds_adsk_Shd_Concrete
ClassIds.adsk_Shd_Concrete_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_Concrete_spider
ClassIds.adsk_Shd_Concrete_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_Concrete_V2
ClassIds.adsk_Shd_Fabric_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_Fabric_spider
ClassIds.adsk_Shd_Glazing = _MaxPlus.cvar.ClassIds_adsk_Shd_Glazing
ClassIds.adsk_Shd_Glazing_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_Glazing_spider
ClassIds.adsk_Shd_Glazing_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_Glazing_V2
ClassIds.adsk_Shd_Hardwood = _MaxPlus.cvar.ClassIds_adsk_Shd_Hardwood
ClassIds.adsk_Shd_Hardwood_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_Hardwood_spider
ClassIds.adsk_Shd_Hardwood_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_Hardwood_V2
ClassIds.adsk_Shd_Lightmap = _MaxPlus.cvar.ClassIds_adsk_Shd_Lightmap
ClassIds.adsk_Shd_Lightmap_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_Lightmap_V2
ClassIds.adsk_Shd_MasonryCMU = _MaxPlus.cvar.ClassIds_adsk_Shd_MasonryCMU
ClassIds.adsk_Shd_MasonryCMU_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_MasonryCMU_spider
ClassIds.adsk_Shd_MasonryCMU_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_MasonryCMU_V2
ClassIds.adsk_Shd_Metal__Blender = _MaxPlus.cvar.ClassIds_adsk_Shd_Metal__Blender
ClassIds.adsk_Shd_Metal__Blender_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_Metal__Blender_V2
ClassIds.adsk_Shd_Metal_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_Metal_spider
ClassIds.adsk_Shd_MetallicPaint_flakes__adsk = _MaxPlus.cvar.ClassIds_adsk_Shd_MetallicPaint_flakes__adsk
ClassIds.adsk_Shd_MetallicPaint_Mia__adsk = _MaxPlus.cvar.ClassIds_adsk_Shd_MetallicPaint_Mia__adsk
ClassIds.adsk_Shd_MetallicPaint_Mia_V2_adsk = _MaxPlus.cvar.ClassIds_adsk_Shd_MetallicPaint_Mia_V2_adsk
ClassIds.adsk_Shd_MetallicPaint_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_MetallicPaint_spider
ClassIds.adsk_Shd_MetallicPaint_V2_adsk = _MaxPlus.cvar.ClassIds_adsk_Shd_MetallicPaint_V2_adsk
ClassIds.adsk_Shd_MetallicPaint_V2_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_MetallicPaint_V2_spider
ClassIds.adsk_Shd_Mirror_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_Mirror_spider
ClassIds.adsk_Shd_PlasticVinyl = _MaxPlus.cvar.ClassIds_adsk_Shd_PlasticVinyl
ClassIds.adsk_Shd_PlasticVinyl_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_PlasticVinyl_spider
ClassIds.adsk_Shd_PlasticVinyl_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_PlasticVinyl_V2
ClassIds.adsk_Shd_SolidGlass = _MaxPlus.cvar.ClassIds_adsk_Shd_SolidGlass
ClassIds.adsk_Shd_SolidGlass_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_SolidGlass_spider
ClassIds.adsk_Shd_SolidGlass_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_SolidGlass_V2
ClassIds.adsk_Shd_SSS = _MaxPlus.cvar.ClassIds_adsk_Shd_SSS
ClassIds.adsk_Shd_SSS_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_SSS_V2
ClassIds.adsk_Shd_Stone = _MaxPlus.cvar.ClassIds_adsk_Shd_Stone
ClassIds.adsk_Shd_Stone_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_Stone_spider
ClassIds.adsk_Shd_Stone_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_Stone_V2
ClassIds.adsk_Shd_WallPaint = _MaxPlus.cvar.ClassIds_adsk_Shd_WallPaint
ClassIds.adsk_Shd_WallPaint_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_WallPaint_spider
ClassIds.adsk_Shd_WallPaint_V2 = _MaxPlus.cvar.ClassIds_adsk_Shd_WallPaint_V2
ClassIds.adsk_Shd_Water_spider = _MaxPlus.cvar.ClassIds_adsk_Shd_Water_spider
ClassIds.adsk_SS_Environment = _MaxPlus.cvar.ClassIds_adsk_SS_Environment
ClassIds.adsk_Tex_Bricks = _MaxPlus.cvar.ClassIds_adsk_Tex_Bricks
ClassIds.adsk_Tex_Cellular = _MaxPlus.cvar.ClassIds_adsk_Tex_Cellular
ClassIds.adsk_Tex_Checker = _MaxPlus.cvar.ClassIds_adsk_Tex_Checker
ClassIds.adsk_Tex_Concrete_SmoothBumpTex = _MaxPlus.cvar.ClassIds_adsk_Tex_Concrete_SmoothBumpTex
ClassIds.adsk_Tex_Concrete_SmoothBumpTex_V2 = _MaxPlus.cvar.ClassIds_adsk_Tex_Concrete_SmoothBumpTex_V2
ClassIds.adsk_Tex_Gradient = _MaxPlus.cvar.ClassIds_adsk_Tex_Gradient
ClassIds.adsk_Tex_Marble = _MaxPlus.cvar.ClassIds_adsk_Tex_Marble
ClassIds.adsk_Tex_Output = _MaxPlus.cvar.ClassIds_adsk_Tex_Output
ClassIds.adsk_Tex_Smoke = _MaxPlus.cvar.ClassIds_adsk_Tex_Smoke
ClassIds.adsk_Tex_Speckle = _MaxPlus.cvar.ClassIds_adsk_Tex_Speckle
ClassIds.adsk_Tex_Water = _MaxPlus.cvar.ClassIds_adsk_Tex_Water
ClassIds.adsk_Tex_Wood = _MaxPlus.cvar.ClassIds_adsk_Tex_Wood
ClassIds.adsk_ToneOpLog = _MaxPlus.cvar.ClassIds_adsk_ToneOpLog
ClassIds.adsk_Utility_Alpha_From_Shader = _MaxPlus.cvar.ClassIds_adsk_Utility_Alpha_From_Shader
ClassIds.adsk_Utility_Bitmap = _MaxPlus.cvar.ClassIds_adsk_Utility_Bitmap
ClassIds.adsk_Utility_Bitmap_Tweak = _MaxPlus.cvar.ClassIds_adsk_Utility_Bitmap_Tweak
ClassIds.adsk_Utility_Bump = _MaxPlus.cvar.ClassIds_adsk_Utility_Bump
ClassIds.adsk_Utility_Change_Range = _MaxPlus.cvar.ClassIds_adsk_Utility_Change_Range
ClassIds.adsk_Utility_color_to_bool = _MaxPlus.cvar.ClassIds_adsk_Utility_color_to_bool
ClassIds.adsk_Utility_color_to_booltextureMap = _MaxPlus.cvar.ClassIds_adsk_Utility_color_to_booltextureMap
ClassIds.adsk_Utility_Color_to_Float = _MaxPlus.cvar.ClassIds_adsk_Utility_Color_to_Float
ClassIds.adsk_Utility_Color_to_Float3 = _MaxPlus.cvar.ClassIds_adsk_Utility_Color_to_Float3
ClassIds.adsk_Utility_ColorByObject_Switch = _MaxPlus.cvar.ClassIds_adsk_Utility_ColorByObject_Switch
ClassIds.adsk_Utility_ColorShaderSwitcher = _MaxPlus.cvar.ClassIds_adsk_Utility_ColorShaderSwitcher
ClassIds.adsk_Utility_ColorState = _MaxPlus.cvar.ClassIds_adsk_Utility_ColorState
ClassIds.adsk_Utility_Condition = _MaxPlus.cvar.ClassIds_adsk_Utility_Condition
ClassIds.adsk_Utility_Contrast = _MaxPlus.cvar.ClassIds_adsk_Utility_Contrast
ClassIds.adsk_Utility_Curve = _MaxPlus.cvar.ClassIds_adsk_Utility_Curve
ClassIds.adsk_Utility_CurveControl = _MaxPlus.cvar.ClassIds_adsk_Utility_CurveControl
ClassIds.adsk_Utility_Falloff = _MaxPlus.cvar.ClassIds_adsk_Utility_Falloff
ClassIds.adsk_Utility_Float3_to_Color = _MaxPlus.cvar.ClassIds_adsk_Utility_Float3_to_Color
ClassIds.adsk_Utility_Float3_to_Float = _MaxPlus.cvar.ClassIds_adsk_Utility_Float3_to_Float
ClassIds.adsk_Utility_Float_to_Color = _MaxPlus.cvar.ClassIds_adsk_Utility_Float_to_Color
ClassIds.adsk_Utility_Float_to_Float3 = _MaxPlus.cvar.ClassIds_adsk_Utility_Float_to_Float3
ClassIds.adsk_Utility_Gamma = _MaxPlus.cvar.ClassIds_adsk_Utility_Gamma
ClassIds.adsk_Utility_GenericNoise = _MaxPlus.cvar.ClassIds_adsk_Utility_GenericNoise
ClassIds.adsk_Utility_Int_to_Float = _MaxPlus.cvar.ClassIds_adsk_Utility_Int_to_Float
ClassIds.adsk_Utility_IntState = _MaxPlus.cvar.ClassIds_adsk_Utility_IntState
ClassIds.adsk_Utility_InvertScalar = _MaxPlus.cvar.ClassIds_adsk_Utility_InvertScalar
ClassIds.adsk_Utility_LightmapSwitcher = _MaxPlus.cvar.ClassIds_adsk_Utility_LightmapSwitcher
ClassIds.adsk_Utility_LuminanceToIntensity = _MaxPlus.cvar.ClassIds_adsk_Utility_LuminanceToIntensity
ClassIds.adsk_Utility_MiaDecomposer = _MaxPlus.cvar.ClassIds_adsk_Utility_MiaDecomposer
ClassIds.adsk_Utility_Mix2Color = _MaxPlus.cvar.ClassIds_adsk_Utility_Mix2Color
ClassIds.adsk_Utility_Mix8Shader = _MaxPlus.cvar.ClassIds_adsk_Utility_Mix8Shader
ClassIds.adsk_Utility_MultiplyDivide = _MaxPlus.cvar.ClassIds_adsk_Utility_MultiplyDivide
ClassIds.adsk_Utility_NodeVisibility = _MaxPlus.cvar.ClassIds_adsk_Utility_NodeVisibility
ClassIds.adsk_Utility_Noise = _MaxPlus.cvar.ClassIds_adsk_Utility_Noise
ClassIds.adsk_Utility_Noise_Tweakable = _MaxPlus.cvar.ClassIds_adsk_Utility_Noise_Tweakable
ClassIds.adsk_Utility_Output = _MaxPlus.cvar.ClassIds_adsk_Utility_Output
ClassIds.adsk_Utility_PatternGenerator = _MaxPlus.cvar.ClassIds_adsk_Utility_PatternGenerator
ClassIds.adsk_Utility_ScalarShaderSwitcher = _MaxPlus.cvar.ClassIds_adsk_Utility_ScalarShaderSwitcher
ClassIds.adsk_Utility_ScalarState = _MaxPlus.cvar.ClassIds_adsk_Utility_ScalarState
ClassIds.adsk_Utility_scale_zero_up = _MaxPlus.cvar.ClassIds_adsk_Utility_scale_zero_up
ClassIds.adsk_Utility_Shader_PassThrough = _MaxPlus.cvar.ClassIds_adsk_Utility_Shader_PassThrough
ClassIds.adsk_Utility_SimpleFloatMixer = _MaxPlus.cvar.ClassIds_adsk_Utility_SimpleFloatMixer
ClassIds.adsk_Utility_SimpleMixer = _MaxPlus.cvar.ClassIds_adsk_Utility_SimpleMixer
ClassIds.adsk_Utility_State = _MaxPlus.cvar.ClassIds_adsk_Utility_State
ClassIds.adsk_Utility_Switch8Color = _MaxPlus.cvar.ClassIds_adsk_Utility_Switch8Color
ClassIds.adsk_Utility_VectorCoords = _MaxPlus.cvar.ClassIds_adsk_Utility_VectorCoords
ClassIds.adsk_Utility_VectorState = _MaxPlus.cvar.ClassIds_adsk_Utility_VectorState
ClassIds.adsk_Utility_XYZGenerator = _MaxPlus.cvar.ClassIds_adsk_Utility_XYZGenerator
ClassIds.ADT_Category = _MaxPlus.cvar.ClassIds_ADT_Category
ClassIds.ADT_Object_Manager = _MaxPlus.cvar.ClassIds_ADT_Object_Manager
ClassIds.ADT_Object_Manager_Wrapper = _MaxPlus.cvar.ClassIds_ADT_Object_Manager_Wrapper
ClassIds.ADT_Style = _MaxPlus.cvar.ClassIds_ADT_Style
ClassIds.ADT_StyleComposite = _MaxPlus.cvar.ClassIds_ADT_StyleComposite
ClassIds.ADT_SyleLeaf = _MaxPlus.cvar.ClassIds_ADT_SyleLeaf
ClassIds.AdtObjTranslator = _MaxPlus.cvar.ClassIds_AdtObjTranslator
ClassIds.Adv__Ray_Traced = _MaxPlus.cvar.ClassIds_Adv__Ray_Traced
ClassIds.Advanced_Lighting_Override = _MaxPlus.cvar.ClassIds_Advanced_Lighting_Override
ClassIds.Affect_Region = _MaxPlus.cvar.ClassIds_Affect_Region
ClassIds.Age_Test = _MaxPlus.cvar.ClassIds_Age_Test
ClassIds.alpha = _MaxPlus.cvar.ClassIds_alpha
ClassIds.AlphaMap = _MaxPlus.cvar.ClassIds_AlphaMap
ClassIds.AlwaysEqualFilter = _MaxPlus.cvar.ClassIds_AlwaysEqualFilter
ClassIds.Ambient_Occlusion = _MaxPlus.cvar.ClassIds_Ambient_Occlusion
ClassIds.Ambient_Reflective_Occlusion__3dsmax = _MaxPlus.cvar.ClassIds_Ambient_Reflective_Occlusion__3dsmax
ClassIds.Ambient_Reflective_Occlusion__base = _MaxPlus.cvar.ClassIds_Ambient_Reflective_Occlusion__base
ClassIds.AmountChange = _MaxPlus.cvar.ClassIds_AmountChange
ClassIds.Anchor = _MaxPlus.cvar.ClassIds_Anchor
ClassIds.angle = _MaxPlus.cvar.ClassIds_angle
ClassIds.Animation_Store = _MaxPlus.cvar.ClassIds_Animation_Store
ClassIds.AnimTrack = _MaxPlus.cvar.ClassIds_AnimTrack
ClassIds.Anisotropic = _MaxPlus.cvar.ClassIds_Anisotropic
ClassIds.APF_Import = _MaxPlus.cvar.ClassIds_APF_Import
ClassIds.Apollo_Param_Container = _MaxPlus.cvar.ClassIds_Apollo_Param_Container
ClassIds.ArbBone = _MaxPlus.cvar.ClassIds_ArbBone
ClassIds.Arc = _MaxPlus.cvar.ClassIds_Arc
ClassIds.Arch___Design__mi = _MaxPlus.cvar.ClassIds_Arch___Design__mi
ClassIds.Arch__DOF___Bokeh = _MaxPlus.cvar.ClassIds_Arch__DOF___Bokeh
ClassIds.Arch__Environment_Blur = _MaxPlus.cvar.ClassIds_Arch__Environment_Blur
ClassIds.Arch__Exposure___Photographic = _MaxPlus.cvar.ClassIds_Arch__Exposure___Photographic
ClassIds.Architectural = _MaxPlus.cvar.ClassIds_Architectural
ClassIds.Architectural__Environment_Portal = _MaxPlus.cvar.ClassIds_Architectural__Environment_Portal
ClassIds.Architectural__Photometric_Light = _MaxPlus.cvar.ClassIds_Architectural__Photometric_Light
ClassIds.Architectural__Round_Corners_Bump = _MaxPlus.cvar.ClassIds_Architectural__Round_Corners_Bump
ClassIds.Architectural__Self_Illuminator = _MaxPlus.cvar.ClassIds_Architectural__Self_Illuminator
ClassIds.Area = _MaxPlus.cvar.ClassIds_Area
ClassIds.Area_Shadows = _MaxPlus.cvar.ClassIds_Area_Shadows
ClassIds.AsciiExp = _MaxPlus.cvar.ClassIds_AsciiExp
ClassIds.Asset_Browser = _MaxPlus.cvar.ClassIds_Asset_Browser
ClassIds.Assign_Vertex_Colors = _MaxPlus.cvar.ClassIds_Assign_Vertex_Colors
ClassIds.Atmosphere = _MaxPlus.cvar.ClassIds_Atmosphere
ClassIds.ATSMax = _MaxPlus.cvar.ClassIds_ATSMax
ClassIds.Attachment = _MaxPlus.cvar.ClassIds_Attachment
ClassIds.AudioClip = _MaxPlus.cvar.ClassIds_AudioClip
ClassIds.AudioFloat = _MaxPlus.cvar.ClassIds_AudioFloat
ClassIds.AudioPoint3 = _MaxPlus.cvar.ClassIds_AudioPoint3
ClassIds.AudioPosition = _MaxPlus.cvar.ClassIds_AudioPosition
ClassIds.AudioRotation = _MaxPlus.cvar.ClassIds_AudioRotation
ClassIds.AudioScale = _MaxPlus.cvar.ClassIds_AudioScale
ClassIds.Auto_Secondary_Element = _MaxPlus.cvar.ClassIds_Auto_Secondary_Element
ClassIds.AutoCADImport = _MaxPlus.cvar.ClassIds_AutoCADImport
ClassIds.AutoCam = _MaxPlus.cvar.ClassIds_AutoCam
ClassIds.Autodesk_Alias_Wire_Export = _MaxPlus.cvar.ClassIds_Autodesk_Alias_Wire_Export
ClassIds.Autodesk_Map = _MaxPlus.cvar.ClassIds_Autodesk_Map
ClassIds.Autodesk_Material = _MaxPlus.cvar.ClassIds_Autodesk_Material
ClassIds.Automatic_Exposure_Control = _MaxPlus.cvar.ClassIds_Automatic_Exposure_Control
ClassIds.AVI = _MaxPlus.cvar.ClassIds_AVI
ClassIds.Avoid_Behavior = _MaxPlus.cvar.ClassIds_Avoid_Behavior
ClassIds.Awning = _MaxPlus.cvar.ClassIds_Awning
ClassIds.Axis_Helper = _MaxPlus.cvar.ClassIds_Axis_Helper
ClassIds.Background = _MaxPlus.cvar.ClassIds_Background
ClassIds.BackgroundRenderElement = _MaxPlus.cvar.ClassIds_BackgroundRenderElement
ClassIds.Barycentric_Morph_Controller = _MaxPlus.cvar.ClassIds_Barycentric_Morph_Controller
ClassIds.Base_LayerBase_Layer = _MaxPlus.cvar.ClassIds_Base_LayerBase_Layer
ClassIds.Batch_ProOptimizer = _MaxPlus.cvar.ClassIds_Batch_ProOptimizer
ClassIds.Batch_Render_Manager = _MaxPlus.cvar.ClassIds_Batch_Render_Manager
ClassIds.Beam__lume = _MaxPlus.cvar.ClassIds_Beam__lume
ClassIds.Beauty = _MaxPlus.cvar.ClassIds_Beauty
ClassIds.Bend = _MaxPlus.cvar.ClassIds_Bend
ClassIds.Bevel = _MaxPlus.cvar.ClassIds_Bevel
ClassIds.Bevel_Profile = _MaxPlus.cvar.ClassIds_Bevel_Profile
ClassIds.bezier_color = _MaxPlus.cvar.ClassIds_bezier_color
ClassIds.bezier_float = _MaxPlus.cvar.ClassIds_bezier_float
ClassIds.bezier_point3 = _MaxPlus.cvar.ClassIds_bezier_point3
ClassIds.bezier_point4 = _MaxPlus.cvar.ClassIds_bezier_point4
ClassIds.bezier_position = _MaxPlus.cvar.ClassIds_bezier_position
ClassIds.bezier_rgba = _MaxPlus.cvar.ClassIds_bezier_rgba
ClassIds.bezier_rotation = _MaxPlus.cvar.ClassIds_bezier_rotation
ClassIds.bezier_scale = _MaxPlus.cvar.ClassIds_bezier_scale
ClassIds.BiFold = _MaxPlus.cvar.ClassIds_BiFold
ClassIds.Billboard = _MaxPlus.cvar.ClassIds_Billboard
ClassIds.Biped_Object = _MaxPlus.cvar.ClassIds_Biped_Object
ClassIds.Biped_SubAnim = _MaxPlus.cvar.ClassIds_Biped_SubAnim
ClassIds.bipedSystem = _MaxPlus.cvar.ClassIds_bipedSystem
ClassIds.BipSlave_Control = _MaxPlus.cvar.ClassIds_BipSlave_Control
ClassIds.Birth = _MaxPlus.cvar.ClassIds_Birth
ClassIds.Birth_File = _MaxPlus.cvar.ClassIds_Birth_File
ClassIds.Birth_Group = _MaxPlus.cvar.ClassIds_Birth_Group
ClassIds.Birth_Paint = _MaxPlus.cvar.ClassIds_Birth_Paint
ClassIds.Birth_Script = _MaxPlus.cvar.ClassIds_Birth_Script
ClassIds.Birth_Texture = _MaxPlus.cvar.ClassIds_Birth_Texture
ClassIds.BirthGrid = _MaxPlus.cvar.ClassIds_BirthGrid
ClassIds.BirthStream = _MaxPlus.cvar.ClassIds_BirthStream
ClassIds.Bitmap_Photometric_Paths = _MaxPlus.cvar.ClassIds_Bitmap_Photometric_Paths
ClassIds.Bitmaptexture = _MaxPlus.cvar.ClassIds_Bitmaptexture
ClassIds.Blackman = _MaxPlus.cvar.ClassIds_Blackman
ClassIds.Blend = _MaxPlus.cvar.ClassIds_Blend
ClassIds.Blendfilter = _MaxPlus.cvar.ClassIds_Blendfilter
ClassIds.BlendMap = _MaxPlus.cvar.ClassIds_BlendMap
ClassIds.BlendRenderElement = _MaxPlus.cvar.ClassIds_BlendRenderElement
ClassIds.Blinn = _MaxPlus.cvar.ClassIds_Blinn
ClassIds.Blizzard = _MaxPlus.cvar.ClassIds_Blizzard
ClassIds.BlobMesh = _MaxPlus.cvar.ClassIds_BlobMesh
ClassIds.Block = _MaxPlus.cvar.ClassIds_Block
ClassIds.Block_Control = _MaxPlus.cvar.ClassIds_Block_Control
ClassIds.Block_Manager_Wrapper = _MaxPlus.cvar.ClassIds_Block_Manager_Wrapper
ClassIds.BlockInstanceFilter = _MaxPlus.cvar.ClassIds_BlockInstanceFilter
ClassIds.blur = _MaxPlus.cvar.ClassIds_blur
ClassIds.BlurWind = _MaxPlus.cvar.ClassIds_BlurWind
ClassIds.BMP = _MaxPlus.cvar.ClassIds_BMP
ClassIds.Body_Cutter = _MaxPlus.cvar.ClassIds_Body_Cutter
ClassIds.Body_Object = _MaxPlus.cvar.ClassIds_Body_Object
ClassIds.Body_Utility = _MaxPlus.cvar.ClassIds_Body_Utility
ClassIds.Bomb = _MaxPlus.cvar.ClassIds_Bomb
ClassIds.Bombbinding = _MaxPlus.cvar.ClassIds_Bombbinding
ClassIds.Bone = _MaxPlus.cvar.ClassIds_Bone
ClassIds.BoneGeometry = _MaxPlus.cvar.ClassIds_BoneGeometry
ClassIds.Bones = _MaxPlus.cvar.ClassIds_Bones
ClassIds.Boolean2 = _MaxPlus.cvar.ClassIds_Boolean2
ClassIds.boolean_float = _MaxPlus.cvar.ClassIds_boolean_float
ClassIds.BoolPacket = _MaxPlus.cvar.ClassIds_BoolPacket
ClassIds.Box = _MaxPlus.cvar.ClassIds_Box
ClassIds.Box_2_Global_Utility = _MaxPlus.cvar.ClassIds_Box_2_Global_Utility
ClassIds.BoxGizmo = _MaxPlus.cvar.ClassIds_BoxGizmo
ClassIds.Bricks = _MaxPlus.cvar.ClassIds_Bricks
ClassIds.Bricks__3dsmax = _MaxPlus.cvar.ClassIds_Bricks__3dsmax
ClassIds.Brightness_and_Contrast = _MaxPlus.cvar.ClassIds_Brightness_and_Contrast
ClassIds.Bulge_Angle_Deformer = _MaxPlus.cvar.ClassIds_Bulge_Angle_Deformer
ClassIds.Bump__3dsmax = _MaxPlus.cvar.ClassIds_Bump__3dsmax
ClassIds.Bump_Basis__base = _MaxPlus.cvar.ClassIds_Bump_Basis__base
ClassIds.Bump_Capture__lume = _MaxPlus.cvar.ClassIds_Bump_Capture__lume
ClassIds.Bump_Combiner__adsktextureMap = _MaxPlus.cvar.ClassIds_Bump_Combiner__adsktextureMap
ClassIds.Bump_Map__base = _MaxPlus.cvar.ClassIds_Bump_Map__base
ClassIds.C_Ext = _MaxPlus.cvar.ClassIds_C_Ext
ClassIds.Cache = _MaxPlus.cvar.ClassIds_Cache
ClassIds.Cache_Disk = _MaxPlus.cvar.ClassIds_Cache_Disk
ClassIds.Cache_Selective = _MaxPlus.cvar.ClassIds_Cache_Selective
ClassIds.CacheFile = _MaxPlus.cvar.ClassIds_CacheFile
ClassIds.Caddy = _MaxPlus.cvar.ClassIds_Caddy
ClassIds.Camera_Culling = _MaxPlus.cvar.ClassIds_Camera_Culling
ClassIds.Camera_IMBlur = _MaxPlus.cvar.ClassIds_Camera_IMBlur
ClassIds.Camera_Map_Per_Pixel = _MaxPlus.cvar.ClassIds_Camera_Map_Per_Pixel
ClassIds.Camera_Match = _MaxPlus.cvar.ClassIds_Camera_Match
ClassIds.Camera_Tracker = _MaxPlus.cvar.ClassIds_Camera_Tracker
ClassIds.CameraMap = _MaxPlus.cvar.ClassIds_CameraMap
ClassIds.CameraMapSpaceWarp = _MaxPlus.cvar.ClassIds_CameraMapSpaceWarp
ClassIds.CamMatchDataCustAttrib = _MaxPlus.cvar.ClassIds_CamMatchDataCustAttrib
ClassIds.CamPerspCorrect = _MaxPlus.cvar.ClassIds_CamPerspCorrect
ClassIds.CamPoint = _MaxPlus.cvar.ClassIds_CamPoint
ClassIds.Cap_Holes = _MaxPlus.cvar.ClassIds_Cap_Holes
ClassIds.Capsule = _MaxPlus.cvar.ClassIds_Capsule
ClassIds.Captured_Object_State = _MaxPlus.cvar.ClassIds_Captured_Object_State
ClassIds.Car_Paint_Material__mi = _MaxPlus.cvar.ClassIds_Car_Paint_Material__mi
ClassIds.Car_Paint_Shader__mi = _MaxPlus.cvar.ClassIds_Car_Paint_Shader__mi
ClassIds.Casement = _MaxPlus.cvar.ClassIds_Casement
ClassIds.CATBone = _MaxPlus.cvar.ClassIds_CATBone
ClassIds.CATBoneData = _MaxPlus.cvar.ClassIds_CATBoneData
ClassIds.CATBoneDataMatrix3Controller = _MaxPlus.cvar.ClassIds_CATBoneDataMatrix3Controller
ClassIds.CATBoneSegTrans = _MaxPlus.cvar.ClassIds_CATBoneSegTrans
ClassIds.CATCollarBone = _MaxPlus.cvar.ClassIds_CATCollarBone
ClassIds.CATDigitSegTrans = _MaxPlus.cvar.ClassIds_CATDigitSegTrans
ClassIds.CATDummyMoveMask = _MaxPlus.cvar.ClassIds_CATDummyMoveMask
ClassIds.CATFootBend = _MaxPlus.cvar.ClassIds_CATFootBend
ClassIds.CATFootLift = _MaxPlus.cvar.ClassIds_CATFootLift
ClassIds.CATFootTrans2 = _MaxPlus.cvar.ClassIds_CATFootTrans2
ClassIds.CATGizmoTransform = _MaxPlus.cvar.ClassIds_CATGizmoTransform
ClassIds.CATHDPivotTrans = _MaxPlus.cvar.ClassIds_CATHDPivotTrans
ClassIds.CATHierarchyBranch = _MaxPlus.cvar.ClassIds_CATHierarchyBranch
ClassIds.CATHierarchyLeaf = _MaxPlus.cvar.ClassIds_CATHierarchyLeaf
ClassIds.CATHierarchyRoot = _MaxPlus.cvar.ClassIds_CATHierarchyRoot
ClassIds.CATHIPivotTrans = _MaxPlus.cvar.ClassIds_CATHIPivotTrans
ClassIds.Catia_V4_Import = _MaxPlus.cvar.ClassIds_Catia_V4_Import
ClassIds.Catia_V5_Import = _MaxPlus.cvar.ClassIds_Catia_V5_Import
ClassIds.CATKneeAngle = _MaxPlus.cvar.ClassIds_CATKneeAngle
ClassIds.CATLegWeight = _MaxPlus.cvar.ClassIds_CATLegWeight
ClassIds.CATLiftOffset = _MaxPlus.cvar.ClassIds_CATLiftOffset
ClassIds.CATLiftPlantMod = _MaxPlus.cvar.ClassIds_CATLiftPlantMod
ClassIds.CATLimbData2 = _MaxPlus.cvar.ClassIds_CATLimbData2
ClassIds.CATLimbData2FloatController = _MaxPlus.cvar.ClassIds_CATLimbData2FloatController
ClassIds.CATMonoGraph = _MaxPlus.cvar.ClassIds_CATMonoGraph
ClassIds.CATMotionHub2 = _MaxPlus.cvar.ClassIds_CATMotionHub2
ClassIds.CATMotionLayer = _MaxPlus.cvar.ClassIds_CATMotionLayer
ClassIds.CATMotionLimb = _MaxPlus.cvar.ClassIds_CATMotionLimb
ClassIds.CATMotionPlatform = _MaxPlus.cvar.ClassIds_CATMotionPlatform
ClassIds.CATMotionRot = _MaxPlus.cvar.ClassIds_CATMotionRot
ClassIds.CATMotionRotRotationController = _MaxPlus.cvar.ClassIds_CATMotionRotRotationController
ClassIds.CATMotionTail = _MaxPlus.cvar.ClassIds_CATMotionTail
ClassIds.CATMotionTailRot = _MaxPlus.cvar.ClassIds_CATMotionTailRot
ClassIds.Catmull_Rom = _MaxPlus.cvar.ClassIds_Catmull_Rom
ClassIds.CATMuscle = _MaxPlus.cvar.ClassIds_CATMuscle
ClassIds.CATParent = _MaxPlus.cvar.ClassIds_CATParent
ClassIds.CATParentTrans = _MaxPlus.cvar.ClassIds_CATParentTrans
ClassIds.CATPivotPos = _MaxPlus.cvar.ClassIds_CATPivotPos
ClassIds.CATPivotRot = _MaxPlus.cvar.ClassIds_CATPivotRot
ClassIds.CATPoint3 = _MaxPlus.cvar.ClassIds_CATPoint3
ClassIds.CATRigRootNodeCtrl = _MaxPlus.cvar.ClassIds_CATRigRootNodeCtrl
ClassIds.CATSpineData2 = _MaxPlus.cvar.ClassIds_CATSpineData2
ClassIds.CATSpineData2FloatController = _MaxPlus.cvar.ClassIds_CATSpineData2FloatController
ClassIds.CATSpineTrans2 = _MaxPlus.cvar.ClassIds_CATSpineTrans2
ClassIds.CATStepShape = _MaxPlus.cvar.ClassIds_CATStepShape
ClassIds.CATTransformOffset = _MaxPlus.cvar.ClassIds_CATTransformOffset
ClassIds.CATUnitsPosition = _MaxPlus.cvar.ClassIds_CATUnitsPosition
ClassIds.CATUnitsScale = _MaxPlus.cvar.ClassIds_CATUnitsScale
ClassIds.CATWeight = _MaxPlus.cvar.ClassIds_CATWeight
ClassIds.CATWeightShift = _MaxPlus.cvar.ClassIds_CATWeightShift
ClassIds.Cellular = _MaxPlus.cvar.ClassIds_Cellular
ClassIds.Cellular__3dsmax = _MaxPlus.cvar.ClassIds_Cellular__3dsmax
ClassIds.ChamferBox = _MaxPlus.cvar.ClassIds_ChamferBox
ClassIds.ChamferCyl = _MaxPlus.cvar.ClassIds_ChamferCyl
ClassIds.ChamferMod = _MaxPlus.cvar.ClassIds_ChamferMod
ClassIds.channel = _MaxPlus.cvar.ClassIds_channel
ClassIds.Channel_Info = _MaxPlus.cvar.ClassIds_Channel_Info
ClassIds.Character = _MaxPlus.cvar.ClassIds_Character
ClassIds.CharacterAssembly = _MaxPlus.cvar.ClassIds_CharacterAssembly
ClassIds.Checker = _MaxPlus.cvar.ClassIds_Checker
ClassIds.Checker__3dsmax = _MaxPlus.cvar.ClassIds_Checker__3dsmax
ClassIds.CIN = _MaxPlus.cvar.ClassIds_CIN
ClassIds.Circle = _MaxPlus.cvar.ClassIds_Circle
ClassIds.Clean_MultiMaterial = _MaxPlus.cvar.ClassIds_Clean_MultiMaterial
ClassIds.Clip_Associations = _MaxPlus.cvar.ClassIds_Clip_Associations
ClassIds.ClipAssigner = _MaxPlus.cvar.ClassIds_ClipAssigner
ClassIds.ClipState = _MaxPlus.cvar.ClassIds_ClipState
ClassIds.Clone_and_Align_Tool = _MaxPlus.cvar.ClassIds_Clone_and_Align_Tool
ClassIds.Cloth = _MaxPlus.cvar.ClassIds_Cloth
ClassIds.CMB = _MaxPlus.cvar.ClassIds_CMB
ClassIds.CogControl = _MaxPlus.cvar.ClassIds_CogControl
ClassIds.collapse = _MaxPlus.cvar.ClassIds_collapse
ClassIds.Collision = _MaxPlus.cvar.ClassIds_Collision
ClassIds.Collision_Spawn = _MaxPlus.cvar.ClassIds_Collision_Spawn
ClassIds.Color_Alpha__base = _MaxPlus.cvar.ClassIds_Color_Alpha__base
ClassIds.Color_Average__base = _MaxPlus.cvar.ClassIds_Color_Average__base
ClassIds.Color_Balance = _MaxPlus.cvar.ClassIds_Color_Balance
ClassIds.Color_Clipboard = _MaxPlus.cvar.ClassIds_Color_Clipboard
ClassIds.Color_Correction = _MaxPlus.cvar.ClassIds_Color_Correction
ClassIds.Color_Correction__adsk = _MaxPlus.cvar.ClassIds_Color_Correction__adsk
ClassIds.Color_Intensity__base = _MaxPlus.cvar.ClassIds_Color_Intensity__base
ClassIds.Color_Interpolate__base = _MaxPlus.cvar.ClassIds_Color_Interpolate__base
ClassIds.Color_Mix__base = _MaxPlus.cvar.ClassIds_Color_Mix__base
ClassIds.Color_Override_Ray_Type_Switcher = _MaxPlus.cvar.ClassIds_Color_Override_Ray_Type_Switcher
ClassIds.Color_RGB = _MaxPlus.cvar.ClassIds_Color_RGB
ClassIds.Color_RGBA = _MaxPlus.cvar.ClassIds_Color_RGBA
ClassIds.Color_Spread__base = _MaxPlus.cvar.ClassIds_Color_Spread__base
ClassIds.ColorCorrection__3dsmax = _MaxPlus.cvar.ClassIds_ColorCorrection__3dsmax
ClassIds.colorReferenceTarget = _MaxPlus.cvar.ClassIds_colorReferenceTarget
ClassIds.COM_DCOM_Server_Control = _MaxPlus.cvar.ClassIds_COM_DCOM_Server_Control
ClassIds.Combi__contour = _MaxPlus.cvar.ClassIds_Combi__contour
ClassIds.Combustion = _MaxPlus.cvar.ClassIds_Combustion
ClassIds.Compass = _MaxPlus.cvar.ClassIds_Compass
ClassIds.CompleteMap = _MaxPlus.cvar.ClassIds_CompleteMap
ClassIds.Component_Falloff = _MaxPlus.cvar.ClassIds_Component_Falloff
ClassIds.Component_Reflection = _MaxPlus.cvar.ClassIds_Component_Reflection
ClassIds.Composite__3dsmax = _MaxPlus.cvar.ClassIds_Composite__3dsmax
ClassIds.compositematerial = _MaxPlus.cvar.ClassIds_compositematerial
ClassIds.CompositeTexturemap = _MaxPlus.cvar.ClassIds_CompositeTexturemap
ClassIds.Condition = _MaxPlus.cvar.ClassIds_Condition
ClassIds.Cone = _MaxPlus.cvar.ClassIds_Cone
ClassIds.Cone_Angle = _MaxPlus.cvar.ClassIds_Cone_Angle
ClassIds.Conform = _MaxPlus.cvar.ClassIds_Conform
ClassIds.ConformSpaceWarp = _MaxPlus.cvar.ClassIds_ConformSpaceWarp
ClassIds.Connect = _MaxPlus.cvar.ClassIds_Connect
ClassIds.Container = _MaxPlus.cvar.ClassIds_Container
ClassIds.Contour_Composite__contour = _MaxPlus.cvar.ClassIds_Contour_Composite__contour
ClassIds.Contour_Contrast_Function_Levels__contour = _MaxPlus.cvar.ClassIds_Contour_Contrast_Function_Levels__contour
ClassIds.Contour_Contrast_Function_Simple__contour = _MaxPlus.cvar.ClassIds_Contour_Contrast_Function_Simple__contour
ClassIds.Contour_Data_Packet = _MaxPlus.cvar.ClassIds_Contour_Data_Packet
ClassIds.Contour_Only__contour = _MaxPlus.cvar.ClassIds_Contour_Only__contour
ClassIds.Contour_PS__contour = _MaxPlus.cvar.ClassIds_Contour_PS__contour
ClassIds.contour_shader_maxcolor = _MaxPlus.cvar.ClassIds_contour_shader_maxcolor
ClassIds.contour_shader_silhouette = _MaxPlus.cvar.ClassIds_contour_shader_silhouette
ClassIds.Contour_Store_Function__contour = _MaxPlus.cvar.ClassIds_Contour_Store_Function__contour
ClassIds.Contour_Store_Function_Simple__contour = _MaxPlus.cvar.ClassIds_Contour_Store_Function_Simple__contour
ClassIds.Contour_Translator = _MaxPlus.cvar.ClassIds_Contour_Translator
ClassIds.contrast = _MaxPlus.cvar.ClassIds_contrast
ClassIds.ControlContainer = _MaxPlus.cvar.ClassIds_ControlContainer
ClassIds.ControlContainerGeometry = _MaxPlus.cvar.ClassIds_ControlContainerGeometry
ClassIds.Conversion_Color_To_Float = _MaxPlus.cvar.ClassIds_Conversion_Color_To_Float
ClassIds.Conversion_Float_To_Color = _MaxPlus.cvar.ClassIds_Conversion_Float_To_Color
ClassIds.Convert = _MaxPlus.cvar.ClassIds_Convert
ClassIds.Cook_Variable = _MaxPlus.cvar.ClassIds_Cook_Variable
ClassIds.Cookie = _MaxPlus.cvar.ClassIds_Cookie
ClassIds.Copy_Out = _MaxPlus.cvar.ClassIds_Copy_Out
ClassIds.Crash_Utility_Plugin = _MaxPlus.cvar.ClassIds_Crash_Utility_Plugin
ClassIds.CreaseMod = _MaxPlus.cvar.ClassIds_CreaseMod
ClassIds.CreaseSetMod = _MaxPlus.cvar.ClassIds_CreaseSetMod
ClassIds.Create_Out_of_Range_Keys = _MaxPlus.cvar.ClassIds_Create_Out_of_Range_Keys
ClassIds.CrosFade = _MaxPlus.cvar.ClassIds_CrosFade
ClassIds.CrossSection = _MaxPlus.cvar.ClassIds_CrossSection
ClassIds.Crowd = _MaxPlus.cvar.ClassIds_Crowd
ClassIds.CrowdAssignment = _MaxPlus.cvar.ClassIds_CrowdAssignment
ClassIds.CrowdState = _MaxPlus.cvar.ClassIds_CrowdState
ClassIds.CrowdTeam = _MaxPlus.cvar.ClassIds_CrowdTeam
ClassIds.CrowdTransition = _MaxPlus.cvar.ClassIds_CrowdTransition
ClassIds.cubic = _MaxPlus.cvar.ClassIds_cubic
ClassIds.Cubic_Morph_Controller = _MaxPlus.cvar.ClassIds_Cubic_Morph_Controller
ClassIds.Curvature__contour = _MaxPlus.cvar.ClassIds_Curvature__contour
ClassIds.CurveClass = _MaxPlus.cvar.ClassIds_CurveClass
ClassIds.CurveControl = _MaxPlus.cvar.ClassIds_CurveControl
ClassIds.CustAttribContainer = _MaxPlus.cvar.ClassIds_CustAttribContainer
ClassIds.CV_Curve = _MaxPlus.cvar.ClassIds_CV_Curve
ClassIds.CV_Curveshape = _MaxPlus.cvar.ClassIds_CV_Curveshape
ClassIds.CV_Surf = _MaxPlus.cvar.ClassIds_CV_Surf
ClassIds.CylGizmo = _MaxPlus.cvar.ClassIds_CylGizmo
ClassIds.Cylinder = _MaxPlus.cvar.ClassIds_Cylinder
ClassIds.D6Joint = _MaxPlus.cvar.ClassIds_D6Joint
ClassIds.DAEEXP = _MaxPlus.cvar.ClassIds_DAEEXP
ClassIds.DAEIMP = _MaxPlus.cvar.ClassIds_DAEIMP
ClassIds.Damper = _MaxPlus.cvar.ClassIds_Damper
ClassIds.Data_Icon = _MaxPlus.cvar.ClassIds_Data_Icon
ClassIds.Data_Operator = _MaxPlus.cvar.ClassIds_Data_Operator
ClassIds.Data_Test = _MaxPlus.cvar.ClassIds_Data_Test
ClassIds.DataOpDeleteCatcher = _MaxPlus.cvar.ClassIds_DataOpDeleteCatcher
ClassIds.DataViewGroup = _MaxPlus.cvar.ClassIds_DataViewGroup
ClassIds.Daylight = _MaxPlus.cvar.ClassIds_Daylight
ClassIds.DaylightAssemblyHead = _MaxPlus.cvar.ClassIds_DaylightAssemblyHead
ClassIds.DDS = _MaxPlus.cvar.ClassIds_DDS
ClassIds.Default_Color_Picker = _MaxPlus.cvar.ClassIds_Default_Color_Picker
ClassIds.Default_Scanline_Renderer = _MaxPlus.cvar.ClassIds_Default_Scanline_Renderer
ClassIds.Default_Sound = _MaxPlus.cvar.ClassIds_Default_Sound
ClassIds.Deflector = _MaxPlus.cvar.ClassIds_Deflector
ClassIds.Deflectorbinding = _MaxPlus.cvar.ClassIds_Deflectorbinding
ClassIds.Deform_Curve = _MaxPlus.cvar.ClassIds_Deform_Curve
ClassIds.Deformable_gPoly = _MaxPlus.cvar.ClassIds_Deformable_gPoly
ClassIds.Delegate = _MaxPlus.cvar.ClassIds_Delegate
ClassIds.DeleteMesh = _MaxPlus.cvar.ClassIds_DeleteMesh
ClassIds.DeleteParticles = _MaxPlus.cvar.ClassIds_DeleteParticles
ClassIds.DeletePatch = _MaxPlus.cvar.ClassIds_DeletePatch
ClassIds.DeleteSplineModifier = _MaxPlus.cvar.ClassIds_DeleteSplineModifier
ClassIds.Dent = _MaxPlus.cvar.ClassIds_Dent
ClassIds.Dent__3dsmax = _MaxPlus.cvar.ClassIds_Dent__3dsmax
ClassIds.Depth_Fade__contour = _MaxPlus.cvar.ClassIds_Depth_Fade__contour
ClassIds.Depth_of_Field = _MaxPlus.cvar.ClassIds_Depth_of_Field
ClassIds.Depth_of_Field___Bokeh = _MaxPlus.cvar.ClassIds_Depth_of_Field___Bokeh
ClassIds.Depth_of_Field__mental_ray = _MaxPlus.cvar.ClassIds_Depth_of_Field__mental_ray
ClassIds.Depth_of_FieldMPassCamEffect = _MaxPlus.cvar.ClassIds_Depth_of_FieldMPassCamEffect
ClassIds.DGS_Material__3dsmax = _MaxPlus.cvar.ClassIds_DGS_Material__3dsmax
ClassIds.DGS_Material__physics = _MaxPlus.cvar.ClassIds_DGS_Material__physics
ClassIds.DGS_Material__physics_phen = _MaxPlus.cvar.ClassIds_DGS_Material__physics_phen
ClassIds.DGS_Material_Photon__3dsmax = _MaxPlus.cvar.ClassIds_DGS_Material_Photon__3dsmax
ClassIds.DGS_Material_Photon__physics = _MaxPlus.cvar.ClassIds_DGS_Material_Photon__physics
ClassIds.DialogMonitor = _MaxPlus.cvar.ClassIds_DialogMonitor
ClassIds.Dielectric__base = _MaxPlus.cvar.ClassIds_Dielectric__base
ClassIds.Dielectric_Material__3dsmax = _MaxPlus.cvar.ClassIds_Dielectric_Material__3dsmax
ClassIds.Dielectric_Material__physics = _MaxPlus.cvar.ClassIds_Dielectric_Material__physics
ClassIds.Dielectric_Material_Photon__3dsmax = _MaxPlus.cvar.ClassIds_Dielectric_Material_Photon__3dsmax
ClassIds.Dielectric_Material_Photon__physics = _MaxPlus.cvar.ClassIds_Dielectric_Material_Photon__physics
ClassIds.Diffuse = _MaxPlus.cvar.ClassIds_Diffuse
ClassIds.diffuseMap = _MaxPlus.cvar.ClassIds_diffuseMap
ClassIds.DigitData = _MaxPlus.cvar.ClassIds_DigitData
ClassIds.DigitDataFloatController = _MaxPlus.cvar.ClassIds_DigitDataFloatController
ClassIds.Directionallight = _MaxPlus.cvar.ClassIds_Directionallight
ClassIds.DirectX_9_Shader = _MaxPlus.cvar.ClassIds_DirectX_9_Shader
ClassIds.DirectX_9_ShaderReferenceTarget = _MaxPlus.cvar.ClassIds_DirectX_9_ShaderReferenceTarget
ClassIds.DirectX_Shader_Default = _MaxPlus.cvar.ClassIds_DirectX_Shader_Default
ClassIds.Discretizator = _MaxPlus.cvar.ClassIds_Discretizator
ClassIds.Disp_Approx = _MaxPlus.cvar.ClassIds_Disp_Approx
ClassIds.Displace = _MaxPlus.cvar.ClassIds_Displace
ClassIds.Displace_Mesh = _MaxPlus.cvar.ClassIds_Displace_Mesh
ClassIds.Displace_NURBS = _MaxPlus.cvar.ClassIds_Displace_NURBS
ClassIds.Displacebinding = _MaxPlus.cvar.ClassIds_Displacebinding
ClassIds.Displacement_3D__3dsmax = _MaxPlus.cvar.ClassIds_Displacement_3D__3dsmax
ClassIds.Display_Script = _MaxPlus.cvar.ClassIds_Display_Script
ClassIds.DisplayData = _MaxPlus.cvar.ClassIds_DisplayData
ClassIds.DisplayParticles = _MaxPlus.cvar.ClassIds_DisplayParticles
ClassIds.Distortion__lume = _MaxPlus.cvar.ClassIds_Distortion__lume
ClassIds.Donut = _MaxPlus.cvar.ClassIds_Donut
ClassIds.DoublePacket = _MaxPlus.cvar.ClassIds_DoublePacket
ClassIds.DoubleSided = _MaxPlus.cvar.ClassIds_DoubleSided
ClassIds.Drag = _MaxPlus.cvar.ClassIds_Drag
ClassIds.DragMod = _MaxPlus.cvar.ClassIds_DragMod
ClassIds.Dummy = _MaxPlus.cvar.ClassIds_Dummy
ClassIds.DummyRadMapClass = _MaxPlus.cvar.ClassIds_DummyRadMapClass
ClassIds.DWF_Exporter = _MaxPlus.cvar.ClassIds_DWF_Exporter
ClassIds.DWG_Export = _MaxPlus.cvar.ClassIds_DWG_Export
ClassIds.DWG_ExportExporterPlugin = _MaxPlus.cvar.ClassIds_DWG_ExportExporterPlugin
ClassIds.DwgAlwaysEqualFilter = _MaxPlus.cvar.ClassIds_DwgAlwaysEqualFilter
ClassIds.DwgBlockDefinitionFilter = _MaxPlus.cvar.ClassIds_DwgBlockDefinitionFilter
ClassIds.DwgBlockInsAsNodeHierarchyFilter = _MaxPlus.cvar.ClassIds_DwgBlockInsAsNodeHierarchyFilter
ClassIds.DwgBlockInsertFilter = _MaxPlus.cvar.ClassIds_DwgBlockInsertFilter
ClassIds.DwgCameraPacket = _MaxPlus.cvar.ClassIds_DwgCameraPacket
ClassIds.DwgColorFilter = _MaxPlus.cvar.ClassIds_DwgColorFilter
ClassIds.DwgColorMaterialPacket = _MaxPlus.cvar.ClassIds_DwgColorMaterialPacket
ClassIds.DwgColorSplitByMaterialFilter = _MaxPlus.cvar.ClassIds_DwgColorSplitByMaterialFilter
ClassIds.DwgEnhancedLayerFilter = _MaxPlus.cvar.ClassIds_DwgEnhancedLayerFilter
ClassIds.DwgEnhColorPacket = _MaxPlus.cvar.ClassIds_DwgEnhColorPacket
ClassIds.DwgEnhLayerPacket = _MaxPlus.cvar.ClassIds_DwgEnhLayerPacket
ClassIds.DwgEntityPacket = _MaxPlus.cvar.ClassIds_DwgEntityPacket
ClassIds.DwgExtrusionFilter = _MaxPlus.cvar.ClassIds_DwgExtrusionFilter
ClassIds.DwgExtrusionPacket = _MaxPlus.cvar.ClassIds_DwgExtrusionPacket
ClassIds.DwgFactory = _MaxPlus.cvar.ClassIds_DwgFactory
ClassIds.DwgFilterList = _MaxPlus.cvar.ClassIds_DwgFilterList
ClassIds.DwgGridPacket = _MaxPlus.cvar.ClassIds_DwgGridPacket
ClassIds.DwgHandleFilter = _MaxPlus.cvar.ClassIds_DwgHandleFilter
ClassIds.DwgLayerFilter = _MaxPlus.cvar.ClassIds_DwgLayerFilter
ClassIds.DwgLayerTable = _MaxPlus.cvar.ClassIds_DwgLayerTable
ClassIds.DwgLightPacket = _MaxPlus.cvar.ClassIds_DwgLightPacket
ClassIds.DwgMaterialFilter = _MaxPlus.cvar.ClassIds_DwgMaterialFilter
ClassIds.DwgMaterialFilterReferenceMaker = _MaxPlus.cvar.ClassIds_DwgMaterialFilterReferenceMaker
ClassIds.DwgMaterialPacket = _MaxPlus.cvar.ClassIds_DwgMaterialPacket
ClassIds.DwgMaterialPacketReferenceMaker = _MaxPlus.cvar.ClassIds_DwgMaterialPacketReferenceMaker
ClassIds.DwgPluginTranslatorForwardingFilter = _MaxPlus.cvar.ClassIds_DwgPluginTranslatorForwardingFilter
ClassIds.DwgPointTrans = _MaxPlus.cvar.ClassIds_DwgPointTrans
ClassIds.DwgSunPacket = _MaxPlus.cvar.ClassIds_DwgSunPacket
ClassIds.DwgTableEntryPacket = _MaxPlus.cvar.ClassIds_DwgTableEntryPacket
ClassIds.DwgTableRecord = _MaxPlus.cvar.ClassIds_DwgTableRecord
ClassIds.Ease = _MaxPlus.cvar.ClassIds_Ease
ClassIds.Edge__lume = _MaxPlus.cvar.ClassIds_Edge__lume
ClassIds.Edge_Shadow__lume = _MaxPlus.cvar.ClassIds_Edge_Shadow__lume
ClassIds.Edit_Mesh = _MaxPlus.cvar.ClassIds_Edit_Mesh
ClassIds.Edit_Normals = _MaxPlus.cvar.ClassIds_Edit_Normals
ClassIds.Edit_Patch = _MaxPlus.cvar.ClassIds_Edit_Patch
ClassIds.Edit_Poly = _MaxPlus.cvar.ClassIds_Edit_Poly
ClassIds.Edit_Spline = _MaxPlus.cvar.ClassIds_Edit_Spline
ClassIds.Editable_mesh = _MaxPlus.cvar.ClassIds_Editable_mesh
ClassIds.Editable_Patch = _MaxPlus.cvar.ClassIds_Editable_Patch
ClassIds.Editable_Poly = _MaxPlus.cvar.ClassIds_Editable_Poly
ClassIds.Egg = _MaxPlus.cvar.ClassIds_Egg
ClassIds.Ellipse = _MaxPlus.cvar.ClassIds_Ellipse
ClassIds.Empty_Flow = _MaxPlus.cvar.ClassIds_Empty_Flow
ClassIds.EmptyModifier = _MaxPlus.cvar.ClassIds_EmptyModifier
ClassIds.EmptyModifier_Old = _MaxPlus.cvar.ClassIds_EmptyModifier_Old
ClassIds.Emulator = _MaxPlus.cvar.ClassIds_Emulator
ClassIds.Environment__3dsmax = _MaxPlus.cvar.ClassIds_Environment__3dsmax
ClassIds.Environment_Background_Camera_Map__mi = _MaxPlus.cvar.ClassIds_Environment_Background_Camera_Map__mi
ClassIds.Environment_Background_Switcher__mi = _MaxPlus.cvar.ClassIds_Environment_Background_Switcher__mi
ClassIds.Environment_Blur = _MaxPlus.cvar.ClassIds_Environment_Blur
ClassIds.Environment_Probe_Chrome_Ball__mi = _MaxPlus.cvar.ClassIds_Environment_Probe_Chrome_Ball__mi
ClassIds.Environment_Probe_Gray_Ball__mi = _MaxPlus.cvar.ClassIds_Environment_Probe_Gray_Ball__mi
ClassIds.EPS_Image = _MaxPlus.cvar.ClassIds_EPS_Image
ClassIds.Euler_Filter = _MaxPlus.cvar.ClassIds_Euler_Filter
ClassIds.Euler_XYZ = _MaxPlus.cvar.ClassIds_Euler_XYZ
ClassIds.Event = _MaxPlus.cvar.ClassIds_Event
ClassIds.ExportHTR = _MaxPlus.cvar.ClassIds_ExportHTR
ClassIds.Expose_Euler_Control = _MaxPlus.cvar.ClassIds_Expose_Euler_Control
ClassIds.Expose_Float_Control = _MaxPlus.cvar.ClassIds_Expose_Float_Control
ClassIds.Expose_Point3_Control = _MaxPlus.cvar.ClassIds_Expose_Point3_Control
ClassIds.ExposeTm = _MaxPlus.cvar.ClassIds_ExposeTm
ClassIds.Express_Save = _MaxPlus.cvar.ClassIds_Express_Save
ClassIds.Extrude = _MaxPlus.cvar.ClassIds_Extrude
ClassIds.Facade__lume = _MaxPlus.cvar.ClassIds_Facade__lume
ClassIds.Face_Extrude = _MaxPlus.cvar.ClassIds_Face_Extrude
ClassIds.Faces_Orientation = _MaxPlus.cvar.ClassIds_Faces_Orientation
ClassIds.Factor_Color__contour = _MaxPlus.cvar.ClassIds_Factor_Color__contour
ClassIds.Fade = _MaxPlus.cvar.ClassIds_Fade
ClassIds.falloff = _MaxPlus.cvar.ClassIds_falloff
ClassIds.Falloff2__3dsmax = _MaxPlus.cvar.ClassIds_Falloff2__3dsmax
ClassIds.Falloff__3dsmax = _MaxPlus.cvar.ClassIds_Falloff__3dsmax
ClassIds.Falloff_Manipulator = _MaxPlus.cvar.ClassIds_Falloff_Manipulator
ClassIds.fallofftextureMap = _MaxPlus.cvar.ClassIds_fallofftextureMap
ClassIds.FBXEXP = _MaxPlus.cvar.ClassIds_FBXEXP
ClassIds.FBXIMP = _MaxPlus.cvar.ClassIds_FBXIMP
ClassIds.FbxMaxByMaterialFilter = _MaxPlus.cvar.ClassIds_FbxMaxByMaterialFilter
ClassIds.FbxMaxByObjectFilter = _MaxPlus.cvar.ClassIds_FbxMaxByObjectFilter
ClassIds.FbxMaxByRevitCategoryFilter = _MaxPlus.cvar.ClassIds_FbxMaxByRevitCategoryFilter
ClassIds.FbxMaxByRevitTypeFilter = _MaxPlus.cvar.ClassIds_FbxMaxByRevitTypeFilter
ClassIds.FbxMaxFactory = _MaxPlus.cvar.ClassIds_FbxMaxFactory
ClassIds.FbxMaxFilterList = _MaxPlus.cvar.ClassIds_FbxMaxFilterList
ClassIds.FbxMaxObjTranslator = _MaxPlus.cvar.ClassIds_FbxMaxObjTranslator
ClassIds.FbxMaxOneObjectFilter = _MaxPlus.cvar.ClassIds_FbxMaxOneObjectFilter
ClassIds.FbxMaxRevitFactory = _MaxPlus.cvar.ClassIds_FbxMaxRevitFactory
ClassIds.FbxMaxTableRecord = _MaxPlus.cvar.ClassIds_FbxMaxTableRecord
ClassIds.FbxMaxTableRecordReferenceMaker = _MaxPlus.cvar.ClassIds_FbxMaxTableRecordReferenceMaker
ClassIds.FbxMaxWrapper = _MaxPlus.cvar.ClassIds_FbxMaxWrapper
ClassIds.FFD_2x2x2 = _MaxPlus.cvar.ClassIds_FFD_2x2x2
ClassIds.FFD_3x3x3 = _MaxPlus.cvar.ClassIds_FFD_3x3x3
ClassIds.FFD_4x4x4 = _MaxPlus.cvar.ClassIds_FFD_4x4x4
ClassIds.FFD_Binding = _MaxPlus.cvar.ClassIds_FFD_Binding
ClassIds.FFD_Select = _MaxPlus.cvar.ClassIds_FFD_Select
ClassIds.FFDBox = _MaxPlus.cvar.ClassIds_FFDBox
ClassIds.FFDCyl = _MaxPlus.cvar.ClassIds_FFDCyl
ClassIds.File_Link_Manager = _MaxPlus.cvar.ClassIds_File_Link_Manager
ClassIds.File_Output = _MaxPlus.cvar.ClassIds_File_Output
ClassIds.FileLink_LinkTable = _MaxPlus.cvar.ClassIds_FileLink_LinkTable
ClassIds.FileLinkAsDwgImporter = _MaxPlus.cvar.ClassIds_FileLinkAsDwgImporter
ClassIds.Fillet_Chamfer = _MaxPlus.cvar.ClassIds_Fillet_Chamfer
ClassIds.Film_Grain = _MaxPlus.cvar.ClassIds_Film_Grain
ClassIds.Filter_kernel_plug_in_not_found = _MaxPlus.cvar.ClassIds_Filter_kernel_plug_in_not_found
ClassIds.Find_Target = _MaxPlus.cvar.ClassIds_Find_Target
ClassIds.Fire_Effect = _MaxPlus.cvar.ClassIds_Fire_Effect
ClassIds.Fire_Effect__3dsmax = _MaxPlus.cvar.ClassIds_Fire_Effect__3dsmax
ClassIds.Fix_Ambient = _MaxPlus.cvar.ClassIds_Fix_Ambient
ClassIds.Fixed = _MaxPlus.cvar.ClassIds_Fixed
ClassIds.Flat_Mirror = _MaxPlus.cvar.ClassIds_Flat_Mirror
ClassIds.Flat_Mirror__3dsmax = _MaxPlus.cvar.ClassIds_Flat_Mirror__3dsmax
ClassIds.Flex = _MaxPlus.cvar.ClassIds_Flex
ClassIds.Flight_Studio = _MaxPlus.cvar.ClassIds_Flight_Studio
ClassIds.Flight_Studio_Bitmap_Class_Name = _MaxPlus.cvar.ClassIds_Flight_Studio_Bitmap_Class_Name
ClassIds.Flipped_UVW_Faces = _MaxPlus.cvar.ClassIds_Flipped_UVW_Faces
ClassIds.Float_Expression = _MaxPlus.cvar.ClassIds_Float_Expression
ClassIds.Float_Layer = _MaxPlus.cvar.ClassIds_Float_Layer
ClassIds.float_limit = _MaxPlus.cvar.ClassIds_float_limit
ClassIds.float_list = _MaxPlus.cvar.ClassIds_float_list
ClassIds.float_ListDummyEntry = _MaxPlus.cvar.ClassIds_float_ListDummyEntry
ClassIds.Float_Mixer_Controller = _MaxPlus.cvar.ClassIds_Float_Mixer_Controller
ClassIds.Float_Motion_Capture = _MaxPlus.cvar.ClassIds_Float_Motion_Capture
ClassIds.Float_Reactor = _MaxPlus.cvar.ClassIds_Float_Reactor
ClassIds.float_script = _MaxPlus.cvar.ClassIds_float_script
ClassIds.Float_Wire = _MaxPlus.cvar.ClassIds_Float_Wire
ClassIds.FloatPacket = _MaxPlus.cvar.ClassIds_FloatPacket
ClassIds.Flow = _MaxPlus.cvar.ClassIds_Flow
ClassIds.FltGUP = _MaxPlus.cvar.ClassIds_FltGUP
ClassIds.FltImport = _MaxPlus.cvar.ClassIds_FltImport
ClassIds.Fog = _MaxPlus.cvar.ClassIds_Fog
ClassIds.Fog__3dsmax = _MaxPlus.cvar.ClassIds_Fog__3dsmax
ClassIds.FogHelper = _MaxPlus.cvar.ClassIds_FogHelper
ClassIds.Foliage = _MaxPlus.cvar.ClassIds_Foliage
ClassIds.FoliagetextureMap = _MaxPlus.cvar.ClassIds_FoliagetextureMap
ClassIds.Follow_Bank = _MaxPlus.cvar.ClassIds_Follow_Bank
ClassIds.Footsteps = _MaxPlus.cvar.ClassIds_Footsteps
ClassIds.Force = _MaxPlus.cvar.ClassIds_Force
ClassIds.Frame_Fade__contour = _MaxPlus.cvar.ClassIds_Frame_Fade__contour
ClassIds.Free_Area = _MaxPlus.cvar.ClassIds_Free_Area
ClassIds.Free_Cylinder = _MaxPlus.cvar.ClassIds_Free_Cylinder
ClassIds.Free_Disc = _MaxPlus.cvar.ClassIds_Free_Disc
ClassIds.Free_Light = _MaxPlus.cvar.ClassIds_Free_Light
ClassIds.Free_Linear = _MaxPlus.cvar.ClassIds_Free_Linear
ClassIds.Free_Sphere = _MaxPlus.cvar.ClassIds_Free_Sphere
ClassIds.Freecamera = _MaxPlus.cvar.ClassIds_Freecamera
ClassIds.freeSpot = _MaxPlus.cvar.ClassIds_freeSpot
ClassIds.FunctionReferenceTarget = _MaxPlus.cvar.ClassIds_FunctionReferenceTarget
ClassIds.Garment_Maker = _MaxPlus.cvar.ClassIds_Garment_Maker
ClassIds.Gengon = _MaxPlus.cvar.ClassIds_Gengon
ClassIds.Geo_Cone__base = _MaxPlus.cvar.ClassIds_Geo_Cone__base
ClassIds.Geo_Cube__base = _MaxPlus.cvar.ClassIds_Geo_Cube__base
ClassIds.Geo_Cylinder__base = _MaxPlus.cvar.ClassIds_Geo_Cylinder__base
ClassIds.Geo_Instance__base = _MaxPlus.cvar.ClassIds_Geo_Instance__base
ClassIds.Geo_Instnace_mlist__base = _MaxPlus.cvar.ClassIds_Geo_Instnace_mlist__base
ClassIds.Geo_Plane__base = _MaxPlus.cvar.ClassIds_Geo_Plane__base
ClassIds.Geo_Sphere__base = _MaxPlus.cvar.ClassIds_Geo_Sphere__base
ClassIds.Geo_Torus__base = _MaxPlus.cvar.ClassIds_Geo_Torus__base
ClassIds.geometryReferenceTarget = _MaxPlus.cvar.ClassIds_geometryReferenceTarget
ClassIds.GeoSphere = _MaxPlus.cvar.ClassIds_GeoSphere
ClassIds.GIF = _MaxPlus.cvar.ClassIds_GIF
ClassIds.Glare__lume = _MaxPlus.cvar.ClassIds_Glare__lume
ClassIds.GlaretextureMap = _MaxPlus.cvar.ClassIds_GlaretextureMap
ClassIds.Glass__lume = _MaxPlus.cvar.ClassIds_Glass__lume
ClassIds.Glass__physics_phen = _MaxPlus.cvar.ClassIds_Glass__physics_phen
ClassIds.Global_Clip_Associations = _MaxPlus.cvar.ClassIds_Global_Clip_Associations
ClassIds.Global_Container = _MaxPlus.cvar.ClassIds_Global_Container
ClassIds.Global_Motion_Clip = _MaxPlus.cvar.ClassIds_Global_Motion_Clip
ClassIds.Glow__lume = _MaxPlus.cvar.ClassIds_Glow__lume
ClassIds.Glow_Element = _MaxPlus.cvar.ClassIds_Glow_Element
ClassIds.Go_To_Rotation = _MaxPlus.cvar.ClassIds_Go_To_Rotation
ClassIds.Gradient = _MaxPlus.cvar.ClassIds_Gradient
ClassIds.Gradient__3dsmax = _MaxPlus.cvar.ClassIds_Gradient__3dsmax
ClassIds.Gradient_GradCtlData = _MaxPlus.cvar.ClassIds_Gradient_GradCtlData
ClassIds.Gradient_Ramp = _MaxPlus.cvar.ClassIds_Gradient_Ramp
ClassIds.Gradient_Ramp__3dsmax = _MaxPlus.cvar.ClassIds_Gradient_Ramp__3dsmax
ClassIds.gravity = _MaxPlus.cvar.ClassIds_gravity
ClassIds.Gravitybinding = _MaxPlus.cvar.ClassIds_Gravitybinding
ClassIds.grid = _MaxPlus.cvar.ClassIds_grid
ClassIds.Group_Operator = _MaxPlus.cvar.ClassIds_Group_Operator
ClassIds.Group_Select = _MaxPlus.cvar.ClassIds_Group_Select
ClassIds.Hair_Atmospheric = _MaxPlus.cvar.ClassIds_Hair_Atmospheric
ClassIds.Hair_Atmospheric_Gizmo = _MaxPlus.cvar.ClassIds_Hair_Atmospheric_Gizmo
ClassIds.Hair_GI_Atmospheric = _MaxPlus.cvar.ClassIds_Hair_GI_Atmospheric
ClassIds.Hair_Instanced_Geometry_MR_Shader = _MaxPlus.cvar.ClassIds_Hair_Instanced_Geometry_MR_Shader
ClassIds.Hair_MR_Geom_Shader = _MaxPlus.cvar.ClassIds_Hair_MR_Geom_Shader
ClassIds.Hair_MR_Object = _MaxPlus.cvar.ClassIds_Hair_MR_Object
ClassIds.HairEffect = _MaxPlus.cvar.ClassIds_HairEffect
ClassIds.HairLightAttr = _MaxPlus.cvar.ClassIds_HairLightAttr
ClassIds.HairMaxUtility = _MaxPlus.cvar.ClassIds_HairMaxUtility
ClassIds.HairMod = _MaxPlus.cvar.ClassIds_HairMod
ClassIds.HairRenderElement = _MaxPlus.cvar.ClassIds_HairRenderElement
ClassIds.HalfRound = _MaxPlus.cvar.ClassIds_HalfRound
ClassIds.HdlTrans = _MaxPlus.cvar.ClassIds_HdlTrans
ClassIds.HDR_Image_Motion_Blur__mi = _MaxPlus.cvar.ClassIds_HDR_Image_Motion_Blur__mi
ClassIds.HDRI = _MaxPlus.cvar.ClassIds_HDRI
ClassIds.Hedra = _MaxPlus.cvar.ClassIds_Hedra
ClassIds.Height_Map_Displacement__3dsmax = _MaxPlus.cvar.ClassIds_Height_Map_Displacement__3dsmax
ClassIds.HeightMap = _MaxPlus.cvar.ClassIds_HeightMap
ClassIds.Helix = _MaxPlus.cvar.ClassIds_Helix
ClassIds.HiddenUnselectedNodeCache = _MaxPlus.cvar.ClassIds_HiddenUnselectedNodeCache
ClassIds.Hose = _MaxPlus.cvar.ClassIds_Hose
ClassIds.Hotspot_Manip = _MaxPlus.cvar.ClassIds_Hotspot_Manip
ClassIds.HSDS = _MaxPlus.cvar.ClassIds_HSDS
ClassIds.HSUtil = _MaxPlus.cvar.ClassIds_HSUtil
ClassIds.HubObject = _MaxPlus.cvar.ClassIds_HubObject
ClassIds.HubTrans = _MaxPlus.cvar.ClassIds_HubTrans
ClassIds.icon = _MaxPlus.cvar.ClassIds_icon
ClassIds.IdleAreaObj = _MaxPlus.cvar.ClassIds_IdleAreaObj
ClassIds.IES_Sky = _MaxPlus.cvar.ClassIds_IES_Sky
ClassIds.IES_Sun = _MaxPlus.cvar.ClassIds_IES_Sun
ClassIds.IFL = _MaxPlus.cvar.ClassIds_IFL
ClassIds.IFL_Manager = _MaxPlus.cvar.ClassIds_IFL_Manager
ClassIds.IGES_Export = _MaxPlus.cvar.ClassIds_IGES_Export
ClassIds.IGES_Import = _MaxPlus.cvar.ClassIds_IGES_Import
ClassIds.IK_Chain_Object = _MaxPlus.cvar.ClassIds_IK_Chain_Object
ClassIds.IK_Controller = _MaxPlus.cvar.ClassIds_IK_Controller
ClassIds.IK_ControllerMatrix3Controller = _MaxPlus.cvar.ClassIds_IK_ControllerMatrix3Controller
ClassIds.IK_Position_Controller = _MaxPlus.cvar.ClassIds_IK_Position_Controller
ClassIds.IK_Spline_End_Twist_Manip = _MaxPlus.cvar.ClassIds_IK_Spline_End_Twist_Manip
ClassIds.IK_Spline_Start_Twist_Manip = _MaxPlus.cvar.ClassIds_IK_Spline_Start_Twist_Manip
ClassIds.IK_Swivel_Manip = _MaxPlus.cvar.ClassIds_IK_Swivel_Manip
ClassIds.IKChainControl = _MaxPlus.cvar.ClassIds_IKChainControl
ClassIds.IKControl = _MaxPlus.cvar.ClassIds_IKControl
ClassIds.IKHISolver = _MaxPlus.cvar.ClassIds_IKHISolver
ClassIds.IKLimb = _MaxPlus.cvar.ClassIds_IKLimb
ClassIds.IKTarget = _MaxPlus.cvar.ClassIds_IKTarget
ClassIds.IKTargTrans = _MaxPlus.cvar.ClassIds_IKTargTrans
ClassIds.Illum_Blinn__base = _MaxPlus.cvar.ClassIds_Illum_Blinn__base
ClassIds.Illum_CookTorr__base = _MaxPlus.cvar.ClassIds_Illum_CookTorr__base
ClassIds.Illum_Hair__base = _MaxPlus.cvar.ClassIds_Illum_Hair__base
ClassIds.Illum_Lambert__base = _MaxPlus.cvar.ClassIds_Illum_Lambert__base
ClassIds.Illum_Phong__base = _MaxPlus.cvar.ClassIds_Illum_Phong__base
ClassIds.Illum_Ward__base = _MaxPlus.cvar.ClassIds_Illum_Ward__base
ClassIds.Illum_Ward_Deriv__base = _MaxPlus.cvar.ClassIds_Illum_Ward_Deriv__base
ClassIds.Illuminance_HDR_Data = _MaxPlus.cvar.ClassIds_Illuminance_HDR_Data
ClassIds.Illuminance_Render_Element = _MaxPlus.cvar.ClassIds_Illuminance_Render_Element
ClassIds.Illumination__lume = _MaxPlus.cvar.ClassIds_Illumination__lume
ClassIds.Illumination_Phong = _MaxPlus.cvar.ClassIds_Illumination_Phong
ClassIds.Illumination_Render_Element = _MaxPlus.cvar.ClassIds_Illumination_Render_Element
ClassIds.ImportHTR = _MaxPlus.cvar.ClassIds_ImportHTR
ClassIds.ImportTRC = _MaxPlus.cvar.ClassIds_ImportTRC
ClassIds.IndirectRefTargContainer = _MaxPlus.cvar.ClassIds_IndirectRefTargContainer
ClassIds.Initial_State = _MaxPlus.cvar.ClassIds_Initial_State
ClassIds.Ink = _MaxPlus.cvar.ClassIds_Ink
ClassIds.Ink__N_Paint__3dsmax = _MaxPlus.cvar.ClassIds_Ink__N_Paint__3dsmax
ClassIds.InkNPaint = _MaxPlus.cvar.ClassIds_InkNPaint
ClassIds.Inline = _MaxPlus.cvar.ClassIds_Inline
ClassIds.Input_mParticles = _MaxPlus.cvar.ClassIds_Input_mParticles
ClassIds.Input_Proxy = _MaxPlus.cvar.ClassIds_Input_Proxy
ClassIds.InputCustom = _MaxPlus.cvar.ClassIds_InputCustom
ClassIds.InputStandard = _MaxPlus.cvar.ClassIds_InputStandard
ClassIds.Instance_Duplicate_Maps = _MaxPlus.cvar.ClassIds_Instance_Duplicate_Maps
ClassIds.Instance_Manager_Wrapper = _MaxPlus.cvar.ClassIds_Instance_Manager_Wrapper
ClassIds.Int64Packet = _MaxPlus.cvar.ClassIds_Int64Packet
ClassIds.IntPacket = _MaxPlus.cvar.ClassIds_IntPacket
ClassIds.InventorImport = _MaxPlus.cvar.ClassIds_InventorImport
ClassIds.Inverse_of_Photographic_Exposure = _MaxPlus.cvar.ClassIds_Inverse_of_Photographic_Exposure
ClassIds.Invisible__physics_phen = _MaxPlus.cvar.ClassIds_Invisible__physics_phen
ClassIds.iray_Plugin_Options = _MaxPlus.cvar.ClassIds_iray_Plugin_Options
ClassIds.iray_Renderer = _MaxPlus.cvar.ClassIds_iray_Renderer
ClassIds.Isolated_Vertices = _MaxPlus.cvar.ClassIds_Isolated_Vertices
ClassIds.JAngleData = _MaxPlus.cvar.ClassIds_JAngleData
ClassIds.JBinaryData = _MaxPlus.cvar.ClassIds_JBinaryData
ClassIds.JBoolData = _MaxPlus.cvar.ClassIds_JBoolData
ClassIds.JColor3Data = _MaxPlus.cvar.ClassIds_JColor3Data
ClassIds.JColorData = _MaxPlus.cvar.ClassIds_JColorData
ClassIds.JFlagCtlData = _MaxPlus.cvar.ClassIds_JFlagCtlData
ClassIds.JFlagSetData = _MaxPlus.cvar.ClassIds_JFlagSetData
ClassIds.JFloat3Data = _MaxPlus.cvar.ClassIds_JFloat3Data
ClassIds.JFloatData = _MaxPlus.cvar.ClassIds_JFloatData
ClassIds.JGradCtlData = _MaxPlus.cvar.ClassIds_JGradCtlData
ClassIds.Join_Bodies = _MaxPlus.cvar.ClassIds_Join_Bodies
ClassIds.Joint_Angle_Deformer = _MaxPlus.cvar.ClassIds_Joint_Angle_Deformer
ClassIds.Joystick_Input_Device = _MaxPlus.cvar.ClassIds_Joystick_Input_Device
ClassIds.JPEG = _MaxPlus.cvar.ClassIds_JPEG
ClassIds.JPercent3Data = _MaxPlus.cvar.ClassIds_JPercent3Data
ClassIds.JPercentData = _MaxPlus.cvar.ClassIds_JPercentData
ClassIds.JSubtex = _MaxPlus.cvar.ClassIds_JSubtex
ClassIds.JT_Import = _MaxPlus.cvar.ClassIds_JT_Import
ClassIds.JWorld3Data = _MaxPlus.cvar.ClassIds_JWorld3Data
ClassIds.JWorldData = _MaxPlus.cvar.ClassIds_JWorldData
ClassIds.Keep_Apart = _MaxPlus.cvar.ClassIds_Keep_Apart
ClassIds.Kelvin_Temperature_Color = _MaxPlus.cvar.ClassIds_Kelvin_Temperature_Color
ClassIds.KeyValueUtility = _MaxPlus.cvar.ClassIds_KeyValueUtility
ClassIds.L_Ext = _MaxPlus.cvar.ClassIds_L_Ext
ClassIds.L_Type_Stair = _MaxPlus.cvar.ClassIds_L_Type_Stair
ClassIds.Landscape__lume = _MaxPlus.cvar.ClassIds_Landscape__lume
ClassIds.LandscapetextureMap = _MaxPlus.cvar.ClassIds_LandscapetextureMap
ClassIds.LandXML___DEM_Model_Import = _MaxPlus.cvar.ClassIds_LandXML___DEM_Model_Import
ClassIds.Lathe = _MaxPlus.cvar.ClassIds_Lathe
ClassIds.Lattice = _MaxPlus.cvar.ClassIds_Lattice
ClassIds.Layer_Manager = _MaxPlus.cvar.ClassIds_Layer_Manager
ClassIds.Layer_Output = _MaxPlus.cvar.ClassIds_Layer_Output
ClassIds.Layer_Thinner__contour = _MaxPlus.cvar.ClassIds_Layer_Thinner__contour
ClassIds.LayerFloat = _MaxPlus.cvar.ClassIds_LayerFloat
ClassIds.LayerInfo = _MaxPlus.cvar.ClassIds_LayerInfo
ClassIds.LayerMatrix3 = _MaxPlus.cvar.ClassIds_LayerMatrix3
ClassIds.LayerRoot = _MaxPlus.cvar.ClassIds_LayerRoot
ClassIds.LayerTransform = _MaxPlus.cvar.ClassIds_LayerTransform
ClassIds.LayerWeights = _MaxPlus.cvar.ClassIds_LayerWeights
ClassIds.Lens_Clamp__base = _MaxPlus.cvar.ClassIds_Lens_Clamp__base
ClassIds.Lens_Effects = _MaxPlus.cvar.ClassIds_Lens_Effects
ClassIds.Lens_Effects_Flare_Filter = _MaxPlus.cvar.ClassIds_Lens_Effects_Flare_Filter
ClassIds.Lens_Effects_Focus_Filter = _MaxPlus.cvar.ClassIds_Lens_Effects_Focus_Filter
ClassIds.Lens_Effects_Glow_Filter = _MaxPlus.cvar.ClassIds_Lens_Effects_Glow_Filter
ClassIds.Lens_Effects_Hilight_Filter = _MaxPlus.cvar.ClassIds_Lens_Effects_Hilight_Filter
ClassIds.Lens_Stencil__base = _MaxPlus.cvar.ClassIds_Lens_Stencil__base
ClassIds.Level_of_Detail = _MaxPlus.cvar.ClassIds_Level_of_Detail
ClassIds.Light_Infinite__base = _MaxPlus.cvar.ClassIds_Light_Infinite__base
ClassIds.Light_lines = _MaxPlus.cvar.ClassIds_Light_lines
ClassIds.Light_Photometric__base = _MaxPlus.cvar.ClassIds_Light_Photometric__base
ClassIds.Light_Point__base = _MaxPlus.cvar.ClassIds_Light_Point__base
ClassIds.Light_RollAngle_Manipulator = _MaxPlus.cvar.ClassIds_Light_RollAngle_Manipulator
ClassIds.Light_Spot__base = _MaxPlus.cvar.ClassIds_Light_Spot__base
ClassIds.Light_Tracer = _MaxPlus.cvar.ClassIds_Light_Tracer
ClassIds.Lighting = _MaxPlus.cvar.ClassIds_Lighting
ClassIds.Lighting_Analysis_Data = _MaxPlus.cvar.ClassIds_Lighting_Analysis_Data
ClassIds.Lighting_Analysis_Overlay = _MaxPlus.cvar.ClassIds_Lighting_Analysis_Overlay
ClassIds.LightingMap = _MaxPlus.cvar.ClassIds_LightingMap
ClassIds.LightMap = _MaxPlus.cvar.ClassIds_LightMap
ClassIds.Lightmap_Sample__base = _MaxPlus.cvar.ClassIds_Lightmap_Sample__base
ClassIds.Lightmap_Write__base = _MaxPlus.cvar.ClassIds_Lightmap_Write__base
ClassIds.LightMeter = _MaxPlus.cvar.ClassIds_LightMeter
ClassIds.line = _MaxPlus.cvar.ClassIds_line
ClassIds.Linear_Exposure_Control = _MaxPlus.cvar.ClassIds_Linear_Exposure_Control
ClassIds.linear_float = _MaxPlus.cvar.ClassIds_linear_float
ClassIds.linear_position = _MaxPlus.cvar.ClassIds_linear_position
ClassIds.linear_rotation = _MaxPlus.cvar.ClassIds_linear_rotation
ClassIds.linear_scale = _MaxPlus.cvar.ClassIds_linear_scale
ClassIds.LinearShape = _MaxPlus.cvar.ClassIds_LinearShape
ClassIds.Lines = _MaxPlus.cvar.ClassIds_Lines
ClassIds.Link_Constraint = _MaxPlus.cvar.ClassIds_Link_Constraint
ClassIds.Link_Inheritance__Selected = _MaxPlus.cvar.ClassIds_Link_Inheritance__Selected
ClassIds.Link_Transform = _MaxPlus.cvar.ClassIds_Link_Transform
ClassIds.LinkBlockInstance = _MaxPlus.cvar.ClassIds_LinkBlockInstance
ClassIds.LinkBlockInstanceshape = _MaxPlus.cvar.ClassIds_LinkBlockInstanceshape
ClassIds.LinkComposite = _MaxPlus.cvar.ClassIds_LinkComposite
ClassIds.LinkCompositeshape = _MaxPlus.cvar.ClassIds_LinkCompositeshape
ClassIds.Linked_XForm = _MaxPlus.cvar.ClassIds_Linked_XForm
ClassIds.LinkLeaf = _MaxPlus.cvar.ClassIds_LinkLeaf
ClassIds.LinkLeafshape = _MaxPlus.cvar.ClassIds_LinkLeafshape
ClassIds.LinkOriginPtHelper = _MaxPlus.cvar.ClassIds_LinkOriginPtHelper
ClassIds.LinkTimeControl = _MaxPlus.cvar.ClassIds_LinkTimeControl
ClassIds.Local_Euler_XYZ = _MaxPlus.cvar.ClassIds_Local_Euler_XYZ
ClassIds.Lock_Bond = _MaxPlus.cvar.ClassIds_Lock_Bond
ClassIds.LockedMapWrapper = _MaxPlus.cvar.ClassIds_LockedMapWrapper
ClassIds.LockedMaterialWrapper = _MaxPlus.cvar.ClassIds_LockedMaterialWrapper
ClassIds.LockedModifierWrapper = _MaxPlus.cvar.ClassIds_LockedModifierWrapper
ClassIds.LockedObjectWrapper = _MaxPlus.cvar.ClassIds_LockedObjectWrapper
ClassIds.LockedObjectWrapper_Obsolete = _MaxPlus.cvar.ClassIds_LockedObjectWrapper_Obsolete
ClassIds.LOD = _MaxPlus.cvar.ClassIds_LOD
ClassIds.LOD_Controller = _MaxPlus.cvar.ClassIds_LOD_Controller
ClassIds.Loft = _MaxPlus.cvar.ClassIds_Loft
ClassIds.LoftObject = _MaxPlus.cvar.ClassIds_LoftObject
ClassIds.Logarithmic_Camera_Exposure__3dsmax = _MaxPlus.cvar.ClassIds_Logarithmic_Camera_Exposure__3dsmax
ClassIds.Logarithmic_Exposure_Control = _MaxPlus.cvar.ClassIds_Logarithmic_Exposure_Control
ClassIds.lookat = _MaxPlus.cvar.ClassIds_lookat
ClassIds.LookAt_Constraint = _MaxPlus.cvar.ClassIds_LookAt_Constraint
ClassIds.Lookup_Background__base = _MaxPlus.cvar.ClassIds_Lookup_Background__base
ClassIds.Lookup_Cube1__base = _MaxPlus.cvar.ClassIds_Lookup_Cube1__base
ClassIds.Lookup_Cube6__base = _MaxPlus.cvar.ClassIds_Lookup_Cube6__base
ClassIds.Lookup_Cylindrical__base = _MaxPlus.cvar.ClassIds_Lookup_Cylindrical__base
ClassIds.Lookup_Spherical__base = _MaxPlus.cvar.ClassIds_Lookup_Spherical__base
ClassIds.Lume_Glow_Material__Lambertian = _MaxPlus.cvar.ClassIds_Lume_Glow_Material__Lambertian
ClassIds.Lume_Metal_Material__Phong = _MaxPlus.cvar.ClassIds_Lume_Metal_Material__Phong
ClassIds.Lume_Translucent_Material__Lambertian = _MaxPlus.cvar.ClassIds_Lume_Translucent_Material__Lambertian
ClassIds.Luminaire = _MaxPlus.cvar.ClassIds_Luminaire
ClassIds.Luminance_HDR_Data = _MaxPlus.cvar.ClassIds_Luminance_HDR_Data
ClassIds.Luminance_Render_Element = _MaxPlus.cvar.ClassIds_Luminance_Render_Element
ClassIds.Lumination_Render_Element = _MaxPlus.cvar.ClassIds_Lumination_Render_Element
ClassIds.LZFlare_AutoSec_Base = _MaxPlus.cvar.ClassIds_LZFlare_AutoSec_Base
ClassIds.LZFlare_AutoSec_Data = _MaxPlus.cvar.ClassIds_LZFlare_AutoSec_Data
ClassIds.LZFlare_Aux_Data = _MaxPlus.cvar.ClassIds_LZFlare_Aux_Data
ClassIds.LZFlare_Data = _MaxPlus.cvar.ClassIds_LZFlare_Data
ClassIds.LZFlare_Glow_Data = _MaxPlus.cvar.ClassIds_LZFlare_Glow_Data
ClassIds.LZFlare_Inferno_Data = _MaxPlus.cvar.ClassIds_LZFlare_Inferno_Data
ClassIds.LZFlare_ManSec_Base = _MaxPlus.cvar.ClassIds_LZFlare_ManSec_Base
ClassIds.LZFlare_ManSec_Data = _MaxPlus.cvar.ClassIds_LZFlare_ManSec_Data
ClassIds.LZFlare_Prefs_Data = _MaxPlus.cvar.ClassIds_LZFlare_Prefs_Data
ClassIds.LZFlare_Rays_Data = _MaxPlus.cvar.ClassIds_LZFlare_Rays_Data
ClassIds.LZFlare_Rend_Data = _MaxPlus.cvar.ClassIds_LZFlare_Rend_Data
ClassIds.LZFlare_Ring_Data = _MaxPlus.cvar.ClassIds_LZFlare_Ring_Data
ClassIds.LZFlare_Star_Data = _MaxPlus.cvar.ClassIds_LZFlare_Star_Data
ClassIds.LZFlare_Streak_Data = _MaxPlus.cvar.ClassIds_LZFlare_Streak_Data
ClassIds.LZFocus_Data = _MaxPlus.cvar.ClassIds_LZFocus_Data
ClassIds.LZGlow_Aux_Data = _MaxPlus.cvar.ClassIds_LZGlow_Aux_Data
ClassIds.LZGlow_Data = _MaxPlus.cvar.ClassIds_LZGlow_Data
ClassIds.LZGlow_Rend_Data = _MaxPlus.cvar.ClassIds_LZGlow_Rend_Data
ClassIds.LZHilight_Aux_Data = _MaxPlus.cvar.ClassIds_LZHilight_Aux_Data
ClassIds.LZHilight_Data = _MaxPlus.cvar.ClassIds_LZHilight_Data
ClassIds.LZHilight_Rend_Data = _MaxPlus.cvar.ClassIds_LZHilight_Rend_Data
ClassIds.MACUtilities = _MaxPlus.cvar.ClassIds_MACUtilities
ClassIds.Manual_Secondary_Element = _MaxPlus.cvar.ClassIds_Manual_Secondary_Element
ClassIds.Map_to_Material_Conversion = _MaxPlus.cvar.ClassIds_Map_to_Material_Conversion
ClassIds.mapping = _MaxPlus.cvar.ClassIds_mapping
ClassIds.Mapping_Object = _MaxPlus.cvar.ClassIds_Mapping_Object
ClassIds.MapScaler = _MaxPlus.cvar.ClassIds_MapScaler
ClassIds.MapScalerOSM = _MaxPlus.cvar.ClassIds_MapScalerOSM
ClassIds.MapScalerSpaceWarp = _MaxPlus.cvar.ClassIds_MapScalerSpaceWarp
ClassIds.Marble = _MaxPlus.cvar.ClassIds_Marble
ClassIds.Marble__3dsmax = _MaxPlus.cvar.ClassIds_Marble__3dsmax
ClassIds.Mask = _MaxPlus.cvar.ClassIds_Mask
ClassIds.Mask__3dsmax = _MaxPlus.cvar.ClassIds_Mask__3dsmax
ClassIds.MassFX_Loader_Linkage = _MaxPlus.cvar.ClassIds_MassFX_Loader_Linkage
ClassIds.MassFX_RBody = _MaxPlus.cvar.ClassIds_MassFX_RBody
ClassIds.Master_Controller_plugin_not_found = _MaxPlus.cvar.ClassIds_Master_Controller_plugin_not_found
ClassIds.Master_Motion_Clip = _MaxPlus.cvar.ClassIds_Master_Motion_Clip
ClassIds.Master_Point_Controller = _MaxPlus.cvar.ClassIds_Master_Point_Controller
ClassIds.MasterBlock = _MaxPlus.cvar.ClassIds_MasterBlock
ClassIds.Material_Dynamic = _MaxPlus.cvar.ClassIds_Material_Dynamic
ClassIds.Material_EditorReferenceMaker = _MaxPlus.cvar.ClassIds_Material_EditorReferenceMaker
ClassIds.Material_Frequency = _MaxPlus.cvar.ClassIds_Material_Frequency
ClassIds.Material_ID = _MaxPlus.cvar.ClassIds_Material_ID
ClassIds.Material_Static = _MaxPlus.cvar.ClassIds_Material_Static
ClassIds.Material_to_Shader = _MaxPlus.cvar.ClassIds_Material_to_Shader
ClassIds.Material_XML_Exporter = _MaxPlus.cvar.ClassIds_Material_XML_Exporter
ClassIds.MaterialByElement = _MaxPlus.cvar.ClassIds_MaterialByElement
ClassIds.MaterialCategory = _MaxPlus.cvar.ClassIds_MaterialCategory
ClassIds.materialhelper = _MaxPlus.cvar.ClassIds_materialhelper
ClassIds.Materialmodifier = _MaxPlus.cvar.ClassIds_Materialmodifier
ClassIds.Math_Color_Add = _MaxPlus.cvar.ClassIds_Math_Color_Add
ClassIds.Math_Color_Mix = _MaxPlus.cvar.ClassIds_Math_Color_Mix
ClassIds.Math_Color_Multiply = _MaxPlus.cvar.ClassIds_Math_Color_Multiply
ClassIds.Matrix3_Mixer_Controller = _MaxPlus.cvar.ClassIds_Matrix3_Mixer_Controller
ClassIds.Matte_Shadow_Reflection__mi = _MaxPlus.cvar.ClassIds_Matte_Shadow_Reflection__mi
ClassIds.MatteRenderElement = _MaxPlus.cvar.ClassIds_MatteRenderElement
ClassIds.MatteShadow = _MaxPlus.cvar.ClassIds_MatteShadow
ClassIds.max_AlphaBakeElement = _MaxPlus.cvar.ClassIds_max_AlphaBakeElement
ClassIds.max_ArchitecturalMaterial = _MaxPlus.cvar.ClassIds_max_ArchitecturalMaterial
ClassIds.max_base_AnisotropicIllumination = _MaxPlus.cvar.ClassIds_max_base_AnisotropicIllumination
ClassIds.max_base_BlinnIllumination = _MaxPlus.cvar.ClassIds_max_base_BlinnIllumination
ClassIds.max_base_ConstantIllumination = _MaxPlus.cvar.ClassIds_max_base_ConstantIllumination
ClassIds.max_base_Curve = _MaxPlus.cvar.ClassIds_max_base_Curve
ClassIds.max_base_CurveControl = _MaxPlus.cvar.ClassIds_max_base_CurveControl
ClassIds.max_base_GBuffer = _MaxPlus.cvar.ClassIds_max_base_GBuffer
ClassIds.max_base_GBuffer_lens = _MaxPlus.cvar.ClassIds_max_base_GBuffer_lens
ClassIds.max_base_ImageCollector = _MaxPlus.cvar.ClassIds_max_base_ImageCollector
ClassIds.max_base_MeditBackground = _MaxPlus.cvar.ClassIds_max_base_MeditBackground
ClassIds.max_base_MetalIllumination = _MaxPlus.cvar.ClassIds_max_base_MetalIllumination
ClassIds.max_base_MultiLayerIllumination = _MaxPlus.cvar.ClassIds_max_base_MultiLayerIllumination
ClassIds.max_base_OrenNayarBlinnIllumination = _MaxPlus.cvar.ClassIds_max_base_OrenNayarBlinnIllumination
ClassIds.max_base_Output = _MaxPlus.cvar.ClassIds_max_base_Output
ClassIds.max_base_PhongIllumination = _MaxPlus.cvar.ClassIds_max_base_PhongIllumination
ClassIds.max_base_StraussIllumination = _MaxPlus.cvar.ClassIds_max_base_StraussIllumination
ClassIds.max_base_TranslucentIllumination = _MaxPlus.cvar.ClassIds_max_base_TranslucentIllumination
ClassIds.max_base_VideoColorCorrect = _MaxPlus.cvar.ClassIds_max_base_VideoColorCorrect
ClassIds.max_base_VideoSuperBlack = _MaxPlus.cvar.ClassIds_max_base_VideoSuperBlack
ClassIds.max_base_WardIllumination = _MaxPlus.cvar.ClassIds_max_base_WardIllumination
ClassIds.Max_Bitmap__3dsmax = _MaxPlus.cvar.ClassIds_Max_Bitmap__3dsmax
ClassIds.max_BlendBakeElement = _MaxPlus.cvar.ClassIds_max_BlendBakeElement
ClassIds.max_BlendMaterial = _MaxPlus.cvar.ClassIds_max_BlendMaterial
ClassIds.max_BlendMaterial_Contour = _MaxPlus.cvar.ClassIds_max_BlendMaterial_Contour
ClassIds.max_CameraMap = _MaxPlus.cvar.ClassIds_max_CameraMap
ClassIds.max_CompleteBakeElement = _MaxPlus.cvar.ClassIds_max_CompleteBakeElement
ClassIds.max_CompositeMaterial = _MaxPlus.cvar.ClassIds_max_CompositeMaterial
ClassIds.max_CompositeMaterial_Contour = _MaxPlus.cvar.ClassIds_max_CompositeMaterial_Contour
ClassIds.max_default_mtl_phen = _MaxPlus.cvar.ClassIds_max_default_mtl_phen
ClassIds.max_DefaultLight = _MaxPlus.cvar.ClassIds_max_DefaultLight
ClassIds.max_DefaultMaterial = _MaxPlus.cvar.ClassIds_max_DefaultMaterial
ClassIds.max_DefaultShadow = _MaxPlus.cvar.ClassIds_max_DefaultShadow
ClassIds.max_DiffuseBakeElement = _MaxPlus.cvar.ClassIds_max_DiffuseBakeElement
ClassIds.max_DirectionalLight = _MaxPlus.cvar.ClassIds_max_DirectionalLight
ClassIds.max_DoubleSidedMaterial = _MaxPlus.cvar.ClassIds_max_DoubleSidedMaterial
ClassIds.max_DoubleSidedMaterial_Contour = _MaxPlus.cvar.ClassIds_max_DoubleSidedMaterial_Contour
ClassIds.max_dummy = _MaxPlus.cvar.ClassIds_max_dummy
ClassIds.MAX_File_Finder = _MaxPlus.cvar.ClassIds_MAX_File_Finder
ClassIds.max_GenericBakeElement = _MaxPlus.cvar.ClassIds_max_GenericBakeElement
ClassIds.max_GizmoData = _MaxPlus.cvar.ClassIds_max_GizmoData
ClassIds.max_GNormal = _MaxPlus.cvar.ClassIds_max_GNormal
ClassIds.max_HeightBakeElement = _MaxPlus.cvar.ClassIds_max_HeightBakeElement
ClassIds.max_IesSkylight = _MaxPlus.cvar.ClassIds_max_IesSkylight
ClassIds.max_is_material_editor = _MaxPlus.cvar.ClassIds_max_is_material_editor
ClassIds.max_LightBakeElement = _MaxPlus.cvar.ClassIds_max_LightBakeElement
ClassIds.Max_LightMap_Lightmeter_Shader = _MaxPlus.cvar.ClassIds_Max_LightMap_Lightmeter_Shader
ClassIds.max_LightMeterMaterial = _MaxPlus.cvar.ClassIds_max_LightMeterMaterial
ClassIds.Max_Master_Clip = _MaxPlus.cvar.ClassIds_Max_Master_Clip
ClassIds.max_MatteMaterial = _MaxPlus.cvar.ClassIds_max_MatteMaterial
ClassIds.max_mia_material_renderelements = _MaxPlus.cvar.ClassIds_max_mia_material_renderelements
ClassIds.Max_MotionClip_Implementation = _MaxPlus.cvar.ClassIds_Max_MotionClip_Implementation
ClassIds.max_mrRenderElement = _MaxPlus.cvar.ClassIds_max_mrRenderElement
ClassIds.max_mrStoreElements = _MaxPlus.cvar.ClassIds_max_mrStoreElements
ClassIds.max_MultiMaterial = _MaxPlus.cvar.ClassIds_max_MultiMaterial
ClassIds.max_MultiMaterial_Contour = _MaxPlus.cvar.ClassIds_max_MultiMaterial_Contour
ClassIds.max_NodeData = _MaxPlus.cvar.ClassIds_max_NodeData
ClassIds.max_NormalsBakeElement = _MaxPlus.cvar.ClassIds_max_NormalsBakeElement
ClassIds.max_ObjectData = _MaxPlus.cvar.ClassIds_max_ObjectData
ClassIds.max_OmniLight = _MaxPlus.cvar.ClassIds_max_OmniLight
ClassIds.max_ParticleData = _MaxPlus.cvar.ClassIds_max_ParticleData
ClassIds.max_PhotometricPointLight = _MaxPlus.cvar.ClassIds_max_PhotometricPointLight
ClassIds.max_PhysicalSun = _MaxPlus.cvar.ClassIds_max_PhysicalSun
ClassIds.max_Raytrace = _MaxPlus.cvar.ClassIds_max_Raytrace
ClassIds.max_RaytraceMaterial = _MaxPlus.cvar.ClassIds_max_RaytraceMaterial
ClassIds.max_ReflectRefractBakeElement = _MaxPlus.cvar.ClassIds_max_ReflectRefractBakeElement
ClassIds.max_RenderElementHandler = _MaxPlus.cvar.ClassIds_max_RenderElementHandler
ClassIds.max_rtt_lens = _MaxPlus.cvar.ClassIds_max_rtt_lens
ClassIds.max_rtt_output = _MaxPlus.cvar.ClassIds_max_rtt_output
ClassIds.max_RTTCageData = _MaxPlus.cvar.ClassIds_max_RTTCageData
ClassIds.max_SceneData = _MaxPlus.cvar.ClassIds_max_SceneData
ClassIds.max_ShaderList = _MaxPlus.cvar.ClassIds_max_ShaderList
ClassIds.max_ShadowBakeElement = _MaxPlus.cvar.ClassIds_max_ShadowBakeElement
ClassIds.max_ShadowWrapper = _MaxPlus.cvar.ClassIds_max_ShadowWrapper
ClassIds.max_ShellacMaterial = _MaxPlus.cvar.ClassIds_max_ShellacMaterial
ClassIds.max_ShellacMaterial_Contour = _MaxPlus.cvar.ClassIds_max_ShellacMaterial_Contour
ClassIds.max_SpecularBakeElement = _MaxPlus.cvar.ClassIds_max_SpecularBakeElement
ClassIds.max_SpotLight = _MaxPlus.cvar.ClassIds_max_SpotLight
ClassIds.max_StandardMaterial = _MaxPlus.cvar.ClassIds_max_StandardMaterial
ClassIds.max_StdRenderElements = _MaxPlus.cvar.ClassIds_max_StdRenderElements
ClassIds.max_TexturedSkylight = _MaxPlus.cvar.ClassIds_max_TexturedSkylight
ClassIds.max_ToneOpPhoto = _MaxPlus.cvar.ClassIds_max_ToneOpPhoto
ClassIds.max_TopBottomMaterial = _MaxPlus.cvar.ClassIds_max_TopBottomMaterial
ClassIds.max_TopBottomMaterial_Contour = _MaxPlus.cvar.ClassIds_max_TopBottomMaterial_Contour
ClassIds.max_UnknownMaterial = _MaxPlus.cvar.ClassIds_max_UnknownMaterial
ClassIds.max_vdm = _MaxPlus.cvar.ClassIds_max_vdm
ClassIds.max_Vectormap = _MaxPlus.cvar.ClassIds_max_Vectormap
ClassIds.MaxRenderer_COM_Server = _MaxPlus.cvar.ClassIds_MaxRenderer_COM_Server
ClassIds.MAXScript = _MaxPlus.cvar.ClassIds_MAXScript
ClassIds.MaxscriptParticleContainer = _MaxPlus.cvar.ClassIds_MaxscriptParticleContainer
ClassIds.Mb_select = _MaxPlus.cvar.ClassIds_Mb_select
ClassIds.mCloth = _MaxPlus.cvar.ClassIds_mCloth
ClassIds.Measure = _MaxPlus.cvar.ClassIds_Measure
ClassIds.Melt = _MaxPlus.cvar.ClassIds_Melt
ClassIds.mental_ray = _MaxPlus.cvar.ClassIds_mental_ray
ClassIds.mental_ray__Area_Light_custom_attribute = _MaxPlus.cvar.ClassIds_mental_ray__Area_Light_custom_attribute
ClassIds.mental_ray__Indirect_Illumination_custom_attribute = _MaxPlus.cvar.ClassIds_mental_ray__Indirect_Illumination_custom_attribute
ClassIds.mental_ray__light_shader_custom_attribute = _MaxPlus.cvar.ClassIds_mental_ray__light_shader_custom_attribute
ClassIds.mental_ray__material_custom_attribute = _MaxPlus.cvar.ClassIds_mental_ray__material_custom_attribute
ClassIds.mental_ray__material_custom_attributes_manager = _MaxPlus.cvar.ClassIds_mental_ray__material_custom_attributes_manager
ClassIds.mental_ray__object_custom_attributes_manager = _MaxPlus.cvar.ClassIds_mental_ray__object_custom_attributes_manager
ClassIds.mental_ray_Import = _MaxPlus.cvar.ClassIds_mental_ray_Import
ClassIds.mental_ray_material_override_options = _MaxPlus.cvar.ClassIds_mental_ray_material_override_options
ClassIds.mental_ray_renderer = _MaxPlus.cvar.ClassIds_mental_ray_renderer
ClassIds.mental_ray_Shadow_Map = _MaxPlus.cvar.ClassIds_mental_ray_Shadow_Map
ClassIds.Mesh_Select = _MaxPlus.cvar.ClassIds_Mesh_Select
ClassIds.MeshCollision = _MaxPlus.cvar.ClassIds_MeshCollision
ClassIds.Mesher = _MaxPlus.cvar.ClassIds_Mesher
ClassIds.MeshProjIntersect = _MaxPlus.cvar.ClassIds_MeshProjIntersect
ClassIds.meshsmooth = _MaxPlus.cvar.ClassIds_meshsmooth
ClassIds.Metal__lume = _MaxPlus.cvar.ClassIds_Metal__lume
ClassIds.Metal_Bump9 = _MaxPlus.cvar.ClassIds_Metal_Bump9
ClassIds.MetalShader = _MaxPlus.cvar.ClassIds_MetalShader
ClassIds.Metronome = _MaxPlus.cvar.ClassIds_Metronome
ClassIds.mi_bump_flakes = _MaxPlus.cvar.ClassIds_mi_bump_flakes
ClassIds.mi_car_paint_phen = _MaxPlus.cvar.ClassIds_mi_car_paint_phen
ClassIds.mi_car_paint_phen_x = _MaxPlus.cvar.ClassIds_mi_car_paint_phen_x
ClassIds.mi_Glossy_Reflection__mi = _MaxPlus.cvar.ClassIds_mi_Glossy_Reflection__mi
ClassIds.mi_Glossy_Refraction__mi = _MaxPlus.cvar.ClassIds_mi_Glossy_Refraction__mi
ClassIds.mi_metallic_paint = _MaxPlus.cvar.ClassIds_mi_metallic_paint
ClassIds.mi_metallic_paint_output_mixer = _MaxPlus.cvar.ClassIds_mi_metallic_paint_output_mixer
ClassIds.mi_metallic_paint_x = _MaxPlus.cvar.ClassIds_mi_metallic_paint_x
ClassIds.mia_ciesky = _MaxPlus.cvar.ClassIds_mia_ciesky
ClassIds.mia_cieskylight = _MaxPlus.cvar.ClassIds_mia_cieskylight
ClassIds.mia_exposure_simple = _MaxPlus.cvar.ClassIds_mia_exposure_simple
ClassIds.mia_physicalsky = _MaxPlus.cvar.ClassIds_mia_physicalsky
ClassIds.mia_physicalskylight = _MaxPlus.cvar.ClassIds_mia_physicalskylight
ClassIds.mia_physicalsun = _MaxPlus.cvar.ClassIds_mia_physicalsun
ClassIds.miAreaLight = _MaxPlus.cvar.ClassIds_miAreaLight
ClassIds.miAreaLightomni = _MaxPlus.cvar.ClassIds_miAreaLightomni
ClassIds.mib_bent_normal_env = _MaxPlus.cvar.ClassIds_mib_bent_normal_env
ClassIds.mib_blackbody = _MaxPlus.cvar.ClassIds_mib_blackbody
ClassIds.mib_bump_map2 = _MaxPlus.cvar.ClassIds_mib_bump_map2
ClassIds.mib_cie_d = _MaxPlus.cvar.ClassIds_mib_cie_d
ClassIds.mib_continue = _MaxPlus.cvar.ClassIds_mib_continue
ClassIds.mib_fast_occlusion = _MaxPlus.cvar.ClassIds_mib_fast_occlusion
ClassIds.mib_fg_occlusion = _MaxPlus.cvar.ClassIds_mib_fg_occlusion
ClassIds.mib_map_get_color = _MaxPlus.cvar.ClassIds_mib_map_get_color
ClassIds.mib_map_get_integer = _MaxPlus.cvar.ClassIds_mib_map_get_integer
ClassIds.mib_map_get_integer_array = _MaxPlus.cvar.ClassIds_mib_map_get_integer_array
ClassIds.mib_map_get_scalar = _MaxPlus.cvar.ClassIds_mib_map_get_scalar
ClassIds.mib_map_get_scalar_array = _MaxPlus.cvar.ClassIds_mib_map_get_scalar_array
ClassIds.mib_map_get_transform = _MaxPlus.cvar.ClassIds_mib_map_get_transform
ClassIds.mib_map_get_vector = _MaxPlus.cvar.ClassIds_mib_map_get_vector
ClassIds.mib_texture_filter_lookup_2 = _MaxPlus.cvar.ClassIds_mib_texture_filter_lookup_2
ClassIds.mib_texture_lookup2 = _MaxPlus.cvar.ClassIds_mib_texture_lookup2
ClassIds.MIDI_Device = _MaxPlus.cvar.ClassIds_MIDI_Device
ClassIds.MinMaxAvg = _MaxPlus.cvar.ClassIds_MinMaxAvg
ClassIds.mip_fgshooter__mi = _MaxPlus.cvar.ClassIds_mip_fgshooter__mi
ClassIds.mip_rayswitch_stage__mi = _MaxPlus.cvar.ClassIds_mip_rayswitch_stage__mi
ClassIds.mirror = _MaxPlus.cvar.ClassIds_mirror
ClassIds.Missing_Atmospheric = _MaxPlus.cvar.ClassIds_Missing_Atmospheric
ClassIds.Missing_Camera = _MaxPlus.cvar.ClassIds_Missing_Camera
ClassIds.Missing_Custom_Attribute_Plugin = _MaxPlus.cvar.ClassIds_Missing_Custom_Attribute_Plugin
ClassIds.Missing_Exposure_Control = _MaxPlus.cvar.ClassIds_Missing_Exposure_Control
ClassIds.Missing_Float_Control = _MaxPlus.cvar.ClassIds_Missing_Float_Control
ClassIds.Missing_GeomObject = _MaxPlus.cvar.ClassIds_Missing_GeomObject
ClassIds.Missing_Helper = _MaxPlus.cvar.ClassIds_Missing_Helper
ClassIds.Missing_Light = _MaxPlus.cvar.ClassIds_Missing_Light
ClassIds.Missing_Matrix3_Control = _MaxPlus.cvar.ClassIds_Missing_Matrix3_Control
ClassIds.Missing_Morph_Control = _MaxPlus.cvar.ClassIds_Missing_Morph_Control
ClassIds.Missing_Mtl = _MaxPlus.cvar.ClassIds_Missing_Mtl
ClassIds.Missing_OSM = _MaxPlus.cvar.ClassIds_Missing_OSM
ClassIds.Missing_Point3_Control = _MaxPlus.cvar.ClassIds_Missing_Point3_Control
ClassIds.Missing_Point4_Control = _MaxPlus.cvar.ClassIds_Missing_Point4_Control
ClassIds.Missing_Position_Control = _MaxPlus.cvar.ClassIds_Missing_Position_Control
ClassIds.Missing_Radiosity = _MaxPlus.cvar.ClassIds_Missing_Radiosity
ClassIds.Missing_RefMaker = _MaxPlus.cvar.ClassIds_Missing_RefMaker
ClassIds.Missing_RefTarget = _MaxPlus.cvar.ClassIds_Missing_RefTarget
ClassIds.Missing_Render_Effect = _MaxPlus.cvar.ClassIds_Missing_Render_Effect
ClassIds.Missing_Render_Element_Plug_in = _MaxPlus.cvar.ClassIds_Missing_Render_Element_Plug_in
ClassIds.Missing_Renderer = _MaxPlus.cvar.ClassIds_Missing_Renderer
ClassIds.Missing_Rotation_Control = _MaxPlus.cvar.ClassIds_Missing_Rotation_Control
ClassIds.Missing_Scale_Control = _MaxPlus.cvar.ClassIds_Missing_Scale_Control
ClassIds.Missing_Shader_Plug_in = _MaxPlus.cvar.ClassIds_Missing_Shader_Plug_in
ClassIds.Missing_Shadow_Type = _MaxPlus.cvar.ClassIds_Missing_Shadow_Type
ClassIds.Missing_Shape = _MaxPlus.cvar.ClassIds_Missing_Shape
ClassIds.Missing_SoundObj = _MaxPlus.cvar.ClassIds_Missing_SoundObj
ClassIds.Missing_System = _MaxPlus.cvar.ClassIds_Missing_System
ClassIds.Missing_Texture_Bake_Element = _MaxPlus.cvar.ClassIds_Missing_Texture_Bake_Element
ClassIds.Missing_Texture_Output_Plug_in = _MaxPlus.cvar.ClassIds_Missing_Texture_Output_Plug_in
ClassIds.Missing_TextureMap = _MaxPlus.cvar.ClassIds_Missing_TextureMap
ClassIds.Missing_UVGen = _MaxPlus.cvar.ClassIds_Missing_UVGen
ClassIds.Missing_UVW_Coordinates = _MaxPlus.cvar.ClassIds_Missing_UVW_Coordinates
ClassIds.Missing_WSM = _MaxPlus.cvar.ClassIds_Missing_WSM
ClassIds.Missing_WSM_Object = _MaxPlus.cvar.ClassIds_Missing_WSM_Object
ClassIds.Missing_XYZGen = _MaxPlus.cvar.ClassIds_Missing_XYZGen
ClassIds.misss_set_normal = _MaxPlus.cvar.ClassIds_misss_set_normal
ClassIds.Mist__lume = _MaxPlus.cvar.ClassIds_Mist__lume
ClassIds.Mitchell_Netravali = _MaxPlus.cvar.ClassIds_Mitchell_Netravali
ClassIds.Mix = _MaxPlus.cvar.ClassIds_Mix
ClassIds.Mix__3dsmax = _MaxPlus.cvar.ClassIds_Mix__3dsmax
ClassIds.MixamoController = _MaxPlus.cvar.ClassIds_MixamoController
ClassIds.MocapLayer = _MaxPlus.cvar.ClassIds_MocapLayer
ClassIds.Morph = _MaxPlus.cvar.ClassIds_Morph
ClassIds.Morph_Angle_Deformer = _MaxPlus.cvar.ClassIds_Morph_Angle_Deformer
ClassIds.Morpher = _MaxPlus.cvar.ClassIds_Morpher
ClassIds.MorpherMaterial = _MaxPlus.cvar.ClassIds_MorpherMaterial
ClassIds.Motion_Blur = _MaxPlus.cvar.ClassIds_Motion_Blur
ClassIds.Motion_BlurMPassCamEffect = _MaxPlus.cvar.ClassIds_Motion_BlurMPassCamEffect
ClassIds.Motion_Capture = _MaxPlus.cvar.ClassIds_Motion_Capture
ClassIds.Motion_Clip = _MaxPlus.cvar.ClassIds_Motion_Clip
ClassIds.Motion_Clip_SlaveFloat = _MaxPlus.cvar.ClassIds_Motion_Clip_SlaveFloat
ClassIds.Motion_Clip_SlavePoint3 = _MaxPlus.cvar.ClassIds_Motion_Clip_SlavePoint3
ClassIds.Motion_Clip_SlavePos = _MaxPlus.cvar.ClassIds_Motion_Clip_SlavePos
ClassIds.Motion_Clip_SlaveRotation = _MaxPlus.cvar.ClassIds_Motion_Clip_SlaveRotation
ClassIds.Motion_Clip_SlaveScale = _MaxPlus.cvar.ClassIds_Motion_Clip_SlaveScale
ClassIds.Motion_ClipFloatController = _MaxPlus.cvar.ClassIds_Motion_ClipFloatController
ClassIds.Motion_Vector_Export__mi = _MaxPlus.cvar.ClassIds_Motion_Vector_Export__mi
ClassIds.Motor = _MaxPlus.cvar.ClassIds_Motor
ClassIds.MotorMod = _MaxPlus.cvar.ClassIds_MotorMod
ClassIds.Mouse_Input_Device = _MaxPlus.cvar.ClassIds_Mouse_Input_Device
ClassIds.mP_Buoyancy = _MaxPlus.cvar.ClassIds_mP_Buoyancy
ClassIds.mP_Collision = _MaxPlus.cvar.ClassIds_mP_Collision
ClassIds.mP_Drag = _MaxPlus.cvar.ClassIds_mP_Drag
ClassIds.mP_Force = _MaxPlus.cvar.ClassIds_mP_Force
ClassIds.mP_Glue = _MaxPlus.cvar.ClassIds_mP_Glue
ClassIds.mP_InterCollision = _MaxPlus.cvar.ClassIds_mP_InterCollision
ClassIds.mP_Shape = _MaxPlus.cvar.ClassIds_mP_Shape
ClassIds.mP_Solvent = _MaxPlus.cvar.ClassIds_mP_Solvent
ClassIds.mP_Switch = _MaxPlus.cvar.ClassIds_mP_Switch
ClassIds.mP_World = _MaxPlus.cvar.ClassIds_mP_World
ClassIds.mP_Worldhelper = _MaxPlus.cvar.ClassIds_mP_Worldhelper
ClassIds.mParticles_Flow = _MaxPlus.cvar.ClassIds_mParticles_Flow
ClassIds.MPG = _MaxPlus.cvar.ClassIds_MPG
ClassIds.mr_A_D_Level__Diffuse = _MaxPlus.cvar.ClassIds_mr_A_D_Level__Diffuse
ClassIds.mr_A_D_Level__Opacity = _MaxPlus.cvar.ClassIds_mr_A_D_Level__Opacity
ClassIds.mr_A_D_Level__Reflections = _MaxPlus.cvar.ClassIds_mr_A_D_Level__Reflections
ClassIds.mr_A_D_Level__Specular = _MaxPlus.cvar.ClassIds_mr_A_D_Level__Specular
ClassIds.mr_A_D_Level__Translucency = _MaxPlus.cvar.ClassIds_mr_A_D_Level__Translucency
ClassIds.mr_A_D_Level__Transparency = _MaxPlus.cvar.ClassIds_mr_A_D_Level__Transparency
ClassIds.mr_A_D_Output__Beauty = _MaxPlus.cvar.ClassIds_mr_A_D_Output__Beauty
ClassIds.mr_A_D_Output__Diffuse_Direct_Illumination = _MaxPlus.cvar.ClassIds_mr_A_D_Output__Diffuse_Direct_Illumination
ClassIds.mr_A_D_Output__Diffuse_Indirect_Illumination = _MaxPlus.cvar.ClassIds_mr_A_D_Output__Diffuse_Indirect_Illumination
ClassIds.mr_A_D_Output__Opacity_Background = _MaxPlus.cvar.ClassIds_mr_A_D_Output__Opacity_Background
ClassIds.mr_A_D_Output__Reflections = _MaxPlus.cvar.ClassIds_mr_A_D_Output__Reflections
ClassIds.mr_A_D_Output__Self_Illumination = _MaxPlus.cvar.ClassIds_mr_A_D_Output__Self_Illumination
ClassIds.mr_A_D_Output__Specular = _MaxPlus.cvar.ClassIds_mr_A_D_Output__Specular
ClassIds.mr_A_D_Output__Translucency = _MaxPlus.cvar.ClassIds_mr_A_D_Output__Translucency
ClassIds.mr_A_D_Output__Transparency = _MaxPlus.cvar.ClassIds_mr_A_D_Output__Transparency
ClassIds.mr_A_D_Raw__Ambient_Occlusion = _MaxPlus.cvar.ClassIds_mr_A_D_Raw__Ambient_Occlusion
ClassIds.mr_A_D_Raw__Diffuse_Direct_Illumination = _MaxPlus.cvar.ClassIds_mr_A_D_Raw__Diffuse_Direct_Illumination
ClassIds.mr_A_D_Raw__Diffuse_Indirect_Illumination = _MaxPlus.cvar.ClassIds_mr_A_D_Raw__Diffuse_Indirect_Illumination
ClassIds.mr_A_D_Raw__Opacity_Background = _MaxPlus.cvar.ClassIds_mr_A_D_Raw__Opacity_Background
ClassIds.mr_A_D_Raw__Reflections = _MaxPlus.cvar.ClassIds_mr_A_D_Raw__Reflections
ClassIds.mr_A_D_Raw__Specular = _MaxPlus.cvar.ClassIds_mr_A_D_Raw__Specular
ClassIds.mr_A_D_Raw__Translucency = _MaxPlus.cvar.ClassIds_mr_A_D_Raw__Translucency
ClassIds.mr_A_D_Raw__Transparency = _MaxPlus.cvar.ClassIds_mr_A_D_Raw__Transparency
ClassIds.mr_A_D_Xtra__Diffuse_Indirect_Illumination_with_AO = _MaxPlus.cvar.ClassIds_mr_A_D_Xtra__Diffuse_Indirect_Illumination_with_AO
ClassIds.mr_Binary_Proxy = _MaxPlus.cvar.ClassIds_mr_Binary_Proxy
ClassIds.mr_Card_Opacity = _MaxPlus.cvar.ClassIds_mr_Card_Opacity
ClassIds.mr_Labeled_Element = _MaxPlus.cvar.ClassIds_mr_Labeled_Element
ClassIds.mr_Labeled_ElementRenderElement = _MaxPlus.cvar.ClassIds_mr_Labeled_ElementRenderElement
ClassIds.mr_Matte_Shadow_Reflection = _MaxPlus.cvar.ClassIds_mr_Matte_Shadow_Reflection
ClassIds.mr_Matte_Shadow_Reflection_Mtl = _MaxPlus.cvar.ClassIds_mr_Matte_Shadow_Reflection_Mtl
ClassIds.mr_Photographic_Exposure_Control = _MaxPlus.cvar.ClassIds_mr_Photographic_Exposure_Control
ClassIds.mr_Physical_Sky = _MaxPlus.cvar.ClassIds_mr_Physical_Sky
ClassIds.mr_Proxy = _MaxPlus.cvar.ClassIds_mr_Proxy
ClassIds.mr_Raytype_Switcher = _MaxPlus.cvar.ClassIds_mr_Raytype_Switcher
ClassIds.mr_Raytype_Switcher__advanced = _MaxPlus.cvar.ClassIds_mr_Raytype_Switcher__advanced
ClassIds.mr_Shader_Element = _MaxPlus.cvar.ClassIds_mr_Shader_Element
ClassIds.mr_Sky = _MaxPlus.cvar.ClassIds_mr_Sky
ClassIds.mr_Sky_Portal = _MaxPlus.cvar.ClassIds_mr_Sky_Portal
ClassIds.mr_Sun = _MaxPlus.cvar.ClassIds_mr_Sun
ClassIds.mrArchMaterial_Shader = _MaxPlus.cvar.ClassIds_mrArchMaterial_Shader
ClassIds.mrArchMaterial_Shader_X = _MaxPlus.cvar.ClassIds_mrArchMaterial_Shader_X
ClassIds.mrOptions = _MaxPlus.cvar.ClassIds_mrOptions
ClassIds.mrPBParameter = _MaxPlus.cvar.ClassIds_mrPBParameter
ClassIds.MtlBaseLib = _MaxPlus.cvar.ClassIds_MtlBaseLib
ClassIds.MtlLib = _MaxPlus.cvar.ClassIds_MtlLib
ClassIds.Multi_Layer = _MaxPlus.cvar.ClassIds_Multi_Layer
ClassIds.Multi_Sub_Map = _MaxPlus.cvar.ClassIds_Multi_Sub_Map
ClassIds.Multimaterial = _MaxPlus.cvar.ClassIds_Multimaterial
ClassIds.MultiOutputChannelTexmapToTexmap = _MaxPlus.cvar.ClassIds_MultiOutputChannelTexmapToTexmap
ClassIds.Multiple_Delegate_Settings = _MaxPlus.cvar.ClassIds_Multiple_Delegate_Settings
ClassIds.Multiple_Delegates = _MaxPlus.cvar.ClassIds_Multiple_Delegates
ClassIds.Multiple_Edges = _MaxPlus.cvar.ClassIds_Multiple_Edges
ClassIds.MultiRes = _MaxPlus.cvar.ClassIds_MultiRes
ClassIds.Muscle_Handle = _MaxPlus.cvar.ClassIds_Muscle_Handle
ClassIds.Muscle_Strand = _MaxPlus.cvar.ClassIds_Muscle_Strand
ClassIds.MusclePatch = _MaxPlus.cvar.ClassIds_MusclePatch
ClassIds.My_Utility = _MaxPlus.cvar.ClassIds_My_Utility
ClassIds.MyBricks = _MaxPlus.cvar.ClassIds_MyBricks
ClassIds.MyBricksPhenomenon = _MaxPlus.cvar.ClassIds_MyBricksPhenomenon
ClassIds.NamedSelSetList = _MaxPlus.cvar.ClassIds_NamedSelSetList
ClassIds.NavInfo = _MaxPlus.cvar.ClassIds_NavInfo
ClassIds.NCurve_Sel = _MaxPlus.cvar.ClassIds_NCurve_Sel
ClassIds.negative = _MaxPlus.cvar.ClassIds_negative
ClassIds.Ngon = _MaxPlus.cvar.ClassIds_Ngon
ClassIds.Night__lume = _MaxPlus.cvar.ClassIds_Night__lume
ClassIds.Node_Visibility = _MaxPlus.cvar.ClassIds_Node_Visibility
ClassIds.NodeMonitor = _MaxPlus.cvar.ClassIds_NodeMonitor
ClassIds.NodeNamedSelSet = _MaxPlus.cvar.ClassIds_NodeNamedSelSet
ClassIds.NodeObject = _MaxPlus.cvar.ClassIds_NodeObject
ClassIds.NodeTransformMonitor = _MaxPlus.cvar.ClassIds_NodeTransformMonitor
ClassIds.Noise = _MaxPlus.cvar.ClassIds_Noise
ClassIds.Noise__3dsmax = _MaxPlus.cvar.ClassIds_Noise__3dsmax
ClassIds.Noise_float = _MaxPlus.cvar.ClassIds_Noise_float
ClassIds.Noise_point3 = _MaxPlus.cvar.ClassIds_Noise_point3
ClassIds.Noise_position = _MaxPlus.cvar.ClassIds_Noise_position
ClassIds.Noise_rotation = _MaxPlus.cvar.ClassIds_Noise_rotation
ClassIds.Noise_scale = _MaxPlus.cvar.ClassIds_Noise_scale
ClassIds.Noisemodifier = _MaxPlus.cvar.ClassIds_Noisemodifier
ClassIds.NoMaterial = _MaxPlus.cvar.ClassIds_NoMaterial
ClassIds.Normal_Bump = _MaxPlus.cvar.ClassIds_Normal_Bump
ClassIds.Normalize_Spl = _MaxPlus.cvar.ClassIds_Normalize_Spl
ClassIds.Normalmodifier = _MaxPlus.cvar.ClassIds_Normalmodifier
ClassIds.Normals_Bumpmap = _MaxPlus.cvar.ClassIds_Normals_Bumpmap
ClassIds.Normals_Make_Normal = _MaxPlus.cvar.ClassIds_Normals_Make_Normal
ClassIds.NormalsMap = _MaxPlus.cvar.ClassIds_NormalsMap
ClassIds.Notes = _MaxPlus.cvar.ClassIds_Notes
ClassIds.NotesReferenceTarget = _MaxPlus.cvar.ClassIds_NotesReferenceTarget
ClassIds.NoTexture = _MaxPlus.cvar.ClassIds_NoTexture
ClassIds.NSurf_Sel = _MaxPlus.cvar.ClassIds_NSurf_Sel
ClassIds.NullFilter = _MaxPlus.cvar.ClassIds_NullFilter
ClassIds.NURBS_Imported_Objects = _MaxPlus.cvar.ClassIds_NURBS_Imported_Objects
ClassIds.NURBSCurveshape = _MaxPlus.cvar.ClassIds_NURBSCurveshape
ClassIds.NURBSSurf = _MaxPlus.cvar.ClassIds_NURBSSurf
ClassIds.nvBox = _MaxPlus.cvar.ClassIds_nvBox
ClassIds.nvCapsule = _MaxPlus.cvar.ClassIds_nvCapsule
ClassIds.nvRagdoll = _MaxPlus.cvar.ClassIds_nvRagdoll
ClassIds.nvSphere = _MaxPlus.cvar.ClassIds_nvSphere
ClassIds.ObjAssoc = _MaxPlus.cvar.ClassIds_ObjAssoc
ClassIds.Object_Color = _MaxPlus.cvar.ClassIds_Object_Color
ClassIds.Object_Display_Culling = _MaxPlus.cvar.ClassIds_Object_Display_Culling
ClassIds.Object_ID = _MaxPlus.cvar.ClassIds_Object_ID
ClassIds.ObjectParameter = _MaxPlus.cvar.ClassIds_ObjectParameter
ClassIds.objectReferenceTarget = _MaxPlus.cvar.ClassIds_objectReferenceTarget
ClassIds.ObjExp = _MaxPlus.cvar.ClassIds_ObjExp
ClassIds.ObjImp = _MaxPlus.cvar.ClassIds_ObjImp
ClassIds.Ocean__lume = _MaxPlus.cvar.ClassIds_Ocean__lume
ClassIds.OilTank = _MaxPlus.cvar.ClassIds_OilTank
ClassIds.Old_Point_Cache = _MaxPlus.cvar.ClassIds_Old_Point_Cache
ClassIds.Old_Point_CacheSpacewarpModifier = _MaxPlus.cvar.ClassIds_Old_Point_CacheSpacewarpModifier
ClassIds.OldBoolean = _MaxPlus.cvar.ClassIds_OldBoolean
ClassIds.OldVertexPaint = _MaxPlus.cvar.ClassIds_OldVertexPaint
ClassIds.Omnilight = _MaxPlus.cvar.ClassIds_Omnilight
ClassIds.On_Off = _MaxPlus.cvar.ClassIds_On_Off
ClassIds.One_Click_Particle_Flow = _MaxPlus.cvar.ClassIds_One_Click_Particle_Flow
ClassIds.OneClick = _MaxPlus.cvar.ClassIds_OneClick
ClassIds.Opacity__base = _MaxPlus.cvar.ClassIds_Opacity__base
ClassIds.Open_Edges = _MaxPlus.cvar.ClassIds_Open_Edges
ClassIds.OpenEXR = _MaxPlus.cvar.ClassIds_OpenEXR
ClassIds.OpenFltExport = _MaxPlus.cvar.ClassIds_OpenFltExport
ClassIds.OpenSubdivMod = _MaxPlus.cvar.ClassIds_OpenSubdivMod
ClassIds.optimize = _MaxPlus.cvar.ClassIds_optimize
ClassIds.Orbaz_Mix = _MaxPlus.cvar.ClassIds_Orbaz_Mix
ClassIds.Oren_Nayar_Blinn = _MaxPlus.cvar.ClassIds_Oren_Nayar_Blinn
ClassIds.Orientation_Behavior = _MaxPlus.cvar.ClassIds_Orientation_Behavior
ClassIds.Orientation_Constraint = _MaxPlus.cvar.ClassIds_Orientation_Constraint
ClassIds.output = _MaxPlus.cvar.ClassIds_output
ClassIds.Output__3dsmax = _MaxPlus.cvar.ClassIds_Output__3dsmax
ClassIds.Output_mParticles = _MaxPlus.cvar.ClassIds_Output_mParticles
ClassIds.OutputCustom = _MaxPlus.cvar.ClassIds_OutputCustom
ClassIds.OutputNew = _MaxPlus.cvar.ClassIds_OutputNew
ClassIds.OutputStandard = _MaxPlus.cvar.ClassIds_OutputStandard
ClassIds.OutputTest = _MaxPlus.cvar.ClassIds_OutputTest
ClassIds.Overlapped_UVW_Faces = _MaxPlus.cvar.ClassIds_Overlapped_UVW_Faces
ClassIds.Overlapping_Faces = _MaxPlus.cvar.ClassIds_Overlapping_Faces
ClassIds.Overlapping_Vertices = _MaxPlus.cvar.ClassIds_Overlapping_Vertices
ClassIds.Oversampling_Lens__physics = _MaxPlus.cvar.ClassIds_Oversampling_Lens__physics
ClassIds.Paint = _MaxPlus.cvar.ClassIds_Paint
ClassIds.PainterInterface = _MaxPlus.cvar.ClassIds_PainterInterface
ClassIds.PalmTrans = _MaxPlus.cvar.ClassIds_PalmTrans
ClassIds.Panorama_Exporter = _MaxPlus.cvar.ClassIds_Panorama_Exporter
ClassIds.ParamBlock2ParamBlock2 = _MaxPlus.cvar.ClassIds_ParamBlock2ParamBlock2
ClassIds.ParamBlockParamBlock = _MaxPlus.cvar.ClassIds_ParamBlockParamBlock
ClassIds.parameter = _MaxPlus.cvar.ClassIds_parameter
ClassIds.ParameterCollectorCA = _MaxPlus.cvar.ClassIds_ParameterCollectorCA
ClassIds.ParameterEditor = _MaxPlus.cvar.ClassIds_ParameterEditor
ClassIds.PArray = _MaxPlus.cvar.ClassIds_PArray
ClassIds.ParserLoader = _MaxPlus.cvar.ClassIds_ParserLoader
ClassIds.Parti_Volume__physics = _MaxPlus.cvar.ClassIds_Parti_Volume__physics
ClassIds.Parti_Volume__physics_legacy = _MaxPlus.cvar.ClassIds_Parti_Volume__physics_legacy
ClassIds.Parti_Volume_Photon__physics = _MaxPlus.cvar.ClassIds_Parti_Volume_Photon__physics
ClassIds.Parti_Volume_Photon__physicstextureMap = _MaxPlus.cvar.ClassIds_Parti_Volume_Photon__physicstextureMap
ClassIds.Particle_Age = _MaxPlus.cvar.ClassIds_Particle_Age
ClassIds.Particle_Age__3dsmax = _MaxPlus.cvar.ClassIds_Particle_Age__3dsmax
ClassIds.Particle_Bitmap = _MaxPlus.cvar.ClassIds_Particle_Bitmap
ClassIds.Particle_Blur__3dsmax = _MaxPlus.cvar.ClassIds_Particle_Blur__3dsmax
ClassIds.Particle_Cache = _MaxPlus.cvar.ClassIds_Particle_Cache
ClassIds.Particle_Face_Creator = _MaxPlus.cvar.ClassIds_Particle_Face_Creator
ClassIds.Particle_Flow_Global_Actions = _MaxPlus.cvar.ClassIds_Particle_Flow_Global_Actions
ClassIds.Particle_Flow_Tools_Global_Utility = _MaxPlus.cvar.ClassIds_Particle_Flow_Tools_Global_Utility
ClassIds.Particle_Flow_Utility = _MaxPlus.cvar.ClassIds_Particle_Flow_Utility
ClassIds.Particle_MBlur = _MaxPlus.cvar.ClassIds_Particle_MBlur
ClassIds.Particle_Paint = _MaxPlus.cvar.ClassIds_Particle_Paint
ClassIds.Particle_Paint_Cursor = _MaxPlus.cvar.ClassIds_Particle_Paint_Cursor
ClassIds.Particle_Skinner = _MaxPlus.cvar.ClassIds_Particle_Skinner
ClassIds.Particle_View = _MaxPlus.cvar.ClassIds_Particle_View
ClassIds.Particle_View_Global_Actions = _MaxPlus.cvar.ClassIds_Particle_View_Global_Actions
ClassIds.ParticleContainer = _MaxPlus.cvar.ClassIds_ParticleContainer
ClassIds.ParticleGroup = _MaxPlus.cvar.ClassIds_ParticleGroup
ClassIds.Particles = _MaxPlus.cvar.ClassIds_Particles
ClassIds.Passthrough_Bump_Map__base = _MaxPlus.cvar.ClassIds_Passthrough_Bump_Map__base
ClassIds.Paste_Skin_Weights = _MaxPlus.cvar.ClassIds_Paste_Skin_Weights
ClassIds.Patch_Select = _MaxPlus.cvar.ClassIds_Patch_Select
ClassIds.PatchDeform = _MaxPlus.cvar.ClassIds_PatchDeform
ClassIds.Path_Constraint = _MaxPlus.cvar.ClassIds_Path_Constraint
ClassIds.Path_Follow = _MaxPlus.cvar.ClassIds_Path_Follow
ClassIds.Path_Follow_Behavior = _MaxPlus.cvar.ClassIds_Path_Follow_Behavior
ClassIds.Path_FollowMod = _MaxPlus.cvar.ClassIds_Path_FollowMod
ClassIds.Path_Material__physics = _MaxPlus.cvar.ClassIds_Path_Material__physics
ClassIds.PathDeform = _MaxPlus.cvar.ClassIds_PathDeform
ClassIds.PathDeformSpaceWarp = _MaxPlus.cvar.ClassIds_PathDeformSpaceWarp
ClassIds.PB2Parameter = _MaxPlus.cvar.ClassIds_PB2Parameter
ClassIds.PBomb = _MaxPlus.cvar.ClassIds_PBomb
ClassIds.PBombMod = _MaxPlus.cvar.ClassIds_PBombMod
ClassIds.PCloud = _MaxPlus.cvar.ClassIds_PCloud
ClassIds.PDAlpha = _MaxPlus.cvar.ClassIds_PDAlpha
ClassIds.Perlin_Marble = _MaxPlus.cvar.ClassIds_Perlin_Marble
ClassIds.Perlin_Marble__3dsmax = _MaxPlus.cvar.ClassIds_Perlin_Marble__3dsmax
ClassIds.PersistentIsolationData = _MaxPlus.cvar.ClassIds_PersistentIsolationData
ClassIds.PersistentNodeSet = _MaxPlus.cvar.ClassIds_PersistentNodeSet
ClassIds.Perspective_Match = _MaxPlus.cvar.ClassIds_Perspective_Match
ClassIds.PF_NotifyDep_Catcher = _MaxPlus.cvar.ClassIds_PF_NotifyDep_Catcher
ClassIds.PF_Source = _MaxPlus.cvar.ClassIds_PF_Source
ClassIds.PFActionListPool = _MaxPlus.cvar.ClassIds_PFActionListPool
ClassIds.PFArrow = _MaxPlus.cvar.ClassIds_PFArrow
ClassIds.PFEngine = _MaxPlus.cvar.ClassIds_PFEngine
ClassIds.PFlow_Collision_Shape = _MaxPlus.cvar.ClassIds_PFlow_Collision_Shape
ClassIds.PFSystemPool = _MaxPlus.cvar.ClassIds_PFSystemPool
ClassIds.PhilBitmap = _MaxPlus.cvar.ClassIds_PhilBitmap
ClassIds.Phong = _MaxPlus.cvar.ClassIds_Phong
ClassIds.Photon_Basic__base = _MaxPlus.cvar.ClassIds_Photon_Basic__base
ClassIds.Physical_Lens_DOF__physics = _MaxPlus.cvar.ClassIds_Physical_Lens_DOF__physics
ClassIds.Physical_Light__physics = _MaxPlus.cvar.ClassIds_Physical_Light__physics
ClassIds.PhysicalMaterialManager = _MaxPlus.cvar.ClassIds_PhysicalMaterialManager
ClassIds.Physique = _MaxPlus.cvar.ClassIds_Physique
ClassIds.PhysX_and_APEX_Exporter = _MaxPlus.cvar.ClassIds_PhysX_and_APEX_Exporter
ClassIds.PhysX_Debug_Visualizer = _MaxPlus.cvar.ClassIds_PhysX_Debug_Visualizer
ClassIds.PhysXPanel = _MaxPlus.cvar.ClassIds_PhysXPanel
ClassIds.PhysXPanelGlobalUtilityPlugin = _MaxPlus.cvar.ClassIds_PhysXPanelGlobalUtilityPlugin
ClassIds.PhysXShapeConvex = _MaxPlus.cvar.ClassIds_PhysXShapeConvex
ClassIds.Pipe = _MaxPlus.cvar.ClassIds_Pipe
ClassIds.PipeReferenceTarget = _MaxPlus.cvar.ClassIds_PipeReferenceTarget
ClassIds.pivot = _MaxPlus.cvar.ClassIds_pivot
ClassIds.Pivoted = _MaxPlus.cvar.ClassIds_Pivoted
ClassIds.Placement_Paint = _MaxPlus.cvar.ClassIds_Placement_Paint
ClassIds.PlanarCollision = _MaxPlus.cvar.ClassIds_PlanarCollision
ClassIds.Plane = _MaxPlus.cvar.ClassIds_Plane
ClassIds.Plane_Angle = _MaxPlus.cvar.ClassIds_Plane_Angle
ClassIds.Planet = _MaxPlus.cvar.ClassIds_Planet
ClassIds.Planet__3dsmax = _MaxPlus.cvar.ClassIds_Planet__3dsmax
ClassIds.Plate_Match_MAX_R2 = _MaxPlus.cvar.ClassIds_Plate_Match_MAX_R2
ClassIds.Plug_in_Manager = _MaxPlus.cvar.ClassIds_Plug_in_Manager
ClassIds.PluginMarkerForBox3 = _MaxPlus.cvar.ClassIds_PluginMarkerForBox3
ClassIds.PMAlpha = _MaxPlus.cvar.ClassIds_PMAlpha
ClassIds.Point = _MaxPlus.cvar.ClassIds_Point
ClassIds.Point3_Expression = _MaxPlus.cvar.ClassIds_Point3_Expression
ClassIds.Point3_Layer = _MaxPlus.cvar.ClassIds_Point3_Layer
ClassIds.point3_list = _MaxPlus.cvar.ClassIds_point3_list
ClassIds.point3_ListDummyEntry = _MaxPlus.cvar.ClassIds_point3_ListDummyEntry
ClassIds.Point3_Mixer_Controller = _MaxPlus.cvar.ClassIds_Point3_Mixer_Controller
ClassIds.Point3_Motion_Capture = _MaxPlus.cvar.ClassIds_Point3_Motion_Capture
ClassIds.Point3_Reactor = _MaxPlus.cvar.ClassIds_Point3_Reactor
ClassIds.point3_script = _MaxPlus.cvar.ClassIds_point3_script
ClassIds.Point3_Wire = _MaxPlus.cvar.ClassIds_Point3_Wire
ClassIds.Point3_XYZ = _MaxPlus.cvar.ClassIds_Point3_XYZ
ClassIds.Point4_Layer = _MaxPlus.cvar.ClassIds_Point4_Layer
ClassIds.point4_list = _MaxPlus.cvar.ClassIds_point4_list
ClassIds.point4_ListDummyEntry = _MaxPlus.cvar.ClassIds_point4_ListDummyEntry
ClassIds.Point4_Mixer_Controller = _MaxPlus.cvar.ClassIds_Point4_Mixer_Controller
ClassIds.point4_script = _MaxPlus.cvar.ClassIds_point4_script
ClassIds.Point4_Wire = _MaxPlus.cvar.ClassIds_Point4_Wire
ClassIds.Point4_XYZW = _MaxPlus.cvar.ClassIds_Point4_XYZW
ClassIds.Point_Cache = _MaxPlus.cvar.ClassIds_Point_Cache
ClassIds.Point_CacheSpacewarpModifier = _MaxPlus.cvar.ClassIds_Point_CacheSpacewarpModifier
ClassIds.Point_Curve = _MaxPlus.cvar.ClassIds_Point_Curve
ClassIds.Point_Curveshape = _MaxPlus.cvar.ClassIds_Point_Curveshape
ClassIds.Point_Surf = _MaxPlus.cvar.ClassIds_Point_Surf
ClassIds.Point_SurfGeometry = _MaxPlus.cvar.ClassIds_Point_SurfGeometry
ClassIds.PointPacket = _MaxPlus.cvar.ClassIds_PointPacket
ClassIds.Poly_Select = _MaxPlus.cvar.ClassIds_Poly_Select
ClassIds.Polygon_Counter = _MaxPlus.cvar.ClassIds_Polygon_Counter
ClassIds.PolyMeshObject = _MaxPlus.cvar.ClassIds_PolyMeshObject
ClassIds.PolymorphicGeom = _MaxPlus.cvar.ClassIds_PolymorphicGeom
ClassIds.PolymorphicGeomshape = _MaxPlus.cvar.ClassIds_PolymorphicGeomshape
ClassIds.PolyToolsModeling = _MaxPlus.cvar.ClassIds_PolyToolsModeling
ClassIds.PolyToolsPaintDeform = _MaxPlus.cvar.ClassIds_PolyToolsPaintDeform
ClassIds.PolyToolsPolyDraw = _MaxPlus.cvar.ClassIds_PolyToolsPolyDraw
ClassIds.PolyToolsSelect = _MaxPlus.cvar.ClassIds_PolyToolsSelect
ClassIds.PolyToolsShift = _MaxPlus.cvar.ClassIds_PolyToolsShift
ClassIds.PolyToolsTopology = _MaxPlus.cvar.ClassIds_PolyToolsTopology
ClassIds.PolyToolsUVWTweak = _MaxPlus.cvar.ClassIds_PolyToolsUVWTweak
ClassIds.POmniFlect = _MaxPlus.cvar.ClassIds_POmniFlect
ClassIds.POmniFlectMod = _MaxPlus.cvar.ClassIds_POmniFlectMod
ClassIds.PopCharacter = _MaxPlus.cvar.ClassIds_PopCharacter
ClassIds.PopSegControl = _MaxPlus.cvar.ClassIds_PopSegControl
ClassIds.PopSkinControl = _MaxPlus.cvar.ClassIds_PopSkinControl
ClassIds.PopSkinObject = _MaxPlus.cvar.ClassIds_PopSkinObject
ClassIds.Populate = _MaxPlus.cvar.ClassIds_Populate
ClassIds.Portable_Network_Graphics = _MaxPlus.cvar.ClassIds_Portable_Network_Graphics
ClassIds.Position_Constraint = _MaxPlus.cvar.ClassIds_Position_Constraint
ClassIds.Position_Expression = _MaxPlus.cvar.ClassIds_Position_Expression
ClassIds.Position_Icon = _MaxPlus.cvar.ClassIds_Position_Icon
ClassIds.Position_Layer = _MaxPlus.cvar.ClassIds_Position_Layer
ClassIds.position_list = _MaxPlus.cvar.ClassIds_position_list
ClassIds.position_ListDummyEntry = _MaxPlus.cvar.ClassIds_position_ListDummyEntry
ClassIds.Position_Manip = _MaxPlus.cvar.ClassIds_Position_Manip
ClassIds.Position_Mixer_Controller = _MaxPlus.cvar.ClassIds_Position_Mixer_Controller
ClassIds.Position_Motion_Capture = _MaxPlus.cvar.ClassIds_Position_Motion_Capture
ClassIds.Position_Object = _MaxPlus.cvar.ClassIds_Position_Object
ClassIds.Position_Reactor = _MaxPlus.cvar.ClassIds_Position_Reactor
ClassIds.position_script = _MaxPlus.cvar.ClassIds_position_script
ClassIds.Position_Value = _MaxPlus.cvar.ClassIds_Position_Value
ClassIds.Position_Wire = _MaxPlus.cvar.ClassIds_Position_Wire
ClassIds.Position_XYZ = _MaxPlus.cvar.ClassIds_Position_XYZ
ClassIds.Preserve = _MaxPlus.cvar.ClassIds_Preserve
ClassIds.Preset_Flow = _MaxPlus.cvar.ClassIds_Preset_Flow
ClassIds.PresetDummyOperator = _MaxPlus.cvar.ClassIds_PresetDummyOperator
ClassIds.PresetDummyOperIcon = _MaxPlus.cvar.ClassIds_PresetDummyOperIcon
ClassIds.PresetDummyTest = _MaxPlus.cvar.ClassIds_PresetDummyTest
ClassIds.PresetOperator = _MaxPlus.cvar.ClassIds_PresetOperator
ClassIds.PresetOperIcon = _MaxPlus.cvar.ClassIds_PresetOperIcon
ClassIds.PresetTest = _MaxPlus.cvar.ClassIds_PresetTest
ClassIds.PresetTestIcon = _MaxPlus.cvar.ClassIds_PresetTestIcon
ClassIds.Priority = _MaxPlus.cvar.ClassIds_Priority
ClassIds.Prism = _MaxPlus.cvar.ClassIds_Prism
ClassIds.ProBoolean = _MaxPlus.cvar.ClassIds_ProBoolean
ClassIds.ProCutter = _MaxPlus.cvar.ClassIds_ProCutter
ClassIds.ProEngineer_Assembly_Import = _MaxPlus.cvar.ClassIds_ProEngineer_Assembly_Import
ClassIds.ProEngineer_Import = _MaxPlus.cvar.ClassIds_ProEngineer_Import
ClassIds.Project_Mapping = _MaxPlus.cvar.ClassIds_Project_Mapping
ClassIds.Project_Mapping_Holder = _MaxPlus.cvar.ClassIds_Project_Mapping_Holder
ClassIds.projected = _MaxPlus.cvar.ClassIds_projected
ClassIds.Projection = _MaxPlus.cvar.ClassIds_Projection
ClassIds.ProMaterials__Ceramic_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Ceramic_V2
ClassIds.ProMaterials__Concrete_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Concrete_V2
ClassIds.ProMaterials__Generic_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Generic_V2
ClassIds.ProMaterials__Glazing_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Glazing_V2
ClassIds.ProMaterials__Hardwood_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Hardwood_V2
ClassIds.ProMaterials__Masonry_CMU_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Masonry_CMU_V2
ClassIds.ProMaterials__Metal_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Metal_V2
ClassIds.ProMaterials__Metallic_Paint_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Metallic_Paint_V2
ClassIds.ProMaterials__Mirror_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Mirror_V2
ClassIds.ProMaterials__Plastic_Vinyl_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Plastic_Vinyl_V2
ClassIds.ProMaterials__Solid_Glass_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Solid_Glass_V2
ClassIds.ProMaterials__Stone_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Stone_V2
ClassIds.ProMaterials__Wall_Paint_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Wall_Paint_V2
ClassIds.ProMaterials__Water_V2 = _MaxPlus.cvar.ClassIds_ProMaterials__Water_V2
ClassIds.ProOptimizer = _MaxPlus.cvar.ClassIds_ProOptimizer
ClassIds.ProSound = _MaxPlus.cvar.ClassIds_ProSound
ClassIds.Protractor = _MaxPlus.cvar.ClassIds_Protractor
ClassIds.ProxSensor = _MaxPlus.cvar.ClassIds_ProxSensor
ClassIds.prs = _MaxPlus.cvar.ClassIds_prs
ClassIds.PSD_I_O = _MaxPlus.cvar.ClassIds_PSD_I_O
ClassIds.Pseudo_Color_Camera_Exposure__3dsmax = _MaxPlus.cvar.ClassIds_Pseudo_Color_Camera_Exposure__3dsmax
ClassIds.Pseudo_Color_Camera_Exposure__3dsmaxtextureMap = _MaxPlus.cvar.ClassIds_Pseudo_Color_Camera_Exposure__3dsmaxtextureMap
ClassIds.Pseudo_Color_Exposure_Control = _MaxPlus.cvar.ClassIds_Pseudo_Color_Exposure_Control
ClassIds.Push = _MaxPlus.cvar.ClassIds_Push
ClassIds.PushMod = _MaxPlus.cvar.ClassIds_PushMod
ClassIds.PushSpaceWarp = _MaxPlus.cvar.ClassIds_PushSpaceWarp
ClassIds.PView_Manager = _MaxPlus.cvar.ClassIds_PView_Manager
ClassIds.pxJoint = _MaxPlus.cvar.ClassIds_pxJoint
ClassIds.Pyramid = _MaxPlus.cvar.ClassIds_Pyramid
ClassIds.PythonHost = _MaxPlus.cvar.ClassIds_PythonHost
ClassIds.QTime = _MaxPlus.cvar.ClassIds_QTime
ClassIds.Quadify_Mesh = _MaxPlus.cvar.ClassIds_Quadify_Mesh
ClassIds.quadPatch = _MaxPlus.cvar.ClassIds_quadPatch
ClassIds.Quadratic = _MaxPlus.cvar.ClassIds_Quadratic
ClassIds.QuarterRound = _MaxPlus.cvar.ClassIds_QuarterRound
ClassIds.Quicksilver_Hardware_Renderer = _MaxPlus.cvar.ClassIds_Quicksilver_Hardware_Renderer
ClassIds.Radiosity = _MaxPlus.cvar.ClassIds_Radiosity
ClassIds.radiusManip = _MaxPlus.cvar.ClassIds_radiusManip
ClassIds.RagdollVisualizer = _MaxPlus.cvar.ClassIds_RagdollVisualizer
ClassIds.Railing = _MaxPlus.cvar.ClassIds_Railing
ClassIds.Randomize_Keys = _MaxPlus.cvar.ClassIds_Randomize_Keys
ClassIds.randomReferenceTarget = _MaxPlus.cvar.ClassIds_randomReferenceTarget
ClassIds.RandomWalk = _MaxPlus.cvar.ClassIds_RandomWalk
ClassIds.Raster_Image_Packet = _MaxPlus.cvar.ClassIds_Raster_Image_Packet
ClassIds.Raster_Image_Translator = _MaxPlus.cvar.ClassIds_Raster_Image_Translator
ClassIds.Ray_Element = _MaxPlus.cvar.ClassIds_Ray_Element
ClassIds.Ray_Engine = _MaxPlus.cvar.ClassIds_Ray_Engine
ClassIds.Ray_Marcher__base = _MaxPlus.cvar.ClassIds_Ray_Marcher__base
ClassIds.RayFX = _MaxPlus.cvar.ClassIds_RayFX
ClassIds.RayMeshGridIntersect = _MaxPlus.cvar.ClassIds_RayMeshGridIntersect
ClassIds.Raytrace = _MaxPlus.cvar.ClassIds_Raytrace
ClassIds.Raytrace_Texture_ParamBlock = _MaxPlus.cvar.ClassIds_Raytrace_Texture_ParamBlock
ClassIds.RaytraceGlobalSettings = _MaxPlus.cvar.ClassIds_RaytraceGlobalSettings
ClassIds.RaytraceMaterial = _MaxPlus.cvar.ClassIds_RaytraceMaterial
ClassIds.raytraceShadow = _MaxPlus.cvar.ClassIds_raytraceShadow
ClassIds.Reaction_Manager = _MaxPlus.cvar.ClassIds_Reaction_Manager
ClassIds.Reaction_Master = _MaxPlus.cvar.ClassIds_Reaction_Master
ClassIds.Reaction_Set = _MaxPlus.cvar.ClassIds_Reaction_Set
ClassIds.Reactor_Angle_Manip = _MaxPlus.cvar.ClassIds_Reactor_Angle_Manip
ClassIds.Rectangle = _MaxPlus.cvar.ClassIds_Rectangle
ClassIds.Reflect__base = _MaxPlus.cvar.ClassIds_Reflect__base
ClassIds.Reflect_Refract = _MaxPlus.cvar.ClassIds_Reflect_Refract
ClassIds.Reflect_Refract__3dsmax = _MaxPlus.cvar.ClassIds_Reflect_Refract__3dsmax
ClassIds.Reflection = _MaxPlus.cvar.ClassIds_Reflection
ClassIds.Refract__base = _MaxPlus.cvar.ClassIds_Refract__base
ClassIds.Refraction = _MaxPlus.cvar.ClassIds_Refraction
ClassIds.Refraction_Index__base = _MaxPlus.cvar.ClassIds_Refraction_Index__base
ClassIds.RefTargContainer = _MaxPlus.cvar.ClassIds_RefTargContainer
ClassIds.RefTargMonitor = _MaxPlus.cvar.ClassIds_RefTargMonitor
ClassIds.Relax = _MaxPlus.cvar.ClassIds_Relax
ClassIds.Render_Subset_of_Scene_Masking__mi = _MaxPlus.cvar.ClassIds_Render_Subset_of_Scene_Masking__mi
ClassIds.Renderable_Spline = _MaxPlus.cvar.ClassIds_Renderable_Spline
ClassIds.RenderEffects = _MaxPlus.cvar.ClassIds_RenderEffects
ClassIds.RenderElementMgr = _MaxPlus.cvar.ClassIds_RenderElementMgr
ClassIds.RenderEnvironment = _MaxPlus.cvar.ClassIds_RenderEnvironment
ClassIds.RenderParticles = _MaxPlus.cvar.ClassIds_RenderParticles
ClassIds.Repel_Behavior = _MaxPlus.cvar.ClassIds_Repel_Behavior
ClassIds.Rescale_World_Units = _MaxPlus.cvar.ClassIds_Rescale_World_Units
ClassIds.Reservoir = _MaxPlus.cvar.ClassIds_Reservoir
ClassIds.Reset_XForm = _MaxPlus.cvar.ClassIds_Reset_XForm
ClassIds.Resource_Collector = _MaxPlus.cvar.ClassIds_Resource_Collector
ClassIds.Retimer = _MaxPlus.cvar.ClassIds_Retimer
ClassIds.rgb = _MaxPlus.cvar.ClassIds_rgb
ClassIds.RGB_Multiply = _MaxPlus.cvar.ClassIds_RGB_Multiply
ClassIds.RGB_Multiply__3dsmax = _MaxPlus.cvar.ClassIds_RGB_Multiply__3dsmax
ClassIds.RGB_Tint = _MaxPlus.cvar.ClassIds_RGB_Tint
ClassIds.RGB_to_BW = _MaxPlus.cvar.ClassIds_RGB_to_BW
ClassIds.Ring_Array = _MaxPlus.cvar.ClassIds_Ring_Array
ClassIds.Ring_Element = _MaxPlus.cvar.ClassIds_Ring_Element
ClassIds.RingWave = _MaxPlus.cvar.ClassIds_RingWave
ClassIds.Ripple = _MaxPlus.cvar.ClassIds_Ripple
ClassIds.Ripplebinding = _MaxPlus.cvar.ClassIds_Ripplebinding
ClassIds.RLA = _MaxPlus.cvar.ClassIds_RLA
ClassIds.RmModel = _MaxPlus.cvar.ClassIds_RmModel
ClassIds.RmModelGeometry = _MaxPlus.cvar.ClassIds_RmModelGeometry
ClassIds.RootNodeClass = _MaxPlus.cvar.ClassIds_RootNodeClass
ClassIds.rotation = _MaxPlus.cvar.ClassIds_rotation
ClassIds.Rotation_Layer = _MaxPlus.cvar.ClassIds_Rotation_Layer
ClassIds.rotation_list = _MaxPlus.cvar.ClassIds_rotation_list
ClassIds.rotation_ListDummyEntry = _MaxPlus.cvar.ClassIds_rotation_ListDummyEntry
ClassIds.Rotation_Mixer_Controller = _MaxPlus.cvar.ClassIds_Rotation_Mixer_Controller
ClassIds.Rotation_Motion_Capture = _MaxPlus.cvar.ClassIds_Rotation_Motion_Capture
ClassIds.Rotation_Reactor = _MaxPlus.cvar.ClassIds_Rotation_Reactor
ClassIds.rotation_script = _MaxPlus.cvar.ClassIds_rotation_script
ClassIds.Rotation_Wire = _MaxPlus.cvar.ClassIds_Rotation_Wire
ClassIds.RPF = _MaxPlus.cvar.ClassIds_RPF
ClassIds.RvtComponentPacket = _MaxPlus.cvar.ClassIds_RvtComponentPacket
ClassIds.RvtElementtPacket = _MaxPlus.cvar.ClassIds_RvtElementtPacket
ClassIds.RvtObjTranslator = _MaxPlus.cvar.ClassIds_RvtObjTranslator
ClassIds.SATImport = _MaxPlus.cvar.ClassIds_SATImport
ClassIds.Save_Verification = _MaxPlus.cvar.ClassIds_Save_Verification
ClassIds.Scalar = _MaxPlus.cvar.ClassIds_Scalar
ClassIds.Scale_Expression = _MaxPlus.cvar.ClassIds_Scale_Expression
ClassIds.Scale_Layer = _MaxPlus.cvar.ClassIds_Scale_Layer
ClassIds.scale_list = _MaxPlus.cvar.ClassIds_scale_list
ClassIds.scale_ListDummyEntry = _MaxPlus.cvar.ClassIds_scale_ListDummyEntry
ClassIds.Scale_Mixer_Controller = _MaxPlus.cvar.ClassIds_Scale_Mixer_Controller
ClassIds.Scale_Motion_Capture = _MaxPlus.cvar.ClassIds_Scale_Motion_Capture
ClassIds.Scale_Reactor = _MaxPlus.cvar.ClassIds_Scale_Reactor
ClassIds.scale_script = _MaxPlus.cvar.ClassIds_scale_script
ClassIds.Scale_Test = _MaxPlus.cvar.ClassIds_Scale_Test
ClassIds.Scale_Wire = _MaxPlus.cvar.ClassIds_Scale_Wire
ClassIds.ScaleParticles = _MaxPlus.cvar.ClassIds_ScaleParticles
ClassIds.ScaleXYZ = _MaxPlus.cvar.ClassIds_ScaleXYZ
ClassIds.Scatter = _MaxPlus.cvar.ClassIds_Scatter
ClassIds.ScatterReferenceTarget = _MaxPlus.cvar.ClassIds_ScatterReferenceTarget
ClassIds.Scene = _MaxPlus.cvar.ClassIds_Scene
ClassIds.Scene_Effect_Loader = _MaxPlus.cvar.ClassIds_Scene_Effect_Loader
ClassIds.Scene_Effect_LoaderUtilityPlugin = _MaxPlus.cvar.ClassIds_Scene_Effect_LoaderUtilityPlugin
ClassIds.Scene_State = _MaxPlus.cvar.ClassIds_Scene_State
ClassIds.Scene_State_Manager = _MaxPlus.cvar.ClassIds_Scene_State_Manager
ClassIds.Script_Operator = _MaxPlus.cvar.ClassIds_Script_Operator
ClassIds.Script_Test = _MaxPlus.cvar.ClassIds_Script_Test
ClassIds.Scripted_Behavior = _MaxPlus.cvar.ClassIds_Scripted_Behavior
ClassIds.SDeflectMod = _MaxPlus.cvar.ClassIds_SDeflectMod
ClassIds.SDeflector = _MaxPlus.cvar.ClassIds_SDeflector
ClassIds.section = _MaxPlus.cvar.ClassIds_section
ClassIds.Seek_Behavior = _MaxPlus.cvar.ClassIds_Seek_Behavior
ClassIds.Select_By_Channel = _MaxPlus.cvar.ClassIds_Select_By_Channel
ClassIds.Select_Keys_by_Time = _MaxPlus.cvar.ClassIds_Select_Keys_by_Time
ClassIds.Select_Object = _MaxPlus.cvar.ClassIds_Select_Object
ClassIds.Select_the_Biped_for_use_as_a_retargeting_reference = _MaxPlus.cvar.ClassIds_Select_the_Biped_for_use_as_a_retargeting_reference
ClassIds.Self_Illumination = _MaxPlus.cvar.ClassIds_Self_Illumination
ClassIds.Send_Out = _MaxPlus.cvar.ClassIds_Send_Out
ClassIds.Shader_List__Bump = _MaxPlus.cvar.ClassIds_Shader_List__Bump
ClassIds.Shader_List__Displacement = _MaxPlus.cvar.ClassIds_Shader_List__Displacement
ClassIds.Shader_List__Environment = _MaxPlus.cvar.ClassIds_Shader_List__Environment
ClassIds.Shader_List__Lens = _MaxPlus.cvar.ClassIds_Shader_List__Lens
ClassIds.Shader_List__Output = _MaxPlus.cvar.ClassIds_Shader_List__Output
ClassIds.Shader_List__Photon_Volume = _MaxPlus.cvar.ClassIds_Shader_List__Photon_Volume
ClassIds.Shader_List__Shadow = _MaxPlus.cvar.ClassIds_Shader_List__Shadow
ClassIds.Shader_List__Texture = _MaxPlus.cvar.ClassIds_Shader_List__Texture
ClassIds.Shader_List__Volume = _MaxPlus.cvar.ClassIds_Shader_List__Volume
ClassIds.Shadow_Transparency__base = _MaxPlus.cvar.ClassIds_Shadow_Transparency__base
ClassIds.shadowMap = _MaxPlus.cvar.ClassIds_shadowMap
ClassIds.ShadowRenderElement = _MaxPlus.cvar.ClassIds_ShadowRenderElement
ClassIds.ShadowsMap = _MaxPlus.cvar.ClassIds_ShadowsMap
ClassIds.Shape_Check = _MaxPlus.cvar.ClassIds_Shape_Check
ClassIds.Shape_Facing = _MaxPlus.cvar.ClassIds_Shape_Facing
ClassIds.Shape_Instance = _MaxPlus.cvar.ClassIds_Shape_Instance
ClassIds.Shape_Mark = _MaxPlus.cvar.ClassIds_Shape_Mark
ClassIds.ShapeControl = _MaxPlus.cvar.ClassIds_ShapeControl
ClassIds.ShapeLibrary = _MaxPlus.cvar.ClassIds_ShapeLibrary
ClassIds.ShapeMerge = _MaxPlus.cvar.ClassIds_ShapeMerge
ClassIds.ShapeStandard = _MaxPlus.cvar.ClassIds_ShapeStandard
ClassIds.SharedMotionFlow = _MaxPlus.cvar.ClassIds_SharedMotionFlow
ClassIds.SharedMotionFlows = _MaxPlus.cvar.ClassIds_SharedMotionFlows
ClassIds.SharedMotionFlowsFloatController = _MaxPlus.cvar.ClassIds_SharedMotionFlowsFloatController
ClassIds.Sharp_Quadratic = _MaxPlus.cvar.ClassIds_Sharp_Quadratic
ClassIds.shaveMRGeomPasser = _MaxPlus.cvar.ClassIds_shaveMRGeomPasser
ClassIds.shaveMRHairComp = _MaxPlus.cvar.ClassIds_shaveMRHairComp
ClassIds.shaveMRHairGeom = _MaxPlus.cvar.ClassIds_shaveMRHairGeom
ClassIds.shaveMRHairGeomDRA = _MaxPlus.cvar.ClassIds_shaveMRHairGeomDRA
ClassIds.shaveMRHairIllum = _MaxPlus.cvar.ClassIds_shaveMRHairIllum
ClassIds.shaveMRHairShadows = _MaxPlus.cvar.ClassIds_shaveMRHairShadows
ClassIds.shaveMRInstanceGeom = _MaxPlus.cvar.ClassIds_shaveMRInstanceGeom
ClassIds.shaveMRRenderComp = _MaxPlus.cvar.ClassIds_shaveMRRenderComp
ClassIds.shaveMRSatData = _MaxPlus.cvar.ClassIds_shaveMRSatData
ClassIds.shaveMRShadowMatte = _MaxPlus.cvar.ClassIds_shaveMRShadowMatte
ClassIds.shaveMRVertexIllum = _MaxPlus.cvar.ClassIds_shaveMRVertexIllum
ClassIds.ShaveStylinIcon = _MaxPlus.cvar.ClassIds_ShaveStylinIcon
ClassIds.Shell = _MaxPlus.cvar.ClassIds_Shell
ClassIds.Shell_Material = _MaxPlus.cvar.ClassIds_Shell_Material
ClassIds.Shellac = _MaxPlus.cvar.ClassIds_Shellac
ClassIds.ShineExp = _MaxPlus.cvar.ClassIds_ShineExp
ClassIds.Simple__contour = _MaxPlus.cvar.ClassIds_Simple__contour
ClassIds.Simple_Bumpmap_Map___adsk = _MaxPlus.cvar.ClassIds_Simple_Bumpmap_Map___adsk
ClassIds.Simple_Bumpmap_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Bumpmap_Map__adsk
ClassIds.Simple_Checker_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Checker_Map__adsk
ClassIds.Simple_Checker_Map__adsktextureMap = _MaxPlus.cvar.ClassIds_Simple_Checker_Map__adsktextureMap
ClassIds.Simple_Color_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Color_Map__adsk
ClassIds.Simple_Colormap_Map___adsk = _MaxPlus.cvar.ClassIds_Simple_Colormap_Map___adsk
ClassIds.Simple_Colormap_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Colormap_Map__adsk
ClassIds.Simple_Gradient_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Gradient_Map__adsk
ClassIds.Simple_Hemispherical_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Hemispherical_Map__adsk
ClassIds.Simple_Hemispherical_Map__adsktextureMap = _MaxPlus.cvar.ClassIds_Simple_Hemispherical_Map__adsktextureMap
ClassIds.Simple_Image_Map__Bitmap___adsk = _MaxPlus.cvar.ClassIds_Simple_Image_Map__Bitmap___adsk
ClassIds.Simple_Image_Map__Bitmap___adsktextureMap = _MaxPlus.cvar.ClassIds_Simple_Image_Map__Bitmap___adsktextureMap
ClassIds.Simple_Marble_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Marble_Map__adsk
ClassIds.Simple_Marble_Map__adsktextureMap = _MaxPlus.cvar.ClassIds_Simple_Marble_Map__adsktextureMap
ClassIds.Simple_Mtl_Ceramic__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Ceramic__adsk
ClassIds.Simple_Mtl_Concrete__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Concrete__adsk
ClassIds.Simple_Mtl_Generic__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Generic__adsk
ClassIds.Simple_Mtl_Glazing__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Glazing__adsk
ClassIds.Simple_Mtl_Hardwood__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Hardwood__adsk
ClassIds.Simple_Mtl_Masonry_CMU__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Masonry_CMU__adsk
ClassIds.Simple_Mtl_Metal__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Metal__adsk
ClassIds.Simple_Mtl_Metal_adsk_V1 = _MaxPlus.cvar.ClassIds_Simple_Mtl_Metal_adsk_V1
ClassIds.Simple_Mtl_Metal_V2_adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Metal_V2_adsk
ClassIds.Simple_Mtl_MetallicPaint__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_MetallicPaint__adsk
ClassIds.Simple_Mtl_Mirror__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Mirror__adsk
ClassIds.Simple_Mtl_Plastic_Vinyl__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Plastic_Vinyl__adsk
ClassIds.Simple_Mtl_Radiance__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Radiance__adsk
ClassIds.Simple_Mtl_Solid_Glass__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Solid_Glass__adsk
ClassIds.Simple_Mtl_Stone__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Stone__adsk
ClassIds.Simple_Mtl_Wall_Paint__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Wall_Paint__adsk
ClassIds.Simple_Mtl_Water__adsk = _MaxPlus.cvar.ClassIds_Simple_Mtl_Water__adsk
ClassIds.Simple_Noise_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Noise_Map__adsk
ClassIds.Simple_Noise_Map__adsktextureMap = _MaxPlus.cvar.ClassIds_Simple_Noise_Map__adsktextureMap
ClassIds.Simple_Shape = _MaxPlus.cvar.ClassIds_Simple_Shape
ClassIds.Simple_Speckle_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Speckle_Map__adsk
ClassIds.Simple_Speckle_Map__adsktextureMap = _MaxPlus.cvar.ClassIds_Simple_Speckle_Map__adsktextureMap
ClassIds.Simple_Spline = _MaxPlus.cvar.ClassIds_Simple_Spline
ClassIds.Simple_Tile_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Tile_Map__adsk
ClassIds.Simple_Tile_Map__adsktextureMap = _MaxPlus.cvar.ClassIds_Simple_Tile_Map__adsktextureMap
ClassIds.Simple_Wave_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Wave_Map__adsk
ClassIds.Simple_Wave_Map__adsktextureMap = _MaxPlus.cvar.ClassIds_Simple_Wave_Map__adsktextureMap
ClassIds.Simple_Wood_Map__adsk = _MaxPlus.cvar.ClassIds_Simple_Wood_Map__adsk
ClassIds.Simple_Wood_Map__adsktextureMap = _MaxPlus.cvar.ClassIds_Simple_Wood_Map__adsktextureMap
ClassIds.SimpleFaceData = _MaxPlus.cvar.ClassIds_SimpleFaceData
ClassIds.SimpleOSMToWSMMod = _MaxPlus.cvar.ClassIds_SimpleOSMToWSMMod
ClassIds.SimpleOSMToWSMMod2 = _MaxPlus.cvar.ClassIds_SimpleOSMToWSMMod2
ClassIds.Skeleton = _MaxPlus.cvar.ClassIds_Skeleton
ClassIds.sketchUp = _MaxPlus.cvar.ClassIds_sketchUp
ClassIds.Skew = _MaxPlus.cvar.ClassIds_Skew
ClassIds.Skin = _MaxPlus.cvar.ClassIds_Skin
ClassIds.Skin_Morph = _MaxPlus.cvar.ClassIds_Skin_Morph
ClassIds.Skin_Wrap = _MaxPlus.cvar.ClassIds_Skin_Wrap
ClassIds.Skin_Wrap_Patch = _MaxPlus.cvar.ClassIds_Skin_Wrap_Patch
ClassIds.SkinUtilities = _MaxPlus.cvar.ClassIds_SkinUtilities
ClassIds.Skylight = _MaxPlus.cvar.ClassIds_Skylight
ClassIds.Slave_Control = _MaxPlus.cvar.ClassIds_Slave_Control
ClassIds.Slave_Point3 = _MaxPlus.cvar.ClassIds_Slave_Point3
ClassIds.SlaveFloat = _MaxPlus.cvar.ClassIds_SlaveFloat
ClassIds.SlavePos = _MaxPlus.cvar.ClassIds_SlavePos
ClassIds.SlaveRotation = _MaxPlus.cvar.ClassIds_SlaveRotation
ClassIds.SlaveScale = _MaxPlus.cvar.ClassIds_SlaveScale
ClassIds.SliceModifier = _MaxPlus.cvar.ClassIds_SliceModifier
ClassIds.Slider_Manip = _MaxPlus.cvar.ClassIds_Slider_Manip
ClassIds.sliderManipulator = _MaxPlus.cvar.ClassIds_sliderManipulator
ClassIds.SlidingDoor = _MaxPlus.cvar.ClassIds_SlidingDoor
ClassIds.SlidingWindow = _MaxPlus.cvar.ClassIds_SlidingWindow
ClassIds.SMEGUP = _MaxPlus.cvar.ClassIds_SMEGUP
ClassIds.Smoke = _MaxPlus.cvar.ClassIds_Smoke
ClassIds.Smoke__3dsmax = _MaxPlus.cvar.ClassIds_Smoke__3dsmax
ClassIds.smooth = _MaxPlus.cvar.ClassIds_smooth
ClassIds.smoothReferenceTarget = _MaxPlus.cvar.ClassIds_smoothReferenceTarget
ClassIds.Snow = _MaxPlus.cvar.ClassIds_Snow
ClassIds.Soften = _MaxPlus.cvar.ClassIds_Soften
ClassIds.SoftSelectionManager = _MaxPlus.cvar.ClassIds_SoftSelectionManager
ClassIds.SolidWorks_Import = _MaxPlus.cvar.ClassIds_SolidWorks_Import
ClassIds.SOmniFlect = _MaxPlus.cvar.ClassIds_SOmniFlect
ClassIds.SOmniFlectMod = _MaxPlus.cvar.ClassIds_SOmniFlectMod
ClassIds.SortKey = _MaxPlus.cvar.ClassIds_SortKey
ClassIds.Sound = _MaxPlus.cvar.ClassIds_Sound
ClassIds.Space_Warp_Behavior = _MaxPlus.cvar.ClassIds_Space_Warp_Behavior
ClassIds.SpaceBend = _MaxPlus.cvar.ClassIds_SpaceBend
ClassIds.SpaceCameraMap = _MaxPlus.cvar.ClassIds_SpaceCameraMap
ClassIds.SpaceConform = _MaxPlus.cvar.ClassIds_SpaceConform
ClassIds.Spacedisplace = _MaxPlus.cvar.ClassIds_Spacedisplace
ClassIds.SpaceFFDBox = _MaxPlus.cvar.ClassIds_SpaceFFDBox
ClassIds.SpaceFFDCyl = _MaxPlus.cvar.ClassIds_SpaceFFDCyl
ClassIds.SpaceNoise = _MaxPlus.cvar.ClassIds_SpaceNoise
ClassIds.SpacePatchDeform = _MaxPlus.cvar.ClassIds_SpacePatchDeform
ClassIds.SpacePathDeform = _MaxPlus.cvar.ClassIds_SpacePathDeform
ClassIds.Spaceripple = _MaxPlus.cvar.ClassIds_Spaceripple
ClassIds.SpaceSkew = _MaxPlus.cvar.ClassIds_SpaceSkew
ClassIds.SpaceStretch = _MaxPlus.cvar.ClassIds_SpaceStretch
ClassIds.SpaceSurfDeform = _MaxPlus.cvar.ClassIds_SpaceSurfDeform
ClassIds.SpaceTaper = _MaxPlus.cvar.ClassIds_SpaceTaper
ClassIds.SpaceTwist = _MaxPlus.cvar.ClassIds_SpaceTwist
ClassIds.Spacewave = _MaxPlus.cvar.ClassIds_Spacewave
ClassIds.Spawn = _MaxPlus.cvar.ClassIds_Spawn
ClassIds.Speckle = _MaxPlus.cvar.ClassIds_Speckle
ClassIds.Speckle__3dsmax = _MaxPlus.cvar.ClassIds_Speckle__3dsmax
ClassIds.Specular = _MaxPlus.cvar.ClassIds_Specular
ClassIds.specularMap = _MaxPlus.cvar.ClassIds_specularMap
ClassIds.speed = _MaxPlus.cvar.ClassIds_speed
ClassIds.Speed_By_Surface = _MaxPlus.cvar.ClassIds_Speed_By_Surface
ClassIds.Speed_Test = _MaxPlus.cvar.ClassIds_Speed_Test
ClassIds.Speed_Vary_Behavior = _MaxPlus.cvar.ClassIds_Speed_Vary_Behavior
ClassIds.SpeedByIcon = _MaxPlus.cvar.ClassIds_SpeedByIcon
ClassIds.Sphere = _MaxPlus.cvar.ClassIds_Sphere
ClassIds.SphereGizmo = _MaxPlus.cvar.ClassIds_SphereGizmo
ClassIds.SphericalCollision = _MaxPlus.cvar.ClassIds_SphericalCollision
ClassIds.Spherify = _MaxPlus.cvar.ClassIds_Spherify
ClassIds.spin = _MaxPlus.cvar.ClassIds_spin
ClassIds.Spindle = _MaxPlus.cvar.ClassIds_Spindle
ClassIds.SpinLimit = _MaxPlus.cvar.ClassIds_SpinLimit
ClassIds.Spiral_Stair = _MaxPlus.cvar.ClassIds_Spiral_Stair
ClassIds.Splat = _MaxPlus.cvar.ClassIds_Splat
ClassIds.Splat__3dsmax = _MaxPlus.cvar.ClassIds_Splat__3dsmax
ClassIds.Spline_IK_Control = _MaxPlus.cvar.ClassIds_Spline_IK_Control
ClassIds.SplineIKChain = _MaxPlus.cvar.ClassIds_SplineIKChain
ClassIds.SplineIKSolver = _MaxPlus.cvar.ClassIds_SplineIKSolver
ClassIds.SplineSelect = _MaxPlus.cvar.ClassIds_SplineSelect
ClassIds.SplineShape = _MaxPlus.cvar.ClassIds_SplineShape
ClassIds.Split_Amount = _MaxPlus.cvar.ClassIds_Split_Amount
ClassIds.Split_Group = _MaxPlus.cvar.ClassIds_Split_Group
ClassIds.Split_Selected = _MaxPlus.cvar.ClassIds_Split_Selected
ClassIds.Split_Source = _MaxPlus.cvar.ClassIds_Split_Source
ClassIds.Spray = _MaxPlus.cvar.ClassIds_Spray
ClassIds.Spring = _MaxPlus.cvar.ClassIds_Spring
ClassIds.SpringPoint3Controller = _MaxPlus.cvar.ClassIds_SpringPoint3Controller
ClassIds.SpringPositionController = _MaxPlus.cvar.ClassIds_SpringPositionController
ClassIds.Squeeze = _MaxPlus.cvar.ClassIds_Squeeze
ClassIds.SSS2_Shader = _MaxPlus.cvar.ClassIds_SSS2_Shader
ClassIds.SSS2_ShadertextureMap = _MaxPlus.cvar.ClassIds_SSS2_ShadertextureMap
ClassIds.SSS2_Skin = _MaxPlus.cvar.ClassIds_SSS2_Skin
ClassIds.SSS2_Skin_Displacement = _MaxPlus.cvar.ClassIds_SSS2_Skin_Displacement
ClassIds.SSS2_Surface_Shader = _MaxPlus.cvar.ClassIds_SSS2_Surface_Shader
ClassIds.SSS_Fast_Material__mi = _MaxPlus.cvar.ClassIds_SSS_Fast_Material__mi
ClassIds.SSS_Fast_Render_Shader___mi = _MaxPlus.cvar.ClassIds_SSS_Fast_Render_Shader___mi
ClassIds.SSS_Fast_Render_Shader__mi = _MaxPlus.cvar.ClassIds_SSS_Fast_Render_Shader__mi
ClassIds.SSS_Fast_Skin_Material__mi = _MaxPlus.cvar.ClassIds_SSS_Fast_Skin_Material__mi
ClassIds.SSS_Fast_Skin_Material_Displace__mi = _MaxPlus.cvar.ClassIds_SSS_Fast_Skin_Material_Displace__mi
ClassIds.SSS_Lambert_Gamma__mi = _MaxPlus.cvar.ClassIds_SSS_Lambert_Gamma__mi
ClassIds.SSS_Lightmap_Write__mi = _MaxPlus.cvar.ClassIds_SSS_Lightmap_Write__mi
ClassIds.SSS_Lightmapping_shader = _MaxPlus.cvar.ClassIds_SSS_Lightmapping_shader
ClassIds.SSS_Passthrough_Shader__mi = _MaxPlus.cvar.ClassIds_SSS_Passthrough_Shader__mi
ClassIds.SSS_Physical_Material__mi = _MaxPlus.cvar.ClassIds_SSS_Physical_Material__mi
ClassIds.SSS_Physical_Shader__mi = _MaxPlus.cvar.ClassIds_SSS_Physical_Shader__mi
ClassIds.SSS_Specular_Reflections_for_Skin__mi = _MaxPlus.cvar.ClassIds_SSS_Specular_Reflections_for_Skin__mi
ClassIds.Stain__lume = _MaxPlus.cvar.ClassIds_Stain__lume
ClassIds.Standard_Flow = _MaxPlus.cvar.ClassIds_Standard_Flow
ClassIds.Standardmaterial = _MaxPlus.cvar.ClassIds_Standardmaterial
ClassIds.StandardTextureOutput = _MaxPlus.cvar.ClassIds_StandardTextureOutput
ClassIds.StandardUVGen = _MaxPlus.cvar.ClassIds_StandardUVGen
ClassIds.StandardXYZGen = _MaxPlus.cvar.ClassIds_StandardXYZGen
ClassIds.Standin_for_missing_MultiPass_Camera_Effect_Plugin = _MaxPlus.cvar.ClassIds_Standin_for_missing_MultiPass_Camera_Effect_Plugin
ClassIds.Star = _MaxPlus.cvar.ClassIds_Star
ClassIds.Star_Element = _MaxPlus.cvar.ClassIds_Star_Element
ClassIds.Stars = _MaxPlus.cvar.ClassIds_Stars
ClassIds.StateCreator = _MaxPlus.cvar.ClassIds_StateCreator
ClassIds.STEP_Import = _MaxPlus.cvar.ClassIds_STEP_Import
ClassIds.STL_Check = _MaxPlus.cvar.ClassIds_STL_Check
ClassIds.STL_Export = _MaxPlus.cvar.ClassIds_STL_Export
ClassIds.STL_Import = _MaxPlus.cvar.ClassIds_STL_Import
ClassIds.stop = _MaxPlus.cvar.ClassIds_stop
ClassIds.Stop_Gradually = _MaxPlus.cvar.ClassIds_Stop_Gradually
ClassIds.Store_Ligth_Levels = _MaxPlus.cvar.ClassIds_Store_Ligth_Levels
ClassIds.StPathClass = _MaxPlus.cvar.ClassIds_StPathClass
ClassIds.Straight_Stair = _MaxPlus.cvar.ClassIds_Straight_Stair
ClassIds.Strauss = _MaxPlus.cvar.ClassIds_Strauss
ClassIds.Streak_Element = _MaxPlus.cvar.ClassIds_Streak_Element
ClassIds.Stretch = _MaxPlus.cvar.ClassIds_Stretch
ClassIds.StringPacket = _MaxPlus.cvar.ClassIds_StringPacket
ClassIds.Strokes = _MaxPlus.cvar.ClassIds_Strokes
ClassIds.Stucco = _MaxPlus.cvar.ClassIds_Stucco
ClassIds.Stucco__3dsmax = _MaxPlus.cvar.ClassIds_Stucco__3dsmax
ClassIds.subdivide = _MaxPlus.cvar.ClassIds_subdivide
ClassIds.subdivideSpacewarpModifier = _MaxPlus.cvar.ClassIds_subdivideSpacewarpModifier
ClassIds.Submerge__lume = _MaxPlus.cvar.ClassIds_Submerge__lume
ClassIds.Substance = _MaxPlus.cvar.ClassIds_Substance
ClassIds.Substance_Output = _MaxPlus.cvar.ClassIds_Substance_Output
ClassIds.SubstancePBWrapper = _MaxPlus.cvar.ClassIds_SubstancePBWrapper
ClassIds.SubstanceShader = _MaxPlus.cvar.ClassIds_SubstanceShader
ClassIds.Substituion_Offset_Transform = _MaxPlus.cvar.ClassIds_Substituion_Offset_Transform
ClassIds.Substitute = _MaxPlus.cvar.ClassIds_Substitute
ClassIds.Substitute_Manager = _MaxPlus.cvar.ClassIds_Substitute_Manager
ClassIds.Substitute_Object = _MaxPlus.cvar.ClassIds_Substitute_Object
ClassIds.Sunlight = _MaxPlus.cvar.ClassIds_Sunlight
ClassIds.Sunlight_Daylight_Slave_Controller = _MaxPlus.cvar.ClassIds_Sunlight_Daylight_Slave_Controller
ClassIds.Sunlight_Daylight_Slave_ControllerMatrix3Controller = _MaxPlus.cvar.ClassIds_Sunlight_Daylight_Slave_ControllerMatrix3Controller
ClassIds.Sunlight_Daylight_Slave_Intensity_Controller = _MaxPlus.cvar.ClassIds_Sunlight_Daylight_Slave_Intensity_Controller
ClassIds.Sunlight_Daylight_Slave_Intensity_ControllerFloatController = _MaxPlus.cvar.ClassIds_Sunlight_Daylight_Slave_Intensity_ControllerFloatController
ClassIds.SuperSpray = _MaxPlus.cvar.ClassIds_SuperSpray
ClassIds.surface = _MaxPlus.cvar.ClassIds_surface
ClassIds.Surface_Approximation = _MaxPlus.cvar.ClassIds_Surface_Approximation
ClassIds.Surface_Arrive_Behavior = _MaxPlus.cvar.ClassIds_Surface_Arrive_Behavior
ClassIds.Surface_Follow_Behavior = _MaxPlus.cvar.ClassIds_Surface_Follow_Behavior
ClassIds.Surface_Mapper = _MaxPlus.cvar.ClassIds_Surface_Mapper
ClassIds.Surface_position = _MaxPlus.cvar.ClassIds_Surface_position
ClassIds.SurfDeform = _MaxPlus.cvar.ClassIds_SurfDeform
ClassIds.SW3D_Exp = _MaxPlus.cvar.ClassIds_SW3D_Exp
ClassIds.sweep = _MaxPlus.cvar.ClassIds_sweep
ClassIds.swirl = _MaxPlus.cvar.ClassIds_swirl
ClassIds.Swirl__3dsmax = _MaxPlus.cvar.ClassIds_Swirl__3dsmax
ClassIds.Switch = _MaxPlus.cvar.ClassIds_Switch
ClassIds.symmetry = _MaxPlus.cvar.ClassIds_symmetry
ClassIds.TailData2 = _MaxPlus.cvar.ClassIds_TailData2
ClassIds.TailTrans = _MaxPlus.cvar.ClassIds_TailTrans
ClassIds.Tape = _MaxPlus.cvar.ClassIds_Tape
ClassIds.Taper = _MaxPlus.cvar.ClassIds_Taper
ClassIds.Targa = _MaxPlus.cvar.ClassIds_Targa
ClassIds.Target_Area = _MaxPlus.cvar.ClassIds_Target_Area
ClassIds.Target_Cylinder = _MaxPlus.cvar.ClassIds_Target_Cylinder
ClassIds.Target_Disc = _MaxPlus.cvar.ClassIds_Target_Disc
ClassIds.Target_Light = _MaxPlus.cvar.ClassIds_Target_Light
ClassIds.Target_Linear = _MaxPlus.cvar.ClassIds_Target_Linear
ClassIds.Target_Sphere = _MaxPlus.cvar.ClassIds_Target_Sphere
ClassIds.Targetcamera = _MaxPlus.cvar.ClassIds_Targetcamera
ClassIds.TargetDirectionallight = _MaxPlus.cvar.ClassIds_TargetDirectionallight
ClassIds.Targetobject = _MaxPlus.cvar.ClassIds_Targetobject
ClassIds.targetSpot = _MaxPlus.cvar.ClassIds_targetSpot
ClassIds.tcb_float = _MaxPlus.cvar.ClassIds_tcb_float
ClassIds.tcb_point3 = _MaxPlus.cvar.ClassIds_tcb_point3
ClassIds.tcb_point4 = _MaxPlus.cvar.ClassIds_tcb_point4
ClassIds.tcb_position = _MaxPlus.cvar.ClassIds_tcb_position
ClassIds.tcb_rotation = _MaxPlus.cvar.ClassIds_tcb_rotation
ClassIds.tcb_scale = _MaxPlus.cvar.ClassIds_tcb_scale
ClassIds.Teapot = _MaxPlus.cvar.ClassIds_Teapot
ClassIds.Tee = _MaxPlus.cvar.ClassIds_Tee
ClassIds.Terrain = _MaxPlus.cvar.ClassIds_Terrain
ClassIds.tessellate = _MaxPlus.cvar.ClassIds_tessellate
ClassIds.Test_Icon = _MaxPlus.cvar.ClassIds_Test_Icon
ClassIds.Texmaps_RaytraceMtl = _MaxPlus.cvar.ClassIds_Texmaps_RaytraceMtl
ClassIds.text = _MaxPlus.cvar.ClassIds_text
ClassIds.Texture_CheckerBoard__base = _MaxPlus.cvar.ClassIds_Texture_CheckerBoard__base
ClassIds.Texture_Filter_Lookup__base = _MaxPlus.cvar.ClassIds_Texture_Filter_Lookup__base
ClassIds.Texture_Lookup_2d = _MaxPlus.cvar.ClassIds_Texture_Lookup_2d
ClassIds.Texture_Lookup__base = _MaxPlus.cvar.ClassIds_Texture_Lookup__base
ClassIds.Texture_Polka_Dot__base = _MaxPlus.cvar.ClassIds_Texture_Polka_Dot__base
ClassIds.Texture_Polka_Sphere__base = _MaxPlus.cvar.ClassIds_Texture_Polka_Sphere__base
ClassIds.Texture_Remap__base = _MaxPlus.cvar.ClassIds_Texture_Remap__base
ClassIds.Texture_Rotate__base = _MaxPlus.cvar.ClassIds_Texture_Rotate__base
ClassIds.Texture_Turbulence__base = _MaxPlus.cvar.ClassIds_Texture_Turbulence__base
ClassIds.Texture_Vector__base = _MaxPlus.cvar.ClassIds_Texture_Vector__base
ClassIds.Texture_Wave__base = _MaxPlus.cvar.ClassIds_Texture_Wave__base
ClassIds.Thin_Wall_Refraction = _MaxPlus.cvar.ClassIds_Thin_Wall_Refraction
ClassIds.Thin_Wall_Refraction__3dsmax = _MaxPlus.cvar.ClassIds_Thin_Wall_Refraction__3dsmax
ClassIds.This_Data = _MaxPlus.cvar.ClassIds_This_Data
ClassIds.TIF = _MaxPlus.cvar.ClassIds_TIF
ClassIds.TimeSensor = _MaxPlus.cvar.ClassIds_TimeSensor
ClassIds.Tint__3dsmax = _MaxPlus.cvar.ClassIds_Tint__3dsmax
ClassIds.TopBottom = _MaxPlus.cvar.ClassIds_TopBottom
ClassIds.Torus = _MaxPlus.cvar.ClassIds_Torus
ClassIds.Torus_Knot = _MaxPlus.cvar.ClassIds_Torus_Knot
ClassIds.TouchSensor = _MaxPlus.cvar.ClassIds_TouchSensor
ClassIds.TrackSet = _MaxPlus.cvar.ClassIds_TrackSet
ClassIds.TrackSetList = _MaxPlus.cvar.ClassIds_TrackSetList
ClassIds.transform_script = _MaxPlus.cvar.ClassIds_transform_script
ClassIds.Translucency__lume = _MaxPlus.cvar.ClassIds_Translucency__lume
ClassIds.Translucent_Shader = _MaxPlus.cvar.ClassIds_Translucent_Shader
ClassIds.Transmat__physics = _MaxPlus.cvar.ClassIds_Transmat__physics
ClassIds.Transmat_Photon__physics = _MaxPlus.cvar.ClassIds_Transmat_Photon__physics
ClassIds.Transparency__base = _MaxPlus.cvar.ClassIds_Transparency__base
ClassIds.Trim_Extend = _MaxPlus.cvar.ClassIds_Trim_Extend
ClassIds.TriMeshGeometry = _MaxPlus.cvar.ClassIds_TriMeshGeometry
ClassIds.triPatch = _MaxPlus.cvar.ClassIds_triPatch
ClassIds.Tube = _MaxPlus.cvar.ClassIds_Tube
ClassIds.TurboSmooth = _MaxPlus.cvar.ClassIds_TurboSmooth
ClassIds.Turn_To_gPoly = _MaxPlus.cvar.ClassIds_Turn_To_gPoly
ClassIds.Turn_to_Mesh = _MaxPlus.cvar.ClassIds_Turn_to_Mesh
ClassIds.Turn_to_Patch = _MaxPlus.cvar.ClassIds_Turn_to_Patch
ClassIds.Turn_to_Poly = _MaxPlus.cvar.ClassIds_Turn_to_Poly
ClassIds.TVDummyControl = _MaxPlus.cvar.ClassIds_TVDummyControl
ClassIds.TVNode = _MaxPlus.cvar.ClassIds_TVNode
ClassIds.Twist = _MaxPlus.cvar.ClassIds_Twist
ClassIds.Two_Sided__base = _MaxPlus.cvar.ClassIds_Two_Sided__base
ClassIds.U_Type_Stair = _MaxPlus.cvar.ClassIds_U_Type_Stair
ClassIds.UConstraint = _MaxPlus.cvar.ClassIds_UConstraint
ClassIds.UDeflector = _MaxPlus.cvar.ClassIds_UDeflector
ClassIds.UDeflectorMod = _MaxPlus.cvar.ClassIds_UDeflectorMod
ClassIds.UG_NX_Import = _MaxPlus.cvar.ClassIds_UG_NX_Import
ClassIds.Unified_Image_Map__Bitmap___adsk = _MaxPlus.cvar.ClassIds_Unified_Image_Map__Bitmap___adsk
ClassIds.Unwrap_UVW = _MaxPlus.cvar.ClassIds_Unwrap_UVW
ClassIds.UOmniFlect = _MaxPlus.cvar.ClassIds_UOmniFlect
ClassIds.UOmniFlectMod = _MaxPlus.cvar.ClassIds_UOmniFlectMod
ClassIds.Utility = _MaxPlus.cvar.ClassIds_Utility
ClassIds.Utility_BumpLookup__protein = _MaxPlus.cvar.ClassIds_Utility_BumpLookup__protein
ClassIds.Utility_Color_Correction_Internal__protein = _MaxPlus.cvar.ClassIds_Utility_Color_Correction_Internal__protein
ClassIds.Utility_ColorCorrection_Maya_Shaders__protein = _MaxPlus.cvar.ClassIds_Utility_ColorCorrection_Maya_Shaders__protein
ClassIds.Utility_ColorPassThrough__protein = _MaxPlus.cvar.ClassIds_Utility_ColorPassThrough__protein
ClassIds.Utility_Combine3Bump__protein = _MaxPlus.cvar.ClassIds_Utility_Combine3Bump__protein
ClassIds.Utility_Elliptical_Bump__protein = _MaxPlus.cvar.ClassIds_Utility_Elliptical_Bump__protein
ClassIds.Utility_Elliptical_Tex__protein = _MaxPlus.cvar.ClassIds_Utility_Elliptical_Tex__protein
ClassIds.Utility_Gamma___Gain__mi = _MaxPlus.cvar.ClassIds_Utility_Gamma___Gain__mi
ClassIds.Utility_Mia_Material__protein = _MaxPlus.cvar.ClassIds_Utility_Mia_Material__protein
ClassIds.Utility_Mix2Shader__protein = _MaxPlus.cvar.ClassIds_Utility_Mix2Shader__protein
ClassIds.Utility_MultiMixer__protein = _MaxPlus.cvar.ClassIds_Utility_MultiMixer__protein
ClassIds.Utility_Switch8Shader__protein = _MaxPlus.cvar.ClassIds_Utility_Switch8Shader__protein
ClassIds.Utility_TexLookup__protein = _MaxPlus.cvar.ClassIds_Utility_TexLookup__protein
ClassIds.UV_Coordinate__3dsmax = _MaxPlus.cvar.ClassIds_UV_Coordinate__3dsmax
ClassIds.UV_Generator__3dsmax = _MaxPlus.cvar.ClassIds_UV_Generator__3dsmax
ClassIds.UVW_Mapping_Add = _MaxPlus.cvar.ClassIds_UVW_Mapping_Add
ClassIds.UVW_Mapping_Clear = _MaxPlus.cvar.ClassIds_UVW_Mapping_Clear
ClassIds.UVW_Mapping_Paste = _MaxPlus.cvar.ClassIds_UVW_Mapping_Paste
ClassIds.UVW_Remove = _MaxPlus.cvar.ClassIds_UVW_Remove
ClassIds.UVW_Xform = _MaxPlus.cvar.ClassIds_UVW_Xform
ClassIds.Uvwmap = _MaxPlus.cvar.ClassIds_Uvwmap
ClassIds.uvwMappingHeightManip = _MaxPlus.cvar.ClassIds_uvwMappingHeightManip
ClassIds.uvwMappingLengthManip = _MaxPlus.cvar.ClassIds_uvwMappingLengthManip
ClassIds.uvwMappingPositionManip = _MaxPlus.cvar.ClassIds_uvwMappingPositionManip
ClassIds.uvwMappingWidthManip = _MaxPlus.cvar.ClassIds_uvwMappingWidthManip
ClassIds.Vector = _MaxPlus.cvar.ClassIds_Vector
ClassIds.Vector_Displacement = _MaxPlus.cvar.ClassIds_Vector_Displacement
ClassIds.Vector_Field = _MaxPlus.cvar.ClassIds_Vector_Field
ClassIds.Vector_Field_Modifier = _MaxPlus.cvar.ClassIds_Vector_Field_Modifier
ClassIds.Vector_Map = _MaxPlus.cvar.ClassIds_Vector_Map
ClassIds.velocity = _MaxPlus.cvar.ClassIds_velocity
ClassIds.Vertex_Color = _MaxPlus.cvar.ClassIds_Vertex_Color
ClassIds.Vertex_Color__3dsmax = _MaxPlus.cvar.ClassIds_Vertex_Color__3dsmax
ClassIds.Vertex_Colors = _MaxPlus.cvar.ClassIds_Vertex_Colors
ClassIds.Vertex_Paint_Startup_GUP = _MaxPlus.cvar.ClassIds_Vertex_Paint_Startup_GUP
ClassIds.Vertex_Weld = _MaxPlus.cvar.ClassIds_Vertex_Weld
ClassIds.VertexPaint = _MaxPlus.cvar.ClassIds_VertexPaint
ClassIds.Vertical_Horizontal_Turn = _MaxPlus.cvar.ClassIds_Vertical_Horizontal_Turn
ClassIds.Video = _MaxPlus.cvar.ClassIds_Video
ClassIds.Viewport_Render = _MaxPlus.cvar.ClassIds_Viewport_Render
ClassIds.ViewportManager = _MaxPlus.cvar.ClassIds_ViewportManager
ClassIds.ViewportManagerCustAttrib = _MaxPlus.cvar.ClassIds_ViewportManagerCustAttrib
ClassIds.Visual_MAXScript = _MaxPlus.cvar.ClassIds_Visual_MAXScript
ClassIds.Vol__Select = _MaxPlus.cvar.ClassIds_Vol__Select
ClassIds.Volume__base = _MaxPlus.cvar.ClassIds_Volume__base
ClassIds.Volume_Fog = _MaxPlus.cvar.ClassIds_Volume_Fog
ClassIds.Volume_Fog__3dsmax = _MaxPlus.cvar.ClassIds_Volume_Fog__3dsmax
ClassIds.Volume_Light = _MaxPlus.cvar.ClassIds_Volume_Light
ClassIds.Volume_Light__3dsmax = _MaxPlus.cvar.ClassIds_Volume_Light__3dsmax
ClassIds.Vortex = _MaxPlus.cvar.ClassIds_Vortex
ClassIds.VortexMod = _MaxPlus.cvar.ClassIds_VortexMod
ClassIds.VRBL_Export = _MaxPlus.cvar.ClassIds_VRBL_Export
ClassIds.VrmlImp = _MaxPlus.cvar.ClassIds_VrmlImp
ClassIds.VUE_File_Renderer = _MaxPlus.cvar.ClassIds_VUE_File_Renderer
ClassIds.VzMaterialTable = _MaxPlus.cvar.ClassIds_VzMaterialTable
ClassIds.VzObjectTable = _MaxPlus.cvar.ClassIds_VzObjectTable
ClassIds.VzObjectTableRecord = _MaxPlus.cvar.ClassIds_VzObjectTableRecord
ClassIds.WalkThroughGUP = _MaxPlus.cvar.ClassIds_WalkThroughGUP
ClassIds.Wall = _MaxPlus.cvar.ClassIds_Wall
ClassIds.Wall_Repel_Behavior = _MaxPlus.cvar.ClassIds_Wall_Repel_Behavior
ClassIds.Wall_Seek_Behavior = _MaxPlus.cvar.ClassIds_Wall_Seek_Behavior
ClassIds.WalledRectangle = _MaxPlus.cvar.ClassIds_WalledRectangle
ClassIds.Wander_Behavior = _MaxPlus.cvar.ClassIds_Wander_Behavior
ClassIds.Water = _MaxPlus.cvar.ClassIds_Water
ClassIds.Water__3dsmax = _MaxPlus.cvar.ClassIds_Water__3dsmax
ClassIds.Water_Surface__lume = _MaxPlus.cvar.ClassIds_Water_Surface__lume
ClassIds.Water_Surface_Shadow__lume = _MaxPlus.cvar.ClassIds_Water_Surface_Shadow__lume
ClassIds.Wave = _MaxPlus.cvar.ClassIds_Wave
ClassIds.Wavebinding = _MaxPlus.cvar.ClassIds_Wavebinding
ClassIds.Waveform_Float = _MaxPlus.cvar.ClassIds_Waveform_Float
ClassIds.WaveMaster = _MaxPlus.cvar.ClassIds_WaveMaster
ClassIds.WaveObject = _MaxPlus.cvar.ClassIds_WaveObject
ClassIds.Welder = _MaxPlus.cvar.ClassIds_Welder
ClassIds.Wet_Dry_Mixer__lume = _MaxPlus.cvar.ClassIds_Wet_Dry_Mixer__lume
ClassIds.WideFlange = _MaxPlus.cvar.ClassIds_WideFlange
ClassIds.Width_From_Color__contour = _MaxPlus.cvar.ClassIds_Width_From_Color__contour
ClassIds.Width_From_Light__contour = _MaxPlus.cvar.ClassIds_Width_From_Light__contour
ClassIds.Width_From_Light_Dir__contour = _MaxPlus.cvar.ClassIds_Width_From_Light_Dir__contour
ClassIds.Wind = _MaxPlus.cvar.ClassIds_Wind
ClassIds.Windbinding = _MaxPlus.cvar.ClassIds_Windbinding
ClassIds.Wipe = _MaxPlus.cvar.ClassIds_Wipe
ClassIds.Wire_Import = _MaxPlus.cvar.ClassIds_Wire_Import
ClassIds.Wood = _MaxPlus.cvar.ClassIds_Wood
ClassIds.Wood__3dsmax = _MaxPlus.cvar.ClassIds_Wood__3dsmax
ClassIds.WrapAround__lume = _MaxPlus.cvar.ClassIds_WrapAround__lume
ClassIds.XForm = _MaxPlus.cvar.ClassIds_XForm
ClassIds.XMLImp2 = _MaxPlus.cvar.ClassIds_XMLImp2
ClassIds.XRef_Controller = _MaxPlus.cvar.ClassIds_XRef_Controller
ClassIds.XRef_Material = _MaxPlus.cvar.ClassIds_XRef_Material
ClassIds.XRefAtmosWrapper = _MaxPlus.cvar.ClassIds_XRefAtmosWrapper
ClassIds.XRefObject = _MaxPlus.cvar.ClassIds_XRefObject
ClassIds.xView = _MaxPlus.cvar.ClassIds_xView
ClassIds.XYZ_Coordinate__3dsmax = _MaxPlus.cvar.ClassIds_XYZ_Coordinate__3dsmax
ClassIds.XYZ_Generator__3dsmax = _MaxPlus.cvar.ClassIds_XYZ_Generator__3dsmax
ClassIds.YUV = _MaxPlus.cvar.ClassIds_YUV
ClassIds.Z_Depth = _MaxPlus.cvar.ClassIds_Z_Depth

class InterfaceIds(object):
    """Interface ID constant values."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _MaxPlus.delete_InterfaceIds
    __del__ = lambda self : None;
InterfaceIds_swigregister = _MaxPlus.InterfaceIds_swigregister
InterfaceIds_swigregister(InterfaceIds)
InterfaceIds.ActionOption = _MaxPlus.cvar.InterfaceIds_ActionOption
InterfaceIds.ActionOptionInterfaceOpt2 = _MaxPlus.cvar.InterfaceIds_ActionOptionInterfaceOpt2
InterfaceIds.IidActionItem = _MaxPlus.cvar.InterfaceIds_IidActionItem
InterfaceIds.IidActionTable = _MaxPlus.cvar.InterfaceIds_IidActionTable
InterfaceIds.ActionMgr = _MaxPlus.cvar.InterfaceIds_ActionMgr
InterfaceIds.Base = _MaxPlus.cvar.InterfaceIds_Base
InterfaceIds.Fpbitmapproxymanager = _MaxPlus.cvar.InterfaceIds_Fpbitmapproxymanager
InterfaceIds.BitmapIolayerClass = _MaxPlus.cvar.InterfaceIds_BitmapIolayerClass
InterfaceIds.Layer = _MaxPlus.cvar.InterfaceIds_Layer
InterfaceIds.Ibitmappager = _MaxPlus.cvar.InterfaceIds_Ibitmappager
InterfaceIds.Inetcreatehelpers = _MaxPlus.cvar.InterfaceIds_Inetcreatehelpers
InterfaceIds.ColorSwatchRenamerInterface51 = _MaxPlus.cvar.InterfaceIds_ColorSwatchRenamerInterface51
InterfaceIds.ExposureMaterialControl = _MaxPlus.cvar.InterfaceIds_ExposureMaterialControl
InterfaceIds.IidIhelpsystem = _MaxPlus.cvar.InterfaceIds_IidIhelpsystem
InterfaceIds.BrowserMgr = _MaxPlus.cvar.InterfaceIds_BrowserMgr
InterfaceIds.BrowserInterfaceDesc = _MaxPlus.cvar.InterfaceIds_BrowserInterfaceDesc
InterfaceIds.ColorMgr = _MaxPlus.cvar.InterfaceIds_ColorMgr
InterfaceIds.CommandPanel = _MaxPlus.cvar.InterfaceIds_CommandPanel
InterfaceIds.D3d9GraphicsWindow = _MaxPlus.cvar.InterfaceIds_D3d9GraphicsWindow
InterfaceIds.Datachannel = _MaxPlus.cvar.InterfaceIds_Datachannel
InterfaceIds.Facedatachannel = _MaxPlus.cvar.InterfaceIds_Facedatachannel
InterfaceIds.DndMgr = _MaxPlus.cvar.InterfaceIds_DndMgr
InterfaceIds.Dx9PixelShader = _MaxPlus.cvar.InterfaceIds_Dx9PixelShader
InterfaceIds.Dx9VertexShader = _MaxPlus.cvar.InterfaceIds_Dx9VertexShader
InterfaceIds.EmissionColor = _MaxPlus.cvar.InterfaceIds_EmissionColor
InterfaceIds.Epoly = _MaxPlus.cvar.InterfaceIds_Epoly
InterfaceIds.Facedatamgr = _MaxPlus.cvar.InterfaceIds_Facedatamgr
InterfaceIds.Null = _MaxPlus.cvar.InterfaceIds_Null
InterfaceIds.Fp = _MaxPlus.cvar.InterfaceIds_Fp
InterfaceIds.Fpmixin = _MaxPlus.cvar.InterfaceIds_Fpmixin
InterfaceIds.FpinterfacedescId = _MaxPlus.cvar.InterfaceIds_FpinterfacedescId
InterfaceIds.Igripmanager = _MaxPlus.cvar.InterfaceIds_Igripmanager
InterfaceIds.IhardwareMaterial = _MaxPlus.cvar.InterfaceIds_IhardwareMaterial
InterfaceIds.IhardwareMaterial2 = _MaxPlus.cvar.InterfaceIds_IhardwareMaterial2
InterfaceIds.IhardwareMaterial3 = _MaxPlus.cvar.InterfaceIds_IhardwareMaterial3
InterfaceIds.IhardwareMesh = _MaxPlus.cvar.InterfaceIds_IhardwareMesh
InterfaceIds.IhardwareMnmesh = _MaxPlus.cvar.InterfaceIds_IhardwareMnmesh
InterfaceIds.HardwareRenderer = _MaxPlus.cvar.InterfaceIds_HardwareRenderer
InterfaceIds.HardwareRendererSt = _MaxPlus.cvar.InterfaceIds_HardwareRendererSt
InterfaceIds.D3dhwmeshcachemanager = _MaxPlus.cvar.InterfaceIds_D3dhwmeshcachemanager
InterfaceIds.HardwareShader = _MaxPlus.cvar.InterfaceIds_HardwareShader
InterfaceIds.IkFp = _MaxPlus.cvar.InterfaceIds_IkFp
InterfaceIds.IkchainFp = _MaxPlus.cvar.InterfaceIds_IkchainFp
InterfaceIds.MenuMgr = _MaxPlus.cvar.InterfaceIds_MenuMgr
InterfaceIds.MenuSettings = _MaxPlus.cvar.InterfaceIds_MenuSettings
InterfaceIds.MenuItem = _MaxPlus.cvar.InterfaceIds_MenuItem
InterfaceIds.Menu = _MaxPlus.cvar.InterfaceIds_Menu
InterfaceIds.QuadMenu = _MaxPlus.cvar.InterfaceIds_QuadMenu
InterfaceIds.MszipMgr = _MaxPlus.cvar.InterfaceIds_MszipMgr
InterfaceIds.Mtledit = _MaxPlus.cvar.InterfaceIds_Mtledit
InterfaceIds.IidInewsubmapnotification = _MaxPlus.cvar.InterfaceIds_IidInewsubmapnotification
InterfaceIds.Inode = _MaxPlus.cvar.InterfaceIds_Inode
InterfaceIds.Iparamblock2postloadinfoId = _MaxPlus.cvar.InterfaceIds_Iparamblock2postloadinfoId
InterfaceIds.ParamwireMgr = _MaxPlus.cvar.InterfaceIds_ParamwireMgr
InterfaceIds.Pointcache = _MaxPlus.cvar.InterfaceIds_Pointcache
InterfaceIds.Pointcachewsm = _MaxPlus.cvar.InterfaceIds_Pointcachewsm
InterfaceIds.Particlecache = _MaxPlus.cvar.InterfaceIds_Particlecache
InterfaceIds.Lag = _MaxPlus.cvar.InterfaceIds_Lag
InterfaceIds.Imaterial = _MaxPlus.cvar.InterfaceIds_Imaterial
InterfaceIds.Imb = _MaxPlus.cvar.InterfaceIds_Imb
InterfaceIds.Refhierarchy = _MaxPlus.cvar.InterfaceIds_Refhierarchy
InterfaceIds.RollupSettings = _MaxPlus.cvar.InterfaceIds_RollupSettings
InterfaceIds.SpringController = _MaxPlus.cvar.InterfaceIds_SpringController
InterfaceIds.Rotwindup = _MaxPlus.cvar.InterfaceIds_Rotwindup
InterfaceIds.PathConstraint = _MaxPlus.cvar.InterfaceIds_PathConstraint
InterfaceIds.LinkConstraint = _MaxPlus.cvar.InterfaceIds_LinkConstraint
InterfaceIds.OrientConstraint = _MaxPlus.cvar.InterfaceIds_OrientConstraint
InterfaceIds.PosConstraint = _MaxPlus.cvar.InterfaceIds_PosConstraint
InterfaceIds.LookatConstraint = _MaxPlus.cvar.InterfaceIds_LookatConstraint
InterfaceIds.BoolControl = _MaxPlus.cvar.InterfaceIds_BoolControl
InterfaceIds.IlookatcontrolExtension = _MaxPlus.cvar.InterfaceIds_IlookatcontrolExtension
InterfaceIds.ListController = _MaxPlus.cvar.InterfaceIds_ListController
InterfaceIds.SplineikControl = _MaxPlus.cvar.InterfaceIds_SplineikControl
InterfaceIds.SplineikControlInterface2 = _MaxPlus.cvar.InterfaceIds_SplineikControlInterface2
InterfaceIds.Iassignvertexcolors = _MaxPlus.cvar.InterfaceIds_Iassignvertexcolors
InterfaceIds.IassignvertexcolorsR7 = _MaxPlus.cvar.InterfaceIds_IassignvertexcolorsR7
InterfaceIds.Ivertexpaint = _MaxPlus.cvar.InterfaceIds_Ivertexpaint
InterfaceIds.IvertexpaintR7 = _MaxPlus.cvar.InterfaceIds_IvertexpaintR7
InterfaceIds.Timeslider = _MaxPlus.cvar.InterfaceIds_Timeslider
InterfaceIds.Statuspanel = _MaxPlus.cvar.InterfaceIds_Statuspanel
InterfaceIds.Bmpio = _MaxPlus.cvar.InterfaceIds_Bmpio
InterfaceIds.Jpegio = _MaxPlus.cvar.InterfaceIds_Jpegio
InterfaceIds.Pngio = _MaxPlus.cvar.InterfaceIds_Pngio
InterfaceIds.Tgaio = _MaxPlus.cvar.InterfaceIds_Tgaio
InterfaceIds.Rlaio = _MaxPlus.cvar.InterfaceIds_Rlaio
InterfaceIds.Rpfio = _MaxPlus.cvar.InterfaceIds_Rpfio
InterfaceIds.Rgbio = _MaxPlus.cvar.InterfaceIds_Rgbio
InterfaceIds.IAttachctrl = _MaxPlus.cvar.InterfaceIds_IAttachctrl
InterfaceIds.TreeviewUi = _MaxPlus.cvar.InterfaceIds_TreeviewUi
InterfaceIds.TreeviewOps = _MaxPlus.cvar.InterfaceIds_TreeviewOps
InterfaceIds.Itrackviews = _MaxPlus.cvar.InterfaceIds_Itrackviews
InterfaceIds.TrackSelsetMgr = _MaxPlus.cvar.InterfaceIds_TrackSelsetMgr
InterfaceIds.Unwrap = _MaxPlus.cvar.InterfaceIds_Unwrap
InterfaceIds.UnwrapInterface2 = _MaxPlus.cvar.InterfaceIds_UnwrapInterface2
InterfaceIds.UnwrapInterface3 = _MaxPlus.cvar.InterfaceIds_UnwrapInterface3
InterfaceIds.UnwrapInterface4 = _MaxPlus.cvar.InterfaceIds_UnwrapInterface4
InterfaceIds.BlockMgr = _MaxPlus.cvar.InterfaceIds_BlockMgr
InterfaceIds.BlockrefComponent = _MaxPlus.cvar.InterfaceIds_BlockrefComponent
InterfaceIds.AddBlockrefComponent = _MaxPlus.cvar.InterfaceIds_AddBlockrefComponent
InterfaceIds.RemoveBlockrefComponent = _MaxPlus.cvar.InterfaceIds_RemoveBlockrefComponent
InterfaceIds.EditNormalsMod = _MaxPlus.cvar.InterfaceIds_EditNormalsMod
InterfaceIds.EpolyMod = _MaxPlus.cvar.InterfaceIds_EpolyMod
InterfaceIds.EpolyMod13 = _MaxPlus.cvar.InterfaceIds_EpolyMod13
InterfaceIds.Luminaire = _MaxPlus.cvar.InterfaceIds_Luminaire
InterfaceIds.Morphbybone = _MaxPlus.cvar.InterfaceIds_Morphbybone
InterfaceIds.InstanceMgr = _MaxPlus.cvar.InterfaceIds_InstanceMgr
InterfaceIds.Skinpose = _MaxPlus.cvar.InterfaceIds_Skinpose
InterfaceIds.IidAnimTrack = _MaxPlus.cvar.InterfaceIds_IidAnimTrack
InterfaceIds.LsArealightcustattrib = _MaxPlus.cvar.InterfaceIds_LsArealightcustattrib
InterfaceIds.ManipPlane = _MaxPlus.cvar.InterfaceIds_ManipPlane
InterfaceIds.ManipGizmo = _MaxPlus.cvar.InterfaceIds_ManipGizmo
InterfaceIds.ManipMgr = _MaxPlus.cvar.InterfaceIds_ManipMgr
InterfaceIds.SimpleManip = _MaxPlus.cvar.InterfaceIds_SimpleManip
InterfaceIds.TrackbarFilterManager = _MaxPlus.cvar.InterfaceIds_TrackbarFilterManager
InterfaceIds.Trackbar = _MaxPlus.cvar.InterfaceIds_Trackbar
InterfaceIds.MainMax = _MaxPlus.cvar.InterfaceIds_MainMax
InterfaceIds.Meshselectconvert = _MaxPlus.cvar.InterfaceIds_Meshselectconvert
InterfaceIds.Imnmeshutilities8 = _MaxPlus.cvar.InterfaceIds_Imnmeshutilities8
InterfaceIds.Imntempdata10 = _MaxPlus.cvar.InterfaceIds_Imntempdata10
InterfaceIds.Imnmeshutilities10 = _MaxPlus.cvar.InterfaceIds_Imnmeshutilities10
InterfaceIds.Imnmeshutilities13 = _MaxPlus.cvar.InterfaceIds_Imnmeshutilities13
InterfaceIds.NaturalLightClass = _MaxPlus.cvar.InterfaceIds_NaturalLightClass
InterfaceIds.Sunlight = _MaxPlus.cvar.InterfaceIds_Sunlight
InterfaceIds.Skylight = _MaxPlus.cvar.InterfaceIds_Skylight
InterfaceIds.IidNodeDisplayCallbackEx = _MaxPlus.cvar.InterfaceIds_IidNodeDisplayCallbackEx
InterfaceIds.Ixtcaccess = _MaxPlus.cvar.InterfaceIds_Ixtcaccess
InterfaceIds.IidIilluminationcomponents = _MaxPlus.cvar.InterfaceIds_IidIilluminationcomponents
InterfaceIds.InterfaceTimeBasedConverter = _MaxPlus.cvar.InterfaceIds_InterfaceTimeBasedConverter
InterfaceIds.IidIosnapmanager = _MaxPlus.cvar.InterfaceIds_IidIosnapmanager
InterfaceIds.IidIosnapmanager7 = _MaxPlus.cvar.InterfaceIds_IidIosnapmanager7
InterfaceIds.Radiosity = _MaxPlus.cvar.InterfaceIds_Radiosity
InterfaceIds.IradiosityeffectExtension = _MaxPlus.cvar.InterfaceIds_IradiosityeffectExtension
InterfaceIds.IradiosityRenderParameters = _MaxPlus.cvar.InterfaceIds_IradiosityRenderParameters
InterfaceIds.RadiosityMesh = _MaxPlus.cvar.InterfaceIds_RadiosityMesh
InterfaceIds.Irenderelementrequirements = _MaxPlus.cvar.InterfaceIds_Irenderelementrequirements
InterfaceIds.IrendElemMgr = _MaxPlus.cvar.InterfaceIds_IrendElemMgr
InterfaceIds.ScanlineRenderer = _MaxPlus.cvar.InterfaceIds_ScanlineRenderer
InterfaceIds.ScanlineRenderer3 = _MaxPlus.cvar.InterfaceIds_ScanlineRenderer3
InterfaceIds.Irendererrequirements = _MaxPlus.cvar.InterfaceIds_Irendererrequirements
InterfaceIds.Scenetraversal = _MaxPlus.cvar.InterfaceIds_Scenetraversal
InterfaceIds.Cac = _MaxPlus.cvar.InterfaceIds_Cac
InterfaceIds.AreaShadowType = _MaxPlus.cvar.InterfaceIds_AreaShadowType
InterfaceIds.BezierShapeInterfaceEx41 = _MaxPlus.cvar.InterfaceIds_BezierShapeInterfaceEx41
InterfaceIds.Bitmaptex = _MaxPlus.cvar.InterfaceIds_Bitmaptex
InterfaceIds.InvertableToneOperator = _MaxPlus.cvar.InterfaceIds_InvertableToneOperator
InterfaceIds.ToneOperator = _MaxPlus.cvar.InterfaceIds_ToneOperator
InterfaceIds.ItoneoperatorExtension = _MaxPlus.cvar.InterfaceIds_ItoneoperatorExtension
InterfaceIds.Iautotangentman = _MaxPlus.cvar.InterfaceIds_Iautotangentman
InterfaceIds.IidIbatchrendermanager = _MaxPlus.cvar.InterfaceIds_IidIbatchrendermanager
InterfaceIds.IidIbatchrenderview = _MaxPlus.cvar.InterfaceIds_IidIbatchrenderview
InterfaceIds.Ibrushpresetmgr = _MaxPlus.cvar.InterfaceIds_Ibrushpresetmgr
InterfaceIds.Colorcorrectionmgr = _MaxPlus.cvar.InterfaceIds_Colorcorrectionmgr
InterfaceIds.IspecularCompositeShaderId = _MaxPlus.cvar.InterfaceIds_IspecularCompositeShaderId
InterfaceIds.IidIcontainermanager = _MaxPlus.cvar.InterfaceIds_IidIcontainermanager
InterfaceIds.IidIcontainerpreferences = _MaxPlus.cvar.InterfaceIds_IidIcontainerpreferences
InterfaceIds.IidContainer = _MaxPlus.cvar.InterfaceIds_IidContainer
InterfaceIds.IidContainer13 = _MaxPlus.cvar.InterfaceIds_IidContainer13
InterfaceIds.CustattribCollapseManager = _MaxPlus.cvar.InterfaceIds_CustattribCollapseManager
InterfaceIds.DaylightControlledLightSystem = _MaxPlus.cvar.InterfaceIds_DaylightControlledLightSystem
InterfaceIds.DaylightsystemFactory = _MaxPlus.cvar.InterfaceIds_DaylightsystemFactory
InterfaceIds.IidDaylightSystemFactory2 = _MaxPlus.cvar.InterfaceIds_IidDaylightSystemFactory2
InterfaceIds.DaylightSystem = _MaxPlus.cvar.InterfaceIds_DaylightSystem
InterfaceIds.IidDaylightSystem2 = _MaxPlus.cvar.InterfaceIds_IidDaylightSystem2
InterfaceIds.IidDaylightSystem3 = _MaxPlus.cvar.InterfaceIds_IidDaylightSystem3
InterfaceIds.Idxmaterial = _MaxPlus.cvar.InterfaceIds_Idxmaterial
InterfaceIds.Idxmaterial2 = _MaxPlus.cvar.InterfaceIds_Idxmaterial2
InterfaceIds.Idxmaterial3 = _MaxPlus.cvar.InterfaceIds_Idxmaterial3
InterfaceIds.Fileresolutionmgr = _MaxPlus.cvar.InterfaceIds_Fileresolutionmgr
InterfaceIds.Frametagmanager = _MaxPlus.cvar.InterfaceIds_Frametagmanager
InterfaceIds.IgeometrycheckerManager = _MaxPlus.cvar.InterfaceIds_IgeometrycheckerManager
InterfaceIds.GlobalDxDisplayManager = _MaxPlus.cvar.InterfaceIds_GlobalDxDisplayManager
InterfaceIds.Ianimlayercontrolmanager = _MaxPlus.cvar.InterfaceIds_Ianimlayercontrolmanager
InterfaceIds.LayerController = _MaxPlus.cvar.InterfaceIds_LayerController
InterfaceIds.Layerproperties = _MaxPlus.cvar.InterfaceIds_Layerproperties
InterfaceIds.Layermanager = _MaxPlus.cvar.InterfaceIds_Layermanager
InterfaceIds.Layerdisplayproperties = _MaxPlus.cvar.InterfaceIds_Layerdisplayproperties
InterfaceIds.IlightUnitsFo = _MaxPlus.cvar.InterfaceIds_IlightUnitsFo
InterfaceIds.IidLimitControl = _MaxPlus.cvar.InterfaceIds_IidLimitControl
InterfaceIds.Iloadsaveanimation = _MaxPlus.cvar.InterfaceIds_Iloadsaveanimation
InterfaceIds.IidLockedContainerUpdate = _MaxPlus.cvar.InterfaceIds_IidLockedContainerUpdate
InterfaceIds.Ilockedtracksman = _MaxPlus.cvar.InterfaceIds_Ilockedtracksman
InterfaceIds.ImaterialBrowserEntryInfo = _MaxPlus.cvar.InterfaceIds_ImaterialBrowserEntryInfo
InterfaceIds.IidMaterialViewportShading = _MaxPlus.cvar.InterfaceIds_IidMaterialViewportShading
InterfaceIds.ImtlbrowserfilterManager = _MaxPlus.cvar.InterfaceIds_ImtlbrowserfilterManager
InterfaceIds.Imtlbrowserfilter = _MaxPlus.cvar.InterfaceIds_Imtlbrowserfilter
InterfaceIds.IsubmtlmapBrowserfilter = _MaxPlus.cvar.InterfaceIds_IsubmtlmapBrowserfilter
InterfaceIds.ImtlrenderCompatibilityMtlbase = _MaxPlus.cvar.InterfaceIds_ImtlrenderCompatibilityMtlbase
InterfaceIds.ImtlrenderCompatibilityRenderer = _MaxPlus.cvar.InterfaceIds_ImtlrenderCompatibilityRenderer
InterfaceIds.IidNamedSelectionSetManager = _MaxPlus.cvar.InterfaceIds_IidNamedSelectionSetManager
InterfaceIds.NodeBakeProperties = _MaxPlus.cvar.InterfaceIds_NodeBakeProperties
InterfaceIds.NodeBakeProjProperties = _MaxPlus.cvar.InterfaceIds_NodeBakeProjProperties
InterfaceIds.NodeDisplayproperties = _MaxPlus.cvar.InterfaceIds_NodeDisplayproperties
InterfaceIds.Nodeexposure = _MaxPlus.cvar.InterfaceIds_Nodeexposure
InterfaceIds.NodeexposureInterfaceToappend = _MaxPlus.cvar.InterfaceIds_NodeexposureInterfaceToappend
InterfaceIds.Nodegiproperties = _MaxPlus.cvar.InterfaceIds_Nodegiproperties
InterfaceIds.Nodegiproperties2 = _MaxPlus.cvar.InterfaceIds_Nodegiproperties2
InterfaceIds.Nodelayerproperties = _MaxPlus.cvar.InterfaceIds_Nodelayerproperties
InterfaceIds.Nodementalrayproperties = _MaxPlus.cvar.InterfaceIds_Nodementalrayproperties
InterfaceIds.IidNodemonitor = _MaxPlus.cvar.InterfaceIds_IidNodemonitor
InterfaceIds.IidNodetransformmonitor = _MaxPlus.cvar.InterfaceIds_IidNodetransformmonitor
InterfaceIds.Particleobjectext = _MaxPlus.cvar.InterfaceIds_Particleobjectext
InterfaceIds.Pathconfig = _MaxPlus.cvar.InterfaceIds_Pathconfig
InterfaceIds.Iprojectionmod = _MaxPlus.cvar.InterfaceIds_Iprojectionmod
InterfaceIds.Iprojectionmod10 = _MaxPlus.cvar.InterfaceIds_Iprojectionmod10
InterfaceIds.Iprojectionmoddata = _MaxPlus.cvar.InterfaceIds_Iprojectionmoddata
InterfaceIds.Iprojectionintersectormgr = _MaxPlus.cvar.InterfaceIds_Iprojectionintersectormgr
InterfaceIds.Iprojectionrendermgr = _MaxPlus.cvar.InterfaceIds_Iprojectionrendermgr
InterfaceIds.IprojectionWorkingmodelinfo = _MaxPlus.cvar.InterfaceIds_IprojectionWorkingmodelinfo
InterfaceIds.Iradiositypreferences = _MaxPlus.cvar.InterfaceIds_Iradiositypreferences
InterfaceIds.IidReftargmonitorClass = _MaxPlus.cvar.InterfaceIds_IidReftargmonitorClass
InterfaceIds.Irtshaderparameterbinding = _MaxPlus.cvar.InterfaceIds_Irtshaderparameterbinding
InterfaceIds.Isceneeventcallback = _MaxPlus.cvar.InterfaceIds_Isceneeventcallback
InterfaceIds.Inodeeventcallback = _MaxPlus.cvar.InterfaceIds_Inodeeventcallback
InterfaceIds.Isceneeventmanager = _MaxPlus.cvar.InterfaceIds_Isceneeventmanager
InterfaceIds.IidIscenestatemanager = _MaxPlus.cvar.InterfaceIds_IidIscenestatemanager
InterfaceIds.IshadecontextExtension8 = _MaxPlus.cvar.InterfaceIds_IshadecontextExtension8
InterfaceIds.Meshdeformpw = _MaxPlus.cvar.InterfaceIds_Meshdeformpw
InterfaceIds.Patchdeformpw = _MaxPlus.cvar.InterfaceIds_Patchdeformpw
InterfaceIds.TabDialogManager = _MaxPlus.cvar.InterfaceIds_TabDialogManager
InterfaceIds.TabbedDialog = _MaxPlus.cvar.InterfaceIds_TabbedDialog
InterfaceIds.TabDialogObject = _MaxPlus.cvar.InterfaceIds_TabDialogObject
InterfaceIds.IutilFo = _MaxPlus.cvar.InterfaceIds_IutilFo
InterfaceIds.Iviewportbuttonmanager = _MaxPlus.cvar.InterfaceIds_Iviewportbuttonmanager
InterfaceIds.ViewportShaderManager = _MaxPlus.cvar.InterfaceIds_ViewportShaderManager
InterfaceIds.ViewportShaderManagerInterface2 = _MaxPlus.cvar.InterfaceIds_ViewportShaderManagerInterface2
InterfaceIds.ViewportShaderManagerInterface3 = _MaxPlus.cvar.InterfaceIds_ViewportShaderManagerInterface3
InterfaceIds.ViewportShaderClient = _MaxPlus.cvar.InterfaceIds_ViewportShaderClient
InterfaceIds.ViewportShader9Client = _MaxPlus.cvar.InterfaceIds_ViewportShader9Client
InterfaceIds.IdxShaderManager = _MaxPlus.cvar.InterfaceIds_IdxShaderManager
InterfaceIds.Iviewportshadingmgr = _MaxPlus.cvar.InterfaceIds_Iviewportshadingmgr
InterfaceIds.Iviewportshadingmgr2 = _MaxPlus.cvar.InterfaceIds_Iviewportshadingmgr2
InterfaceIds.Iworkingpivot = _MaxPlus.cvar.InterfaceIds_Iworkingpivot
InterfaceIds.MnNormalSpec = _MaxPlus.cvar.InterfaceIds_MnNormalSpec
InterfaceIds.Nodeshadingproperties = _MaxPlus.cvar.InterfaceIds_Nodeshadingproperties
InterfaceIds.Nodevalidity = _MaxPlus.cvar.InterfaceIds_Nodevalidity
InterfaceIds.Painterinterfacev5 = _MaxPlus.cvar.InterfaceIds_Painterinterfacev5
InterfaceIds.MeshNormalSpec = _MaxPlus.cvar.InterfaceIds_MeshNormalSpec
InterfaceIds.Rws = _MaxPlus.cvar.InterfaceIds_Rws
InterfaceIds.ParserLoader = _MaxPlus.cvar.InterfaceIds_ParserLoader
InterfaceIds.EffectFile = _MaxPlus.cvar.InterfaceIds_EffectFile
InterfaceIds.Xmlanimtreeentry = _MaxPlus.cvar.InterfaceIds_Xmlanimtreeentry
InterfaceIds.Xmlanimtreeentrylist = _MaxPlus.cvar.InterfaceIds_Xmlanimtreeentrylist
InterfaceIds.Nodeandanims = _MaxPlus.cvar.InterfaceIds_Nodeandanims
InterfaceIds.WireController = _MaxPlus.cvar.InterfaceIds_WireController
InterfaceIds.Pipelineclient = _MaxPlus.cvar.InterfaceIds_Pipelineclient

class AnimatableInterfaceIds(object):
    """Interface ID constant values."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    IIkcontrol = _MaxPlus.AnimatableInterfaceIds_IIkcontrol
    IIkchaincontrol = _MaxPlus.AnimatableInterfaceIds_IIkchaincontrol
    IWirecontrol = _MaxPlus.AnimatableInterfaceIds_IWirecontrol
    IScriptcontrol = _MaxPlus.AnimatableInterfaceIds_IScriptcontrol
    IMaster = _MaxPlus.AnimatableInterfaceIds_IMaster
    IEaselist = _MaxPlus.AnimatableInterfaceIds_IEaselist
    IMultlist = _MaxPlus.AnimatableInterfaceIds_IMultlist
    IBaseobject = _MaxPlus.AnimatableInterfaceIds_IBaseobject
    IWsmobject = _MaxPlus.AnimatableInterfaceIds_IWsmobject
    IDerivedobject = _MaxPlus.AnimatableInterfaceIds_IDerivedobject
    IObject = _MaxPlus.AnimatableInterfaceIds_IObject
    IParticleobj = _MaxPlus.AnimatableInterfaceIds_IParticleobj
    ILightobj = _MaxPlus.AnimatableInterfaceIds_ILightobj
    ISimpleparticleobj = _MaxPlus.AnimatableInterfaceIds_ISimpleparticleobj
    IKeycontrol = _MaxPlus.AnimatableInterfaceIds_IKeycontrol
    IKeycontrol2 = _MaxPlus.AnimatableInterfaceIds_IKeycontrol2
    ISetkeycontrol = _MaxPlus.AnimatableInterfaceIds_ISetkeycontrol
    ISystemXref = _MaxPlus.AnimatableInterfaceIds_ISystemXref
    ITextobject = _MaxPlus.AnimatableInterfaceIds_ITextobject
    IWavesound = _MaxPlus.AnimatableInterfaceIds_IWavesound
    INewpartpod = _MaxPlus.AnimatableInterfaceIds_INewpartpod
    INewpartsource = _MaxPlus.AnimatableInterfaceIds_INewpartsource
    INewpartoperator = _MaxPlus.AnimatableInterfaceIds_INewpartoperator
    INewparttest = _MaxPlus.AnimatableInterfaceIds_INewparttest
    IMeshselect = _MaxPlus.AnimatableInterfaceIds_IMeshselect
    IMeshselectdata = _MaxPlus.AnimatableInterfaceIds_IMeshselectdata
    IMaxscriptplugin = _MaxPlus.AnimatableInterfaceIds_IMaxscriptplugin
    IMeshdeltauser = _MaxPlus.AnimatableInterfaceIds_IMeshdeltauser
    IMeshdeltauserdata = _MaxPlus.AnimatableInterfaceIds_IMeshdeltauserdata
    ISplineselect = _MaxPlus.AnimatableInterfaceIds_ISplineselect
    ISplineselectdata = _MaxPlus.AnimatableInterfaceIds_ISplineselectdata
    ISplineops = _MaxPlus.AnimatableInterfaceIds_ISplineops
    IPatchselect = _MaxPlus.AnimatableInterfaceIds_IPatchselect
    IPatchselectdata = _MaxPlus.AnimatableInterfaceIds_IPatchselectdata
    IPatchops = _MaxPlus.AnimatableInterfaceIds_IPatchops
    ISubmap = _MaxPlus.AnimatableInterfaceIds_ISubmap
    IMitranslator = _MaxPlus.AnimatableInterfaceIds_IMitranslator
    IMentalray = _MaxPlus.AnimatableInterfaceIds_IMentalray
    INewmtlinterface = _MaxPlus.AnimatableInterfaceIds_INewmtlinterface
    IComponent = _MaxPlus.AnimatableInterfaceIds_IComponent
    IRefarray = _MaxPlus.AnimatableInterfaceIds_IRefarray
    ILinktmctrl = _MaxPlus.AnimatableInterfaceIds_ILinktmctrl
    ISubtargetctrl = _MaxPlus.AnimatableInterfaceIds_ISubtargetctrl
    IReagent = _MaxPlus.AnimatableInterfaceIds_IReagent
    IGeomimp = _MaxPlus.AnimatableInterfaceIds_IGeomimp
    IAggregation = _MaxPlus.AnimatableInterfaceIds_IAggregation
    IValence = _MaxPlus.AnimatableInterfaceIds_IValence
    IGuest = _MaxPlus.AnimatableInterfaceIds_IGuest
    IHost = _MaxPlus.AnimatableInterfaceIds_IHost
    ISceneobject = _MaxPlus.AnimatableInterfaceIds_ISceneobject
    IMultitangent = _MaxPlus.AnimatableInterfaceIds_IMultitangent
    ISoftselect = _MaxPlus.AnimatableInterfaceIds_ISoftselect
    IUnreplaceablectl = _MaxPlus.AnimatableInterfaceIds_IUnreplaceablectl
    IEulerctrl = _MaxPlus.AnimatableInterfaceIds_IEulerctrl
    ILocked = _MaxPlus.AnimatableInterfaceIds_ILocked
    ILockedClient = _MaxPlus.AnimatableInterfaceIds_ILockedClient
    IObjectsuperclassNotObjectclass = _MaxPlus.AnimatableInterfaceIds_IObjectsuperclassNotObjectclass
    ICompositesubmtlapi = _MaxPlus.AnimatableInterfaceIds_ICompositesubmtlapi
    IMtlidset = _MaxPlus.AnimatableInterfaceIds_IMtlidset
    IUserinterface = _MaxPlus.AnimatableInterfaceIds_IUserinterface
    __swig_destroy__ = _MaxPlus.delete_AnimatableInterfaceIds
    __del__ = lambda self : None;
AnimatableInterfaceIds_swigregister = _MaxPlus.AnimatableInterfaceIds_swigregister
AnimatableInterfaceIds_swigregister(AnimatableInterfaceIds)

class ReferenceMessagePartIds(object):
    """Reference message part IDs."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PartObjectType = _MaxPlus.ReferenceMessagePartIds_PartObjectType
    PartTm = _MaxPlus.ReferenceMessagePartIds_PartTm
    PartObj = _MaxPlus.ReferenceMessagePartIds_PartObj
    PartAll = _MaxPlus.ReferenceMessagePartIds_PartAll
    PartGiExcluded = _MaxPlus.ReferenceMessagePartIds_PartGiExcluded
    PartGiOccluder = _MaxPlus.ReferenceMessagePartIds_PartGiOccluder
    PartGiReceiver = _MaxPlus.ReferenceMessagePartIds_PartGiReceiver
    PartGiDiffuse = _MaxPlus.ReferenceMessagePartIds_PartGiDiffuse
    PartGiSpecular = _MaxPlus.ReferenceMessagePartIds_PartGiSpecular
    PartGiNbrefinesteps = _MaxPlus.ReferenceMessagePartIds_PartGiNbrefinesteps
    PartGiMeshsize = _MaxPlus.ReferenceMessagePartIds_PartGiMeshsize
    PartGiMeshingenabled = _MaxPlus.ReferenceMessagePartIds_PartGiMeshingenabled
    PartGiUseglobalmeshing = _MaxPlus.ReferenceMessagePartIds_PartGiUseglobalmeshing
    PartGiExcludefromregathering = _MaxPlus.ReferenceMessagePartIds_PartGiExcludefromregathering
    PartGiStoreillummesh = _MaxPlus.ReferenceMessagePartIds_PartGiStoreillummesh
    PartGiRaymult = _MaxPlus.ReferenceMessagePartIds_PartGiRaymult
    PartGiUseAdaptiveSubdivision = _MaxPlus.ReferenceMessagePartIds_PartGiUseAdaptiveSubdivision
    PartGiMinMeshSize = _MaxPlus.ReferenceMessagePartIds_PartGiMinMeshSize
    PartGiInitialMeshSize = _MaxPlus.ReferenceMessagePartIds_PartGiInitialMeshSize
    PartGiContrastThreshold = _MaxPlus.ReferenceMessagePartIds_PartGiContrastThreshold
    PartRendPropRenderable = _MaxPlus.ReferenceMessagePartIds_PartRendPropRenderable
    PartRendPropCastShadow = _MaxPlus.ReferenceMessagePartIds_PartRendPropCastShadow
    PartRendPropRcvShadow = _MaxPlus.ReferenceMessagePartIds_PartRendPropRcvShadow
    PartRendPropRenderOccluded = _MaxPlus.ReferenceMessagePartIds_PartRendPropRenderOccluded
    PartRendPropVisibility = _MaxPlus.ReferenceMessagePartIds_PartRendPropVisibility
    PartRendPropInheritVis = _MaxPlus.ReferenceMessagePartIds_PartRendPropInheritVis
    PartRendPropPrimaryInvisibility = _MaxPlus.ReferenceMessagePartIds_PartRendPropPrimaryInvisibility
    PartRendPropSecondaryInvisibility = _MaxPlus.ReferenceMessagePartIds_PartRendPropSecondaryInvisibility
    PartDispPropIsHidden = _MaxPlus.ReferenceMessagePartIds_PartDispPropIsHidden
    PartDispPropIsFrozen = _MaxPlus.ReferenceMessagePartIds_PartDispPropIsFrozen
    PartDispPropShowFrznWithMtl = _MaxPlus.ReferenceMessagePartIds_PartDispPropShowFrznWithMtl
    PartDispPropBoxMode = _MaxPlus.ReferenceMessagePartIds_PartDispPropBoxMode
    PartDispPropBackcull = _MaxPlus.ReferenceMessagePartIds_PartDispPropBackcull
    PartDispPropAllEdges = _MaxPlus.ReferenceMessagePartIds_PartDispPropAllEdges
    PartDispPropBoneOnly = _MaxPlus.ReferenceMessagePartIds_PartDispPropBoneOnly
    PartDispPropBoneAsLine = _MaxPlus.ReferenceMessagePartIds_PartDispPropBoneAsLine
    PartDispPropShowPath = _MaxPlus.ReferenceMessagePartIds_PartDispPropShowPath
    PartDispPropVertTicks = _MaxPlus.ReferenceMessagePartIds_PartDispPropVertTicks
    PartDispPropXrayMtl = _MaxPlus.ReferenceMessagePartIds_PartDispPropXrayMtl
    PartDispPropIgnoreExtents = _MaxPlus.ReferenceMessagePartIds_PartDispPropIgnoreExtents
    PartDispPropColorVerts = _MaxPlus.ReferenceMessagePartIds_PartDispPropColorVerts
    PartExcludeRadiosity = _MaxPlus.ReferenceMessagePartIds_PartExcludeRadiosity
    PartHidestate = _MaxPlus.ReferenceMessagePartIds_PartHidestate
    PartMxsPropchange = _MaxPlus.ReferenceMessagePartIds_PartMxsPropchange
    __swig_destroy__ = _MaxPlus.delete_ReferenceMessagePartIds
    __del__ = lambda self : None;
ReferenceMessagePartIds_swigregister = _MaxPlus.ReferenceMessagePartIds_swigregister
ReferenceMessagePartIds_swigregister(ReferenceMessagePartIds)

class AbstractNotificationHandler(object):
    """Derive from this abstract class to create a notification handler."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        """__init__(Autodesk::Max::AbstractNotificationHandler self) -> AbstractNotificationHandler"""
        if self.__class__ == AbstractNotificationHandler:
            _self = None
        else:
            _self = self
        this = _MaxPlus.new_AbstractNotificationHandler(_self, )
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _MaxPlus.delete_AbstractNotificationHandler
    __del__ = lambda self : None;
    def OnNotify(self, *args):
        """OnNotify(AbstractNotificationHandler self, int code)"""
        return _MaxPlus.AbstractNotificationHandler_OnNotify(self, *args)

    def __disown__(self):
        self.this.disown()
        _MaxPlus.disown_AbstractNotificationHandler(self)
        return weakref_proxy(self)
AbstractNotificationHandler_swigregister = _MaxPlus.AbstractNotificationHandler_swigregister
AbstractNotificationHandler_swigregister(AbstractNotificationHandler)

class _INTERNAL_NotificationManager(object):
    """For internal use only. Prevents notification handlers from getting deleted by the garbage collector of a scripting language."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def AddHandler(*args):
        """AddHandler(int code, AbstractNotificationHandler nh)"""
        return _MaxPlus._INTERNAL_NotificationManager_AddHandler(*args)

    AddHandler = staticmethod(AddHandler)
    def RemoveHandler(*args):
        """RemoveHandler(AbstractNotificationHandler nh)"""
        return _MaxPlus._INTERNAL_NotificationManager_RemoveHandler(*args)

    RemoveHandler = staticmethod(RemoveHandler)
    __swig_destroy__ = _MaxPlus.delete__INTERNAL_NotificationManager
    __del__ = lambda self : None;
_INTERNAL_NotificationManager_swigregister = _MaxPlus._INTERNAL_NotificationManager_swigregister
_INTERNAL_NotificationManager_swigregister(_INTERNAL_NotificationManager)

def _INTERNAL_NotificationManager_AddHandler(*args):
  """_INTERNAL_NotificationManager_AddHandler(int code, AbstractNotificationHandler nh)"""
  return _MaxPlus._INTERNAL_NotificationManager_AddHandler(*args)

def _INTERNAL_NotificationManager_RemoveHandler(*args):
  """_INTERNAL_NotificationManager_RemoveHandler(AbstractNotificationHandler nh)"""
  return _MaxPlus._INTERNAL_NotificationManager_RemoveHandler(*args)

class NotificationCodes(object):
    """Notification codes that are broadcast by 3ds Max."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    MatlibPreOpen = _MaxPlus.NotificationCodes_MatlibPreOpen
    MatlibPostOpen = _MaxPlus.NotificationCodes_MatlibPostOpen
    MatlibPreSave = _MaxPlus.NotificationCodes_MatlibPreSave
    MatlibPostSave = _MaxPlus.NotificationCodes_MatlibPostSave
    MatlibPreMerge = _MaxPlus.NotificationCodes_MatlibPreMerge
    MatlibPostMerge = _MaxPlus.NotificationCodes_MatlibPostMerge
    SceneXrefPreMerge = _MaxPlus.NotificationCodes_SceneXrefPreMerge
    SceneXrefPostMerge = _MaxPlus.NotificationCodes_SceneXrefPostMerge
    ObjectXrefPreMerge = _MaxPlus.NotificationCodes_ObjectXrefPreMerge
    ObjectXrefPostMerge = _MaxPlus.NotificationCodes_ObjectXrefPostMerge
    ScenestatePreSave = _MaxPlus.NotificationCodes_ScenestatePreSave
    ScenestatePostSave = _MaxPlus.NotificationCodes_ScenestatePostSave
    ScenestatePreRestore = _MaxPlus.NotificationCodes_ScenestatePreRestore
    ScenestatePostRestore = _MaxPlus.NotificationCodes_ScenestatePostRestore
    ScenestateDelete = _MaxPlus.NotificationCodes_ScenestateDelete
    ScenestateRename = _MaxPlus.NotificationCodes_ScenestateRename
    ScenePreUndo = _MaxPlus.NotificationCodes_ScenePreUndo
    ScenePreRedo = _MaxPlus.NotificationCodes_ScenePreRedo
    ScenePostUndo = _MaxPlus.NotificationCodes_ScenePostUndo
    ScenePostRefo = _MaxPlus.NotificationCodes_ScenePostRefo
    FilePreOpenProcess = _MaxPlus.NotificationCodes_FilePreOpenProcess
    FilePostOpenProcess = _MaxPlus.NotificationCodes_FilePostOpenProcess
    FilePreSaveProcess = _MaxPlus.NotificationCodes_FilePreSaveProcess
    FilePostSaveProcess = _MaxPlus.NotificationCodes_FilePostSaveProcess
    AtsPreRepathPhase = _MaxPlus.NotificationCodes_AtsPreRepathPhase
    AtsPostRepathPhase = _MaxPlus.NotificationCodes_AtsPostRepathPhase
    ProxyTemporaryDisableStart = _MaxPlus.NotificationCodes_ProxyTemporaryDisableStart
    ProxyTemporaryDisableEnd = _MaxPlus.NotificationCodes_ProxyTemporaryDisableEnd
    NamedSelSetCreated = _MaxPlus.NotificationCodes_NamedSelSetCreated
    NamedSelSetDeleted = _MaxPlus.NotificationCodes_NamedSelSetDeleted
    NamedSelSetRenamed = _MaxPlus.NotificationCodes_NamedSelSetRenamed
    NamedSelSetPreModify = _MaxPlus.NotificationCodes_NamedSelSetPreModify
    NamedSelSetPostModify = _MaxPlus.NotificationCodes_NamedSelSetPostModify
    PreNodeGeneralPropChanged = _MaxPlus.NotificationCodes_PreNodeGeneralPropChanged
    PostNodeGeneralPropChanged = _MaxPlus.NotificationCodes_PostNodeGeneralPropChanged
    PreNodeGiPropChanged = _MaxPlus.NotificationCodes_PreNodeGiPropChanged
    PostNodeGiPropChanged = _MaxPlus.NotificationCodes_PostNodeGiPropChanged
    PreNodeMentalrayPropChanged = _MaxPlus.NotificationCodes_PreNodeMentalrayPropChanged
    PostNodeMentalrayPropChanged = _MaxPlus.NotificationCodes_PostNodeMentalrayPropChanged
    PreNodeBonePropChanged = _MaxPlus.NotificationCodes_PreNodeBonePropChanged
    PostNodeBonePropChanged = _MaxPlus.NotificationCodes_PostNodeBonePropChanged
    PreNodeUserPropChanged = _MaxPlus.NotificationCodes_PreNodeUserPropChanged
    PostNodeUserPropChanged = _MaxPlus.NotificationCodes_PostNodeUserPropChanged
    PreNodeRenderPropChanged = _MaxPlus.NotificationCodes_PreNodeRenderPropChanged
    PostNodeRenderPropChanged = _MaxPlus.NotificationCodes_PostNodeRenderPropChanged
    PreNodeDisplayPropChanged = _MaxPlus.NotificationCodes_PreNodeDisplayPropChanged
    PostNodeDisplayPropChanged = _MaxPlus.NotificationCodes_PostNodeDisplayPropChanged
    PreNodeBasicPropChanged = _MaxPlus.NotificationCodes_PreNodeBasicPropChanged
    PostNodeBasicPropChanged = _MaxPlus.NotificationCodes_PostNodeBasicPropChanged
    CustomAttributesAdded = _MaxPlus.NotificationCodes_CustomAttributesAdded
    CustomAttributesRemoved = _MaxPlus.NotificationCodes_CustomAttributesRemoved
    FileStatusReadonly = _MaxPlus.NotificationCodes_FileStatusReadonly
    UnitsChange = _MaxPlus.NotificationCodes_UnitsChange
    TimeunitsChange = _MaxPlus.NotificationCodes_TimeunitsChange
    ViewportChange = _MaxPlus.NotificationCodes_ViewportChange
    SpacemodeChange = _MaxPlus.NotificationCodes_SpacemodeChange
    SystemPreReset = _MaxPlus.NotificationCodes_SystemPreReset
    SystemPostReset = _MaxPlus.NotificationCodes_SystemPostReset
    SystemPreNew = _MaxPlus.NotificationCodes_SystemPreNew
    SystemPostNew = _MaxPlus.NotificationCodes_SystemPostNew
    FilePreOpen = _MaxPlus.NotificationCodes_FilePreOpen
    FilePostOpen = _MaxPlus.NotificationCodes_FilePostOpen
    FilePreMerge = _MaxPlus.NotificationCodes_FilePreMerge
    FilePostMerge = _MaxPlus.NotificationCodes_FilePostMerge
    FilePostMerge2 = _MaxPlus.NotificationCodes_FilePostMerge2
    FilePreSave = _MaxPlus.NotificationCodes_FilePreSave
    FilePostSave = _MaxPlus.NotificationCodes_FilePostSave
    FileOpenFailed = _MaxPlus.NotificationCodes_FileOpenFailed
    FilePreSaveOld = _MaxPlus.NotificationCodes_FilePreSaveOld
    FilePostSaveOld = _MaxPlus.NotificationCodes_FilePostSaveOld
    SelectionsetChanged = _MaxPlus.NotificationCodes_SelectionsetChanged
    BitmapChanged = _MaxPlus.NotificationCodes_BitmapChanged
    PreRender = _MaxPlus.NotificationCodes_PreRender
    PostRender = _MaxPlus.NotificationCodes_PostRender
    PreRenderframe = _MaxPlus.NotificationCodes_PreRenderframe
    PostRenderframe = _MaxPlus.NotificationCodes_PostRenderframe
    PreImport = _MaxPlus.NotificationCodes_PreImport
    PostImport = _MaxPlus.NotificationCodes_PostImport
    ImportFailed = _MaxPlus.NotificationCodes_ImportFailed
    PreExport = _MaxPlus.NotificationCodes_PreExport
    PostExport = _MaxPlus.NotificationCodes_PostExport
    ExportFailed = _MaxPlus.NotificationCodes_ExportFailed
    NodeRenamed = _MaxPlus.NotificationCodes_NodeRenamed
    PreProgress = _MaxPlus.NotificationCodes_PreProgress
    PostProgress = _MaxPlus.NotificationCodes_PostProgress
    ModpanelSelChanged = _MaxPlus.NotificationCodes_ModpanelSelChanged
    RendparamChanged = _MaxPlus.NotificationCodes_RendparamChanged
    FilelinkBindFailed = _MaxPlus.NotificationCodes_FilelinkBindFailed
    FilelinkDetachFailed = _MaxPlus.NotificationCodes_FilelinkDetachFailed
    FilelinkReloadFailed = _MaxPlus.NotificationCodes_FilelinkReloadFailed
    FilelinkAttachFailed = _MaxPlus.NotificationCodes_FilelinkAttachFailed
    FilelinkPreBind = _MaxPlus.NotificationCodes_FilelinkPreBind
    FilelinkPostBind = _MaxPlus.NotificationCodes_FilelinkPostBind
    FilelinkPreDetach = _MaxPlus.NotificationCodes_FilelinkPreDetach
    FilelinkPostDetach = _MaxPlus.NotificationCodes_FilelinkPostDetach
    FilelinkPreReload = _MaxPlus.NotificationCodes_FilelinkPreReload
    FilelinkPostReload = _MaxPlus.NotificationCodes_FilelinkPostReload
    FilelinkPreAttach = _MaxPlus.NotificationCodes_FilelinkPreAttach
    FilelinkPostAttach = _MaxPlus.NotificationCodes_FilelinkPostAttach
    AbNavigateUrl = _MaxPlus.NotificationCodes_AbNavigateUrl
    RenderPreeval = _MaxPlus.NotificationCodes_RenderPreeval
    NodeCreated = _MaxPlus.NotificationCodes_NodeCreated
    NodeLinked = _MaxPlus.NotificationCodes_NodeLinked
    NodeUnlinked = _MaxPlus.NotificationCodes_NodeUnlinked
    NodeHide = _MaxPlus.NotificationCodes_NodeHide
    NodeUnhide = _MaxPlus.NotificationCodes_NodeUnhide
    NodeFreeze = _MaxPlus.NotificationCodes_NodeFreeze
    NodeUnfreeze = _MaxPlus.NotificationCodes_NodeUnfreeze
    NodePreMtl = _MaxPlus.NotificationCodes_NodePreMtl
    NodePostMtl = _MaxPlus.NotificationCodes_NodePostMtl
    SceneAddedNode = _MaxPlus.NotificationCodes_SceneAddedNode
    ScenePreDeletedNode = _MaxPlus.NotificationCodes_ScenePreDeletedNode
    ScenePostDeletedNode = _MaxPlus.NotificationCodes_ScenePostDeletedNode
    SelNodesPreDelete = _MaxPlus.NotificationCodes_SelNodesPreDelete
    SelNodesPostDelete = _MaxPlus.NotificationCodes_SelNodesPostDelete
    WmEnable = _MaxPlus.NotificationCodes_WmEnable
    SystemShutdown = _MaxPlus.NotificationCodes_SystemShutdown
    SystemStartup = _MaxPlus.NotificationCodes_SystemStartup
    PluginLoaded = _MaxPlus.NotificationCodes_PluginLoaded
    SystemShutdown2 = _MaxPlus.NotificationCodes_SystemShutdown2
    AnimateOn = _MaxPlus.NotificationCodes_AnimateOn
    AnimateOff = _MaxPlus.NotificationCodes_AnimateOff
    ColorChange = _MaxPlus.NotificationCodes_ColorChange
    PreEditObjChange = _MaxPlus.NotificationCodes_PreEditObjChange
    PostEditObjChange = _MaxPlus.NotificationCodes_PostEditObjChange
    RadiosityprocessStarted = _MaxPlus.NotificationCodes_RadiosityprocessStarted
    RadiosityprocessStopped = _MaxPlus.NotificationCodes_RadiosityprocessStopped
    RadiosityprocessReset = _MaxPlus.NotificationCodes_RadiosityprocessReset
    RadiosityprocessDone = _MaxPlus.NotificationCodes_RadiosityprocessDone
    LightingUnitDisplaySystemChange = _MaxPlus.NotificationCodes_LightingUnitDisplaySystemChange
    BeginRenderingReflectRefractMap = _MaxPlus.NotificationCodes_BeginRenderingReflectRefractMap
    BeginRenderingActualFrame = _MaxPlus.NotificationCodes_BeginRenderingActualFrame
    BeginRenderingTonemappingImage = _MaxPlus.NotificationCodes_BeginRenderingTonemappingImage
    RadiosityPluginChanged = _MaxPlus.NotificationCodes_RadiosityPluginChanged
    SceneUndo = _MaxPlus.NotificationCodes_SceneUndo
    SceneRedo = _MaxPlus.NotificationCodes_SceneRedo
    ManipulateModeOff = _MaxPlus.NotificationCodes_ManipulateModeOff
    ManipulateModeOn = _MaxPlus.NotificationCodes_ManipulateModeOn
    PreMirrorNodes = _MaxPlus.NotificationCodes_PreMirrorNodes
    PostMirrorNodes = _MaxPlus.NotificationCodes_PostMirrorNodes
    NodeCloned = _MaxPlus.NotificationCodes_NodeCloned
    PreNotifydependents = _MaxPlus.NotificationCodes_PreNotifydependents
    PostNotifydependents = _MaxPlus.NotificationCodes_PostNotifydependents
    MtlRefadded = _MaxPlus.NotificationCodes_MtlRefadded
    MtlRefdeleted = _MaxPlus.NotificationCodes_MtlRefdeleted
    TimerangeChange = _MaxPlus.NotificationCodes_TimerangeChange
    PreModifierAdded = _MaxPlus.NotificationCodes_PreModifierAdded
    PostModifierAdded = _MaxPlus.NotificationCodes_PostModifierAdded
    PreModifierDeleted = _MaxPlus.NotificationCodes_PreModifierDeleted
    PostModifierDeleted = _MaxPlus.NotificationCodes_PostModifierDeleted
    FilelinkPostReloadPrePrune = _MaxPlus.NotificationCodes_FilelinkPostReloadPrePrune
    PreNodesCloned = _MaxPlus.NotificationCodes_PreNodesCloned
    PostNodesCloned = _MaxPlus.NotificationCodes_PostNodesCloned
    PostMergeProcess = _MaxPlus.NotificationCodes_PostMergeProcess
    SystemPreDirChange = _MaxPlus.NotificationCodes_SystemPreDirChange
    SystemPostDirChange = _MaxPlus.NotificationCodes_SystemPostDirChange
    SvSelectionsetChanged = _MaxPlus.NotificationCodes_SvSelectionsetChanged
    SvDoubleclickGraphnode = _MaxPlus.NotificationCodes_SvDoubleclickGraphnode
    PreRendererChange = _MaxPlus.NotificationCodes_PreRendererChange
    PostRendererChange = _MaxPlus.NotificationCodes_PostRendererChange
    SvPreLayoutChange = _MaxPlus.NotificationCodes_SvPreLayoutChange
    SvPostLayoutChange = _MaxPlus.NotificationCodes_SvPostLayoutChange
    ByCategoryDisplayFilterChanged = _MaxPlus.NotificationCodes_ByCategoryDisplayFilterChanged
    CustomDisplayFilterChanged = _MaxPlus.NotificationCodes_CustomDisplayFilterChanged
    LayerCreated = _MaxPlus.NotificationCodes_LayerCreated
    LayerDeleted = _MaxPlus.NotificationCodes_LayerDeleted
    NodeLayerChanged = _MaxPlus.NotificationCodes_NodeLayerChanged
    TabbedDialogCreated = _MaxPlus.NotificationCodes_TabbedDialogCreated
    TabbedDialogDeleted = _MaxPlus.NotificationCodes_TabbedDialogDeleted
    NodeNameSet = _MaxPlus.NotificationCodes_NodeNameSet
    HwTextureChanged = _MaxPlus.NotificationCodes_HwTextureChanged
    MxsStartup = _MaxPlus.NotificationCodes_MxsStartup
    MxsPostStartup = _MaxPlus.NotificationCodes_MxsPostStartup
    ActionItemHotKeyPreExec = _MaxPlus.NotificationCodes_ActionItemHotKeyPreExec
    ActionItemHotKeyPostExec = _MaxPlus.NotificationCodes_ActionItemHotKeyPostExec
    ActionItemExecutionStarted = _MaxPlus.NotificationCodes_ActionItemExecutionStarted
    ActionItemExecutionEnded = _MaxPlus.NotificationCodes_ActionItemExecutionEnded
    MxsShutdown = _MaxPlus.NotificationCodes_MxsShutdown
    D3dPreDeviceReset = _MaxPlus.NotificationCodes_D3dPreDeviceReset
    D3dPostDeviceReset = _MaxPlus.NotificationCodes_D3dPostDeviceReset
    ToolpaletteMtlSuspend = _MaxPlus.NotificationCodes_ToolpaletteMtlSuspend
    ToolpaletteMtlResume = _MaxPlus.NotificationCodes_ToolpaletteMtlResume
    ClassdescReplaced = _MaxPlus.NotificationCodes_ClassdescReplaced
    ClassdescLoaded = _MaxPlus.NotificationCodes_ClassdescLoaded
    ToolbarsPreLoad = _MaxPlus.NotificationCodes_ToolbarsPreLoad
    ToolbarsPostLoad = _MaxPlus.NotificationCodes_ToolbarsPostLoad
    FileCheckStatus = _MaxPlus.NotificationCodes_FileCheckStatus
    ModpanelSubobjectlevelChanged = _MaxPlus.NotificationCodes_ModpanelSubobjectlevelChanged
    FailedDirectxMaterialTextureLoad = _MaxPlus.NotificationCodes_FailedDirectxMaterialTextureLoad
    RenderPreevalFrameinfo = _MaxPlus.NotificationCodes_RenderPreevalFrameinfo
    PostSceneReset = _MaxPlus.NotificationCodes_PostSceneReset
    AnimLayersEnabled = _MaxPlus.NotificationCodes_AnimLayersEnabled
    AnimLayersDisabled = _MaxPlus.NotificationCodes_AnimLayersDisabled
    ActionItemPreStartOverride = _MaxPlus.NotificationCodes_ActionItemPreStartOverride
    ActionItemPostStartOverride = _MaxPlus.NotificationCodes_ActionItemPostStartOverride
    ActionItemPreEndOverride = _MaxPlus.NotificationCodes_ActionItemPreEndOverride
    ActionItemPostEndOverride = _MaxPlus.NotificationCodes_ActionItemPostEndOverride
    SelectionLock = _MaxPlus.NotificationCodes_SelectionLock
    SelectionUnlock = _MaxPlus.NotificationCodes_SelectionUnlock
    PreImageViewerDisplay = _MaxPlus.NotificationCodes_PreImageViewerDisplay
    PostImageViewerDisplay = _MaxPlus.NotificationCodes_PostImageViewerDisplay
    ImageViewerUpdate = _MaxPlus.NotificationCodes_ImageViewerUpdate
    OsThemeChanged = _MaxPlus.NotificationCodes_OsThemeChanged
    ActiveViewportChanged = _MaxPlus.NotificationCodes_ActiveViewportChanged
    PreMaxmainwindowShow = _MaxPlus.NotificationCodes_PreMaxmainwindowShow
    PostMaxmainwindowShow = _MaxPlus.NotificationCodes_PostMaxmainwindowShow
    ClassdescAdded = _MaxPlus.NotificationCodes_ClassdescAdded
    ObjectDefinitionChangeBegin = _MaxPlus.NotificationCodes_ObjectDefinitionChangeBegin
    ObjectDefinitionChangeEnd = _MaxPlus.NotificationCodes_ObjectDefinitionChangeEnd
    MtlbaseParamdlgPreOpen = _MaxPlus.NotificationCodes_MtlbaseParamdlgPreOpen
    MtlbaseParamdlgPostClose = _MaxPlus.NotificationCodes_MtlbaseParamdlgPostClose
    AppFrameThemeChanged = _MaxPlus.NotificationCodes_AppFrameThemeChanged
    InternalUseStart = _MaxPlus.NotificationCodes_InternalUseStart
    __swig_destroy__ = _MaxPlus.delete_NotificationCodes
    __del__ = lambda self : None;
NotificationCodes_swigregister = _MaxPlus.NotificationCodes_swigregister
NotificationCodes_swigregister(NotificationCodes)

class Animation(object):
    """Contains static functions for animation and auto-key state management."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetIsAnimating():
        """GetIsAnimating() -> bool"""
        return _MaxPlus.Animation_GetIsAnimating()

    GetIsAnimating = staticmethod(GetIsAnimating)
    def SetIsAnimating(*args):
        """SetIsAnimating(bool b)"""
        return _MaxPlus.Animation_SetIsAnimating(*args)

    SetIsAnimating = staticmethod(SetIsAnimating)
    def SuspendAnimate():
        """SuspendAnimate()"""
        return _MaxPlus.Animation_SuspendAnimate()

    SuspendAnimate = staticmethod(SuspendAnimate)
    def ResumeAnimate():
        """ResumeAnimate()"""
        return _MaxPlus.Animation_ResumeAnimate()

    ResumeAnimate = staticmethod(ResumeAnimate)
    def GetStartTime():
        """GetStartTime() -> TimeValue"""
        return _MaxPlus.Animation_GetStartTime()

    GetStartTime = staticmethod(GetStartTime)
    def SetStartTime(*args):
        """SetStartTime(TimeValue s)"""
        return _MaxPlus.Animation_SetStartTime(*args)

    SetStartTime = staticmethod(SetStartTime)
    def GetEndTime():
        """GetEndTime() -> TimeValue"""
        return _MaxPlus.Animation_GetEndTime()

    GetEndTime = staticmethod(GetEndTime)
    def SetEndTime(*args):
        """SetEndTime(TimeValue e)"""
        return _MaxPlus.Animation_SetEndTime(*args)

    SetEndTime = staticmethod(SetEndTime)
    def AreWeKeying(*args):
        """
        AreWeKeying(TimeValue t=Autodesk::Max::Now()) -> bool
        AreWeKeying() -> bool
        """
        return _MaxPlus.Animation_AreWeKeying(*args)

    AreWeKeying = staticmethod(AreWeKeying)
    def GetSetKeyMode():
        """GetSetKeyMode() -> bool"""
        return _MaxPlus.Animation_GetSetKeyMode()

    GetSetKeyMode = staticmethod(GetSetKeyMode)
    def SetSetKeyMode(*args):
        """SetSetKeyMode(bool onOff)"""
        return _MaxPlus.Animation_SetSetKeyMode(*args)

    SetSetKeyMode = staticmethod(SetSetKeyMode)
    def SuspendSetKeyMode():
        """SuspendSetKeyMode()"""
        return _MaxPlus.Animation_SuspendSetKeyMode()

    SuspendSetKeyMode = staticmethod(SuspendSetKeyMode)
    def ResumeSetKeyMode():
        """ResumeSetKeyMode()"""
        return _MaxPlus.Animation_ResumeSetKeyMode()

    ResumeSetKeyMode = staticmethod(ResumeSetKeyMode)
    def GetSetKeySuspended():
        """GetSetKeySuspended() -> bool"""
        return _MaxPlus.Animation_GetSetKeySuspended()

    GetSetKeySuspended = staticmethod(GetSetKeySuspended)
    def GetSetKeyModeStatus():
        """GetSetKeyModeStatus() -> bool"""
        return _MaxPlus.Animation_GetSetKeyModeStatus()

    GetSetKeyModeStatus = staticmethod(GetSetKeyModeStatus)
    def IsSetKeyModeFeatureEnabled():
        """IsSetKeyModeFeatureEnabled() -> bool"""
        return _MaxPlus.Animation_IsSetKeyModeFeatureEnabled()

    IsSetKeyModeFeatureEnabled = staticmethod(IsSetKeyModeFeatureEnabled)
    def EnableAnimateButton(*args):
        """EnableAnimateButton(bool enable)"""
        return _MaxPlus.Animation_EnableAnimateButton(*args)

    EnableAnimateButton = staticmethod(EnableAnimateButton)
    def IsAnimateEnabled():
        """IsAnimateEnabled() -> bool"""
        return _MaxPlus.Animation_IsAnimateEnabled()

    IsAnimateEnabled = staticmethod(IsAnimateEnabled)
    def SetAnimateButtonState(*args):
        """SetAnimateButtonState(bool onOff)"""
        return _MaxPlus.Animation_SetAnimateButtonState(*args)

    SetAnimateButtonState = staticmethod(SetAnimateButtonState)
    def GetTime():
        """GetTime() -> TimeValue"""
        return _MaxPlus.Animation_GetTime()

    GetTime = staticmethod(GetTime)
    def SetTime(*args):
        """
        SetTime(TimeValue t, bool redraw=True)
        SetTime(TimeValue t)
        """
        return _MaxPlus.Animation_SetTime(*args)

    SetTime = staticmethod(SetTime)
    def GetAnimRange():
        """GetAnimRange() -> Interval"""
        return _MaxPlus.Animation_GetAnimRange()

    GetAnimRange = staticmethod(GetAnimRange)
    def SetRange(*args):
        """SetRange(Interval range)"""
        return _MaxPlus.Animation_SetRange(*args)

    SetRange = staticmethod(SetRange)
    def GetAutoKeyDefaultKeyOn():
        """GetAutoKeyDefaultKeyOn() -> bool"""
        return _MaxPlus.Animation_GetAutoKeyDefaultKeyOn()

    GetAutoKeyDefaultKeyOn = staticmethod(GetAutoKeyDefaultKeyOn)
    def SetAutoKeyDefaultKeyOn(*args):
        """SetAutoKeyDefaultKeyOn(bool setKey)"""
        return _MaxPlus.Animation_SetAutoKeyDefaultKeyOn(*args)

    SetAutoKeyDefaultKeyOn = staticmethod(SetAutoKeyDefaultKeyOn)
    def GetAutoKeyDefaultKeyTime():
        """GetAutoKeyDefaultKeyTime() -> TimeValue"""
        return _MaxPlus.Animation_GetAutoKeyDefaultKeyTime()

    GetAutoKeyDefaultKeyTime = staticmethod(GetAutoKeyDefaultKeyTime)
    def SetAutoKeyDefaultKeyTime(*args):
        """SetAutoKeyDefaultKeyTime(TimeValue t)"""
        return _MaxPlus.Animation_SetAutoKeyDefaultKeyTime(*args)

    SetAutoKeyDefaultKeyTime = staticmethod(SetAutoKeyDefaultKeyTime)
    def GetControllerOverrideRangeDefault():
        """GetControllerOverrideRangeDefault() -> bool"""
        return _MaxPlus.Animation_GetControllerOverrideRangeDefault()

    GetControllerOverrideRangeDefault = staticmethod(GetControllerOverrideRangeDefault)
    def SetControllerOverrideRangeDefault(*args):
        """SetControllerOverrideRangeDefault(bool override)"""
        return _MaxPlus.Animation_SetControllerOverrideRangeDefault(*args)

    SetControllerOverrideRangeDefault = staticmethod(SetControllerOverrideRangeDefault)
    def GetDefaultInTangentType():
        """GetDefaultInTangentType() -> int"""
        return _MaxPlus.Animation_GetDefaultInTangentType()

    GetDefaultInTangentType = staticmethod(GetDefaultInTangentType)
    def GetDefaultOutTangentType():
        """GetDefaultOutTangentType() -> int"""
        return _MaxPlus.Animation_GetDefaultOutTangentType()

    GetDefaultOutTangentType = staticmethod(GetDefaultOutTangentType)
    def SetDefaultTangentType(*args):
        """
        SetDefaultTangentType(int dfltInTangentType, int dfltOutTangentType, bool writeInCfgFile=True)
        SetDefaultTangentType(int dfltInTangentType, int dfltOutTangentType)
        """
        return _MaxPlus.Animation_SetDefaultTangentType(*args)

    SetDefaultTangentType = staticmethod(SetDefaultTangentType)
    def GetRealTimePlayback():
        """GetRealTimePlayback() -> bool"""
        return _MaxPlus.Animation_GetRealTimePlayback()

    GetRealTimePlayback = staticmethod(GetRealTimePlayback)
    def SetRealTimePlayback(*args):
        """SetRealTimePlayback(bool realTime)"""
        return _MaxPlus.Animation_SetRealTimePlayback(*args)

    SetRealTimePlayback = staticmethod(SetRealTimePlayback)
    def GetPlayActiveOnly():
        """GetPlayActiveOnly() -> bool"""
        return _MaxPlus.Animation_GetPlayActiveOnly()

    GetPlayActiveOnly = staticmethod(GetPlayActiveOnly)
    def SetPlayActiveOnly(*args):
        """SetPlayActiveOnly(bool playActive)"""
        return _MaxPlus.Animation_SetPlayActiveOnly(*args)

    SetPlayActiveOnly = staticmethod(SetPlayActiveOnly)
    def StartPlayback(*args):
        """
        StartPlayback(bool selOnly=False)
        StartPlayback()
        StartPlayback(int selOnly)
        """
        return _MaxPlus.Animation_StartPlayback(*args)

    StartPlayback = staticmethod(StartPlayback)
    def EndPlayback():
        """EndPlayback()"""
        return _MaxPlus.Animation_EndPlayback()

    EndPlayback = staticmethod(EndPlayback)
    def IsPlaying():
        """IsPlaying() -> bool"""
        return _MaxPlus.Animation_IsPlaying()

    IsPlaying = staticmethod(IsPlaying)
    def GetPlaybackSpeed():
        """GetPlaybackSpeed() -> int"""
        return _MaxPlus.Animation_GetPlaybackSpeed()

    GetPlaybackSpeed = staticmethod(GetPlaybackSpeed)
    def SetPlaybackSpeed(*args):
        """SetPlaybackSpeed(int s)"""
        return _MaxPlus.Animation_SetPlaybackSpeed(*args)

    SetPlaybackSpeed = staticmethod(SetPlaybackSpeed)
    def GetPlaybackLoop():
        """GetPlaybackLoop() -> bool"""
        return _MaxPlus.Animation_GetPlaybackLoop()

    GetPlaybackLoop = staticmethod(GetPlaybackLoop)
    def SetPlaybackLoop(*args):
        """SetPlaybackLoop(bool loop)"""
        return _MaxPlus.Animation_SetPlaybackLoop(*args)

    SetPlaybackLoop = staticmethod(SetPlaybackLoop)
    __swig_destroy__ = _MaxPlus.delete_Animation
    __del__ = lambda self : None;
Animation_swigregister = _MaxPlus.Animation_swigregister
Animation_swigregister(Animation)

def Animation_GetIsAnimating():
  """Animation_GetIsAnimating() -> bool"""
  return _MaxPlus.Animation_GetIsAnimating()

def Animation_SetIsAnimating(*args):
  """Animation_SetIsAnimating(bool b)"""
  return _MaxPlus.Animation_SetIsAnimating(*args)

def Animation_SuspendAnimate():
  """Animation_SuspendAnimate()"""
  return _MaxPlus.Animation_SuspendAnimate()

def Animation_ResumeAnimate():
  """Animation_ResumeAnimate()"""
  return _MaxPlus.Animation_ResumeAnimate()

def Animation_GetStartTime():
  """Animation_GetStartTime() -> TimeValue"""
  return _MaxPlus.Animation_GetStartTime()

def Animation_SetStartTime(*args):
  """Animation_SetStartTime(TimeValue s)"""
  return _MaxPlus.Animation_SetStartTime(*args)

def Animation_GetEndTime():
  """Animation_GetEndTime() -> TimeValue"""
  return _MaxPlus.Animation_GetEndTime()

def Animation_SetEndTime(*args):
  """Animation_SetEndTime(TimeValue e)"""
  return _MaxPlus.Animation_SetEndTime(*args)

def Animation_AreWeKeying(*args):
  """
    AreWeKeying(TimeValue t=Autodesk::Max::Now()) -> bool
    Animation_AreWeKeying() -> bool
    """
  return _MaxPlus.Animation_AreWeKeying(*args)

def Animation_GetSetKeyMode():
  """Animation_GetSetKeyMode() -> bool"""
  return _MaxPlus.Animation_GetSetKeyMode()

def Animation_SetSetKeyMode(*args):
  """Animation_SetSetKeyMode(bool onOff)"""
  return _MaxPlus.Animation_SetSetKeyMode(*args)

def Animation_SuspendSetKeyMode():
  """Animation_SuspendSetKeyMode()"""
  return _MaxPlus.Animation_SuspendSetKeyMode()

def Animation_ResumeSetKeyMode():
  """Animation_ResumeSetKeyMode()"""
  return _MaxPlus.Animation_ResumeSetKeyMode()

def Animation_GetSetKeySuspended():
  """Animation_GetSetKeySuspended() -> bool"""
  return _MaxPlus.Animation_GetSetKeySuspended()

def Animation_GetSetKeyModeStatus():
  """Animation_GetSetKeyModeStatus() -> bool"""
  return _MaxPlus.Animation_GetSetKeyModeStatus()

def Animation_IsSetKeyModeFeatureEnabled():
  """Animation_IsSetKeyModeFeatureEnabled() -> bool"""
  return _MaxPlus.Animation_IsSetKeyModeFeatureEnabled()

def Animation_EnableAnimateButton(*args):
  """Animation_EnableAnimateButton(bool enable)"""
  return _MaxPlus.Animation_EnableAnimateButton(*args)

def Animation_IsAnimateEnabled():
  """Animation_IsAnimateEnabled() -> bool"""
  return _MaxPlus.Animation_IsAnimateEnabled()

def Animation_SetAnimateButtonState(*args):
  """Animation_SetAnimateButtonState(bool onOff)"""
  return _MaxPlus.Animation_SetAnimateButtonState(*args)

def Animation_GetTime():
  """Animation_GetTime() -> TimeValue"""
  return _MaxPlus.Animation_GetTime()

def Animation_SetTime(*args):
  """
    SetTime(TimeValue t, bool redraw=True)
    Animation_SetTime(TimeValue t)
    """
  return _MaxPlus.Animation_SetTime(*args)

def Animation_GetAnimRange():
  """Animation_GetAnimRange() -> Interval"""
  return _MaxPlus.Animation_GetAnimRange()

def Animation_SetRange(*args):
  """Animation_SetRange(Interval range)"""
  return _MaxPlus.Animation_SetRange(*args)

def Animation_GetAutoKeyDefaultKeyOn():
  """Animation_GetAutoKeyDefaultKeyOn() -> bool"""
  return _MaxPlus.Animation_GetAutoKeyDefaultKeyOn()

def Animation_SetAutoKeyDefaultKeyOn(*args):
  """Animation_SetAutoKeyDefaultKeyOn(bool setKey)"""
  return _MaxPlus.Animation_SetAutoKeyDefaultKeyOn(*args)

def Animation_GetAutoKeyDefaultKeyTime():
  """Animation_GetAutoKeyDefaultKeyTime() -> TimeValue"""
  return _MaxPlus.Animation_GetAutoKeyDefaultKeyTime()

def Animation_SetAutoKeyDefaultKeyTime(*args):
  """Animation_SetAutoKeyDefaultKeyTime(TimeValue t)"""
  return _MaxPlus.Animation_SetAutoKeyDefaultKeyTime(*args)

def Animation_GetControllerOverrideRangeDefault():
  """Animation_GetControllerOverrideRangeDefault() -> bool"""
  return _MaxPlus.Animation_GetControllerOverrideRangeDefault()

def Animation_SetControllerOverrideRangeDefault(*args):
  """Animation_SetControllerOverrideRangeDefault(bool override)"""
  return _MaxPlus.Animation_SetControllerOverrideRangeDefault(*args)

def Animation_GetDefaultInTangentType():
  """Animation_GetDefaultInTangentType() -> int"""
  return _MaxPlus.Animation_GetDefaultInTangentType()

def Animation_GetDefaultOutTangentType():
  """Animation_GetDefaultOutTangentType() -> int"""
  return _MaxPlus.Animation_GetDefaultOutTangentType()

def Animation_SetDefaultTangentType(*args):
  """
    SetDefaultTangentType(int dfltInTangentType, int dfltOutTangentType, bool writeInCfgFile=True)
    Animation_SetDefaultTangentType(int dfltInTangentType, int dfltOutTangentType)
    """
  return _MaxPlus.Animation_SetDefaultTangentType(*args)

def Animation_GetRealTimePlayback():
  """Animation_GetRealTimePlayback() -> bool"""
  return _MaxPlus.Animation_GetRealTimePlayback()

def Animation_SetRealTimePlayback(*args):
  """Animation_SetRealTimePlayback(bool realTime)"""
  return _MaxPlus.Animation_SetRealTimePlayback(*args)

def Animation_GetPlayActiveOnly():
  """Animation_GetPlayActiveOnly() -> bool"""
  return _MaxPlus.Animation_GetPlayActiveOnly()

def Animation_SetPlayActiveOnly(*args):
  """Animation_SetPlayActiveOnly(bool playActive)"""
  return _MaxPlus.Animation_SetPlayActiveOnly(*args)

def Animation_StartPlayback(*args):
  """
    StartPlayback(bool selOnly=False)
    StartPlayback()
    Animation_StartPlayback(int selOnly)
    """
  return _MaxPlus.Animation_StartPlayback(*args)

def Animation_EndPlayback():
  """Animation_EndPlayback()"""
  return _MaxPlus.Animation_EndPlayback()

def Animation_IsPlaying():
  """Animation_IsPlaying() -> bool"""
  return _MaxPlus.Animation_IsPlaying()

def Animation_GetPlaybackSpeed():
  """Animation_GetPlaybackSpeed() -> int"""
  return _MaxPlus.Animation_GetPlaybackSpeed()

def Animation_SetPlaybackSpeed(*args):
  """Animation_SetPlaybackSpeed(int s)"""
  return _MaxPlus.Animation_SetPlaybackSpeed(*args)

def Animation_GetPlaybackLoop():
  """Animation_GetPlaybackLoop() -> bool"""
  return _MaxPlus.Animation_GetPlaybackLoop()

def Animation_SetPlaybackLoop(*args):
  """Animation_SetPlaybackLoop(bool loop)"""
  return _MaxPlus.Animation_SetPlaybackLoop(*args)

class AnimationKeySteps(object):
    """Static functions for time configuration dialog key step options."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetSelectedOnly():
        """GetSelectedOnly() -> bool"""
        return _MaxPlus.AnimationKeySteps_GetSelectedOnly()

    GetSelectedOnly = staticmethod(GetSelectedOnly)
    def SetSelectedOnly(*args):
        """SetSelectedOnly(bool onOff)"""
        return _MaxPlus.AnimationKeySteps_SetSelectedOnly(*args)

    SetSelectedOnly = staticmethod(SetSelectedOnly)
    def GetUseTransform():
        """GetUseTransform() -> bool"""
        return _MaxPlus.AnimationKeySteps_GetUseTransform()

    GetUseTransform = staticmethod(GetUseTransform)
    def SetUseTransform(*args):
        """SetUseTransform(bool onOff)"""
        return _MaxPlus.AnimationKeySteps_SetUseTransform(*args)

    SetUseTransform = staticmethod(SetUseTransform)
    def GetPosition():
        """GetPosition() -> bool"""
        return _MaxPlus.AnimationKeySteps_GetPosition()

    GetPosition = staticmethod(GetPosition)
    def SetPosition(*args):
        """SetPosition(bool onOff)"""
        return _MaxPlus.AnimationKeySteps_SetPosition(*args)

    SetPosition = staticmethod(SetPosition)
    def GetRotation():
        """GetRotation() -> bool"""
        return _MaxPlus.AnimationKeySteps_GetRotation()

    GetRotation = staticmethod(GetRotation)
    def SetRotation(*args):
        """SetRotation(bool onOff)"""
        return _MaxPlus.AnimationKeySteps_SetRotation(*args)

    SetRotation = staticmethod(SetRotation)
    def GetScale():
        """GetScale() -> bool"""
        return _MaxPlus.AnimationKeySteps_GetScale()

    GetScale = staticmethod(GetScale)
    def SetScale(*args):
        """SetScale(bool onOff)"""
        return _MaxPlus.AnimationKeySteps_SetScale(*args)

    SetScale = staticmethod(SetScale)
    def GetUseTrackBar():
        """GetUseTrackBar() -> bool"""
        return _MaxPlus.AnimationKeySteps_GetUseTrackBar()

    GetUseTrackBar = staticmethod(GetUseTrackBar)
    def SetUseTrackBar(*args):
        """SetUseTrackBar(bool onOff)"""
        return _MaxPlus.AnimationKeySteps_SetUseTrackBar(*args)

    SetUseTrackBar = staticmethod(SetUseTrackBar)
    __swig_destroy__ = _MaxPlus.delete_AnimationKeySteps
    __del__ = lambda self : None;
AnimationKeySteps_swigregister = _MaxPlus.AnimationKeySteps_swigregister
AnimationKeySteps_swigregister(AnimationKeySteps)

def AnimationKeySteps_GetSelectedOnly():
  """AnimationKeySteps_GetSelectedOnly() -> bool"""
  return _MaxPlus.AnimationKeySteps_GetSelectedOnly()

def AnimationKeySteps_SetSelectedOnly(*args):
  """AnimationKeySteps_SetSelectedOnly(bool onOff)"""
  return _MaxPlus.AnimationKeySteps_SetSelectedOnly(*args)

def AnimationKeySteps_GetUseTransform():
  """AnimationKeySteps_GetUseTransform() -> bool"""
  return _MaxPlus.AnimationKeySteps_GetUseTransform()

def AnimationKeySteps_SetUseTransform(*args):
  """AnimationKeySteps_SetUseTransform(bool onOff)"""
  return _MaxPlus.AnimationKeySteps_SetUseTransform(*args)

def AnimationKeySteps_GetPosition():
  """AnimationKeySteps_GetPosition() -> bool"""
  return _MaxPlus.AnimationKeySteps_GetPosition()

def AnimationKeySteps_SetPosition(*args):
  """AnimationKeySteps_SetPosition(bool onOff)"""
  return _MaxPlus.AnimationKeySteps_SetPosition(*args)

def AnimationKeySteps_GetRotation():
  """AnimationKeySteps_GetRotation() -> bool"""
  return _MaxPlus.AnimationKeySteps_GetRotation()

def AnimationKeySteps_SetRotation(*args):
  """AnimationKeySteps_SetRotation(bool onOff)"""
  return _MaxPlus.AnimationKeySteps_SetRotation(*args)

def AnimationKeySteps_GetScale():
  """AnimationKeySteps_GetScale() -> bool"""
  return _MaxPlus.AnimationKeySteps_GetScale()

def AnimationKeySteps_SetScale(*args):
  """AnimationKeySteps_SetScale(bool onOff)"""
  return _MaxPlus.AnimationKeySteps_SetScale(*args)

def AnimationKeySteps_GetUseTrackBar():
  """AnimationKeySteps_GetUseTrackBar() -> bool"""
  return _MaxPlus.AnimationKeySteps_GetUseTrackBar()

def AnimationKeySteps_SetUseTrackBar(*args):
  """AnimationKeySteps_SetUseTrackBar(bool onOff)"""
  return _MaxPlus.AnimationKeySteps_SetUseTrackBar(*args)

class AnimationTrajectory(object):
    """Static functions related to the trajectory mode in the motion panel."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetMode():
        """GetMode() -> bool"""
        return _MaxPlus.AnimationTrajectory_GetMode()

    GetMode = staticmethod(GetMode)
    def SetMode(*args):
        """SetMode(bool flag)"""
        return _MaxPlus.AnimationTrajectory_SetMode(*args)

    SetMode = staticmethod(SetMode)
    def GetKeySubMode():
        """GetKeySubMode() -> bool"""
        return _MaxPlus.AnimationTrajectory_GetKeySubMode()

    GetKeySubMode = staticmethod(GetKeySubMode)
    def SetKeySubMode(*args):
        """SetKeySubMode(bool flag)"""
        return _MaxPlus.AnimationTrajectory_SetKeySubMode(*args)

    SetKeySubMode = staticmethod(SetKeySubMode)
    def GetAddKeyMode():
        """GetAddKeyMode() -> bool"""
        return _MaxPlus.AnimationTrajectory_GetAddKeyMode()

    GetAddKeyMode = staticmethod(GetAddKeyMode)
    def SetAddKeyMode(*args):
        """SetAddKeyMode(bool flag)"""
        return _MaxPlus.AnimationTrajectory_SetAddKeyMode(*args)

    SetAddKeyMode = staticmethod(SetAddKeyMode)
    def DeleteSelectedKey():
        """DeleteSelectedKey()"""
        return _MaxPlus.AnimationTrajectory_DeleteSelectedKey()

    DeleteSelectedKey = staticmethod(DeleteSelectedKey)
    __swig_destroy__ = _MaxPlus.delete_AnimationTrajectory
    __del__ = lambda self : None;
AnimationTrajectory_swigregister = _MaxPlus.AnimationTrajectory_swigregister
AnimationTrajectory_swigregister(AnimationTrajectory)

def AnimationTrajectory_GetMode():
  """AnimationTrajectory_GetMode() -> bool"""
  return _MaxPlus.AnimationTrajectory_GetMode()

def AnimationTrajectory_SetMode(*args):
  """AnimationTrajectory_SetMode(bool flag)"""
  return _MaxPlus.AnimationTrajectory_SetMode(*args)

def AnimationTrajectory_GetKeySubMode():
  """AnimationTrajectory_GetKeySubMode() -> bool"""
  return _MaxPlus.AnimationTrajectory_GetKeySubMode()

def AnimationTrajectory_SetKeySubMode(*args):
  """AnimationTrajectory_SetKeySubMode(bool flag)"""
  return _MaxPlus.AnimationTrajectory_SetKeySubMode(*args)

def AnimationTrajectory_GetAddKeyMode():
  """AnimationTrajectory_GetAddKeyMode() -> bool"""
  return _MaxPlus.AnimationTrajectory_GetAddKeyMode()

def AnimationTrajectory_SetAddKeyMode(*args):
  """AnimationTrajectory_SetAddKeyMode(bool flag)"""
  return _MaxPlus.AnimationTrajectory_SetAddKeyMode(*args)

def AnimationTrajectory_DeleteSelectedKey():
  """AnimationTrajectory_DeleteSelectedKey()"""
  return _MaxPlus.AnimationTrajectory_DeleteSelectedKey()

class Factory(object):
    """Functions for creating objects and nodes."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def CreateNode(*args):
        """
        CreateNode(Object object) -> INode
        CreateNode(Object object, wchar_t const * name) -> INode
        """
        return _MaxPlus.Factory_CreateNode(*args)

    CreateNode = staticmethod(CreateNode)
    def CreateAnimatable(*args):
        """
        CreateAnimatable(SClass_ID sid, Class_ID ci, bool throwOnError) -> Animatable
        CreateAnimatable(SClass_ID sid, Class_ID ci) -> Animatable
        """
        return _MaxPlus.Factory_CreateAnimatable(*args)

    CreateAnimatable = staticmethod(CreateAnimatable)
    def CreateObject(*args):
        """CreateObject(SClass_ID sid, Class_ID ci) -> Object"""
        return _MaxPlus.Factory_CreateObject(*args)

    CreateObject = staticmethod(CreateObject)
    def CreateObjectModifier(*args):
        """CreateObjectModifier(Class_ID ci) -> Modifier"""
        return _MaxPlus.Factory_CreateObjectModifier(*args)

    CreateObjectModifier = staticmethod(CreateObjectModifier)
    def CreateWorldSpaceModifier(*args):
        """CreateWorldSpaceModifier(Class_ID ci) -> Modifier"""
        return _MaxPlus.Factory_CreateWorldSpaceModifier(*args)

    CreateWorldSpaceModifier = staticmethod(CreateWorldSpaceModifier)
    def CreateHelperObject(*args):
        """CreateHelperObject(Class_ID ci) -> HelperObject"""
        return _MaxPlus.Factory_CreateHelperObject(*args)

    CreateHelperObject = staticmethod(CreateHelperObject)
    def CreateGeomObject(*args):
        """CreateGeomObject(Class_ID ci) -> GeomObject"""
        return _MaxPlus.Factory_CreateGeomObject(*args)

    CreateGeomObject = staticmethod(CreateGeomObject)
    def CreateShapeObject(*args):
        """CreateShapeObject(Class_ID ci) -> ShapeObject"""
        return _MaxPlus.Factory_CreateShapeObject(*args)

    CreateShapeObject = staticmethod(CreateShapeObject)
    def CreateDummyObject():
        """CreateDummyObject() -> DummyObject"""
        return _MaxPlus.Factory_CreateDummyObject()

    CreateDummyObject = staticmethod(CreateDummyObject)
    def CreateGizmoObject(*args):
        """CreateGizmoObject(Class_ID ci) -> GizmoObject"""
        return _MaxPlus.Factory_CreateGizmoObject(*args)

    CreateGizmoObject = staticmethod(CreateGizmoObject)
    def CreateBoxGizmoObject():
        """CreateBoxGizmoObject() -> GizmoObject"""
        return _MaxPlus.Factory_CreateBoxGizmoObject()

    CreateBoxGizmoObject = staticmethod(CreateBoxGizmoObject)
    def CreateSphereGizmoObject():
        """CreateSphereGizmoObject() -> GizmoObject"""
        return _MaxPlus.Factory_CreateSphereGizmoObject()

    CreateSphereGizmoObject = staticmethod(CreateSphereGizmoObject)
    def CreateCylGizmoObject():
        """CreateCylGizmoObject() -> GizmoObject"""
        return _MaxPlus.Factory_CreateCylGizmoObject()

    CreateCylGizmoObject = staticmethod(CreateCylGizmoObject)
    def CreateCamera(*args):
        """CreateCamera(Class_ID ci) -> CameraObject"""
        return _MaxPlus.Factory_CreateCamera(*args)

    CreateCamera = staticmethod(CreateCamera)
    def CreateFreeCamera():
        """CreateFreeCamera() -> GenCamera"""
        return _MaxPlus.Factory_CreateFreeCamera()

    CreateFreeCamera = staticmethod(CreateFreeCamera)
    def CreateTargetedCamera():
        """CreateTargetedCamera() -> GenCamera"""
        return _MaxPlus.Factory_CreateTargetedCamera()

    CreateTargetedCamera = staticmethod(CreateTargetedCamera)
    def CreateParallelCamera():
        """CreateParallelCamera() -> GenCamera"""
        return _MaxPlus.Factory_CreateParallelCamera()

    CreateParallelCamera = staticmethod(CreateParallelCamera)
    def CreateTargetObject():
        """CreateTargetObject() -> Object"""
        return _MaxPlus.Factory_CreateTargetObject()

    CreateTargetObject = staticmethod(CreateTargetObject)
    def CreateLight(*args):
        """CreateLight(Class_ID ci) -> LightObject"""
        return _MaxPlus.Factory_CreateLight(*args)

    CreateLight = staticmethod(CreateLight)
    def CreateOmniLight():
        """CreateOmniLight() -> GenLight"""
        return _MaxPlus.Factory_CreateOmniLight()

    CreateOmniLight = staticmethod(CreateOmniLight)
    def CreateTargetedSpotLight():
        """CreateTargetedSpotLight() -> GenLight"""
        return _MaxPlus.Factory_CreateTargetedSpotLight()

    CreateTargetedSpotLight = staticmethod(CreateTargetedSpotLight)
    def CreateDirectionalLight():
        """CreateDirectionalLight() -> GenLight"""
        return _MaxPlus.Factory_CreateDirectionalLight()

    CreateDirectionalLight = staticmethod(CreateDirectionalLight)
    def CreateTargetedDirectionalLight(*args):
        """CreateTargetedDirectionalLight(INode target) -> GenLight"""
        return _MaxPlus.Factory_CreateTargetedDirectionalLight(*args)

    CreateTargetedDirectionalLight = staticmethod(CreateTargetedDirectionalLight)
    def CreateTextureMap(*args):
        """CreateTextureMap(Class_ID ci) -> Texmap"""
        return _MaxPlus.Factory_CreateTextureMap(*args)

    CreateTextureMap = staticmethod(CreateTextureMap)
    def CreateMaterial(*args):
        """CreateMaterial(Class_ID ci) -> Mtl"""
        return _MaxPlus.Factory_CreateMaterial(*args)

    CreateMaterial = staticmethod(CreateMaterial)
    def CreateAtmospheric(*args):
        """CreateAtmospheric(Class_ID ci) -> Atmospheric"""
        return _MaxPlus.Factory_CreateAtmospheric(*args)

    CreateAtmospheric = staticmethod(CreateAtmospheric)
    def CreateSound(*args):
        """CreateSound(Class_ID ci) -> SoundObj"""
        return _MaxPlus.Factory_CreateSound(*args)

    CreateSound = staticmethod(CreateSound)
    def CreateRenderer(*args):
        """CreateRenderer(Class_ID ci) -> Renderer"""
        return _MaxPlus.Factory_CreateRenderer(*args)

    CreateRenderer = staticmethod(CreateRenderer)
    def CreateRenderingEffect(*args):
        """CreateRenderingEffect(Class_ID ci) -> Effect"""
        return _MaxPlus.Factory_CreateRenderingEffect(*args)

    CreateRenderingEffect = staticmethod(CreateRenderingEffect)
    def CreateRenderElement(*args):
        """CreateRenderElement(Class_ID ci) -> RenderElement"""
        return _MaxPlus.Factory_CreateRenderElement(*args)

    CreateRenderElement = staticmethod(CreateRenderElement)
    def CreateFloatController(*args):
        """CreateFloatController(Class_ID ci) -> Control"""
        return _MaxPlus.Factory_CreateFloatController(*args)

    CreateFloatController = staticmethod(CreateFloatController)
    def CreatePoint3Controller(*args):
        """CreatePoint3Controller(Class_ID ci) -> Control"""
        return _MaxPlus.Factory_CreatePoint3Controller(*args)

    CreatePoint3Controller = staticmethod(CreatePoint3Controller)
    def CreateMatrix3Controller(*args):
        """CreateMatrix3Controller(Class_ID ci) -> Control"""
        return _MaxPlus.Factory_CreateMatrix3Controller(*args)

    CreateMatrix3Controller = staticmethod(CreateMatrix3Controller)
    def CreatePositionController(*args):
        """CreatePositionController(Class_ID ci) -> Control"""
        return _MaxPlus.Factory_CreatePositionController(*args)

    CreatePositionController = staticmethod(CreatePositionController)
    def CreateRotationController(*args):
        """CreateRotationController(Class_ID ci) -> Control"""
        return _MaxPlus.Factory_CreateRotationController(*args)

    CreateRotationController = staticmethod(CreateRotationController)
    def CreateScaleController(*args):
        """CreateScaleController(Class_ID ci) -> Control"""
        return _MaxPlus.Factory_CreateScaleController(*args)

    CreateScaleController = staticmethod(CreateScaleController)
    def CreateMorphController(*args):
        """CreateMorphController(Class_ID ci) -> Control"""
        return _MaxPlus.Factory_CreateMorphController(*args)

    CreateMorphController = staticmethod(CreateMorphController)
    def CreateDefaultFloatController():
        """CreateDefaultFloatController() -> Control"""
        return _MaxPlus.Factory_CreateDefaultFloatController()

    CreateDefaultFloatController = staticmethod(CreateDefaultFloatController)
    def CreateDefaultPoint3Controller():
        """CreateDefaultPoint3Controller() -> Control"""
        return _MaxPlus.Factory_CreateDefaultPoint3Controller()

    CreateDefaultPoint3Controller = staticmethod(CreateDefaultPoint3Controller)
    def CreateDefaultMatrix3Controller():
        """CreateDefaultMatrix3Controller() -> Control"""
        return _MaxPlus.Factory_CreateDefaultMatrix3Controller()

    CreateDefaultMatrix3Controller = staticmethod(CreateDefaultMatrix3Controller)
    def CreateDefaultPositionController():
        """CreateDefaultPositionController() -> Control"""
        return _MaxPlus.Factory_CreateDefaultPositionController()

    CreateDefaultPositionController = staticmethod(CreateDefaultPositionController)
    def CreateDefaultRotationController():
        """CreateDefaultRotationController() -> Control"""
        return _MaxPlus.Factory_CreateDefaultRotationController()

    CreateDefaultRotationController = staticmethod(CreateDefaultRotationController)
    def CreateDefaultScaleController():
        """CreateDefaultScaleController() -> Control"""
        return _MaxPlus.Factory_CreateDefaultScaleController()

    CreateDefaultScaleController = staticmethod(CreateDefaultScaleController)
    def CreateDefaultBoolController():
        """CreateDefaultBoolController() -> Control"""
        return _MaxPlus.Factory_CreateDefaultBoolController()

    CreateDefaultBoolController = staticmethod(CreateDefaultBoolController)
    def CreateDefaultColorController():
        """CreateDefaultColorController() -> Control"""
        return _MaxPlus.Factory_CreateDefaultColorController()

    CreateDefaultColorController = staticmethod(CreateDefaultColorController)
    def CreateDefaultMasterPointController():
        """CreateDefaultMasterPointController() -> Control"""
        return _MaxPlus.Factory_CreateDefaultMasterPointController()

    CreateDefaultMasterPointController = staticmethod(CreateDefaultMasterPointController)
    def CreateDefaultPoint4Controller():
        """CreateDefaultPoint4Controller() -> Control"""
        return _MaxPlus.Factory_CreateDefaultPoint4Controller()

    CreateDefaultPoint4Controller = staticmethod(CreateDefaultPoint4Controller)
    def CreateDefaultFRGBAController():
        """CreateDefaultFRGBAController() -> Control"""
        return _MaxPlus.Factory_CreateDefaultFRGBAController()

    CreateDefaultFRGBAController = staticmethod(CreateDefaultFRGBAController)
    def CreateDefaultPoint2Controller():
        """CreateDefaultPoint2Controller() -> Control"""
        return _MaxPlus.Factory_CreateDefaultPoint2Controller()

    CreateDefaultPoint2Controller = staticmethod(CreateDefaultPoint2Controller)
    def CreateInterpFloat():
        """CreateInterpFloat() -> Control"""
        return _MaxPlus.Factory_CreateInterpFloat()

    CreateInterpFloat = staticmethod(CreateInterpFloat)
    def CreateInterpPosition():
        """CreateInterpPosition() -> Control"""
        return _MaxPlus.Factory_CreateInterpPosition()

    CreateInterpPosition = staticmethod(CreateInterpPosition)
    def CreateInterpPoint3():
        """CreateInterpPoint3() -> Control"""
        return _MaxPlus.Factory_CreateInterpPoint3()

    CreateInterpPoint3 = staticmethod(CreateInterpPoint3)
    def CreateInterpRotation():
        """CreateInterpRotation() -> Control"""
        return _MaxPlus.Factory_CreateInterpRotation()

    CreateInterpRotation = staticmethod(CreateInterpRotation)
    def CreateInterpScale():
        """CreateInterpScale() -> Control"""
        return _MaxPlus.Factory_CreateInterpScale()

    CreateInterpScale = staticmethod(CreateInterpScale)
    def CreatePRSControl():
        """CreatePRSControl() -> Control"""
        return _MaxPlus.Factory_CreatePRSControl()

    CreatePRSControl = staticmethod(CreatePRSControl)
    def CreateLookatControl():
        """CreateLookatControl() -> Control"""
        return _MaxPlus.Factory_CreateLookatControl()

    CreateLookatControl = staticmethod(CreateLookatControl)
    def CreateMasterPointControl():
        """CreateMasterPointControl() -> Control"""
        return _MaxPlus.Factory_CreateMasterPointControl()

    CreateMasterPointControl = staticmethod(CreateMasterPointControl)
    def CreateInterpPoint4():
        """CreateInterpPoint4() -> Control"""
        return _MaxPlus.Factory_CreateInterpPoint4()

    CreateInterpPoint4 = staticmethod(CreateInterpPoint4)
    def CreateInterpPoint2():
        """CreateInterpPoint2() -> Control"""
        return _MaxPlus.Factory_CreateInterpPoint2()

    CreateInterpPoint2 = staticmethod(CreateInterpPoint2)
    def SetDefaultController(*args):
        """SetDefaultController(SClass_ID sid, ClassDesc desc)"""
        return _MaxPlus.Factory_SetDefaultController(*args)

    SetDefaultController = staticmethod(SetDefaultController)
    def GetDefaultController(*args):
        """GetDefaultController(SClass_ID sid) -> ClassDesc"""
        return _MaxPlus.Factory_GetDefaultController(*args)

    GetDefaultController = staticmethod(GetDefaultController)
    def SetDefaultColorController(*args):
        """SetDefaultColorController(ClassDesc desc)"""
        return _MaxPlus.Factory_SetDefaultColorController(*args)

    SetDefaultColorController = staticmethod(SetDefaultColorController)
    def SetDefaultFRGBAController(*args):
        """SetDefaultFRGBAController(ClassDesc desc)"""
        return _MaxPlus.Factory_SetDefaultFRGBAController(*args)

    SetDefaultFRGBAController = staticmethod(SetDefaultFRGBAController)
    def SetDefaultBoolController(*args):
        """SetDefaultBoolController(ClassDesc desc)"""
        return _MaxPlus.Factory_SetDefaultBoolController(*args)

    SetDefaultBoolController = staticmethod(SetDefaultBoolController)
    def CreateDefaultStdMat():
        """CreateDefaultStdMat() -> StdMat"""
        return _MaxPlus.Factory_CreateDefaultStdMat()

    CreateDefaultStdMat = staticmethod(CreateDefaultStdMat)
    def CreateDefaultBitmapTex():
        """CreateDefaultBitmapTex() -> BitmapTex"""
        return _MaxPlus.Factory_CreateDefaultBitmapTex()

    CreateDefaultBitmapTex = staticmethod(CreateDefaultBitmapTex)
    def CreateDefaultMultiMtl():
        """CreateDefaultMultiMtl() -> MultiMtl"""
        return _MaxPlus.Factory_CreateDefaultMultiMtl()

    CreateDefaultMultiMtl = staticmethod(CreateDefaultMultiMtl)
    def CreateDefaultCompositeTex():
        """CreateDefaultCompositeTex() -> Texmap"""
        return _MaxPlus.Factory_CreateDefaultCompositeTex()

    CreateDefaultCompositeTex = staticmethod(CreateDefaultCompositeTex)
    def CreateDefaultMixTex():
        """CreateDefaultMixTex() -> Texmap"""
        return _MaxPlus.Factory_CreateDefaultMixTex()

    CreateDefaultMixTex = staticmethod(CreateDefaultMixTex)
    def CreateDefaultTintTex():
        """CreateDefaultTintTex() -> Texmap"""
        return _MaxPlus.Factory_CreateDefaultTintTex()

    CreateDefaultTintTex = staticmethod(CreateDefaultTintTex)
    def CreateDefaultStdCubic():
        """CreateDefaultStdCubic() -> Texmap"""
        return _MaxPlus.Factory_CreateDefaultStdCubic()

    CreateDefaultStdCubic = staticmethod(CreateDefaultStdCubic)
    def CreateDefaultStdMirror():
        """CreateDefaultStdMirror() -> Texmap"""
        return _MaxPlus.Factory_CreateDefaultStdMirror()

    CreateDefaultStdMirror = staticmethod(CreateDefaultStdMirror)
    def CreateDefaultStdFog():
        """CreateDefaultStdFog() -> Atmospheric"""
        return _MaxPlus.Factory_CreateDefaultStdFog()

    CreateDefaultStdFog = staticmethod(CreateDefaultStdFog)
    def CreateDefaultSoundObj():
        """CreateDefaultSoundObj() -> SoundObj"""
        return _MaxPlus.Factory_CreateDefaultSoundObj()

    CreateDefaultSoundObj = staticmethod(CreateDefaultSoundObj)
    def CreateNewTriObject():
        """CreateNewTriObject() -> TriObject"""
        return _MaxPlus.Factory_CreateNewTriObject()

    CreateNewTriObject = staticmethod(CreateNewTriObject)
    def CreateStorage(*args):
        """CreateStorage(UINT type) -> BitmapStorage"""
        return _MaxPlus.Factory_CreateStorage(*args)

    CreateStorage = staticmethod(CreateStorage)
    def CreateNewMesh():
        """CreateNewMesh() -> Mesh"""
        return _MaxPlus.Factory_CreateNewMesh()

    CreateNewMesh = staticmethod(CreateNewMesh)
    def CreateBitmap(*args):
        """
        CreateBitmap() -> Bitmap
        CreateBitmap(BitmapInfo bitmapInfo) -> Bitmap
        """
        return _MaxPlus.Factory_CreateBitmap(*args)

    CreateBitmap = staticmethod(CreateBitmap)
    def CreateWSDerivedObject(pob=0):
        """
        CreateWSDerivedObject(Object pob=0) -> IDerivedObject
        CreateWSDerivedObject() -> IDerivedObject
        """
        return _MaxPlus.Factory_CreateWSDerivedObject(pob)

    CreateWSDerivedObject = staticmethod(CreateWSDerivedObject)
    def CreateDerivedObject(pob=0):
        """
        CreateDerivedObject(Object pob=0) -> IDerivedObject
        CreateDerivedObject() -> IDerivedObject
        """
        return _MaxPlus.Factory_CreateDerivedObject(pob)

    CreateDerivedObject = staticmethod(CreateDerivedObject)
    def StartCreatingObject(*args):
        """StartCreatingObject(ClassDesc cd)"""
        return _MaxPlus.Factory_StartCreatingObject(*args)

    StartCreatingObject = staticmethod(StartCreatingObject)
    def IsCreatingObject(*args):
        """
        IsCreatingObject(Class_ID id) -> bool
        IsCreatingObject() -> bool
        """
        return _MaxPlus.Factory_IsCreatingObject(*args)

    IsCreatingObject = staticmethod(IsCreatingObject)
    def StopCreating():
        """StopCreating()"""
        return _MaxPlus.Factory_StopCreating()

    StopCreating = staticmethod(StopCreating)
    def CreateCameraObject(*args):
        """CreateCameraObject(int type) -> GenCamera"""
        return _MaxPlus.Factory_CreateCameraObject(*args)

    CreateCameraObject = staticmethod(CreateCameraObject)
    def CreateLightObject(*args):
        """CreateLightObject(int type) -> GenLight"""
        return _MaxPlus.Factory_CreateLightObject(*args)

    CreateLightObject = staticmethod(CreateLightObject)
    __swig_destroy__ = _MaxPlus.delete_Factory
    __del__ = lambda self : None;
Factory_swigregister = _MaxPlus.Factory_swigregister
Factory_swigregister(Factory)

def Factory_CreateNode(*args):
  """
    CreateNode(Object object) -> INode
    Factory_CreateNode(Object object, wchar_t const * name) -> INode
    """
  return _MaxPlus.Factory_CreateNode(*args)

def Factory_CreateAnimatable(*args):
  """
    CreateAnimatable(SClass_ID sid, Class_ID ci, bool throwOnError) -> Animatable
    Factory_CreateAnimatable(SClass_ID sid, Class_ID ci) -> Animatable
    """
  return _MaxPlus.Factory_CreateAnimatable(*args)

def Factory_CreateObject(*args):
  """Factory_CreateObject(SClass_ID sid, Class_ID ci) -> Object"""
  return _MaxPlus.Factory_CreateObject(*args)

def Factory_CreateObjectModifier(*args):
  """Factory_CreateObjectModifier(Class_ID ci) -> Modifier"""
  return _MaxPlus.Factory_CreateObjectModifier(*args)

def Factory_CreateWorldSpaceModifier(*args):
  """Factory_CreateWorldSpaceModifier(Class_ID ci) -> Modifier"""
  return _MaxPlus.Factory_CreateWorldSpaceModifier(*args)

def Factory_CreateHelperObject(*args):
  """Factory_CreateHelperObject(Class_ID ci) -> HelperObject"""
  return _MaxPlus.Factory_CreateHelperObject(*args)

def Factory_CreateGeomObject(*args):
  """Factory_CreateGeomObject(Class_ID ci) -> GeomObject"""
  return _MaxPlus.Factory_CreateGeomObject(*args)

def Factory_CreateShapeObject(*args):
  """Factory_CreateShapeObject(Class_ID ci) -> ShapeObject"""
  return _MaxPlus.Factory_CreateShapeObject(*args)

def Factory_CreateDummyObject():
  """Factory_CreateDummyObject() -> DummyObject"""
  return _MaxPlus.Factory_CreateDummyObject()

def Factory_CreateGizmoObject(*args):
  """Factory_CreateGizmoObject(Class_ID ci) -> GizmoObject"""
  return _MaxPlus.Factory_CreateGizmoObject(*args)

def Factory_CreateBoxGizmoObject():
  """Factory_CreateBoxGizmoObject() -> GizmoObject"""
  return _MaxPlus.Factory_CreateBoxGizmoObject()

def Factory_CreateSphereGizmoObject():
  """Factory_CreateSphereGizmoObject() -> GizmoObject"""
  return _MaxPlus.Factory_CreateSphereGizmoObject()

def Factory_CreateCylGizmoObject():
  """Factory_CreateCylGizmoObject() -> GizmoObject"""
  return _MaxPlus.Factory_CreateCylGizmoObject()

def Factory_CreateCamera(*args):
  """Factory_CreateCamera(Class_ID ci) -> CameraObject"""
  return _MaxPlus.Factory_CreateCamera(*args)

def Factory_CreateFreeCamera():
  """Factory_CreateFreeCamera() -> GenCamera"""
  return _MaxPlus.Factory_CreateFreeCamera()

def Factory_CreateTargetedCamera():
  """Factory_CreateTargetedCamera() -> GenCamera"""
  return _MaxPlus.Factory_CreateTargetedCamera()

def Factory_CreateParallelCamera():
  """Factory_CreateParallelCamera() -> GenCamera"""
  return _MaxPlus.Factory_CreateParallelCamera()

def Factory_CreateTargetObject():
  """Factory_CreateTargetObject() -> Object"""
  return _MaxPlus.Factory_CreateTargetObject()

def Factory_CreateLight(*args):
  """Factory_CreateLight(Class_ID ci) -> LightObject"""
  return _MaxPlus.Factory_CreateLight(*args)

def Factory_CreateOmniLight():
  """Factory_CreateOmniLight() -> GenLight"""
  return _MaxPlus.Factory_CreateOmniLight()

def Factory_CreateTargetedSpotLight():
  """Factory_CreateTargetedSpotLight() -> GenLight"""
  return _MaxPlus.Factory_CreateTargetedSpotLight()

def Factory_CreateDirectionalLight():
  """Factory_CreateDirectionalLight() -> GenLight"""
  return _MaxPlus.Factory_CreateDirectionalLight()

def Factory_CreateTargetedDirectionalLight(*args):
  """Factory_CreateTargetedDirectionalLight(INode target) -> GenLight"""
  return _MaxPlus.Factory_CreateTargetedDirectionalLight(*args)

def Factory_CreateTextureMap(*args):
  """Factory_CreateTextureMap(Class_ID ci) -> Texmap"""
  return _MaxPlus.Factory_CreateTextureMap(*args)

def Factory_CreateMaterial(*args):
  """Factory_CreateMaterial(Class_ID ci) -> Mtl"""
  return _MaxPlus.Factory_CreateMaterial(*args)

def Factory_CreateAtmospheric(*args):
  """Factory_CreateAtmospheric(Class_ID ci) -> Atmospheric"""
  return _MaxPlus.Factory_CreateAtmospheric(*args)

def Factory_CreateSound(*args):
  """Factory_CreateSound(Class_ID ci) -> SoundObj"""
  return _MaxPlus.Factory_CreateSound(*args)

def Factory_CreateRenderer(*args):
  """Factory_CreateRenderer(Class_ID ci) -> Renderer"""
  return _MaxPlus.Factory_CreateRenderer(*args)

def Factory_CreateRenderingEffect(*args):
  """Factory_CreateRenderingEffect(Class_ID ci) -> Effect"""
  return _MaxPlus.Factory_CreateRenderingEffect(*args)

def Factory_CreateRenderElement(*args):
  """Factory_CreateRenderElement(Class_ID ci) -> RenderElement"""
  return _MaxPlus.Factory_CreateRenderElement(*args)

def Factory_CreateFloatController(*args):
  """Factory_CreateFloatController(Class_ID ci) -> Control"""
  return _MaxPlus.Factory_CreateFloatController(*args)

def Factory_CreatePoint3Controller(*args):
  """Factory_CreatePoint3Controller(Class_ID ci) -> Control"""
  return _MaxPlus.Factory_CreatePoint3Controller(*args)

def Factory_CreateMatrix3Controller(*args):
  """Factory_CreateMatrix3Controller(Class_ID ci) -> Control"""
  return _MaxPlus.Factory_CreateMatrix3Controller(*args)

def Factory_CreatePositionController(*args):
  """Factory_CreatePositionController(Class_ID ci) -> Control"""
  return _MaxPlus.Factory_CreatePositionController(*args)

def Factory_CreateRotationController(*args):
  """Factory_CreateRotationController(Class_ID ci) -> Control"""
  return _MaxPlus.Factory_CreateRotationController(*args)

def Factory_CreateScaleController(*args):
  """Factory_CreateScaleController(Class_ID ci) -> Control"""
  return _MaxPlus.Factory_CreateScaleController(*args)

def Factory_CreateMorphController(*args):
  """Factory_CreateMorphController(Class_ID ci) -> Control"""
  return _MaxPlus.Factory_CreateMorphController(*args)

def Factory_CreateDefaultFloatController():
  """Factory_CreateDefaultFloatController() -> Control"""
  return _MaxPlus.Factory_CreateDefaultFloatController()

def Factory_CreateDefaultPoint3Controller():
  """Factory_CreateDefaultPoint3Controller() -> Control"""
  return _MaxPlus.Factory_CreateDefaultPoint3Controller()

def Factory_CreateDefaultMatrix3Controller():
  """Factory_CreateDefaultMatrix3Controller() -> Control"""
  return _MaxPlus.Factory_CreateDefaultMatrix3Controller()

def Factory_CreateDefaultPositionController():
  """Factory_CreateDefaultPositionController() -> Control"""
  return _MaxPlus.Factory_CreateDefaultPositionController()

def Factory_CreateDefaultRotationController():
  """Factory_CreateDefaultRotationController() -> Control"""
  return _MaxPlus.Factory_CreateDefaultRotationController()

def Factory_CreateDefaultScaleController():
  """Factory_CreateDefaultScaleController() -> Control"""
  return _MaxPlus.Factory_CreateDefaultScaleController()

def Factory_CreateDefaultBoolController():
  """Factory_CreateDefaultBoolController() -> Control"""
  return _MaxPlus.Factory_CreateDefaultBoolController()

def Factory_CreateDefaultColorController():
  """Factory_CreateDefaultColorController() -> Control"""
  return _MaxPlus.Factory_CreateDefaultColorController()

def Factory_CreateDefaultMasterPointController():
  """Factory_CreateDefaultMasterPointController() -> Control"""
  return _MaxPlus.Factory_CreateDefaultMasterPointController()

def Factory_CreateDefaultPoint4Controller():
  """Factory_CreateDefaultPoint4Controller() -> Control"""
  return _MaxPlus.Factory_CreateDefaultPoint4Controller()

def Factory_CreateDefaultFRGBAController():
  """Factory_CreateDefaultFRGBAController() -> Control"""
  return _MaxPlus.Factory_CreateDefaultFRGBAController()

def Factory_CreateDefaultPoint2Controller():
  """Factory_CreateDefaultPoint2Controller() -> Control"""
  return _MaxPlus.Factory_CreateDefaultPoint2Controller()

def Factory_CreateInterpFloat():
  """Factory_CreateInterpFloat() -> Control"""
  return _MaxPlus.Factory_CreateInterpFloat()

def Factory_CreateInterpPosition():
  """Factory_CreateInterpPosition() -> Control"""
  return _MaxPlus.Factory_CreateInterpPosition()

def Factory_CreateInterpPoint3():
  """Factory_CreateInterpPoint3() -> Control"""
  return _MaxPlus.Factory_CreateInterpPoint3()

def Factory_CreateInterpRotation():
  """Factory_CreateInterpRotation() -> Control"""
  return _MaxPlus.Factory_CreateInterpRotation()

def Factory_CreateInterpScale():
  """Factory_CreateInterpScale() -> Control"""
  return _MaxPlus.Factory_CreateInterpScale()

def Factory_CreatePRSControl():
  """Factory_CreatePRSControl() -> Control"""
  return _MaxPlus.Factory_CreatePRSControl()

def Factory_CreateLookatControl():
  """Factory_CreateLookatControl() -> Control"""
  return _MaxPlus.Factory_CreateLookatControl()

def Factory_CreateMasterPointControl():
  """Factory_CreateMasterPointControl() -> Control"""
  return _MaxPlus.Factory_CreateMasterPointControl()

def Factory_CreateInterpPoint4():
  """Factory_CreateInterpPoint4() -> Control"""
  return _MaxPlus.Factory_CreateInterpPoint4()

def Factory_CreateInterpPoint2():
  """Factory_CreateInterpPoint2() -> Control"""
  return _MaxPlus.Factory_CreateInterpPoint2()

def Factory_SetDefaultController(*args):
  """Factory_SetDefaultController(SClass_ID sid, ClassDesc desc)"""
  return _MaxPlus.Factory_SetDefaultController(*args)

def Factory_GetDefaultController(*args):
  """Factory_GetDefaultController(SClass_ID sid) -> ClassDesc"""
  return _MaxPlus.Factory_GetDefaultController(*args)

def Factory_SetDefaultColorController(*args):
  """Factory_SetDefaultColorController(ClassDesc desc)"""
  return _MaxPlus.Factory_SetDefaultColorController(*args)

def Factory_SetDefaultFRGBAController(*args):
  """Factory_SetDefaultFRGBAController(ClassDesc desc)"""
  return _MaxPlus.Factory_SetDefaultFRGBAController(*args)

def Factory_SetDefaultBoolController(*args):
  """Factory_SetDefaultBoolController(ClassDesc desc)"""
  return _MaxPlus.Factory_SetDefaultBoolController(*args)

def Factory_CreateDefaultStdMat():
  """Factory_CreateDefaultStdMat() -> StdMat"""
  return _MaxPlus.Factory_CreateDefaultStdMat()

def Factory_CreateDefaultBitmapTex():
  """Factory_CreateDefaultBitmapTex() -> BitmapTex"""
  return _MaxPlus.Factory_CreateDefaultBitmapTex()

def Factory_CreateDefaultMultiMtl():
  """Factory_CreateDefaultMultiMtl() -> MultiMtl"""
  return _MaxPlus.Factory_CreateDefaultMultiMtl()

def Factory_CreateDefaultCompositeTex():
  """Factory_CreateDefaultCompositeTex() -> Texmap"""
  return _MaxPlus.Factory_CreateDefaultCompositeTex()

def Factory_CreateDefaultMixTex():
  """Factory_CreateDefaultMixTex() -> Texmap"""
  return _MaxPlus.Factory_CreateDefaultMixTex()

def Factory_CreateDefaultTintTex():
  """Factory_CreateDefaultTintTex() -> Texmap"""
  return _MaxPlus.Factory_CreateDefaultTintTex()

def Factory_CreateDefaultStdCubic():
  """Factory_CreateDefaultStdCubic() -> Texmap"""
  return _MaxPlus.Factory_CreateDefaultStdCubic()

def Factory_CreateDefaultStdMirror():
  """Factory_CreateDefaultStdMirror() -> Texmap"""
  return _MaxPlus.Factory_CreateDefaultStdMirror()

def Factory_CreateDefaultStdFog():
  """Factory_CreateDefaultStdFog() -> Atmospheric"""
  return _MaxPlus.Factory_CreateDefaultStdFog()

def Factory_CreateDefaultSoundObj():
  """Factory_CreateDefaultSoundObj() -> SoundObj"""
  return _MaxPlus.Factory_CreateDefaultSoundObj()

def Factory_CreateNewTriObject():
  """Factory_CreateNewTriObject() -> TriObject"""
  return _MaxPlus.Factory_CreateNewTriObject()

def Factory_CreateStorage(*args):
  """Factory_CreateStorage(UINT type) -> BitmapStorage"""
  return _MaxPlus.Factory_CreateStorage(*args)

def Factory_CreateNewMesh():
  """Factory_CreateNewMesh() -> Mesh"""
  return _MaxPlus.Factory_CreateNewMesh()

def Factory_CreateBitmap(*args):
  """
    CreateBitmap() -> Bitmap
    Factory_CreateBitmap(BitmapInfo bitmapInfo) -> Bitmap
    """
  return _MaxPlus.Factory_CreateBitmap(*args)

def Factory_CreateWSDerivedObject(pob=0):
  """
    CreateWSDerivedObject(Object pob=0) -> IDerivedObject
    Factory_CreateWSDerivedObject() -> IDerivedObject
    """
  return _MaxPlus.Factory_CreateWSDerivedObject(pob)

def Factory_CreateDerivedObject(pob=0):
  """
    CreateDerivedObject(Object pob=0) -> IDerivedObject
    Factory_CreateDerivedObject() -> IDerivedObject
    """
  return _MaxPlus.Factory_CreateDerivedObject(pob)

def Factory_StartCreatingObject(*args):
  """Factory_StartCreatingObject(ClassDesc cd)"""
  return _MaxPlus.Factory_StartCreatingObject(*args)

def Factory_IsCreatingObject(*args):
  """
    IsCreatingObject(Class_ID id) -> bool
    Factory_IsCreatingObject() -> bool
    """
  return _MaxPlus.Factory_IsCreatingObject(*args)

def Factory_StopCreating():
  """Factory_StopCreating()"""
  return _MaxPlus.Factory_StopCreating()

def Factory_CreateCameraObject(*args):
  """Factory_CreateCameraObject(int type) -> GenCamera"""
  return _MaxPlus.Factory_CreateCameraObject(*args)

def Factory_CreateLightObject(*args):
  """Factory_CreateLightObject(int type) -> GenLight"""
  return _MaxPlus.Factory_CreateLightObject(*args)

class PathManager(object):
    """Provides read and write access to the configurable paths (directories) used by 3ds Max."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetFontDir():
        """GetFontDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetFontDir()

    GetFontDir = staticmethod(GetFontDir)
    def SetFontDir(*args):
        """SetFontDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetFontDir(*args)

    SetFontDir = staticmethod(SetFontDir)
    def GetSceneDir():
        """GetSceneDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetSceneDir()

    GetSceneDir = staticmethod(GetSceneDir)
    def SetSceneDir(*args):
        """SetSceneDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetSceneDir(*args)

    SetSceneDir = staticmethod(SetSceneDir)
    def GetImportDir():
        """GetImportDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetImportDir()

    GetImportDir = staticmethod(GetImportDir)
    def SetImportDir(*args):
        """SetImportDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetImportDir(*args)

    SetImportDir = staticmethod(SetImportDir)
    def GetExportDir():
        """GetExportDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetExportDir()

    GetExportDir = staticmethod(GetExportDir)
    def SetExportDir(*args):
        """SetExportDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetExportDir(*args)

    SetExportDir = staticmethod(SetExportDir)
    def GetHelpDir():
        """GetHelpDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetHelpDir()

    GetHelpDir = staticmethod(GetHelpDir)
    def SetHelpDir(*args):
        """SetHelpDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetHelpDir(*args)

    SetHelpDir = staticmethod(SetHelpDir)
    def GetExpressionDir():
        """GetExpressionDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetExpressionDir()

    GetExpressionDir = staticmethod(GetExpressionDir)
    def SetExpressionDir(*args):
        """SetExpressionDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetExpressionDir(*args)

    SetExpressionDir = staticmethod(SetExpressionDir)
    def GetPreviewDir():
        """GetPreviewDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetPreviewDir()

    GetPreviewDir = staticmethod(GetPreviewDir)
    def SetPreviewDir(*args):
        """SetPreviewDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetPreviewDir(*args)

    SetPreviewDir = staticmethod(SetPreviewDir)
    def GetImageDir():
        """GetImageDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetImageDir()

    GetImageDir = staticmethod(GetImageDir)
    def SetImageDir(*args):
        """SetImageDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetImageDir(*args)

    SetImageDir = staticmethod(SetImageDir)
    def GetSoundDir():
        """GetSoundDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetSoundDir()

    GetSoundDir = staticmethod(GetSoundDir)
    def SetSoundDir(*args):
        """SetSoundDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetSoundDir(*args)

    SetSoundDir = staticmethod(SetSoundDir)
    def GetPlugcfgDir():
        """GetPlugcfgDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetPlugcfgDir()

    GetPlugcfgDir = staticmethod(GetPlugcfgDir)
    def SetPlugcfgDir(*args):
        """SetPlugcfgDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetPlugcfgDir(*args)

    SetPlugcfgDir = staticmethod(SetPlugcfgDir)
    def GetMaxstartDir():
        """GetMaxstartDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetMaxstartDir()

    GetMaxstartDir = staticmethod(GetMaxstartDir)
    def SetMaxstartDir(*args):
        """SetMaxstartDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetMaxstartDir(*args)

    SetMaxstartDir = staticmethod(SetMaxstartDir)
    def GetVpostDir():
        """GetVpostDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetVpostDir()

    GetVpostDir = staticmethod(GetVpostDir)
    def SetVpostDir(*args):
        """SetVpostDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetVpostDir(*args)

    SetVpostDir = staticmethod(SetVpostDir)
    def GetDriversDir():
        """GetDriversDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetDriversDir()

    GetDriversDir = staticmethod(GetDriversDir)
    def SetDriversDir(*args):
        """SetDriversDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetDriversDir(*args)

    SetDriversDir = staticmethod(SetDriversDir)
    def GetAutobackDir():
        """GetAutobackDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetAutobackDir()

    GetAutobackDir = staticmethod(GetAutobackDir)
    def SetAutobackDir(*args):
        """SetAutobackDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetAutobackDir(*args)

    SetAutobackDir = staticmethod(SetAutobackDir)
    def GetMatlibDir():
        """GetMatlibDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetMatlibDir()

    GetMatlibDir = staticmethod(GetMatlibDir)
    def SetMatlibDir(*args):
        """SetMatlibDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetMatlibDir(*args)

    SetMatlibDir = staticmethod(SetMatlibDir)
    def GetScriptsDir():
        """GetScriptsDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetScriptsDir()

    GetScriptsDir = staticmethod(GetScriptsDir)
    def SetScriptsDir(*args):
        """SetScriptsDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetScriptsDir(*args)

    SetScriptsDir = staticmethod(SetScriptsDir)
    def GetStartupscriptsDir():
        """GetStartupscriptsDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetStartupscriptsDir()

    GetStartupscriptsDir = staticmethod(GetStartupscriptsDir)
    def SetStartupscriptsDir(*args):
        """SetStartupscriptsDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetStartupscriptsDir(*args)

    SetStartupscriptsDir = staticmethod(SetStartupscriptsDir)
    def GetRenderPresetsDir():
        """GetRenderPresetsDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetRenderPresetsDir()

    GetRenderPresetsDir = staticmethod(GetRenderPresetsDir)
    def SetRenderPresetsDir(*args):
        """SetRenderPresetsDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetRenderPresetsDir(*args)

    SetRenderPresetsDir = staticmethod(SetRenderPresetsDir)
    def GetUiDir():
        """GetUiDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetUiDir()

    GetUiDir = staticmethod(GetUiDir)
    def SetUiDir(*args):
        """SetUiDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetUiDir(*args)

    SetUiDir = staticmethod(SetUiDir)
    def GetMaxSysRootDir():
        """GetMaxSysRootDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetMaxSysRootDir()

    GetMaxSysRootDir = staticmethod(GetMaxSysRootDir)
    def SetMaxSysRootDir(*args):
        """SetMaxSysRootDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetMaxSysRootDir(*args)

    SetMaxSysRootDir = staticmethod(SetMaxSysRootDir)
    def GetRenderOutputDir():
        """GetRenderOutputDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetRenderOutputDir()

    GetRenderOutputDir = staticmethod(GetRenderOutputDir)
    def SetRenderOutputDir(*args):
        """SetRenderOutputDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetRenderOutputDir(*args)

    SetRenderOutputDir = staticmethod(SetRenderOutputDir)
    def GetAnimationDir():
        """GetAnimationDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetAnimationDir()

    GetAnimationDir = staticmethod(GetAnimationDir)
    def SetAnimationDir(*args):
        """SetAnimationDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetAnimationDir(*args)

    SetAnimationDir = staticmethod(SetAnimationDir)
    def GetArchivesDir():
        """GetArchivesDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetArchivesDir()

    GetArchivesDir = staticmethod(GetArchivesDir)
    def SetArchivesDir(*args):
        """SetArchivesDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetArchivesDir(*args)

    SetArchivesDir = staticmethod(SetArchivesDir)
    def GetPhotometricDir():
        """GetPhotometricDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetPhotometricDir()

    GetPhotometricDir = staticmethod(GetPhotometricDir)
    def SetPhotometricDir(*args):
        """SetPhotometricDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetPhotometricDir(*args)

    SetPhotometricDir = staticmethod(SetPhotometricDir)
    def GetRenderAssetsDir():
        """GetRenderAssetsDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetRenderAssetsDir()

    GetRenderAssetsDir = staticmethod(GetRenderAssetsDir)
    def SetRenderAssetsDir(*args):
        """SetRenderAssetsDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetRenderAssetsDir(*args)

    SetRenderAssetsDir = staticmethod(SetRenderAssetsDir)
    def GetUserScriptsDir():
        """GetUserScriptsDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetUserScriptsDir()

    GetUserScriptsDir = staticmethod(GetUserScriptsDir)
    def SetUserScriptsDir(*args):
        """SetUserScriptsDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetUserScriptsDir(*args)

    SetUserScriptsDir = staticmethod(SetUserScriptsDir)
    def GetUserMacrosDir():
        """GetUserMacrosDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetUserMacrosDir()

    GetUserMacrosDir = staticmethod(GetUserMacrosDir)
    def SetUserMacrosDir(*args):
        """SetUserMacrosDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetUserMacrosDir(*args)

    SetUserMacrosDir = staticmethod(SetUserMacrosDir)
    def GetUserStartupscriptsDir():
        """GetUserStartupscriptsDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetUserStartupscriptsDir()

    GetUserStartupscriptsDir = staticmethod(GetUserStartupscriptsDir)
    def SetUserStartupscriptsDir(*args):
        """SetUserStartupscriptsDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetUserStartupscriptsDir(*args)

    SetUserStartupscriptsDir = staticmethod(SetUserStartupscriptsDir)
    def GetMarketDefaultsDir():
        """GetMarketDefaultsDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetMarketDefaultsDir()

    GetMarketDefaultsDir = staticmethod(GetMarketDefaultsDir)
    def SetMarketDefaultsDir(*args):
        """SetMarketDefaultsDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetMarketDefaultsDir(*args)

    SetMarketDefaultsDir = staticmethod(SetMarketDefaultsDir)
    def GetTempDir():
        """GetTempDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetTempDir()

    GetTempDir = staticmethod(GetTempDir)
    def SetTempDir(*args):
        """SetTempDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetTempDir(*args)

    SetTempDir = staticmethod(SetTempDir)
    def GetUserIconsDir():
        """GetUserIconsDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetUserIconsDir()

    GetUserIconsDir = staticmethod(GetUserIconsDir)
    def SetUserIconsDir(*args):
        """SetUserIconsDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetUserIconsDir(*args)

    SetUserIconsDir = staticmethod(SetUserIconsDir)
    def GetMaxdataDir():
        """GetMaxdataDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetMaxdataDir()

    GetMaxdataDir = staticmethod(GetMaxdataDir)
    def SetMaxdataDir(*args):
        """SetMaxdataDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetMaxdataDir(*args)

    SetMaxdataDir = staticmethod(SetMaxdataDir)
    def GetProjectFolderDir():
        """GetProjectFolderDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetProjectFolderDir()

    GetProjectFolderDir = staticmethod(GetProjectFolderDir)
    def SetProjectFolderDir(*args):
        """SetProjectFolderDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetProjectFolderDir(*args)

    SetProjectFolderDir = staticmethod(SetProjectFolderDir)
    def GetDownloadDir():
        """GetDownloadDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetDownloadDir()

    GetDownloadDir = staticmethod(GetDownloadDir)
    def SetDownloadDir(*args):
        """SetDownloadDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetDownloadDir(*args)

    SetDownloadDir = staticmethod(SetDownloadDir)
    def GetProxiesDir():
        """GetProxiesDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetProxiesDir()

    GetProxiesDir = staticmethod(GetProxiesDir)
    def SetProxiesDir(*args):
        """SetProxiesDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetProxiesDir(*args)

    SetProxiesDir = staticmethod(SetProxiesDir)
    def GetManagedAssembliesDir():
        """GetManagedAssembliesDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetManagedAssembliesDir()

    GetManagedAssembliesDir = staticmethod(GetManagedAssembliesDir)
    def SetManagedAssembliesDir(*args):
        """SetManagedAssembliesDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetManagedAssembliesDir(*args)

    SetManagedAssembliesDir = staticmethod(SetManagedAssembliesDir)
    def GetPageFileDir():
        """GetPageFileDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetPageFileDir()

    GetPageFileDir = staticmethod(GetPageFileDir)
    def SetPageFileDir(*args):
        """SetPageFileDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetPageFileDir(*args)

    SetPageFileDir = staticmethod(SetPageFileDir)
    def GetShaderCacheDir():
        """GetShaderCacheDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetShaderCacheDir()

    GetShaderCacheDir = staticmethod(GetShaderCacheDir)
    def SetShaderCacheDir(*args):
        """SetShaderCacheDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetShaderCacheDir(*args)

    SetShaderCacheDir = staticmethod(SetShaderCacheDir)
    def GetNonLocalizedPluginCfg():
        """GetNonLocalizedPluginCfg() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetNonLocalizedPluginCfg()

    GetNonLocalizedPluginCfg = staticmethod(GetNonLocalizedPluginCfg)
    def SetNonLocalizedPluginCfg(*args):
        """SetNonLocalizedPluginCfg(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetNonLocalizedPluginCfg(*args)

    SetNonLocalizedPluginCfg = staticmethod(SetNonLocalizedPluginCfg)
    def GetNonLocalizedUIDataDir():
        """GetNonLocalizedUIDataDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetNonLocalizedUIDataDir()

    GetNonLocalizedUIDataDir = staticmethod(GetNonLocalizedUIDataDir)
    def SetNonLocalizedUIDataDir(*args):
        """SetNonLocalizedUIDataDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetNonLocalizedUIDataDir(*args)

    SetNonLocalizedUIDataDir = staticmethod(SetNonLocalizedUIDataDir)
    def GetAutodeskCloudDir():
        """GetAutodeskCloudDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetAutodeskCloudDir()

    GetAutodeskCloudDir = staticmethod(GetAutodeskCloudDir)
    def SetAutodeskCloudDir(*args):
        """SetAutodeskCloudDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetAutodeskCloudDir(*args)

    SetAutodeskCloudDir = staticmethod(SetAutodeskCloudDir)
    def GetAppExchangeStorePrivateDir():
        """GetAppExchangeStorePrivateDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetAppExchangeStorePrivateDir()

    GetAppExchangeStorePrivateDir = staticmethod(GetAppExchangeStorePrivateDir)
    def SetAppExchangeStorePrivateDir(*args):
        """SetAppExchangeStorePrivateDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetAppExchangeStorePrivateDir(*args)

    SetAppExchangeStorePrivateDir = staticmethod(SetAppExchangeStorePrivateDir)
    def GetAppExchangeStorePublicDir():
        """GetAppExchangeStorePublicDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetAppExchangeStorePublicDir()

    GetAppExchangeStorePublicDir = staticmethod(GetAppExchangeStorePublicDir)
    def SetAppExchangeStorePublicDir(*args):
        """SetAppExchangeStorePublicDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetAppExchangeStorePublicDir(*args)

    SetAppExchangeStorePublicDir = staticmethod(SetAppExchangeStorePublicDir)
    def GetUserStartupTemplatesDir():
        """GetUserStartupTemplatesDir() -> wchar_t const *"""
        return _MaxPlus.PathManager_GetUserStartupTemplatesDir()

    GetUserStartupTemplatesDir = staticmethod(GetUserStartupTemplatesDir)
    def SetUserStartupTemplatesDir(*args):
        """SetUserStartupTemplatesDir(wchar_t const * dir)"""
        return _MaxPlus.PathManager_SetUserStartupTemplatesDir(*args)

    SetUserStartupTemplatesDir = staticmethod(SetUserStartupTemplatesDir)
    def GetPluginDirCount():
        """GetPluginDirCount() -> size_t"""
        return _MaxPlus.PathManager_GetPluginDirCount()

    GetPluginDirCount = staticmethod(GetPluginDirCount)
    def GetPluginDir(*args):
        """GetPluginDir(size_t i) -> wchar_t const *"""
        return _MaxPlus.PathManager_GetPluginDir(*args)

    GetPluginDir = staticmethod(GetPluginDir)
    __swig_destroy__ = _MaxPlus.delete_PathManager
    __del__ = lambda self : None;
PathManager_swigregister = _MaxPlus.PathManager_swigregister
PathManager_swigregister(PathManager)

def PathManager_GetFontDir():
  """PathManager_GetFontDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetFontDir()

def PathManager_SetFontDir(*args):
  """PathManager_SetFontDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetFontDir(*args)

def PathManager_GetSceneDir():
  """PathManager_GetSceneDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetSceneDir()

def PathManager_SetSceneDir(*args):
  """PathManager_SetSceneDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetSceneDir(*args)

def PathManager_GetImportDir():
  """PathManager_GetImportDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetImportDir()

def PathManager_SetImportDir(*args):
  """PathManager_SetImportDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetImportDir(*args)

def PathManager_GetExportDir():
  """PathManager_GetExportDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetExportDir()

def PathManager_SetExportDir(*args):
  """PathManager_SetExportDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetExportDir(*args)

def PathManager_GetHelpDir():
  """PathManager_GetHelpDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetHelpDir()

def PathManager_SetHelpDir(*args):
  """PathManager_SetHelpDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetHelpDir(*args)

def PathManager_GetExpressionDir():
  """PathManager_GetExpressionDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetExpressionDir()

def PathManager_SetExpressionDir(*args):
  """PathManager_SetExpressionDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetExpressionDir(*args)

def PathManager_GetPreviewDir():
  """PathManager_GetPreviewDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetPreviewDir()

def PathManager_SetPreviewDir(*args):
  """PathManager_SetPreviewDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetPreviewDir(*args)

def PathManager_GetImageDir():
  """PathManager_GetImageDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetImageDir()

def PathManager_SetImageDir(*args):
  """PathManager_SetImageDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetImageDir(*args)

def PathManager_GetSoundDir():
  """PathManager_GetSoundDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetSoundDir()

def PathManager_SetSoundDir(*args):
  """PathManager_SetSoundDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetSoundDir(*args)

def PathManager_GetPlugcfgDir():
  """PathManager_GetPlugcfgDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetPlugcfgDir()

def PathManager_SetPlugcfgDir(*args):
  """PathManager_SetPlugcfgDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetPlugcfgDir(*args)

def PathManager_GetMaxstartDir():
  """PathManager_GetMaxstartDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetMaxstartDir()

def PathManager_SetMaxstartDir(*args):
  """PathManager_SetMaxstartDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetMaxstartDir(*args)

def PathManager_GetVpostDir():
  """PathManager_GetVpostDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetVpostDir()

def PathManager_SetVpostDir(*args):
  """PathManager_SetVpostDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetVpostDir(*args)

def PathManager_GetDriversDir():
  """PathManager_GetDriversDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetDriversDir()

def PathManager_SetDriversDir(*args):
  """PathManager_SetDriversDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetDriversDir(*args)

def PathManager_GetAutobackDir():
  """PathManager_GetAutobackDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetAutobackDir()

def PathManager_SetAutobackDir(*args):
  """PathManager_SetAutobackDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetAutobackDir(*args)

def PathManager_GetMatlibDir():
  """PathManager_GetMatlibDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetMatlibDir()

def PathManager_SetMatlibDir(*args):
  """PathManager_SetMatlibDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetMatlibDir(*args)

def PathManager_GetScriptsDir():
  """PathManager_GetScriptsDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetScriptsDir()

def PathManager_SetScriptsDir(*args):
  """PathManager_SetScriptsDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetScriptsDir(*args)

def PathManager_GetStartupscriptsDir():
  """PathManager_GetStartupscriptsDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetStartupscriptsDir()

def PathManager_SetStartupscriptsDir(*args):
  """PathManager_SetStartupscriptsDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetStartupscriptsDir(*args)

def PathManager_GetRenderPresetsDir():
  """PathManager_GetRenderPresetsDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetRenderPresetsDir()

def PathManager_SetRenderPresetsDir(*args):
  """PathManager_SetRenderPresetsDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetRenderPresetsDir(*args)

def PathManager_GetUiDir():
  """PathManager_GetUiDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetUiDir()

def PathManager_SetUiDir(*args):
  """PathManager_SetUiDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetUiDir(*args)

def PathManager_GetMaxSysRootDir():
  """PathManager_GetMaxSysRootDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetMaxSysRootDir()

def PathManager_SetMaxSysRootDir(*args):
  """PathManager_SetMaxSysRootDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetMaxSysRootDir(*args)

def PathManager_GetRenderOutputDir():
  """PathManager_GetRenderOutputDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetRenderOutputDir()

def PathManager_SetRenderOutputDir(*args):
  """PathManager_SetRenderOutputDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetRenderOutputDir(*args)

def PathManager_GetAnimationDir():
  """PathManager_GetAnimationDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetAnimationDir()

def PathManager_SetAnimationDir(*args):
  """PathManager_SetAnimationDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetAnimationDir(*args)

def PathManager_GetArchivesDir():
  """PathManager_GetArchivesDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetArchivesDir()

def PathManager_SetArchivesDir(*args):
  """PathManager_SetArchivesDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetArchivesDir(*args)

def PathManager_GetPhotometricDir():
  """PathManager_GetPhotometricDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetPhotometricDir()

def PathManager_SetPhotometricDir(*args):
  """PathManager_SetPhotometricDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetPhotometricDir(*args)

def PathManager_GetRenderAssetsDir():
  """PathManager_GetRenderAssetsDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetRenderAssetsDir()

def PathManager_SetRenderAssetsDir(*args):
  """PathManager_SetRenderAssetsDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetRenderAssetsDir(*args)

def PathManager_GetUserScriptsDir():
  """PathManager_GetUserScriptsDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetUserScriptsDir()

def PathManager_SetUserScriptsDir(*args):
  """PathManager_SetUserScriptsDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetUserScriptsDir(*args)

def PathManager_GetUserMacrosDir():
  """PathManager_GetUserMacrosDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetUserMacrosDir()

def PathManager_SetUserMacrosDir(*args):
  """PathManager_SetUserMacrosDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetUserMacrosDir(*args)

def PathManager_GetUserStartupscriptsDir():
  """PathManager_GetUserStartupscriptsDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetUserStartupscriptsDir()

def PathManager_SetUserStartupscriptsDir(*args):
  """PathManager_SetUserStartupscriptsDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetUserStartupscriptsDir(*args)

def PathManager_GetMarketDefaultsDir():
  """PathManager_GetMarketDefaultsDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetMarketDefaultsDir()

def PathManager_SetMarketDefaultsDir(*args):
  """PathManager_SetMarketDefaultsDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetMarketDefaultsDir(*args)

def PathManager_GetTempDir():
  """PathManager_GetTempDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetTempDir()

def PathManager_SetTempDir(*args):
  """PathManager_SetTempDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetTempDir(*args)

def PathManager_GetUserIconsDir():
  """PathManager_GetUserIconsDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetUserIconsDir()

def PathManager_SetUserIconsDir(*args):
  """PathManager_SetUserIconsDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetUserIconsDir(*args)

def PathManager_GetMaxdataDir():
  """PathManager_GetMaxdataDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetMaxdataDir()

def PathManager_SetMaxdataDir(*args):
  """PathManager_SetMaxdataDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetMaxdataDir(*args)

def PathManager_GetProjectFolderDir():
  """PathManager_GetProjectFolderDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetProjectFolderDir()

def PathManager_SetProjectFolderDir(*args):
  """PathManager_SetProjectFolderDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetProjectFolderDir(*args)

def PathManager_GetDownloadDir():
  """PathManager_GetDownloadDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetDownloadDir()

def PathManager_SetDownloadDir(*args):
  """PathManager_SetDownloadDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetDownloadDir(*args)

def PathManager_GetProxiesDir():
  """PathManager_GetProxiesDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetProxiesDir()

def PathManager_SetProxiesDir(*args):
  """PathManager_SetProxiesDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetProxiesDir(*args)

def PathManager_GetManagedAssembliesDir():
  """PathManager_GetManagedAssembliesDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetManagedAssembliesDir()

def PathManager_SetManagedAssembliesDir(*args):
  """PathManager_SetManagedAssembliesDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetManagedAssembliesDir(*args)

def PathManager_GetPageFileDir():
  """PathManager_GetPageFileDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetPageFileDir()

def PathManager_SetPageFileDir(*args):
  """PathManager_SetPageFileDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetPageFileDir(*args)

def PathManager_GetShaderCacheDir():
  """PathManager_GetShaderCacheDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetShaderCacheDir()

def PathManager_SetShaderCacheDir(*args):
  """PathManager_SetShaderCacheDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetShaderCacheDir(*args)

def PathManager_GetNonLocalizedPluginCfg():
  """PathManager_GetNonLocalizedPluginCfg() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetNonLocalizedPluginCfg()

def PathManager_SetNonLocalizedPluginCfg(*args):
  """PathManager_SetNonLocalizedPluginCfg(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetNonLocalizedPluginCfg(*args)

def PathManager_GetNonLocalizedUIDataDir():
  """PathManager_GetNonLocalizedUIDataDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetNonLocalizedUIDataDir()

def PathManager_SetNonLocalizedUIDataDir(*args):
  """PathManager_SetNonLocalizedUIDataDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetNonLocalizedUIDataDir(*args)

def PathManager_GetAutodeskCloudDir():
  """PathManager_GetAutodeskCloudDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetAutodeskCloudDir()

def PathManager_SetAutodeskCloudDir(*args):
  """PathManager_SetAutodeskCloudDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetAutodeskCloudDir(*args)

def PathManager_GetAppExchangeStorePrivateDir():
  """PathManager_GetAppExchangeStorePrivateDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetAppExchangeStorePrivateDir()

def PathManager_SetAppExchangeStorePrivateDir(*args):
  """PathManager_SetAppExchangeStorePrivateDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetAppExchangeStorePrivateDir(*args)

def PathManager_GetAppExchangeStorePublicDir():
  """PathManager_GetAppExchangeStorePublicDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetAppExchangeStorePublicDir()

def PathManager_SetAppExchangeStorePublicDir(*args):
  """PathManager_SetAppExchangeStorePublicDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetAppExchangeStorePublicDir(*args)

def PathManager_GetUserStartupTemplatesDir():
  """PathManager_GetUserStartupTemplatesDir() -> wchar_t const *"""
  return _MaxPlus.PathManager_GetUserStartupTemplatesDir()

def PathManager_SetUserStartupTemplatesDir(*args):
  """PathManager_SetUserStartupTemplatesDir(wchar_t const * dir)"""
  return _MaxPlus.PathManager_SetUserStartupTemplatesDir(*args)

def PathManager_GetPluginDirCount():
  """PathManager_GetPluginDirCount() -> size_t"""
  return _MaxPlus.PathManager_GetPluginDirCount()

def PathManager_GetPluginDir(*args):
  """PathManager_GetPluginDir(size_t i) -> wchar_t const *"""
  return _MaxPlus.PathManager_GetPluginDir(*args)

class FPTypeConstants(object):
    """Constant values representing the types of values contained in an FPValue."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Float = _MaxPlus.FPTypeConstants_Float
    Int = _MaxPlus.FPTypeConstants_Int
    Rgb = _MaxPlus.FPTypeConstants_Rgb
    Point3 = _MaxPlus.FPTypeConstants_Point3
    BOOL = _MaxPlus.FPTypeConstants_BOOL
    Angle = _MaxPlus.FPTypeConstants_Angle
    PercentFraction = _MaxPlus.FPTypeConstants_PercentFraction
    World = _MaxPlus.FPTypeConstants_World
    String = _MaxPlus.FPTypeConstants_String
    FileName = _MaxPlus.FPTypeConstants_FileName
    Hsv = _MaxPlus.FPTypeConstants_Hsv
    ColorChannel = _MaxPlus.FPTypeConstants_ColorChannel
    TimeValue = _MaxPlus.FPTypeConstants_TimeValue
    RadioButtonIndex = _MaxPlus.FPTypeConstants_RadioButtonIndex
    Mtl = _MaxPlus.FPTypeConstants_Mtl
    Texmap = _MaxPlus.FPTypeConstants_Texmap
    Bitmap = _MaxPlus.FPTypeConstants_Bitmap
    Node = _MaxPlus.FPTypeConstants_Node
    RefTarg = _MaxPlus.FPTypeConstants_RefTarg
    Index = _MaxPlus.FPTypeConstants_Index
    Matrix3 = _MaxPlus.FPTypeConstants_Matrix3
    PBlock2 = _MaxPlus.FPTypeConstants_PBlock2
    Point4 = _MaxPlus.FPTypeConstants_Point4
    FRgb = _MaxPlus.FPTypeConstants_FRgb
    Enum = _MaxPlus.FPTypeConstants_Enum
    Void = _MaxPlus.FPTypeConstants_Void
    Interval = _MaxPlus.FPTypeConstants_Interval
    AngAxis = _MaxPlus.FPTypeConstants_AngAxis
    Quat = _MaxPlus.FPTypeConstants_Quat
    Ray = _MaxPlus.FPTypeConstants_Ray
    Point2 = _MaxPlus.FPTypeConstants_Point2
    BitArray = _MaxPlus.FPTypeConstants_BitArray
    ClassDesc = _MaxPlus.FPTypeConstants_ClassDesc
    Mesh = _MaxPlus.FPTypeConstants_Mesh
    Object = _MaxPlus.FPTypeConstants_Object
    Control = _MaxPlus.FPTypeConstants_Control
    Point = _MaxPlus.FPTypeConstants_Point
    Str = _MaxPlus.FPTypeConstants_Str
    IObject = _MaxPlus.FPTypeConstants_IObject
    FPInterface = _MaxPlus.FPTypeConstants_FPInterface
    HWND = _MaxPlus.FPTypeConstants_HWND
    Name = _MaxPlus.FPTypeConstants_Name
    Color = _MaxPlus.FPTypeConstants_Color
    FPValue = _MaxPlus.FPTypeConstants_FPValue
    Value = _MaxPlus.FPTypeConstants_Value
    DWORD = _MaxPlus.FPTypeConstants_DWORD
    Bool = _MaxPlus.FPTypeConstants_Bool
    IntPtr = _MaxPlus.FPTypeConstants_IntPtr
    Int64 = _MaxPlus.FPTypeConstants_Int64
    Double = _MaxPlus.FPTypeConstants_Double
    Box3 = _MaxPlus.FPTypeConstants_Box3
    MSFloat = _MaxPlus.FPTypeConstants_MSFloat
    FloatTab = _MaxPlus.FPTypeConstants_FloatTab
    IntTab = _MaxPlus.FPTypeConstants_IntTab
    RgbTab = _MaxPlus.FPTypeConstants_RgbTab
    Point3Tab = _MaxPlus.FPTypeConstants_Point3Tab
    BOOLTab = _MaxPlus.FPTypeConstants_BOOLTab
    AngleTab = _MaxPlus.FPTypeConstants_AngleTab
    PercentFractionTab = _MaxPlus.FPTypeConstants_PercentFractionTab
    WorldTab = _MaxPlus.FPTypeConstants_WorldTab
    StringTab = _MaxPlus.FPTypeConstants_StringTab
    FileNameTab = _MaxPlus.FPTypeConstants_FileNameTab
    HsvTab = _MaxPlus.FPTypeConstants_HsvTab
    ColorChannelTab = _MaxPlus.FPTypeConstants_ColorChannelTab
    TimeValueTab = _MaxPlus.FPTypeConstants_TimeValueTab
    RadioButtonIndexTab = _MaxPlus.FPTypeConstants_RadioButtonIndexTab
    MtlTab = _MaxPlus.FPTypeConstants_MtlTab
    TexmapTab = _MaxPlus.FPTypeConstants_TexmapTab
    BitmapTab = _MaxPlus.FPTypeConstants_BitmapTab
    NodeTab = _MaxPlus.FPTypeConstants_NodeTab
    RefTargTab = _MaxPlus.FPTypeConstants_RefTargTab
    IndexTab = _MaxPlus.FPTypeConstants_IndexTab
    Matrix3Tab = _MaxPlus.FPTypeConstants_Matrix3Tab
    PBlock2Tab = _MaxPlus.FPTypeConstants_PBlock2Tab
    Point4Tab = _MaxPlus.FPTypeConstants_Point4Tab
    FRgbTab = _MaxPlus.FPTypeConstants_FRgbTab
    EnumTab = _MaxPlus.FPTypeConstants_EnumTab
    VoidTab = _MaxPlus.FPTypeConstants_VoidTab
    IntervalTab = _MaxPlus.FPTypeConstants_IntervalTab
    AngAxisTab = _MaxPlus.FPTypeConstants_AngAxisTab
    QuatTab = _MaxPlus.FPTypeConstants_QuatTab
    RayTab = _MaxPlus.FPTypeConstants_RayTab
    Point2Tab = _MaxPlus.FPTypeConstants_Point2Tab
    BitArrayTab = _MaxPlus.FPTypeConstants_BitArrayTab
    ClassDescTab = _MaxPlus.FPTypeConstants_ClassDescTab
    MeshTab = _MaxPlus.FPTypeConstants_MeshTab
    ObjectTab = _MaxPlus.FPTypeConstants_ObjectTab
    ControlTab = _MaxPlus.FPTypeConstants_ControlTab
    PointTab = _MaxPlus.FPTypeConstants_PointTab
    StrTab = _MaxPlus.FPTypeConstants_StrTab
    IObjectTab = _MaxPlus.FPTypeConstants_IObjectTab
    FPInterfaceTab = _MaxPlus.FPTypeConstants_FPInterfaceTab
    HWNDTab = _MaxPlus.FPTypeConstants_HWNDTab
    NameTab = _MaxPlus.FPTypeConstants_NameTab
    ColorTab = _MaxPlus.FPTypeConstants_ColorTab
    FPValueTab = _MaxPlus.FPTypeConstants_FPValueTab
    ValueTab = _MaxPlus.FPTypeConstants_ValueTab
    DWORDTab = _MaxPlus.FPTypeConstants_DWORDTab
    BoolTab = _MaxPlus.FPTypeConstants_BoolTab
    IntPtrTab = _MaxPlus.FPTypeConstants_IntPtrTab
    Int64Tab = _MaxPlus.FPTypeConstants_Int64Tab
    DoubleTab = _MaxPlus.FPTypeConstants_DoubleTab
    Box3Tab = _MaxPlus.FPTypeConstants_Box3Tab
    _ValueIsByValue = _MaxPlus.FPTypeConstants__ValueIsByValue
    _ValueIsByReference = _MaxPlus.FPTypeConstants__ValueIsByReference
    _ValueIsByPointer = _MaxPlus.FPTypeConstants__ValueIsByPointer
    _ValueIsByValueOrReferenceOrPointer = _MaxPlus.FPTypeConstants__ValueIsByValueOrReferenceOrPointer
    _ValueIsTab = _MaxPlus.FPTypeConstants__ValueIsTab
    __swig_destroy__ = _MaxPlus.delete_FPTypeConstants
    __del__ = lambda self : None;
FPTypeConstants_swigregister = _MaxPlus.FPTypeConstants_swigregister
FPTypeConstants_swigregister(FPTypeConstants)

class FPValue(Wrapper):
    """Contains a single value used in a parameter block, as part of the function publishing system, or when evaluating MAXScript expressions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _MaxPlus.delete_FPValue
    __del__ = lambda self : None;
    def __init__(self): 
        """__init__(Autodesk::Max::FPValue self) -> FPValue"""
        this = _MaxPlus.new_FPValue()
        try: self.this.append(this)
        except: self.this = this
    def Free(self):
        """Free(FPValue self)"""
        return _MaxPlus.FPValue_Free(self)

    def Init(self):
        """Init(FPValue self)"""
        return _MaxPlus.FPValue_Init(self)

    def InitTab(self, *args):
        """InitTab(FPValue self, ParamType2 type, int size)"""
        return _MaxPlus.FPValue_InitTab(self, *args)

    def IsPointerBasedType(self):
        """IsPointerBasedType(FPValue self) -> bool"""
        return _MaxPlus.FPValue_IsPointerBasedType(self)

    def IsTabType(self):
        """IsTabType(FPValue self) -> bool"""
        return _MaxPlus.FPValue_IsTabType(self)

    def GetValueType(self):
        """GetValueType(FPValue self) -> int"""
        return _MaxPlus.FPValue_GetValueType(self)

    def SetValueType(self, *args):
        """SetValueType(FPValue self, int type)"""
        return _MaxPlus.FPValue_SetValueType(self, *args)

    def _FixupBacking(self):
        """_FixupBacking(FPValue self)"""
        return _MaxPlus.FPValue__FixupBacking(self)

    def GetParamDimension(self):
        """GetParamDimension(FPValue self) -> ::ParamDimension *"""
        return _MaxPlus.FPValue_GetParamDimension(self)

    def GetInt(self, performScaling=False):
        """
        GetInt(FPValue self, bool performScaling=False) -> int
        GetInt(FPValue self) -> int
        """
        return _MaxPlus.FPValue_GetInt(self, performScaling)

    def GetFloat(self, performScaling=False):
        """
        GetFloat(FPValue self, bool performScaling=False) -> float
        GetFloat(FPValue self) -> float
        """
        return _MaxPlus.FPValue_GetFloat(self, performScaling)

    def GetDWORD(self, performScaling=False):
        """
        GetDWORD(FPValue self, bool performScaling=False) -> DWORD
        GetDWORD(FPValue self) -> DWORD
        """
        return _MaxPlus.FPValue_GetDWORD(self, performScaling)

    def GetBool(self, performScaling=False):
        """
        GetBool(FPValue self, bool performScaling=False) -> bool
        GetBool(FPValue self) -> bool
        """
        return _MaxPlus.FPValue_GetBool(self, performScaling)

    def GetInt64(self, performScaling=False):
        """
        GetInt64(FPValue self, bool performScaling=False) -> INT64
        GetInt64(FPValue self) -> INT64
        """
        return _MaxPlus.FPValue_GetInt64(self, performScaling)

    def GetDouble(self, performScaling=False):
        """
        GetDouble(FPValue self, bool performScaling=False) -> double
        GetDouble(FPValue self) -> double
        """
        return _MaxPlus.FPValue_GetDouble(self, performScaling)

    def GetPoint3(self, performScaling=False):
        """
        GetPoint3(FPValue self, bool performScaling=False) -> Point3
        GetPoint3(FPValue self) -> Point3
        """
        return _MaxPlus.FPValue_GetPoint3(self, performScaling)

    def GetPoint4(self, performScaling=False):
        """
        GetPoint4(FPValue self, bool performScaling=False) -> Point4
        GetPoint4(FPValue self) -> Point4
        """
        return _MaxPlus.FPValue_GetPoint4(self, performScaling)

    def GetPChar(self, performScaling=False):
        """
        GetPChar(FPValue self, bool performScaling=False) -> wchar_t const
        GetPChar(FPValue self) -> wchar_t const *
        """
        return _MaxPlus.FPValue_GetPChar(self, performScaling)

    def GetStr(self, performScaling=False):
        """
        GetStr(FPValue self, bool performScaling=False) -> WStr
        GetStr(FPValue self) -> WStr
        """
        return _MaxPlus.FPValue_GetStr(self, performScaling)

    def GetBitmap(self, performScaling=False):
        """
        GetBitmap(FPValue self, bool performScaling=False) -> PBBitmap
        GetBitmap(FPValue self) -> PBBitmap
        """
        return _MaxPlus.FPValue_GetBitmap(self, performScaling)

    def GetIParamBlock2(self, performScaling=False):
        """
        GetIParamBlock2(FPValue self, bool performScaling=False) -> IParamBlock2
        GetIParamBlock2(FPValue self) -> IParamBlock2
        """
        return _MaxPlus.FPValue_GetIParamBlock2(self, performScaling)

    def GetMtl(self, performScaling=False):
        """
        GetMtl(FPValue self, bool performScaling=False) -> Mtl
        GetMtl(FPValue self) -> Mtl
        """
        return _MaxPlus.FPValue_GetMtl(self, performScaling)

    def GetTexmap(self, performScaling=False):
        """
        GetTexmap(FPValue self, bool performScaling=False) -> Texmap
        GetTexmap(FPValue self) -> Texmap
        """
        return _MaxPlus.FPValue_GetTexmap(self, performScaling)

    def GetNode(self, performScaling=False):
        """
        GetNode(FPValue self, bool performScaling=False) -> INode
        GetNode(FPValue self) -> INode
        """
        return _MaxPlus.FPValue_GetNode(self, performScaling)

    def GetReferenceTarget(self, performScaling=False):
        """
        GetReferenceTarget(FPValue self, bool performScaling=False) -> ReferenceTarget
        GetReferenceTarget(FPValue self) -> ReferenceTarget
        """
        return _MaxPlus.FPValue_GetReferenceTarget(self, performScaling)

    def GetObject(self, performScaling=False):
        """
        GetObject(FPValue self, bool performScaling=False) -> Object
        GetObject(FPValue self) -> Object
        """
        return _MaxPlus.FPValue_GetObject(self, performScaling)

    def GetControl(self, performScaling=False):
        """
        GetControl(FPValue self, bool performScaling=False) -> Control
        GetControl(FPValue self) -> Control
        """
        return _MaxPlus.FPValue_GetControl(self, performScaling)

    def GetIPoint2(self, performScaling=False):
        """
        GetIPoint2(FPValue self, bool performScaling=False) -> IPoint2
        GetIPoint2(FPValue self) -> IPoint2
        """
        return _MaxPlus.FPValue_GetIPoint2(self, performScaling)

    def GetMatrix3(self, performScaling=False):
        """
        GetMatrix3(FPValue self, bool performScaling=False) -> Matrix3
        GetMatrix3(FPValue self) -> Matrix3
        """
        return _MaxPlus.FPValue_GetMatrix3(self, performScaling)

    def GetAngAxis(self, performScaling=False):
        """
        GetAngAxis(FPValue self, bool performScaling=False) -> AngAxis
        GetAngAxis(FPValue self) -> AngAxis
        """
        return _MaxPlus.FPValue_GetAngAxis(self, performScaling)

    def GetQuat(self, performScaling=False):
        """
        GetQuat(FPValue self, bool performScaling=False) -> Quat
        GetQuat(FPValue self) -> Quat
        """
        return _MaxPlus.FPValue_GetQuat(self, performScaling)

    def GetRay(self, performScaling=False):
        """
        GetRay(FPValue self, bool performScaling=False) -> Ray
        GetRay(FPValue self) -> Ray
        """
        return _MaxPlus.FPValue_GetRay(self, performScaling)

    def GetPoint2(self, performScaling=False):
        """
        GetPoint2(FPValue self, bool performScaling=False) -> Point2
        GetPoint2(FPValue self) -> Point2
        """
        return _MaxPlus.FPValue_GetPoint2(self, performScaling)

    def GetBitArray(self, performScaling=False):
        """
        GetBitArray(FPValue self, bool performScaling=False) -> BitArray
        GetBitArray(FPValue self) -> BitArray
        """
        return _MaxPlus.FPValue_GetBitArray(self, performScaling)

    def GetClassDesc(self, performScaling=False):
        """
        GetClassDesc(FPValue self, bool performScaling=False) -> ClassDesc
        GetClassDesc(FPValue self) -> ClassDesc
        """
        return _MaxPlus.FPValue_GetClassDesc(self, performScaling)

    def GetMesh(self, performScaling=False):
        """
        GetMesh(FPValue self, bool performScaling=False) -> Mesh
        GetMesh(FPValue self) -> Mesh
        """
        return _MaxPlus.FPValue_GetMesh(self, performScaling)

    def GetInterval(self, performScaling=False):
        """
        GetInterval(FPValue self, bool performScaling=False) -> Interval
        GetInterval(FPValue self) -> Interval
        """
        return _MaxPlus.FPValue_GetInterval(self, performScaling)

    def GetIObject(self, performScaling=False):
        """
        GetIObject(FPValue self, bool performScaling=False) -> IObject
        GetIObject(FPValue self) -> IObject
        """
        return _MaxPlus.FPValue_GetIObject(self, performScaling)

    def GetFPInterface(self, performScaling=False):
        """
        GetFPInterface(FPValue self, bool performScaling=False) -> FPInterface
        GetFPInterface(FPValue self) -> FPInterface
        """
        return _MaxPlus.FPValue_GetFPInterface(self, performScaling)

    def GetColor(self, performScaling=False):
        """
        GetColor(FPValue self, bool performScaling=False) -> Color
        GetColor(FPValue self) -> Color
        """
        return _MaxPlus.FPValue_GetColor(self, performScaling)

    def GetAColor(self, performScaling=False):
        """
        GetAColor(FPValue self, bool performScaling=False) -> AColor
        GetAColor(FPValue self) -> AColor
        """
        return _MaxPlus.FPValue_GetAColor(self, performScaling)

    def GetBox3(self, performScaling=False):
        """
        GetBox3(FPValue self, bool performScaling=False) -> Box3
        GetBox3(FPValue self) -> Box3
        """
        return _MaxPlus.FPValue_GetBox3(self, performScaling)

    def GetIntList(self, performScaling=False):
        """
        GetIntList(FPValue self, bool performScaling=False) -> IntList
        GetIntList(FPValue self) -> IntList
        """
        return _MaxPlus.FPValue_GetIntList(self, performScaling)

    def GetFloatList(self, performScaling=False):
        """
        GetFloatList(FPValue self, bool performScaling=False) -> FloatList
        GetFloatList(FPValue self) -> FloatList
        """
        return _MaxPlus.FPValue_GetFloatList(self, performScaling)

    def GetDWORDList(self, performScaling=False):
        """
        GetDWORDList(FPValue self, bool performScaling=False) -> DWORDList
        GetDWORDList(FPValue self) -> DWORDList
        """
        return _MaxPlus.FPValue_GetDWORDList(self, performScaling)

    def GetBoolList(self, performScaling=False):
        """
        GetBoolList(FPValue self, bool performScaling=False) -> BoolList
        GetBoolList(FPValue self) -> BoolList
        """
        return _MaxPlus.FPValue_GetBoolList(self, performScaling)

    def GetInt64List(self, performScaling=False):
        """
        GetInt64List(FPValue self, bool performScaling=False) -> Int64List
        GetInt64List(FPValue self) -> Int64List
        """
        return _MaxPlus.FPValue_GetInt64List(self, performScaling)

    def GetDoubleList(self, performScaling=False):
        """
        GetDoubleList(FPValue self, bool performScaling=False) -> DoubleList
        GetDoubleList(FPValue self) -> DoubleList
        """
        return _MaxPlus.FPValue_GetDoubleList(self, performScaling)

    def GetPoint3List(self, performScaling=False):
        """
        GetPoint3List(FPValue self, bool performScaling=False) -> Point3List
        GetPoint3List(FPValue self) -> Point3List
        """
        return _MaxPlus.FPValue_GetPoint3List(self, performScaling)

    def GetPoint4List(self, performScaling=False):
        """
        GetPoint4List(FPValue self, bool performScaling=False) -> Point4List
        GetPoint4List(FPValue self) -> Point4List
        """
        return _MaxPlus.FPValue_GetPoint4List(self, performScaling)

    def GetPCharList(self, performScaling=False):
        """
        GetPCharList(FPValue self, bool performScaling=False) -> PCharList
        GetPCharList(FPValue self) -> PCharList
        """
        return _MaxPlus.FPValue_GetPCharList(self, performScaling)

    def GetStrList(self, performScaling=False):
        """
        GetStrList(FPValue self, bool performScaling=False) -> StrList
        GetStrList(FPValue self) -> StrList
        """
        return _MaxPlus.FPValue_GetStrList(self, performScaling)

    def GetBitmapList(self, performScaling=False):
        """
        GetBitmapList(FPValue self, bool performScaling=False) -> BitmapList
        GetBitmapList(FPValue self) -> BitmapList
        """
        return _MaxPlus.FPValue_GetBitmapList(self, performScaling)

    def GetIParamBlock2List(self, performScaling=False):
        """
        GetIParamBlock2List(FPValue self, bool performScaling=False) -> IParamBlock2List
        GetIParamBlock2List(FPValue self) -> IParamBlock2List
        """
        return _MaxPlus.FPValue_GetIParamBlock2List(self, performScaling)

    def GetMtlList(self, performScaling=False):
        """
        GetMtlList(FPValue self, bool performScaling=False) -> MtlList
        GetMtlList(FPValue self) -> MtlList
        """
        return _MaxPlus.FPValue_GetMtlList(self, performScaling)

    def GetTexmapList(self, performScaling=False):
        """
        GetTexmapList(FPValue self, bool performScaling=False) -> TexmapList
        GetTexmapList(FPValue self) -> TexmapList
        """
        return _MaxPlus.FPValue_GetTexmapList(self, performScaling)

    def GetNodeList(self, performScaling=False):
        """
        GetNodeList(FPValue self, bool performScaling=False) -> INodeList
        GetNodeList(FPValue self) -> INodeList
        """
        return _MaxPlus.FPValue_GetNodeList(self, performScaling)

    def GetReferenceTargetList(self, performScaling=False):
        """
        GetReferenceTargetList(FPValue self, bool performScaling=False) -> ReferenceTargetList
        GetReferenceTargetList(FPValue self) -> ReferenceTargetList
        """
        return _MaxPlus.FPValue_GetReferenceTargetList(self, performScaling)

    def GetObjectList(self, performScaling=False):
        """
        GetObjectList(FPValue self, bool performScaling=False) -> ObjectList
        GetObjectList(FPValue self) -> ObjectList
        """
        return _MaxPlus.FPValue_GetObjectList(self, performScaling)

    def GetControlList(self, performScaling=False):
        """
        GetControlList(FPValue self, bool performScaling=False) -> ControlList
        GetControlList(FPValue self) -> ControlList
        """
        return _MaxPlus.FPValue_GetControlList(self, performScaling)

    def GetIPoint2List(self, performScaling=False):
        """
        GetIPoint2List(FPValue self, bool performScaling=False) -> IPoint2List
        GetIPoint2List(FPValue self) -> IPoint2List
        """
        return _MaxPlus.FPValue_GetIPoint2List(self, performScaling)

    def GetMatrix3List(self, performScaling=False):
        """
        GetMatrix3List(FPValue self, bool performScaling=False) -> Matrix3List
        GetMatrix3List(FPValue self) -> Matrix3List
        """
        return _MaxPlus.FPValue_GetMatrix3List(self, performScaling)

    def GetAngAxisList(self, performScaling=False):
        """
        GetAngAxisList(FPValue self, bool performScaling=False) -> AngAxisList
        GetAngAxisList(FPValue self) -> AngAxisList
        """
        return _MaxPlus.FPValue_GetAngAxisList(self, performScaling)

    def GetQuatList(self, performScaling=False):
        """
        GetQuatList(FPValue self, bool performScaling=False) -> QuatList
        GetQuatList(FPValue self) -> QuatList
        """
        return _MaxPlus.FPValue_GetQuatList(self, performScaling)

    def GetRayList(self, performScaling=False):
        """
        GetRayList(FPValue self, bool performScaling=False) -> RayList
        GetRayList(FPValue self) -> RayList
        """
        return _MaxPlus.FPValue_GetRayList(self, performScaling)

    def GetPoint2List(self, performScaling=False):
        """
        GetPoint2List(FPValue self, bool performScaling=False) -> Point2List
        GetPoint2List(FPValue self) -> Point2List
        """
        return _MaxPlus.FPValue_GetPoint2List(self, performScaling)

    def GetBitArrayList(self, performScaling=False):
        """
        GetBitArrayList(FPValue self, bool performScaling=False) -> BitArrayList
        GetBitArrayList(FPValue self) -> BitArrayList
        """
        return _MaxPlus.FPValue_GetBitArrayList(self, performScaling)

    def GetClassDescList(self, performScaling=False):
        """
        GetClassDescList(FPValue self, bool performScaling=False) -> ClassDescList
        GetClassDescList(FPValue self) -> ClassDescList
        """
        return _MaxPlus.FPValue_GetClassDescList(self, performScaling)

    def GetMeshList(self, performScaling=False):
        """
        GetMeshList(FPValue self, bool performScaling=False) -> MeshList
        GetMeshList(FPValue self) -> MeshList
        """
        return _MaxPlus.FPValue_GetMeshList(self, performScaling)

    def GetIntervalList(self, performScaling=False):
        """
        GetIntervalList(FPValue self, bool performScaling=False) -> IntervalList
        GetIntervalList(FPValue self) -> IntervalList
        """
        return _MaxPlus.FPValue_GetIntervalList(self, performScaling)

    def GetIObjectList(self, performScaling=False):
        """
        GetIObjectList(FPValue self, bool performScaling=False) -> IObjectList
        GetIObjectList(FPValue self) -> IObjectList
        """
        return _MaxPlus.FPValue_GetIObjectList(self, performScaling)

    def GetFPInterfaceList(self, performScaling=False):
        """
        GetFPInterfaceList(FPValue self, bool performScaling=False) -> FPInterfaceList
        GetFPInterfaceList(FPValue self) -> FPInterfaceList
        """
        return _MaxPlus.FPValue_GetFPInterfaceList(self, performScaling)

    def GetColorList(self, performScaling=False):
        """
        GetColorList(FPValue self, bool performScaling=False) -> ColorList
        GetColorList(FPValue self) -> ColorList
        """
        return _MaxPlus.FPValue_GetColorList(self, performScaling)

    def GetAColorList(self, performScaling=False):
        """
        GetAColorList(FPValue self, bool performScaling=False) -> AColorList
        GetAColorList(FPValue self) -> AColorList
        """
        return _MaxPlus.FPValue_GetAColorList(self, performScaling)

    def GetBox3List(self, performScaling=False):
        """
        GetBox3List(FPValue self, bool performScaling=False) -> Autodesk::Max::Box3List
        GetBox3List(FPValue self) -> Autodesk::Max::Box3List
        """
        return _MaxPlus.FPValue_GetBox3List(self, performScaling)

    def Set(self, *args):
        """
        Set(FPValue self, int x, bool performScaling=False)
        Set(FPValue self, int x)
        Set(FPValue self, float x, bool performScaling=False)
        Set(FPValue self, float x)
        Set(FPValue self, DWORD x, bool performScaling=False)
        Set(FPValue self, DWORD x)
        Set(FPValue self, bool x, bool performScaling=False)
        Set(FPValue self, bool x)
        Set(FPValue self, INT64 x, bool performScaling=False)
        Set(FPValue self, INT64 x)
        Set(FPValue self, double x, bool performScaling=False)
        Set(FPValue self, double x)
        Set(FPValue self, Point3 x, bool performScaling=False)
        Set(FPValue self, Point3 x)
        Set(FPValue self, Point4 x, bool performScaling=False)
        Set(FPValue self, Point4 x)
        Set(FPValue self, wchar_t const * x, bool performScaling=False)
        Set(FPValue self, wchar_t const * x)
        Set(FPValue self, WStr x, bool performScaling=False)
        Set(FPValue self, WStr x)
        Set(FPValue self, PBBitmap x, bool performScaling=False)
        Set(FPValue self, PBBitmap x)
        Set(FPValue self, Mtl x, bool performScaling=False)
        Set(FPValue self, Mtl x)
        Set(FPValue self, Texmap x, bool performScaling=False)
        Set(FPValue self, Texmap x)
        Set(FPValue self, INode x, bool performScaling=False)
        Set(FPValue self, INode x)
        Set(FPValue self, ReferenceTarget x, bool performScaling=False)
        Set(FPValue self, ReferenceTarget x)
        Set(FPValue self, Object x, bool performScaling=False)
        Set(FPValue self, Object x)
        Set(FPValue self, Control x, bool performScaling=False)
        Set(FPValue self, Control x)
        Set(FPValue self, IPoint2 x, bool performScaling=False)
        Set(FPValue self, IPoint2 x)
        Set(FPValue self, IParamBlock2 x, bool performScaling=False)
        Set(FPValue self, IParamBlock2 x)
        Set(FPValue self, Matrix3 x, bool performScaling=False)
        Set(FPValue self, Matrix3 x)
        Set(FPValue self, AngAxis x, bool performScaling=False)
        Set(FPValue self, AngAxis x)
        Set(FPValue self, Quat x, bool performScaling=False)
        Set(FPValue self, Quat x)
        Set(FPValue self, Ray x, bool performScaling=False)
        Set(FPValue self, Ray x)
        Set(FPValue self, Point2 x, bool performScaling=False)
        Set(FPValue self, Point2 x)
        Set(FPValue self, BitArray x, bool performScaling=False)
        Set(FPValue self, BitArray x)
        Set(FPValue self, ClassDesc x, bool performScaling=False)
        Set(FPValue self, ClassDesc x)
        Set(FPValue self, Mesh x, bool performScaling=False)
        Set(FPValue self, Mesh x)
        Set(FPValue self, Interval x, bool performScaling=False)
        Set(FPValue self, Interval x)
        Set(FPValue self, IObject x, bool performScaling=False)
        Set(FPValue self, IObject x)
        Set(FPValue self, FPInterface x, bool performScaling=False)
        Set(FPValue self, FPInterface x)
        Set(FPValue self, Color x, bool performScaling=False)
        Set(FPValue self, Color x)
        Set(FPValue self, AColor x, bool performScaling=False)
        Set(FPValue self, AColor x)
        Set(FPValue self, Box3 x, bool performScaling=False)
        Set(FPValue self, Box3 x)
        Set(FPValue self, IntList x, bool performScaling=False)
        Set(FPValue self, IntList x)
        Set(FPValue self, FloatList x, bool performScaling=False)
        Set(FPValue self, FloatList x)
        Set(FPValue self, DWORDList x, bool performScaling=False)
        Set(FPValue self, DWORDList x)
        Set(FPValue self, BoolList x, bool performScaling=False)
        Set(FPValue self, BoolList x)
        Set(FPValue self, Int64List x, bool performScaling=False)
        Set(FPValue self, Int64List x)
        Set(FPValue self, DoubleList x, bool performScaling=False)
        Set(FPValue self, DoubleList x)
        Set(FPValue self, Point3List x, bool performScaling=False)
        Set(FPValue self, Point3List x)
        Set(FPValue self, Point4List x, bool performScaling=False)
        Set(FPValue self, Point4List x)
        Set(FPValue self, PCharList x, bool performScaling=False)
        Set(FPValue self, PCharList x)
        Set(FPValue self, StrList x, bool performScaling=False)
        Set(FPValue self, StrList x)
        Set(FPValue self, BitmapList x, bool performScaling=False)
        Set(FPValue self, BitmapList x)
        Set(FPValue self, IParamBlock2List x, bool performScaling=False)
        Set(FPValue self, IParamBlock2List x)
        Set(FPValue self, MtlList x, bool performScaling=False)
        Set(FPValue self, MtlList x)
        Set(FPValue self, TexmapList x, bool performScaling=False)
        Set(FPValue self, TexmapList x)
        Set(FPValue self, INodeList x, bool performScaling=False)
        Set(FPValue self, INodeList x)
        Set(FPValue self, ReferenceTargetList x, bool performScaling=False)
        Set(FPValue self, ReferenceTargetList x)
        Set(FPValue self, ObjectList x, bool performScaling=False)
        Set(FPValue self, ObjectList x)
        Set(FPValue self, ControlList x, bool performScaling=False)
        Set(FPValue self, ControlList x)
        Set(FPValue self, IPoint2List x, bool performScaling=False)
        Set(FPValue self, IPoint2List x)
        Set(FPValue self, Matrix3List x, bool performScaling=False)
        Set(FPValue self, Matrix3List x)
        Set(FPValue self, AngAxisList x, bool performScaling=False)
        Set(FPValue self, AngAxisList x)
        Set(FPValue self, QuatList x, bool performScaling=False)
        Set(FPValue self, QuatList x)
        Set(FPValue self, RayList x, bool performScaling=False)
        Set(FPValue self, RayList x)
        Set(FPValue self, Point2List x, bool performScaling=False)
        Set(FPValue self, Point2List x)
        Set(FPValue self, BitArrayList x, bool performScaling=False)
        Set(FPValue self, BitArrayList x)
        Set(FPValue self, ClassDescList x, bool performScaling=False)
        Set(FPValue self, ClassDescList x)
        Set(FPValue self, MeshList x, bool performScaling=False)
        Set(FPValue self, MeshList x)
        Set(FPValue self, IntervalList x, bool performScaling=False)
        Set(FPValue self, IntervalList x)
        Set(FPValue self, IObjectList x, bool performScaling=False)
        Set(FPValue self, IObjectList x)
        Set(FPValue self, FPInterfaceList x, bool performScaling=False)
        Set(FPValue self, FPInterfaceList x)
        Set(FPValue self, ColorList x, bool performScaling=False)
        Set(FPValue self, ColorList x)
        Set(FPValue self, AColorList x, bool performScaling=False)
        Set(FPValue self, AColorList x)
        Set(FPValue self, Autodesk::Max::Box3List const & x, bool performScaling=False)
        Set(FPValue self, Autodesk::Max::Box3List const & x)
        Set(FPValue self, int x, int targetType, bool performScaling=False)
        Set(FPValue self, int x, int targetType)
        Set(FPValue self, float x, int targetType, bool performScaling=False)
        Set(FPValue self, float x, int targetType)
        Set(FPValue self, DWORD x, int targetType, bool performScaling=False)
        Set(FPValue self, DWORD x, int targetType)
        Set(FPValue self, bool x, int targetType, bool performScaling=False)
        Set(FPValue self, bool x, int targetType)
        Set(FPValue self, INT64 x, int targetType, bool performScaling=False)
        Set(FPValue self, INT64 x, int targetType)
        Set(FPValue self, double x, int targetType, bool performScaling=False)
        Set(FPValue self, double x, int targetType)
        Set(FPValue self, Point3 x, int targetType, bool performScaling=False)
        Set(FPValue self, Point3 x, int targetType)
        Set(FPValue self, Point4 x, int targetType, bool performScaling=False)
        Set(FPValue self, Point4 x, int targetType)
        Set(FPValue self, wchar_t const * x, int targetType, bool performScaling=False)
        Set(FPValue self, wchar_t const * x, int targetType)
        Set(FPValue self, WStr x, int targetType, bool performScaling=False)
        Set(FPValue self, WStr x, int targetType)
        Set(FPValue self, PBBitmap x, int targetType, bool performScaling=False)
        Set(FPValue self, PBBitmap x, int targetType)
        Set(FPValue self, Mtl x, int targetType, bool performScaling=False)
        Set(FPValue self, Mtl x, int targetType)
        Set(FPValue self, Texmap x, int targetType, bool performScaling=False)
        Set(FPValue self, Texmap x, int targetType)
        Set(FPValue self, INode x, int targetType, bool performScaling=False)
        Set(FPValue self, INode x, int targetType)
        Set(FPValue self, ReferenceTarget x, int targetType, bool performScaling=False)
        Set(FPValue self, ReferenceTarget x, int targetType)
        Set(FPValue self, Object x, int targetType, bool performScaling=False)
        Set(FPValue self, Object x, int targetType)
        Set(FPValue self, Control x, int targetType, bool performScaling=False)
        Set(FPValue self, Control x, int targetType)
        Set(FPValue self, IPoint2 x, int targetType, bool performScaling=False)
        Set(FPValue self, IPoint2 x, int targetType)
        Set(FPValue self, IParamBlock2 x, int targetType, bool performScaling=False)
        Set(FPValue self, IParamBlock2 x, int targetType)
        Set(FPValue self, Matrix3 x, int targetType, bool performScaling=False)
        Set(FPValue self, Matrix3 x, int targetType)
        Set(FPValue self, AngAxis x, int targetType, bool performScaling=False)
        Set(FPValue self, AngAxis x, int targetType)
        Set(FPValue self, Quat x, int targetType, bool performScaling=False)
        Set(FPValue self, Quat x, int targetType)
        Set(FPValue self, Ray x, int targetType, bool performScaling=False)
        Set(FPValue self, Ray x, int targetType)
        Set(FPValue self, Point2 x, int targetType, bool performScaling=False)
        Set(FPValue self, Point2 x, int targetType)
        Set(FPValue self, BitArray x, int targetType, bool performScaling=False)
        Set(FPValue self, BitArray x, int targetType)
        Set(FPValue self, ClassDesc x, int targetType, bool performScaling=False)
        Set(FPValue self, ClassDesc x, int targetType)
        Set(FPValue self, Mesh x, int targetType, bool performScaling=False)
        Set(FPValue self, Mesh x, int targetType)
        Set(FPValue self, Interval x, int targetType, bool performScaling=False)
        Set(FPValue self, Interval x, int targetType)
        Set(FPValue self, IObject x, int targetType, bool performScaling=False)
        Set(FPValue self, IObject x, int targetType)
        Set(FPValue self, FPInterface x, int targetType, bool performScaling=False)
        Set(FPValue self, FPInterface x, int targetType)
        Set(FPValue self, Color x, int targetType, bool performScaling=False)
        Set(FPValue self, Color x, int targetType)
        Set(FPValue self, AColor x, int targetType, bool performScaling=False)
        Set(FPValue self, AColor x, int targetType)
        Set(FPValue self, Box3 x, int targetType, bool performScaling=False)
        Set(FPValue self, Box3 x, int targetType)
        Set(FPValue self, Wrapper arg2, int targetType, bool performScaling=False)
        Set(FPValue self, Wrapper arg2, int targetType)
        Set(FPValue self, IntList x, int targetType, bool performScaling=False)
        Set(FPValue self, IntList x, int targetType)
        Set(FPValue self, FloatList x, int targetType, bool performScaling=False)
        Set(FPValue self, FloatList x, int targetType)
        Set(FPValue self, DWORDList x, int targetType, bool performScaling=False)
        Set(FPValue self, DWORDList x, int targetType)
        Set(FPValue self, BoolList x, int targetType, bool performScaling=False)
        Set(FPValue self, BoolList x, int targetType)
        Set(FPValue self, Int64List x, int targetType, bool performScaling=False)
        Set(FPValue self, Int64List x, int targetType)
        Set(FPValue self, DoubleList x, int targetType, bool performScaling=False)
        Set(FPValue self, DoubleList x, int targetType)
        Set(FPValue self, Point3List x, int targetType, bool performScaling=False)
        Set(FPValue self, Point3List x, int targetType)
        Set(FPValue self, Point4List x, int targetType, bool performScaling=False)
        Set(FPValue self, Point4List x, int targetType)
        Set(FPValue self, PCharList x, int targetType, bool performScaling=False)
        Set(FPValue self, PCharList x, int targetType)
        Set(FPValue self, StrList x, int targetType, bool performScaling=False)
        Set(FPValue self, StrList x, int targetType)
        Set(FPValue self, BitmapList x, int targetType, bool performScaling=False)
        Set(FPValue self, BitmapList x, int targetType)
        Set(FPValue self, IParamBlock2List x, int targetType, bool performScaling=False)
        Set(FPValue self, IParamBlock2List x, int targetType)
        Set(FPValue self, MtlList x, int targetType, bool performScaling=False)
        Set(FPValue self, MtlList x, int targetType)
        Set(FPValue self, TexmapList x, int targetType, bool performScaling=False)
        Set(FPValue self, TexmapList x, int targetType)
        Set(FPValue self, INodeList x, int targetType, bool performScaling=False)
        Set(FPValue self, INodeList x, int targetType)
        Set(FPValue self, ReferenceTargetList x, int targetType, bool performScaling=False)
        Set(FPValue self, ReferenceTargetList x, int targetType)
        Set(FPValue self, ObjectList x, int targetType, bool performScaling=False)
        Set(FPValue self, ObjectList x, int targetType)
        Set(FPValue self, ControlList x, int targetType, bool performScaling=False)
        Set(FPValue self, ControlList x, int targetType)
        Set(FPValue self, IPoint2List x, int targetType, bool performScaling=False)
        Set(FPValue self, IPoint2List x, int targetType)
        Set(FPValue self, Matrix3List x, int targetType, bool performScaling=False)
        Set(FPValue self, Matrix3List x, int targetType)
        Set(FPValue self, AngAxisList x, int targetType, bool performScaling=False)
        Set(FPValue self, AngAxisList x, int targetType)
        Set(FPValue self, QuatList x, int targetType, bool performScaling=False)
        Set(FPValue self, QuatList x, int targetType)
        Set(FPValue self, RayList x, int targetType, bool performScaling=False)
        Set(FPValue self, RayList x, int targetType)
        Set(FPValue self, Point2List x, int targetType, bool performScaling=False)
        Set(FPValue self, Point2List x, int targetType)
        Set(FPValue self, BitArrayList x, int targetType, bool performScaling=False)
        Set(FPValue self, BitArrayList x, int targetType)
        Set(FPValue self, ClassDescList x, int targetType, bool performScaling=False)
        Set(FPValue self, ClassDescList x, int targetType)
        Set(FPValue self, MeshList x, int targetType, bool performScaling=False)
        Set(FPValue self, MeshList x, int targetType)
        Set(FPValue self, IntervalList x, int targetType, bool performScaling=False)
        Set(FPValue self, IntervalList x, int targetType)
        Set(FPValue self, IObjectList x, int targetType, bool performScaling=False)
        Set(FPValue self, IObjectList x, int targetType)
        Set(FPValue self, FPInterfaceList x, int targetType, bool performScaling=False)
        Set(FPValue self, FPInterfaceList x, int targetType)
        Set(FPValue self, ColorList x, int targetType, bool performScaling=False)
        Set(FPValue self, ColorList x, int targetType)
        Set(FPValue self, AColorList x, int targetType, bool performScaling=False)
        Set(FPValue self, AColorList x, int targetType)
        Set(FPValue self, Autodesk::Max::Box3List const & x, int targetType, bool performScaling=False)
        Set(FPValue self, Autodesk::Max::Box3List const & x, int targetType)
        """
        return _MaxPlus.FPValue_Set(self, *args)

    Type = _swig_property(GetValueType)

FPValue_swigregister = _MaxPlus.FPValue_swigregister
FPValue_swigregister(FPValue)

class Parameter(object):
    """Provides access to a parameter in a IParamBlock or IParamBlock2. """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(ArrayParameter p) -> Parameter"""
        return _MaxPlus.Parameter__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def GetName(self):
        """GetName(Parameter self) -> WStr"""
        return _MaxPlus.Parameter_GetName(self)

    def GetParamType(self):
        """GetParamType(Parameter self) -> int"""
        return _MaxPlus.Parameter_GetParamType(self)

    def GetTabIndex(self):
        """GetTabIndex(Parameter self) -> int"""
        return _MaxPlus.Parameter_GetTabIndex(self)

    def GetIsArrayParameter(self):
        """GetIsArrayParameter(Parameter self) -> bool"""
        return _MaxPlus.Parameter_GetIsArrayParameter(self)

    def GetIsObsolete(self):
        """GetIsObsolete(Parameter self) -> bool"""
        return _MaxPlus.Parameter_GetIsObsolete(self)

    def GetIsAnimatable(self):
        """GetIsAnimatable(Parameter self) -> bool"""
        return _MaxPlus.Parameter_GetIsAnimatable(self)

    def GetIsReadOnly(self):
        """GetIsReadOnly(Parameter self) -> bool"""
        return _MaxPlus.Parameter_GetIsReadOnly(self)

    def GetIsArrayData(self):
        """GetIsArrayData(Parameter self) -> bool"""
        return _MaxPlus.Parameter_GetIsArrayData(self)

    def GetValue(self, *args):
        """
        GetValue(Parameter self, TimeValue t=Autodesk::Max::Now()) -> FPValue
        GetValue(Parameter self) -> FPValue
        """
        return _MaxPlus.Parameter_GetValue(self, *args)

    def SetValue(self, *args):
        """
        SetValue(Parameter self, FPValue x, TimeValue t=Autodesk::Max::Now())
        SetValue(Parameter self, FPValue x)
        """
        return _MaxPlus.Parameter_SetValue(self, *args)

    def GetController(self):
        """GetController(Parameter self) -> Control"""
        return _MaxPlus.Parameter_GetController(self)

    def SetController(self, *args):
        """
        SetController(Parameter self, Control c, bool preserveFrame0Value=True)
        SetController(Parameter self, Control c)
        """
        return _MaxPlus.Parameter_SetController(self, *args)

    def ReplaceController(self, *args):
        """
        ReplaceController(Parameter self, Control c, bool preserveFrame0Value=True)
        ReplaceController(Parameter self, Control c)
        """
        return _MaxPlus.Parameter_ReplaceController(self, *args)

    Name = _swig_property(GetName)
    Type = _swig_property(GetParamType)
    TabIndex = _swig_property(GetTabIndex)
    IsArrayParameter = _swig_property(GetIsArrayParameter)
    IsObsolete = _swig_property(GetIsObsolete)
    IsAnimatable = _swig_property(GetIsAnimatable)
    IsReadOnly = _swig_property(GetIsReadOnly)
    IsArrayData = _swig_property(GetIsArrayData)
    Value = _swig_property(GetValue, SetValue)
    Controller = _swig_property(GetController, SetController)

    __swig_destroy__ = _MaxPlus.delete_Parameter
    __del__ = lambda self : None;
Parameter_swigregister = _MaxPlus.Parameter_swigregister
Parameter_swigregister(Parameter)

def Parameter__CastFrom(*args):
  """Parameter__CastFrom(ArrayParameter p) -> Parameter"""
  return _MaxPlus.Parameter__CastFrom(*args)

class ArrayParameter(object):
    """Represents an array parameter in a IParamBlock2."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(Parameter p) -> ArrayParameter"""
        return _MaxPlus.ArrayParameter__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def GetName(self):
        """GetName(ArrayParameter self) -> WStr"""
        return _MaxPlus.ArrayParameter_GetName(self)

    def GetParamType(self):
        """GetParamType(ArrayParameter self) -> int"""
        return _MaxPlus.ArrayParameter_GetParamType(self)

    def GetIsArrayParameter(self):
        """GetIsArrayParameter(ArrayParameter self) -> bool"""
        return _MaxPlus.ArrayParameter_GetIsArrayParameter(self)

    def GetIsObsolete(self):
        """GetIsObsolete(ArrayParameter self) -> bool"""
        return _MaxPlus.ArrayParameter_GetIsObsolete(self)

    def GetIsAnimatable(self):
        """GetIsAnimatable(ArrayParameter self) -> bool"""
        return _MaxPlus.ArrayParameter_GetIsAnimatable(self)

    def GetIsReadOnly(self):
        """GetIsReadOnly(ArrayParameter self) -> bool"""
        return _MaxPlus.ArrayParameter_GetIsReadOnly(self)

    def GetIsResizable(self):
        """GetIsResizable(ArrayParameter self) -> bool"""
        return _MaxPlus.ArrayParameter_GetIsResizable(self)

    def GetIsArrayData(self):
        """GetIsArrayData(ArrayParameter self) -> bool"""
        return _MaxPlus.ArrayParameter_GetIsArrayData(self)

    def GetController(self, *args):
        """GetController(ArrayParameter self, int tabIndex) -> Control"""
        return _MaxPlus.ArrayParameter_GetController(self, *args)

    def SetController(self, *args):
        """
        SetController(ArrayParameter self, Control c, int tabIndex, bool preserveFrame0Value=True)
        SetController(ArrayParameter self, Control c, int tabIndex)
        """
        return _MaxPlus.ArrayParameter_SetController(self, *args)

    def ReplaceController(self, *args):
        """
        ReplaceController(ArrayParameter self, Control c, int tabIndex, bool preserveFrame0Value=True)
        ReplaceController(ArrayParameter self, Control c, int tabIndex)
        """
        return _MaxPlus.ArrayParameter_ReplaceController(self, *args)

    def GetValue(self, *args):
        """
        GetValue(ArrayParameter self, TimeValue t, int tabIndex) -> FPValue
        GetValue(ArrayParameter self, TimeValue t=Autodesk::Max::Now()) -> FPValue
        GetValue(ArrayParameter self) -> FPValue
        """
        return _MaxPlus.ArrayParameter_GetValue(self, *args)

    def SetValue(self, *args):
        """
        SetValue(ArrayParameter self, FPValue x, TimeValue t, int tabIndex)
        SetValue(ArrayParameter self, FPValue x, TimeValue t=Autodesk::Max::Now())
        SetValue(ArrayParameter self, FPValue x)
        """
        return _MaxPlus.ArrayParameter_SetValue(self, *args)

    def Count(self):
        """Count(ArrayParameter self) -> int"""
        return _MaxPlus.ArrayParameter_Count(self)

    def GetItem(self, *args):
        """GetItem(ArrayParameter self, int tabIndex) -> Parameter"""
        return _MaxPlus.ArrayParameter_GetItem(self, *args)

    def __len__(self):
        """__len__(ArrayParameter self) -> int"""
        return _MaxPlus.ArrayParameter___len__(self)

    def __getitem__(self, *args):
        """__getitem__(ArrayParameter self, int n) -> Parameter"""
        return _MaxPlus.ArrayParameter___getitem__(self, *args)

    def SetCount(self, *args):
        """SetCount(ArrayParameter self, int count)"""
        return _MaxPlus.ArrayParameter_SetCount(self, *args)

    def Append(self, *args):
        """Append(ArrayParameter self, FPValue x) -> int"""
        return _MaxPlus.ArrayParameter_Append(self, *args)

    def Insert(self, *args):
        """Insert(ArrayParameter self, FPValue x, int tabIndex) -> int"""
        return _MaxPlus.ArrayParameter_Insert(self, *args)

    def Delete(self, *args):
        """Delete(ArrayParameter self, int tabIndex, int count) -> int"""
        return _MaxPlus.ArrayParameter_Delete(self, *args)

    Name = _swig_property(GetName)
    Type = _swig_property(GetParamType)
    IsArrayParameter = _swig_property(GetIsArrayParameter)
    IsObsolete = _swig_property(GetIsObsolete)
    IsAnimatable = _swig_property(GetIsAnimatable)
    IsReadOnly = _swig_property(GetIsReadOnly)
    IsResizable = _swig_property(GetIsResizable)
    IsArrayData = _swig_property(GetIsArrayData)
    Value = _swig_property(GetValue, SetValue)
    NumItems = _swig_property(Count)
    Items = _swig_property(lambda self: (self.GetItem(i) for i in xrange(self.Count())))

    __swig_destroy__ = _MaxPlus.delete_ArrayParameter
    __del__ = lambda self : None;
ArrayParameter_swigregister = _MaxPlus.ArrayParameter_swigregister
ArrayParameter_swigregister(ArrayParameter)

def ArrayParameter__CastFrom(*args):
  """ArrayParameter__CastFrom(Parameter p) -> ArrayParameter"""
  return _MaxPlus.ArrayParameter__CastFrom(*args)

class ParameterBlock(object):
    """Provides uniform access to an IParamBlock or IParamBlock2"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Count(self):
        """Count(ParameterBlock self) -> int"""
        return _MaxPlus.ParameterBlock_Count(self)

    def GetParamByName(self, *args):
        """GetParamByName(ParameterBlock self, wchar_t const * name) -> Parameter"""
        return _MaxPlus.ParameterBlock_GetParamByName(self, *args)

    def GetItem(self, *args):
        """GetItem(ParameterBlock self, int n) -> Parameter"""
        return _MaxPlus.ParameterBlock_GetItem(self, *args)

    def __len__(self):
        """__len__(ParameterBlock self) -> int"""
        return _MaxPlus.ParameterBlock___len__(self)

    def __getitem__(self, *args):
        """__getitem__(ParameterBlock self, int n) -> Parameter"""
        return _MaxPlus.ParameterBlock___getitem__(self, *args)

    def __getattr__(self, *args):
        """__getattr__(ParameterBlock self, wchar_t const * name) -> Parameter"""
        return _MaxPlus.ParameterBlock___getattr__(self, *args)

    def __setattr__(self, *args):
        """__setattr__(ParameterBlock self, wchar_t const * arg2, bool arg3)"""
        return _MaxPlus.ParameterBlock___setattr__(self, *args)

    NumParameters = _swig_property(Count)
    Parameters = _swig_property(lambda self: (self.GetItem(i) for i in xrange(self.Count())))

    __swig_destroy__ = _MaxPlus.delete_ParameterBlock
    __del__ = lambda self : None;
ParameterBlock_swigregister = _MaxPlus.ParameterBlock_swigregister
ParameterBlock_swigregister(ParameterBlock)

class ICustomControl(InterfaceServer):
    """The base class of 3ds Max UI controls."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ICustomControl"""
        return _MaxPlus.ICustomControl__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ICustomControl self, Wrapper w) -> bool"""
        return _MaxPlus.ICustomControl___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ICustomControl self, Wrapper w) -> bool"""
        return _MaxPlus.ICustomControl___ne__(self, *args)

    def GetHwnd(self):
        """GetHwnd(ICustomControl self) -> HWND"""
        return _MaxPlus.ICustomControl_GetHwnd(self)

    def Enable(self, onOff=True):
        """
        Enable(ICustomControl self, bool onOff=True)
        Enable(ICustomControl self)
        """
        return _MaxPlus.ICustomControl_Enable(self, onOff)

    def IsEnabled(self):
        """IsEnabled(ICustomControl self) -> bool"""
        return _MaxPlus.ICustomControl_IsEnabled(self)

    Enabled = _swig_property(IsEnabled, Enable)

    Hwnd = _swig_property(GetHwnd)


    __swig_destroy__ = _MaxPlus.delete_ICustomControl
    __del__ = lambda self : None;
ICustomControl_swigregister = _MaxPlus.ICustomControl_swigregister
ICustomControl_swigregister(ICustomControl)

def ICustomControl__CastFrom(*args):
  """ICustomControl__CastFrom(InterfaceServer b) -> ICustomControl"""
  return _MaxPlus.ICustomControl__CastFrom(*args)

class CUIFrame(ICustomControl):
    """Proxy of C++ Autodesk::Max::CUIFrame class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> CUIFrame"""
        return _MaxPlus.CUIFrame__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(CUIFrame self, Wrapper w) -> bool"""
        return _MaxPlus.CUIFrame___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(CUIFrame self, Wrapper w) -> bool"""
        return _MaxPlus.CUIFrame___ne__(self, *args)

    __swig_destroy__ = _MaxPlus.delete_CUIFrame
    __del__ = lambda self : None;
    def Create(*args):
        """Create(wchar_t const * title, int x, int y, int cx, int cy) -> CUIFrame"""
        return _MaxPlus.CUIFrame_Create(*args)

    Create = staticmethod(Create)
    def SetPosType(self, *args):
        """SetPosType(CUIFrame self, DWORD t)"""
        return _MaxPlus.CUIFrame_SetPosType(self, *args)

    def GetPosType(self):
        """GetPosType(CUIFrame self) -> DWORD"""
        return _MaxPlus.CUIFrame_GetPosType(self)

    def IsFloating(self):
        """IsFloating(CUIFrame self) -> bool"""
        return _MaxPlus.CUIFrame_IsFloating(self)

    def Hide(self, *args):
        """Hide(CUIFrame self, bool b)"""
        return _MaxPlus.CUIFrame_Hide(self, *args)

    def IsHidden(self):
        """IsHidden(CUIFrame self) -> bool"""
        return _MaxPlus.CUIFrame_IsHidden(self)

    def SetPosition(self, *args):
        """SetPosition(CUIFrame self, DWORD pos)"""
        return _MaxPlus.CUIFrame_SetPosition(self, *args)

    def GetPosition(self):
        """GetPosition(CUIFrame self) -> DWORD"""
        return _MaxPlus.CUIFrame_GetPosition(self)

    def SetContentType(self, *args):
        """SetContentType(CUIFrame self, DWORD t)"""
        return _MaxPlus.CUIFrame_SetContentType(self, *args)

    def GetContentType(self):
        """GetContentType(CUIFrame self) -> DWORD"""
        return _MaxPlus.CUIFrame_GetContentType(self)

    def SetContentHandle(self, *args):
        """SetContentHandle(CUIFrame self, HWND hContent)"""
        return _MaxPlus.CUIFrame_SetContentHandle(self, *args)

    def GetContentHandle(self):
        """GetContentHandle(CUIFrame self) -> HWND"""
        return _MaxPlus.CUIFrame_GetContentHandle(self)

    def SetName(self, *args):
        """SetName(CUIFrame self, wchar_t const * name)"""
        return _MaxPlus.CUIFrame_SetName(self, *args)

    def GetName(self):
        """GetName(CUIFrame self) -> wchar_t const *"""
        return _MaxPlus.CUIFrame_GetName(self)

    def Dock(self, *args):
        """
        Dock(CUIFrame self, int panel, bool init=False)
        Dock(CUIFrame self, int panel)
        """
        return _MaxPlus.CUIFrame_Dock(self, *args)

    def Float(self, init=False):
        """
        Float(CUIFrame self, bool init=False)
        Float(CUIFrame self)
        """
        return _MaxPlus.CUIFrame_Float(self, init)

    def Minimize(self, init=False):
        """
        Minimize(CUIFrame self, bool init=False)
        Minimize(CUIFrame self)
        """
        return _MaxPlus.CUIFrame_Minimize(self, init)

    Name = _swig_property(GetName, SetName)
    Position = _swig_property(GetPosition, SetPosition)
    ContentType = _swig_property(GetContentType, SetContentType)

    ContentHandle = _swig_property(GetContentHandle, SetContentHandle)

    PosType = _swig_property(GetPosType, SetPosType)
    Hidden = _swig_property(IsHidden, Hide)

CUIFrame_swigregister = _MaxPlus.CUIFrame_swigregister
CUIFrame_swigregister(CUIFrame)

def CUIFrame__CastFrom(*args):
  """CUIFrame__CastFrom(InterfaceServer b) -> CUIFrame"""
  return _MaxPlus.CUIFrame__CastFrom(*args)

def CUIFrame_Create(*args):
  """CUIFrame_Create(wchar_t const * title, int x, int y, int cx, int cy) -> CUIFrame"""
  return _MaxPlus.CUIFrame_Create(*args)

class CUIFrameMgr(object):
    """Utility functions for working with the CUI system."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetCUIDirectory():
        """GetCUIDirectory() -> wchar_t const *"""
        return _MaxPlus.CUIFrameMgr_GetCUIDirectory()

    GetCUIDirectory = staticmethod(GetCUIDirectory)
    def RecalcLayout(entireApp=True):
        """
        RecalcLayout(int entireApp=True)
        RecalcLayout()
        """
        return _MaxPlus.CUIFrameMgr_RecalcLayout(entireApp)

    RecalcLayout = staticmethod(RecalcLayout)
    def DrawCUIWindows(*args):
        """
        DrawCUIWindows(int panels=CUI_ALL_PANELS)
        DrawCUIWindows()
        """
        return _MaxPlus.CUIFrameMgr_DrawCUIWindows(*args)

    DrawCUIWindows = staticmethod(DrawCUIWindows)
    def SetMacroButtonStates(*args):
        """SetMacroButtonStates(bool force)"""
        return _MaxPlus.CUIFrameMgr_SetMacroButtonStates(*args)

    SetMacroButtonStates = staticmethod(SetMacroButtonStates)
    def ResetIconImages():
        """ResetIconImages()"""
        return _MaxPlus.CUIFrameMgr_ResetIconImages()

    ResetIconImages = staticmethod(ResetIconImages)
    def GetCount():
        """GetCount() -> int"""
        return _MaxPlus.CUIFrameMgr_GetCount()

    GetCount = staticmethod(GetCount)
    def GetFrame(*args):
        """
        GetFrame(int i) -> CUIFrame
        GetFrame(wchar_t const * name) -> CUIFrame
        """
        return _MaxPlus.CUIFrameMgr_GetFrame(*args)

    GetFrame = staticmethod(GetFrame)
    def SetConfigFile(*args):
        """SetConfigFile(wchar_t const * cfg) -> int"""
        return _MaxPlus.CUIFrameMgr_SetConfigFile(*args)

    SetConfigFile = staticmethod(SetConfigFile)
    def GetConfigFile():
        """GetConfigFile() -> wchar_t const *"""
        return _MaxPlus.CUIFrameMgr_GetConfigFile()

    GetConfigFile = staticmethod(GetConfigFile)
    Frames = _static_generator_property(GetCount,GetFrame)

    __swig_destroy__ = _MaxPlus.delete_CUIFrameMgr
    __del__ = lambda self : None;
CUIFrameMgr_swigregister = _MaxPlus.CUIFrameMgr_swigregister
CUIFrameMgr_swigregister(CUIFrameMgr)

def CUIFrameMgr_GetCUIDirectory():
  """CUIFrameMgr_GetCUIDirectory() -> wchar_t const *"""
  return _MaxPlus.CUIFrameMgr_GetCUIDirectory()

def CUIFrameMgr_RecalcLayout(entireApp=True):
  """
    RecalcLayout(int entireApp=True)
    CUIFrameMgr_RecalcLayout()
    """
  return _MaxPlus.CUIFrameMgr_RecalcLayout(entireApp)

def CUIFrameMgr_DrawCUIWindows(*args):
  """
    DrawCUIWindows(int panels=CUI_ALL_PANELS)
    CUIFrameMgr_DrawCUIWindows()
    """
  return _MaxPlus.CUIFrameMgr_DrawCUIWindows(*args)

def CUIFrameMgr_SetMacroButtonStates(*args):
  """CUIFrameMgr_SetMacroButtonStates(bool force)"""
  return _MaxPlus.CUIFrameMgr_SetMacroButtonStates(*args)

def CUIFrameMgr_ResetIconImages():
  """CUIFrameMgr_ResetIconImages()"""
  return _MaxPlus.CUIFrameMgr_ResetIconImages()

def CUIFrameMgr_GetCount():
  """CUIFrameMgr_GetCount() -> int"""
  return _MaxPlus.CUIFrameMgr_GetCount()

def CUIFrameMgr_GetFrame(*args):
  """
    GetFrame(int i) -> CUIFrame
    CUIFrameMgr_GetFrame(wchar_t const * name) -> CUIFrame
    """
  return _MaxPlus.CUIFrameMgr_GetFrame(*args)

def CUIFrameMgr_SetConfigFile(*args):
  """CUIFrameMgr_SetConfigFile(wchar_t const * cfg) -> int"""
  return _MaxPlus.CUIFrameMgr_SetConfigFile(*args)

def CUIFrameMgr_GetConfigFile():
  """CUIFrameMgr_GetConfigFile() -> wchar_t const *"""
  return _MaxPlus.CUIFrameMgr_GetConfigFile()

class ContainerObject(FPInterface):
    """Access to container object functionality."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NoAccess = _MaxPlus.ContainerObject_NoAccess
    OnlyEditInPlace = _MaxPlus.ContainerObject_OnlyEditInPlace
    OnlyAddNewObjects = _MaxPlus.ContainerObject_OnlyAddNewObjects
    AnythingUnlocked = _MaxPlus.ContainerObject_AnythingUnlocked
    LockAllMaterials = _MaxPlus.ContainerObject_LockAllMaterials
    LockAllModifiers = _MaxPlus.ContainerObject_LockAllModifiers
    LockAllTransforms = _MaxPlus.ContainerObject_LockAllTransforms
    LockAllObjects = _MaxPlus.ContainerObject_LockAllObjects
    PROXYTYPE_NONE = _MaxPlus.ContainerObject_PROXYTYPE_NONE
    PROXYTYPE_ALTERNATE = _MaxPlus.ContainerObject_PROXYTYPE_ALTERNATE
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ContainerObject"""
        return _MaxPlus.ContainerObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ContainerObject self, Wrapper w) -> bool"""
        return _MaxPlus.ContainerObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ContainerObject self, Wrapper w) -> bool"""
        return _MaxPlus.ContainerObject___ne__(self, *args)

    def GetContentNodes(self, *args):
        """GetContentNodes(ContainerObject self, bool nestedContainerNodes, INodeTab contentNodes)"""
        return _MaxPlus.ContainerObject_GetContentNodes(self, *args)

    def IsNodeInContent(self, *args):
        """IsNodeInContent(ContainerObject self, INode in_node, bool nestedContainerNodes) -> bool"""
        return _MaxPlus.ContainerObject_IsNodeInContent(self, *args)

    def IsNodeInInheritedContent(self, *args):
        """IsNodeInInheritedContent(ContainerObject self, INode in_node, bool nestedContainerNodes) -> bool"""
        return _MaxPlus.ContainerObject_IsNodeInInheritedContent(self, *args)

    def AddNodeToContent(self, *args):
        """AddNodeToContent(ContainerObject self, INode in_node) -> bool"""
        return _MaxPlus.ContainerObject_AddNodeToContent(self, *args)

    def AddNodesToContent(self, *args):
        """AddNodesToContent(ContainerObject self, INodeTab in_nodeTab) -> bool"""
        return _MaxPlus.ContainerObject_AddNodesToContent(self, *args)

    def RemoveNodeFromContent(self, *args):
        """
        RemoveNodeFromContent(ContainerObject self, INode in_node, bool detach=True) -> bool
        RemoveNodeFromContent(ContainerObject self, INode in_node) -> bool
        """
        return _MaxPlus.ContainerObject_RemoveNodeFromContent(self, *args)

    def GetLocalDefinitionFileName(self):
        """GetLocalDefinitionFileName(ContainerObject self) -> Asset"""
        return _MaxPlus.ContainerObject_GetLocalDefinitionFileName(self)

    def SetLocalDefinitionFileName(self, *args):
        """SetLocalDefinitionFileName(ContainerObject self, Asset val) -> bool"""
        return _MaxPlus.ContainerObject_SetLocalDefinitionFileName(self, *args)

    def GetSourceDefinitionFileName(self):
        """GetSourceDefinitionFileName(ContainerObject self) -> Asset"""
        return _MaxPlus.ContainerObject_GetSourceDefinitionFileName(self)

    def SetSourceDefinitionFileName(self, *args):
        """SetSourceDefinitionFileName(ContainerObject self, Asset val) -> bool"""
        return _MaxPlus.ContainerObject_SetSourceDefinitionFileName(self, *args)

    def SaveContainer(self, newFileName=False):
        """
        SaveContainer(ContainerObject self, bool newFileName=False) -> bool
        SaveContainer(ContainerObject self) -> bool
        """
        return _MaxPlus.ContainerObject_SaveContainer(self, newFileName)

    def UpdateContainer(self):
        """UpdateContainer(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_UpdateContainer(self)

    def UnloadContainer(self):
        """UnloadContainer(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_UnloadContainer(self)

    def LoadContainer(self):
        """LoadContainer(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_LoadContainer(self)

    def ReloadContainer(self):
        """ReloadContainer(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_ReloadContainer(self)

    def MergeSource(self):
        """MergeSource(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_MergeSource(self)

    def MakeUnique(self):
        """MakeUnique(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_MakeUnique(self)

    def IsInherited(self):
        """IsInherited(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_IsInherited(self)

    def IsOpen(self):
        """IsOpen(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_IsOpen(self)

    def SetOpen(self, *args):
        """SetOpen(ContainerObject self, bool isOpen) -> bool"""
        return _MaxPlus.ContainerObject_SetOpen(self, *args)

    def IsContainerOpenableOrClosable(self):
        """IsContainerOpenableOrClosable(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_IsContainerOpenableOrClosable(self)

    def IsUnloaded(self):
        """IsUnloaded(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_IsUnloaded(self)

    def IsUnique(self):
        """IsUnique(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_IsUnique(self)

    def AllowInPlaceEdit(self, *args):
        """AllowInPlaceEdit(ContainerObject self, bool allowEdit)"""
        return _MaxPlus.ContainerObject_AllowInPlaceEdit(self, *args)

    def GetAllowInPlaceEdit(self):
        """GetAllowInPlaceEdit(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_GetAllowInPlaceEdit(self)

    def SetEditInPlace(self, *args):
        """SetEditInPlace(ContainerObject self, bool edit)"""
        return _MaxPlus.ContainerObject_SetEditInPlace(self, *args)

    def IsInPlaceEditing(self):
        """IsInPlaceEditing(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_IsInPlaceEditing(self)

    def CanEditInPlace(self):
        """CanEditInPlace(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_CanEditInPlace(self)

    def SetAutoUpdateClosed(self, *args):
        """SetAutoUpdateClosed(ContainerObject self, bool setAutoUpdate)"""
        return _MaxPlus.ContainerObject_SetAutoUpdateClosed(self, *args)

    def AutoUpdateClosed(self):
        """AutoUpdateClosed(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_AutoUpdateClosed(self)

    def SetLabelDisplay(self, *args):
        """SetLabelDisplay(ContainerObject self, bool display)"""
        return _MaxPlus.ContainerObject_SetLabelDisplay(self, *args)

    def GetLabelDisplay(self):
        """GetLabelDisplay(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_GetLabelDisplay(self)

    def UseContentBoundingBox(self, *args):
        """UseContentBoundingBox(ContainerObject self, bool useContent)"""
        return _MaxPlus.ContainerObject_UseContentBoundingBox(self, *args)

    def IsUsingContentBoundingBox(self):
        """IsUsingContentBoundingBox(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_IsUsingContentBoundingBox(self)

    def SetOverrideNodeProperties(self, *args):
        """SetOverrideNodeProperties(ContainerObject self, bool setOverride)"""
        return _MaxPlus.ContainerObject_SetOverrideNodeProperties(self, *args)

    def OverrideNodeProperties(self):
        """OverrideNodeProperties(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_OverrideNodeProperties(self)

    def SetSize(self, *args):
        """
        SetSize(ContainerObject self, float size, TimeValue t=0)
        SetSize(ContainerObject self, float size)
        """
        return _MaxPlus.ContainerObject_SetSize(self, *args)

    def GetSize(self, t=0):
        """
        GetSize(ContainerObject self, TimeValue t=0) -> float
        GetSize(ContainerObject self) -> float
        """
        return _MaxPlus.ContainerObject_GetSize(self, t)

    def GetContainerNode(self):
        """GetContainerNode(ContainerObject self) -> INode"""
        return _MaxPlus.ContainerObject_GetContainerNode(self)

    def SetAccessType(self, *args):
        """SetAccessType(ContainerObject self, Autodesk::Max::ContainerObject::AccessType accessType)"""
        return _MaxPlus.ContainerObject_SetAccessType(self, *args)

    def GetAccessType(self):
        """GetAccessType(ContainerObject self) -> Autodesk::Max::ContainerObject::AccessType"""
        return _MaxPlus.ContainerObject_GetAccessType(self)

    def InheritedAccessType(self):
        """InheritedAccessType(ContainerObject self) -> Autodesk::Max::ContainerObject::AccessType"""
        return _MaxPlus.ContainerObject_InheritedAccessType(self)

    def SetLockedContents(self, *args):
        """SetLockedContents(ContainerObject self, Autodesk::Max::ContainerObject::LockedContents content, bool clear)"""
        return _MaxPlus.ContainerObject_SetLockedContents(self, *args)

    def ClearLockedContents(self):
        """ClearLockedContents(ContainerObject self)"""
        return _MaxPlus.ContainerObject_ClearLockedContents(self)

    def IsLockedContents(self, *args):
        """IsLockedContents(ContainerObject self, Autodesk::Max::ContainerObject::LockedContents content) -> bool"""
        return _MaxPlus.ContainerObject_IsLockedContents(self, *args)

    def GetProxyType(self):
        """GetProxyType(ContainerObject self) -> Autodesk::Max::ContainerObject::ProxyType"""
        return _MaxPlus.ContainerObject_GetProxyType(self)

    def SetProxyType(self, *args):
        """SetProxyType(ContainerObject self, Autodesk::Max::ContainerObject::ProxyType type)"""
        return _MaxPlus.ContainerObject_SetProxyType(self, *args)

    def GetAlternateDefinitionCount(self):
        """GetAlternateDefinitionCount(ContainerObject self) -> int"""
        return _MaxPlus.ContainerObject_GetAlternateDefinitionCount(self)

    def GetAlternateDefinition(self, *args):
        """GetAlternateDefinition(ContainerObject self, int defIndex) -> Asset"""
        return _MaxPlus.ContainerObject_GetAlternateDefinition(self, *args)

    def SetAlternateDefinition(self, *args):
        """SetAlternateDefinition(ContainerObject self, int defIndex, Asset val) -> bool"""
        return _MaxPlus.ContainerObject_SetAlternateDefinition(self, *args)

    def AppendAlternateDefinition(self, *args):
        """AppendAlternateDefinition(ContainerObject self, Asset val) -> bool"""
        return _MaxPlus.ContainerObject_AppendAlternateDefinition(self, *args)

    def RemoveAlternateDefinition(self, *args):
        """RemoveAlternateDefinition(ContainerObject self, int defIndex) -> bool"""
        return _MaxPlus.ContainerObject_RemoveAlternateDefinition(self, *args)

    def GetCurrentAlternateDefinitionIndex(self):
        """GetCurrentAlternateDefinitionIndex(ContainerObject self) -> int"""
        return _MaxPlus.ContainerObject_GetCurrentAlternateDefinitionIndex(self)

    def SetCurrentAlternateDefinitionIndex(self, *args):
        """SetCurrentAlternateDefinitionIndex(ContainerObject self, int defIndex)"""
        return _MaxPlus.ContainerObject_SetCurrentAlternateDefinitionIndex(self, *args)

    def GetCurrentAlternateDefinition(self):
        """GetCurrentAlternateDefinition(ContainerObject self) -> Asset"""
        return _MaxPlus.ContainerObject_GetCurrentAlternateDefinition(self)

    def SaveContainerAsVersion(self, *args):
        """SaveContainerAsVersion(ContainerObject self, bool newFileName, unsigned long saveAsVersion) -> bool"""
        return _MaxPlus.ContainerObject_SaveContainerAsVersion(self, *args)

    def GetStatusString(self):
        """GetStatusString(ContainerObject self) -> wchar_t *"""
        return _MaxPlus.ContainerObject_GetStatusString(self)

    def SetStatusDisplay(self, *args):
        """SetStatusDisplay(ContainerObject self, bool status)"""
        return _MaxPlus.ContainerObject_SetStatusDisplay(self, *args)

    def GetStatusDisplay(self):
        """GetStatusDisplay(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_GetStatusDisplay(self)

    def GetEditingUser(self):
        """GetEditingUser(ContainerObject self) -> wchar_t const *"""
        return _MaxPlus.ContainerObject_GetEditingUser(self)

    def IsUpdateNeeded(self):
        """IsUpdateNeeded(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_IsUpdateNeeded(self)

    def IsInheritedClosed(self):
        """IsInheritedClosed(ContainerObject self) -> bool"""
        return _MaxPlus.ContainerObject_IsInheritedClosed(self)

    __swig_destroy__ = _MaxPlus.delete_ContainerObject
    __del__ = lambda self : None;
ContainerObject_swigregister = _MaxPlus.ContainerObject_swigregister
ContainerObject_swigregister(ContainerObject)

def ContainerObject__CastFrom(*args):
  """ContainerObject__CastFrom(InterfaceServer b) -> ContainerObject"""
  return _MaxPlus.ContainerObject__CastFrom(*args)

class ContainerManager(object):
    """Interface to global container functionality."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetContainer(*args):
        """GetContainer(Animatable anim) -> ContainerObject"""
        return _MaxPlus.ContainerManager_GetContainer(*args)

    GetContainer = staticmethod(GetContainer)
    def CreateContainer(*args):
        """
        CreateContainer(INode content) -> INode
        CreateContainer(INodeTab contentNodes) -> INode
        """
        return _MaxPlus.ContainerManager_CreateContainer(*args)

    CreateContainer = staticmethod(CreateContainer)
    def CreateInheritedContainer(*args):
        """CreateInheritedContainer(Asset asset) -> INode"""
        return _MaxPlus.ContainerManager_CreateInheritedContainer(*args)

    CreateInheritedContainer = staticmethod(CreateInheritedContainer)
    def AsContainer(*args):
        """AsContainer(INode node) -> ContainerObject"""
        return _MaxPlus.ContainerManager_AsContainer(*args)

    AsContainer = staticmethod(AsContainer)
    def AsContainerNode(*args):
        """AsContainerNode(INode node) -> ContainerObject"""
        return _MaxPlus.ContainerManager_AsContainerNode(*args)

    AsContainerNode = staticmethod(AsContainerNode)
    def IsInContainer(*args):
        """IsInContainer(INode node) -> bool"""
        return _MaxPlus.ContainerManager_IsInContainer(*args)

    IsInContainer = staticmethod(IsInContainer)
    def IsContainerNode(*args):
        """IsContainerNode(INode node) -> bool"""
        return _MaxPlus.ContainerManager_IsContainerNode(*args)

    IsContainerNode = staticmethod(IsContainerNode)
    __swig_destroy__ = _MaxPlus.delete_ContainerManager
    __del__ = lambda self : None;
ContainerManager_swigregister = _MaxPlus.ContainerManager_swigregister
ContainerManager_swigregister(ContainerManager)

def ContainerManager_GetContainer(*args):
  """ContainerManager_GetContainer(Animatable anim) -> ContainerObject"""
  return _MaxPlus.ContainerManager_GetContainer(*args)

def ContainerManager_CreateContainer(*args):
  """
    CreateContainer(INode content) -> INode
    ContainerManager_CreateContainer(INodeTab contentNodes) -> INode
    """
  return _MaxPlus.ContainerManager_CreateContainer(*args)

def ContainerManager_CreateInheritedContainer(*args):
  """ContainerManager_CreateInheritedContainer(Asset asset) -> INode"""
  return _MaxPlus.ContainerManager_CreateInheritedContainer(*args)

def ContainerManager_AsContainer(*args):
  """ContainerManager_AsContainer(INode node) -> ContainerObject"""
  return _MaxPlus.ContainerManager_AsContainer(*args)

def ContainerManager_AsContainerNode(*args):
  """ContainerManager_AsContainerNode(INode node) -> ContainerObject"""
  return _MaxPlus.ContainerManager_AsContainerNode(*args)

def ContainerManager_IsInContainer(*args):
  """ContainerManager_IsInContainer(INode node) -> bool"""
  return _MaxPlus.ContainerManager_IsInContainer(*args)

def ContainerManager_IsContainerNode(*args):
  """ContainerManager_IsContainerNode(INode node) -> bool"""
  return _MaxPlus.ContainerManager_IsContainerNode(*args)

class ContainerPreferences(object):
    """Provides access to container preferences."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Always = _MaxPlus.ContainerPreferences_Always
    Never = _MaxPlus.ContainerPreferences_Never
    PerContainer = _MaxPlus.ContainerPreferences_PerContainer
    def SaveAsPreviousAccessType(self):
        """SaveAsPreviousAccessType(ContainerPreferences self) -> Autodesk::Max::ContainerObject::AccessType"""
        return _MaxPlus.ContainerPreferences_SaveAsPreviousAccessType(self)

    def SetSaveAsPreviousAccessType(self, *args):
        """SetSaveAsPreviousAccessType(ContainerPreferences self, Autodesk::Max::ContainerObject::AccessType accessType)"""
        return _MaxPlus.ContainerPreferences_SetSaveAsPreviousAccessType(self, *args)

    def DisplayStatus(self):
        """DisplayStatus(ContainerPreferences self) -> Autodesk::Max::ContainerPreferences::DisplayStatusOverride"""
        return _MaxPlus.ContainerPreferences_DisplayStatus(self)

    def SetDisplayStatus(self, *args):
        """SetDisplayStatus(ContainerPreferences self, Autodesk::Max::ContainerPreferences::DisplayStatusOverride displayStatus)"""
        return _MaxPlus.ContainerPreferences_SetDisplayStatus(self, *args)

    def NoUpdateCheck(self):
        """NoUpdateCheck(ContainerPreferences self) -> bool"""
        return _MaxPlus.ContainerPreferences_NoUpdateCheck(self)

    def SetNoUpdateCheck(self, *args):
        """SetNoUpdateCheck(ContainerPreferences self, bool noUpdateCheck)"""
        return _MaxPlus.ContainerPreferences_SetNoUpdateCheck(self, *args)

    def UpdateOnLoad(self):
        """UpdateOnLoad(ContainerPreferences self) -> bool"""
        return _MaxPlus.ContainerPreferences_UpdateOnLoad(self)

    def SetUpdateOnLoad(self, *args):
        """SetUpdateOnLoad(ContainerPreferences self, bool updateOnLoad)"""
        return _MaxPlus.ContainerPreferences_SetUpdateOnLoad(self, *args)

    def UpdateOnReload(self):
        """UpdateOnReload(ContainerPreferences self) -> bool"""
        return _MaxPlus.ContainerPreferences_UpdateOnReload(self)

    def SetUpdateOnReload(self, *args):
        """SetUpdateOnReload(ContainerPreferences self, bool updateOnReload)"""
        return _MaxPlus.ContainerPreferences_SetUpdateOnReload(self, *args)

    def StatusUpdateInterval(self):
        """StatusUpdateInterval(ContainerPreferences self) -> float"""
        return _MaxPlus.ContainerPreferences_StatusUpdateInterval(self)

    def SetStatusUpdateInterval(self, *args):
        """SetStatusUpdateInterval(ContainerPreferences self, float statusInterval)"""
        return _MaxPlus.ContainerPreferences_SetStatusUpdateInterval(self, *args)

    __swig_destroy__ = _MaxPlus.delete_ContainerPreferences
    __del__ = lambda self : None;
ContainerPreferences_swigregister = _MaxPlus.ContainerPreferences_swigregister
ContainerPreferences_swigregister(ContainerPreferences)

class Layer(ReferenceTarget):
    """An interface to the Layers functionality. Layers override some properties of nodes."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> Layer"""
        return _MaxPlus.Layer__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(Layer self, Wrapper w) -> bool"""
        return _MaxPlus.Layer___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(Layer self, Wrapper w) -> bool"""
        return _MaxPlus.Layer___ne__(self, *args)

    def AddToLayer(self, *args):
        """AddToLayer(Layer self, INode rtarg) -> bool"""
        return _MaxPlus.Layer_AddToLayer(self, *args)

    def DeleteFromLayer(self, *args):
        """DeleteFromLayer(Layer self, INode rtarg) -> bool"""
        return _MaxPlus.Layer_DeleteFromLayer(self, *args)

    def SetName(self, *args):
        """SetName(Layer self, WStr name)"""
        return _MaxPlus.Layer_SetName(self, *args)

    def GetName(self):
        """GetName(Layer self) -> WStr"""
        return _MaxPlus.Layer_GetName(self)

    def SetWireColor(self, *args):
        """SetWireColor(Layer self, DWORD newcol)"""
        return _MaxPlus.Layer_SetWireColor(self, *args)

    def GetWireColor(self):
        """GetWireColor(Layer self) -> DWORD"""
        return _MaxPlus.Layer_GetWireColor(self)

    def Hide(self, *args):
        """Hide(Layer self, bool onOff)"""
        return _MaxPlus.Layer_Hide(self, *args)

    def IsHidden(self):
        """IsHidden(Layer self) -> bool"""
        return _MaxPlus.Layer_IsHidden(self)

    def Freeze(self, *args):
        """Freeze(Layer self, bool onOff)"""
        return _MaxPlus.Layer_Freeze(self, *args)

    def IsFrozen(self):
        """IsFrozen(Layer self) -> bool"""
        return _MaxPlus.Layer_IsFrozen(self)

    def SetRenderable(self, *args):
        """SetRenderable(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetRenderable(self, *args)

    def Renderable(self):
        """Renderable(Layer self) -> bool"""
        return _MaxPlus.Layer_Renderable(self)

    def SetPrimaryVisibility(self, *args):
        """SetPrimaryVisibility(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetPrimaryVisibility(self, *args)

    def GetPrimaryVisibility(self):
        """GetPrimaryVisibility(Layer self) -> bool"""
        return _MaxPlus.Layer_GetPrimaryVisibility(self)

    def SetSecondaryVisibility(self, *args):
        """SetSecondaryVisibility(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetSecondaryVisibility(self, *args)

    def GetSecondaryVisibility(self):
        """GetSecondaryVisibility(Layer self) -> bool"""
        return _MaxPlus.Layer_GetSecondaryVisibility(self)

    def XRayMtl(self, *args):
        """XRayMtl(Layer self, bool onOff)"""
        return _MaxPlus.Layer_XRayMtl(self, *args)

    def HasXRayMtl(self):
        """HasXRayMtl(Layer self) -> bool"""
        return _MaxPlus.Layer_HasXRayMtl(self)

    def IgnoreExtents(self, *args):
        """IgnoreExtents(Layer self, bool onOff)"""
        return _MaxPlus.Layer_IgnoreExtents(self, *args)

    def GetIgnoreExtents(self):
        """GetIgnoreExtents(Layer self) -> bool"""
        return _MaxPlus.Layer_GetIgnoreExtents(self)

    def BoxMode(self, *args):
        """BoxMode(Layer self, bool onOff)"""
        return _MaxPlus.Layer_BoxMode(self, *args)

    def GetBoxMode(self):
        """GetBoxMode(Layer self) -> bool"""
        return _MaxPlus.Layer_GetBoxMode(self)

    def AllEdges(self, *args):
        """AllEdges(Layer self, bool onOff)"""
        return _MaxPlus.Layer_AllEdges(self, *args)

    def GetAllEdges(self):
        """GetAllEdges(Layer self) -> bool"""
        return _MaxPlus.Layer_GetAllEdges(self)

    def VertTicks(self, *args):
        """VertTicks(Layer self, bool onOff)"""
        return _MaxPlus.Layer_VertTicks(self, *args)

    def GetVertTicks(self):
        """GetVertTicks(Layer self) -> bool"""
        return _MaxPlus.Layer_GetVertTicks(self)

    def BackCull(self, *args):
        """BackCull(Layer self, bool onOff)"""
        return _MaxPlus.Layer_BackCull(self, *args)

    def GetBackCull(self):
        """GetBackCull(Layer self) -> bool"""
        return _MaxPlus.Layer_GetBackCull(self)

    def SetCVertMode(self, *args):
        """SetCVertMode(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetCVertMode(self, *args)

    def GetCVertMode(self):
        """GetCVertMode(Layer self) -> bool"""
        return _MaxPlus.Layer_GetCVertMode(self)

    def SetShadeCVerts(self, *args):
        """SetShadeCVerts(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetShadeCVerts(self, *args)

    def GetShadeCVerts(self):
        """GetShadeCVerts(Layer self) -> bool"""
        return _MaxPlus.Layer_GetShadeCVerts(self)

    def SetCastShadows(self, *args):
        """SetCastShadows(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetCastShadows(self, *args)

    def CastShadows(self):
        """CastShadows(Layer self) -> bool"""
        return _MaxPlus.Layer_CastShadows(self)

    def SetRcvShadows(self, *args):
        """SetRcvShadows(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetRcvShadows(self, *args)

    def RcvShadows(self):
        """RcvShadows(Layer self) -> bool"""
        return _MaxPlus.Layer_RcvShadows(self)

    def SetApplyAtmospherics(self, *args):
        """SetApplyAtmospherics(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetApplyAtmospherics(self, *args)

    def ApplyAtmospherics(self):
        """ApplyAtmospherics(Layer self) -> bool"""
        return _MaxPlus.Layer_ApplyAtmospherics(self)

    def SetMotionBlur(self, *args):
        """SetMotionBlur(Layer self, int kind)"""
        return _MaxPlus.Layer_SetMotionBlur(self, *args)

    def MotionBlur(self):
        """MotionBlur(Layer self) -> int"""
        return _MaxPlus.Layer_MotionBlur(self)

    def SetRenderFlags(self, *args):
        """SetRenderFlags(Layer self, int flags)"""
        return _MaxPlus.Layer_SetRenderFlags(self, *args)

    def GetDisplayFlags(self):
        """GetDisplayFlags(Layer self) -> int"""
        return _MaxPlus.Layer_GetDisplayFlags(self)

    def Used(self):
        """Used(Layer self) -> bool"""
        return _MaxPlus.Layer_Used(self)

    def GetFlag(self, *args):
        """GetFlag(Layer self, int mask) -> bool"""
        return _MaxPlus.Layer_GetFlag(self, *args)

    def GetFlag2(self, *args):
        """GetFlag2(Layer self, int mask) -> bool"""
        return _MaxPlus.Layer_GetFlag2(self, *args)

    def UpdateSelectionSet(self):
        """UpdateSelectionSet(Layer self)"""
        return _MaxPlus.Layer_UpdateSelectionSet(self)

    def GetRenderFlags(self, *args):
        """
        GetRenderFlags(Layer self) -> int
        GetRenderFlags(Layer self, int oldlimits) -> int
        """
        return _MaxPlus.Layer_GetRenderFlags(self, *args)

    def SetInheritVisibility(self, *args):
        """SetInheritVisibility(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetInheritVisibility(self, *args)

    def GetInheritVisibility(self):
        """GetInheritVisibility(Layer self) -> bool"""
        return _MaxPlus.Layer_GetInheritVisibility(self)

    def Trajectory(self, *args):
        """
        Trajectory(Layer self, bool onOff, bool temp=False)
        Trajectory(Layer self, bool onOff)
        """
        return _MaxPlus.Layer_Trajectory(self, *args)

    def GetTrajectory(self):
        """GetTrajectory(Layer self) -> bool"""
        return _MaxPlus.Layer_GetTrajectory(self)

    def SelectObjects(self):
        """SelectObjects(Layer self)"""
        return _MaxPlus.Layer_SelectObjects(self)

    def SetVisibility(self, *args):
        """
        SetVisibility(Layer self, float vis, TimeValue t=Autodesk::Max::Now())
        SetVisibility(Layer self, float vis)
        """
        return _MaxPlus.Layer_SetVisibility(self, *args)

    def GetVisibility(self, *args):
        """
        GetVisibility(Layer self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Forever()) -> float
        GetVisibility(Layer self, TimeValue t=Autodesk::Max::Now()) -> float
        GetVisibility(Layer self) -> float
        """
        return _MaxPlus.Layer_GetVisibility(self, *args)

    def GetImageBlurMultiplier(self, *args):
        """
        GetImageBlurMultiplier(Layer self, TimeValue t=Autodesk::Max::Now()) -> float
        GetImageBlurMultiplier(Layer self) -> float
        """
        return _MaxPlus.Layer_GetImageBlurMultiplier(self, *args)

    def SetImageBlurMultiplier(self, *args):
        """
        SetImageBlurMultiplier(Layer self, float m, TimeValue t=Autodesk::Max::Now())
        SetImageBlurMultiplier(Layer self, float m)
        """
        return _MaxPlus.Layer_SetImageBlurMultiplier(self, *args)

    def GetMotionBlurOnOff(self, *args):
        """
        GetMotionBlurOnOff(Layer self, TimeValue t=Autodesk::Max::Now()) -> bool
        GetMotionBlurOnOff(Layer self) -> bool
        """
        return _MaxPlus.Layer_GetMotionBlurOnOff(self, *args)

    def SetMotionBlurOnOff(self, *args):
        """
        SetMotionBlurOnOff(Layer self, bool m, TimeValue t=Autodesk::Max::Now())
        SetMotionBlurOnOff(Layer self, bool m)
        """
        return _MaxPlus.Layer_SetMotionBlurOnOff(self, *args)

    def IsHiddenByVisControl(self):
        """IsHiddenByVisControl(Layer self) -> bool"""
        return _MaxPlus.Layer_IsHiddenByVisControl(self)

    def GetLocalVisibility(self, *args):
        """
        GetLocalVisibility(Layer self, TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Forever()) -> float
        GetLocalVisibility(Layer self, TimeValue t=Autodesk::Max::Now()) -> float
        GetLocalVisibility(Layer self) -> float
        """
        return _MaxPlus.Layer_GetLocalVisibility(self, *args)

    def SetShowFrozenWithMtl(self, *args):
        """SetShowFrozenWithMtl(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetShowFrozenWithMtl(self, *args)

    def ShowFrozenWithMtl(self):
        """ShowFrozenWithMtl(Layer self) -> bool"""
        return _MaxPlus.Layer_ShowFrozenWithMtl(self)

    def SetRenderOccluded(self, *args):
        """SetRenderOccluded(Layer self, bool onOff)"""
        return _MaxPlus.Layer_SetRenderOccluded(self, *args)

    def GetRenderOccluded(self):
        """GetRenderOccluded(Layer self) -> int"""
        return _MaxPlus.Layer_GetRenderOccluded(self)

    def HasObjects(self):
        """HasObjects(Layer self) -> bool"""
        return _MaxPlus.Layer_HasObjects(self)

    def GetNodes(self):
        """GetNodes(Layer self) -> INodeList"""
        return _MaxPlus.Layer_GetNodes(self)

    __swig_destroy__ = _MaxPlus.delete_Layer
    __del__ = lambda self : None;
Layer_swigregister = _MaxPlus.Layer_swigregister
Layer_swigregister(Layer)

def Layer__CastFrom(*args):
  """Layer__CastFrom(InterfaceServer b) -> Layer"""
  return _MaxPlus.Layer__CastFrom(*args)

class LayerManager(object):
    """Global functions for working with layer managers."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def AddLayer(*args):
        """AddLayer(Layer layer) -> bool"""
        return _MaxPlus.LayerManager_AddLayer(*args)

    AddLayer = staticmethod(AddLayer)
    def CreateLayer(*args):
        """
        CreateLayer() -> Layer
        CreateLayer(wchar_t const * name) -> Layer
        """
        return _MaxPlus.LayerManager_CreateLayer(*args)

    CreateLayer = staticmethod(CreateLayer)
    def DeleteLayer(*args):
        """DeleteLayer(WStr name) -> bool"""
        return _MaxPlus.LayerManager_DeleteLayer(*args)

    DeleteLayer = staticmethod(DeleteLayer)
    def SetCurrentLayer(*args):
        """
        SetCurrentLayer(WStr name)
        SetCurrentLayer()
        """
        return _MaxPlus.LayerManager_SetCurrentLayer(*args)

    SetCurrentLayer = staticmethod(SetCurrentLayer)
    def GetCurrentLayer():
        """GetCurrentLayer() -> Layer"""
        return _MaxPlus.LayerManager_GetCurrentLayer()

    GetCurrentLayer = staticmethod(GetCurrentLayer)
    def EditLayer(*args):
        """EditLayer(WStr name)"""
        return _MaxPlus.LayerManager_EditLayer(*args)

    EditLayer = staticmethod(EditLayer)
    def DoLayerPropDialog(*args):
        """DoLayerPropDialog(HWND hWnd)"""
        return _MaxPlus.LayerManager_DoLayerPropDialog(*args)

    DoLayerPropDialog = staticmethod(DoLayerPropDialog)
    def GetNumLayers():
        """GetNumLayers() -> int"""
        return _MaxPlus.LayerManager_GetNumLayers()

    GetNumLayers = staticmethod(GetNumLayers)
    def GetLayer(*args):
        """
        GetLayer(int i) -> Layer
        GetLayer(WStr name) -> Layer
        """
        return _MaxPlus.LayerManager_GetLayer(*args)

    GetLayer = staticmethod(GetLayer)
    def GetSavedLayer(*args):
        """GetSavedLayer(int i) -> WStr"""
        return _MaxPlus.LayerManager_GetSavedLayer(*args)

    GetSavedLayer = staticmethod(GetSavedLayer)
    def GetRootLayer():
        """GetRootLayer() -> Layer"""
        return _MaxPlus.LayerManager_GetRootLayer()

    GetRootLayer = staticmethod(GetRootLayer)
    def Reset(fileReset=True):
        """
        Reset(bool fileReset=True)
        Reset()
        """
        return _MaxPlus.LayerManager_Reset(fileReset)

    Reset = staticmethod(Reset)
    def SetPropagateToLayer(*args):
        """SetPropagateToLayer(int prop)"""
        return _MaxPlus.LayerManager_SetPropagateToLayer(*args)

    SetPropagateToLayer = staticmethod(SetPropagateToLayer)
    def GetPropagateToLayer():
        """GetPropagateToLayer() -> int"""
        return _MaxPlus.LayerManager_GetPropagateToLayer()

    GetPropagateToLayer = staticmethod(GetPropagateToLayer)
    __swig_destroy__ = _MaxPlus.delete_LayerManager
    __del__ = lambda self : None;
LayerManager_swigregister = _MaxPlus.LayerManager_swigregister
LayerManager_swigregister(LayerManager)

def LayerManager_AddLayer(*args):
  """LayerManager_AddLayer(Layer layer) -> bool"""
  return _MaxPlus.LayerManager_AddLayer(*args)

def LayerManager_CreateLayer(*args):
  """
    CreateLayer() -> Layer
    LayerManager_CreateLayer(wchar_t const * name) -> Layer
    """
  return _MaxPlus.LayerManager_CreateLayer(*args)

def LayerManager_DeleteLayer(*args):
  """LayerManager_DeleteLayer(WStr name) -> bool"""
  return _MaxPlus.LayerManager_DeleteLayer(*args)

def LayerManager_SetCurrentLayer(*args):
  """
    SetCurrentLayer(WStr name)
    LayerManager_SetCurrentLayer()
    """
  return _MaxPlus.LayerManager_SetCurrentLayer(*args)

def LayerManager_GetCurrentLayer():
  """LayerManager_GetCurrentLayer() -> Layer"""
  return _MaxPlus.LayerManager_GetCurrentLayer()

def LayerManager_EditLayer(*args):
  """LayerManager_EditLayer(WStr name)"""
  return _MaxPlus.LayerManager_EditLayer(*args)

def LayerManager_DoLayerPropDialog(*args):
  """LayerManager_DoLayerPropDialog(HWND hWnd)"""
  return _MaxPlus.LayerManager_DoLayerPropDialog(*args)

def LayerManager_GetNumLayers():
  """LayerManager_GetNumLayers() -> int"""
  return _MaxPlus.LayerManager_GetNumLayers()

def LayerManager_GetLayer(*args):
  """
    GetLayer(int i) -> Layer
    LayerManager_GetLayer(WStr name) -> Layer
    """
  return _MaxPlus.LayerManager_GetLayer(*args)

def LayerManager_GetSavedLayer(*args):
  """LayerManager_GetSavedLayer(int i) -> WStr"""
  return _MaxPlus.LayerManager_GetSavedLayer(*args)

def LayerManager_GetRootLayer():
  """LayerManager_GetRootLayer() -> Layer"""
  return _MaxPlus.LayerManager_GetRootLayer()

def LayerManager_Reset(fileReset=True):
  """
    Reset(bool fileReset=True)
    LayerManager_Reset()
    """
  return _MaxPlus.LayerManager_Reset(fileReset)

def LayerManager_SetPropagateToLayer(*args):
  """LayerManager_SetPropagateToLayer(int prop)"""
  return _MaxPlus.LayerManager_SetPropagateToLayer(*args)

def LayerManager_GetPropagateToLayer():
  """LayerManager_GetPropagateToLayer() -> int"""
  return _MaxPlus.LayerManager_GetPropagateToLayer()

class PolyPt(Wrapper):
    """A single point of a PolyLine."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::PolyPt self, Point3 ip, DWORD f=0, int a=0, DWORD f2=0) -> PolyPt
        __init__(Autodesk::Max::PolyPt self, Point3 ip, DWORD f=0, int a=0) -> PolyPt
        __init__(Autodesk::Max::PolyPt self, Point3 ip, DWORD f=0) -> PolyPt
        __init__(Autodesk::Max::PolyPt self, Point3 ip) -> PolyPt
        """
        this = _MaxPlus.new_PolyPt(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetMatID(self):
        """GetMatID(PolyPt self) -> MtlID"""
        return _MaxPlus.PolyPt_GetMatID(self)

    def SetMatID(self, *args):
        """SetMatID(PolyPt self, MtlID id)"""
        return _MaxPlus.PolyPt_SetMatID(self, *args)

    def GetPoint(self):
        """GetPoint(PolyPt self) -> Point3"""
        return _MaxPlus.PolyPt_GetPoint(self)

    def GetFlags(self):
        """GetFlags(PolyPt self) -> DWORD"""
        return _MaxPlus.PolyPt_GetFlags(self)

    def GetFlags2(self):
        """GetFlags2(PolyPt self) -> DWORD"""
        return _MaxPlus.PolyPt_GetFlags2(self)

    def GetAux(self):
        """GetAux(PolyPt self) -> int"""
        return _MaxPlus.PolyPt_GetAux(self)

    def SetPoint(self, *args):
        """SetPoint(PolyPt self, Point3 value)"""
        return _MaxPlus.PolyPt_SetPoint(self, *args)

    def SetFlags(self, *args):
        """SetFlags(PolyPt self, DWORD value)"""
        return _MaxPlus.PolyPt_SetFlags(self, *args)

    def SetFlags2(self, *args):
        """SetFlags2(PolyPt self, DWORD value)"""
        return _MaxPlus.PolyPt_SetFlags2(self, *args)

    def SetAux(self, *args):
        """SetAux(PolyPt self, int value)"""
        return _MaxPlus.PolyPt_SetAux(self, *args)

    __swig_destroy__ = _MaxPlus.delete_PolyPt
    __del__ = lambda self : None;
PolyPt_swigregister = _MaxPlus.PolyPt_swigregister
PolyPt_swigregister(PolyPt)

class BezierShapeTopology(Wrapper):
    """Topology information for a BezierShape."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Equals(self, *args):
        """Equals(BezierShapeTopology self, BezierShapeTopology t) -> bool"""
        return _MaxPlus.BezierShapeTopology_Equals(self, *args)

    def GetReady(self):
        """GetReady(BezierShapeTopology self) -> bool"""
        return _MaxPlus.BezierShapeTopology_GetReady(self)

    def GetKCount(self):
        """GetKCount(BezierShapeTopology self) -> IntList"""
        return _MaxPlus.BezierShapeTopology_GetKCount(self)

    def GetClosed(self):
        """GetClosed(BezierShapeTopology self) -> BitArray"""
        return _MaxPlus.BezierShapeTopology_GetClosed(self)

    __swig_destroy__ = _MaxPlus.delete_BezierShapeTopology
    __del__ = lambda self : None;
BezierShapeTopology_swigregister = _MaxPlus.BezierShapeTopology_swigregister
BezierShapeTopology_swigregister(BezierShapeTopology)

class PolyLine(Wrapper):
    """Represents a single polygon in a PolyShape using linear segments."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> PolyLine"""
        return _MaxPlus.PolyLine__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(PolyLine self, Wrapper w) -> bool"""
        return _MaxPlus.PolyLine___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(PolyLine self, Wrapper w) -> bool"""
        return _MaxPlus.PolyLine___ne__(self, *args)

    def Init(self):
        """Init(PolyLine self)"""
        return _MaxPlus.PolyLine_Init(self)

    def Close(self):
        """Close(PolyLine self)"""
        return _MaxPlus.PolyLine_Close(self)

    def IsClosed(self):
        """IsClosed(PolyLine self) -> bool"""
        return _MaxPlus.PolyLine_IsClosed(self)

    def Open(self):
        """Open(PolyLine self)"""
        return _MaxPlus.PolyLine_Open(self)

    def IsOpen(self):
        """IsOpen(PolyLine self) -> bool"""
        return _MaxPlus.PolyLine_IsOpen(self)

    def SetNoSelfInt(self):
        """SetNoSelfInt(PolyLine self)"""
        return _MaxPlus.PolyLine_SetNoSelfInt(self)

    def IsNoSelfInt(self):
        """IsNoSelfInt(PolyLine self) -> bool"""
        return _MaxPlus.PolyLine_IsNoSelfInt(self)

    def GetNumPoints(self):
        """GetNumPoints(PolyLine self) -> int"""
        return _MaxPlus.PolyLine_GetNumPoints(self)

    def Segments(self):
        """Segments(PolyLine self) -> int"""
        return _MaxPlus.PolyLine_Segments(self)

    def SetNumPoints(self, *args):
        """
        SetNumPoints(PolyLine self, int count, bool keep=TRUE) -> bool
        SetNumPoints(PolyLine self, int count) -> bool
        """
        return _MaxPlus.PolyLine_SetNumPoints(self, *args)

    def Append(self, *args):
        """Append(PolyLine self, PolyPt p)"""
        return _MaxPlus.PolyLine_Append(self, *args)

    def Insert(self, *args):
        """Insert(PolyLine self, int where, PolyPt p)"""
        return _MaxPlus.PolyLine_Insert(self, *args)

    def Delete(self, *args):
        """Delete(PolyLine self, int where)"""
        return _MaxPlus.PolyLine_Delete(self, *args)

    def Reverse(self, keepZero=True):
        """
        Reverse(PolyLine self, bool keepZero=True)
        Reverse(PolyLine self)
        """
        return _MaxPlus.PolyLine_Reverse(self, keepZero)

    def CopyFrom(self, *args):
        """CopyFrom(PolyLine self, PolyLine other)"""
        return _MaxPlus.PolyLine_CopyFrom(self, *args)

    def __len__(self):
        """__len__(PolyLine self) -> int"""
        return _MaxPlus.PolyLine___len__(self)

    def __getitem__(self, *args):
        """__getitem__(PolyLine self, int i) -> PolyPt"""
        return _MaxPlus.PolyLine___getitem__(self, *args)

    def BuildBoundingBox(self):
        """BuildBoundingBox(PolyLine self)"""
        return _MaxPlus.PolyLine_BuildBoundingBox(self)

    def GetBoundingBox(self, *args):
        """
        GetBoundingBox(PolyLine self, Matrix3 tm) -> Box3
        GetBoundingBox(PolyLine self) -> Box3
        """
        return _MaxPlus.PolyLine_GetBoundingBox(self, *args)

    def Transform(self, *args):
        """Transform(PolyLine self, Matrix3 tm)"""
        return _MaxPlus.PolyLine_Transform(self, *args)

    def SpliceLine(self, *args):
        """SpliceLine(PolyLine self, int where, PolyLine source, int splicePoint)"""
        return _MaxPlus.PolyLine_SpliceLine(self, *args)

    def HitsSegment(self, *args):
        """
        HitsSegment(PolyLine self, Point2 p1, Point2 p2, bool findAll=True) -> bool
        HitsSegment(PolyLine self, Point2 p1, Point2 p2) -> bool
        """
        return _MaxPlus.PolyLine_HitsSegment(self, *args)

    def HitsPolyLine(self, *args):
        """
        HitsPolyLine(PolyLine self, PolyLine line, bool findAll=False) -> bool
        HitsPolyLine(PolyLine self, PolyLine line) -> bool
        """
        return _MaxPlus.PolyLine_HitsPolyLine(self, *args)

    def SurroundsPoint(self, *args):
        """SurroundsPoint(PolyLine self, Point2 point) -> bool"""
        return _MaxPlus.PolyLine_SurroundsPoint(self, *args)

    def InterpPiece3D(self, *args):
        """InterpPiece3D(PolyLine self, int segment, float t) -> Point3"""
        return _MaxPlus.PolyLine_InterpPiece3D(self, *args)

    def InterpCurve3D(self, *args):
        """
        InterpCurve3D(PolyLine self, float u, int ptype=POLYSHP_INTERP_SIMPLE) -> Point3
        InterpCurve3D(PolyLine self, float u) -> Point3
        """
        return _MaxPlus.PolyLine_InterpCurve3D(self, *args)

    def TangentPiece3D(self, *args):
        """TangentPiece3D(PolyLine self, int segment, float t) -> Point3"""
        return _MaxPlus.PolyLine_TangentPiece3D(self, *args)

    def TangentCurve3D(self, *args):
        """
        TangentCurve3D(PolyLine self, float u, int ptype=POLYSHP_INTERP_SIMPLE) -> Point3
        TangentCurve3D(PolyLine self, float u) -> Point3
        """
        return _MaxPlus.PolyLine_TangentCurve3D(self, *args)

    def GetMatID(self, *args):
        """GetMatID(PolyLine self, int segment) -> MtlID"""
        return _MaxPlus.PolyLine_GetMatID(self, *args)

    def CurveLength(self):
        """CurveLength(PolyLine self) -> float"""
        return _MaxPlus.PolyLine_CurveLength(self)

    def IsClockWise(self):
        """IsClockWise(PolyLine self) -> bool"""
        return _MaxPlus.PolyLine_IsClockWise(self)

    def SelfIntersects(self, findAll=True):
        """
        SelfIntersects(PolyLine self, bool findAll=True) -> bool
        SelfIntersects(PolyLine self) -> bool
        """
        return _MaxPlus.PolyLine_SelfIntersects(self, findAll)

    def GetSmoothingMap(self):
        """GetSmoothingMap(PolyLine self) -> IntList"""
        return _MaxPlus.PolyLine_GetSmoothingMap(self)

    def Swap(self, *args):
        """Swap(PolyLine self, PolyLine line)"""
        return _MaxPlus.PolyLine_Swap(self, *args)

    def GetFlags(self):
        """GetFlags(PolyLine self) -> DWORD"""
        return _MaxPlus.PolyLine_GetFlags(self)

    __swig_destroy__ = _MaxPlus.delete_PolyLine
    __del__ = lambda self : None;
PolyLine_swigregister = _MaxPlus.PolyLine_swigregister
PolyLine_swigregister(PolyLine)

def PolyLine__CastFrom(*args):
  """PolyLine__CastFrom(InterfaceServer b) -> PolyLine"""
  return _MaxPlus.PolyLine__CastFrom(*args)

class PolyShape(Wrapper):
    """A multi-polygon shape class used in the caching of Bezier shapes. Used for doing a one time interpolation of a bezier shape into a form that is the same shape but doesn't require any further interpolation."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> PolyShape"""
        return _MaxPlus.PolyShape__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(PolyShape self, Wrapper w) -> bool"""
        return _MaxPlus.PolyShape___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(PolyShape self, Wrapper w) -> bool"""
        return _MaxPlus.PolyShape___ne__(self, *args)

    def Init(self):
        """Init(PolyShape self)"""
        return _MaxPlus.PolyShape_Init(self)

    def NewShape(self):
        """NewShape(PolyShape self)"""
        return _MaxPlus.PolyShape_NewShape(self)

    def SetNumLines(self, *args):
        """
        SetNumLines(PolyShape self, int count, bool keep=TRUE) -> bool
        SetNumLines(PolyShape self, int count) -> bool
        """
        return _MaxPlus.PolyShape_SetNumLines(self, *args)

    def NewLine(self):
        """NewLine(PolyShape self) -> PolyLine"""
        return _MaxPlus.PolyShape_NewLine(self)

    def Append(self, *args):
        """Append(PolyShape self, PolyLine l)"""
        return _MaxPlus.PolyShape_Append(self, *args)

    def Insert(self, *args):
        """Insert(PolyShape self, int where, PolyLine l)"""
        return _MaxPlus.PolyShape_Insert(self, *args)

    def Delete(self, *args):
        """Delete(PolyShape self, int where)"""
        return _MaxPlus.PolyShape_Delete(self, *args)

    def CopyFrom(self, *args):
        """CopyFrom(PolyShape self, PolyShape other)"""
        return _MaxPlus.PolyShape_CopyFrom(self, *args)

    def BuildBoundingBox(self):
        """BuildBoundingBox(PolyShape self)"""
        return _MaxPlus.PolyShape_BuildBoundingBox(self)

    def InvalidateGeomCache(self, *args):
        """InvalidateGeomCache(PolyShape self, bool unused)"""
        return _MaxPlus.PolyShape_InvalidateGeomCache(self, *args)

    def InvalidateCapCache(self):
        """InvalidateCapCache(PolyShape self)"""
        return _MaxPlus.PolyShape_InvalidateCapCache(self)

    def GetBoundingBox(self, *args):
        """
        GetBoundingBox(PolyShape self, Matrix3 tm) -> Box3
        GetBoundingBox(PolyShape self) -> Box3
        """
        return _MaxPlus.PolyShape_GetBoundingBox(self, *args)

    def GetDeformBBox(self, *args):
        """GetDeformBBox(PolyShape self, TimeValue t, Box3 box, Matrix3 tm, bool useSel)"""
        return _MaxPlus.PolyShape_GetDeformBBox(self, *args)

    def Transform(self, *args):
        """Transform(PolyShape self, Matrix3 tm)"""
        return _MaxPlus.PolyShape_Transform(self, *args)

    def UpdateCachedHierarchy(self):
        """UpdateCachedHierarchy(PolyShape self)"""
        return _MaxPlus.PolyShape_UpdateCachedHierarchy(self)

    def UpdateSels(self):
        """UpdateSels(PolyShape self)"""
        return _MaxPlus.PolyShape_UpdateSels(self)

    def Reverse(self, *args):
        """
        Reverse(PolyShape self, int line, bool keepZero=True)
        Reverse(PolyShape self, int line)
        Reverse(PolyShape self, BitArray reverse, bool keepZero=True)
        Reverse(PolyShape self, BitArray reverse)
        """
        return _MaxPlus.PolyShape_Reverse(self, *args)

    def GetMatID(self, *args):
        """GetMatID(PolyShape self, int line, int piece) -> MtlID"""
        return _MaxPlus.PolyShape_GetMatID(self, *args)

    def VertexTempSel(self, *args):
        """VertexTempSel(PolyShape self, int poly) -> BitArray"""
        return _MaxPlus.PolyShape_VertexTempSel(self, *args)

    def ShallowCopy(self, *args):
        """ShallowCopy(PolyShape self, PolyShape ashape, ChannelMask channels)"""
        return _MaxPlus.PolyShape_ShallowCopy(self, *args)

    def DeepCopy(self, *args):
        """DeepCopy(PolyShape self, PolyShape ashape, ChannelMask channels)"""
        return _MaxPlus.PolyShape_DeepCopy(self, *args)

    def NewAndCopyChannels(self, *args):
        """NewAndCopyChannels(PolyShape self, ChannelMask channels)"""
        return _MaxPlus.PolyShape_NewAndCopyChannels(self, *args)

    def FreeChannels(self, *args):
        """
        FreeChannels(PolyShape self, ChannelMask channels, int zeroOthers=1)
        FreeChannels(PolyShape self, ChannelMask channels)
        """
        return _MaxPlus.PolyShape_FreeChannels(self, *args)

    def GetNumLines(self):
        """GetNumLines(PolyShape self) -> int"""
        return _MaxPlus.PolyShape_GetNumLines(self)

    def GetLine(self, *args):
        """GetLine(PolyShape self, int i) -> PolyLine"""
        return _MaxPlus.PolyShape_GetLine(self, *args)

    def GetFlags(self):
        """GetFlags(PolyShape self) -> DWORD"""
        return _MaxPlus.PolyShape_GetFlags(self)

    def GetDisplayFlags(self):
        """GetDisplayFlags(PolyShape self) -> DWORD"""
        return _MaxPlus.PolyShape_GetDisplayFlags(self)

    __swig_destroy__ = _MaxPlus.delete_PolyShape
    __del__ = lambda self : None;
PolyShape_swigregister = _MaxPlus.PolyShape_swigregister
PolyShape_swigregister(PolyShape)

def PolyShape__CastFrom(*args):
  """PolyShape__CastFrom(InterfaceServer b) -> PolyShape"""
  return _MaxPlus.PolyShape__CastFrom(*args)

class BezierShape(BaseInterfaceServer):
    """A collection of Bezier splines."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> BezierShape"""
        return _MaxPlus.BezierShape__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(BezierShape self, Wrapper w) -> bool"""
        return _MaxPlus.BezierShape___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(BezierShape self, Wrapper w) -> bool"""
        return _MaxPlus.BezierShape___ne__(self, *args)

    def Init(self):
        """Init(BezierShape self)"""
        return _MaxPlus.BezierShape_Init(self)

    def CopyFrom(self, *args):
        """
        CopyFrom(BezierShape self, BezierShape fromShape)
        CopyFrom(BezierShape self, PolyShape fromShape)
        """
        return _MaxPlus.BezierShape_CopyFrom(self, *args)

    def BuildBoundingBox(self):
        """BuildBoundingBox(BezierShape self)"""
        return _MaxPlus.BezierShape_BuildBoundingBox(self)

    def GetBoundingBox(self, *args):
        """
        GetBoundingBox(BezierShape self, Matrix3 tm) -> Box3
        GetBoundingBox(BezierShape self) -> Box3
        """
        return _MaxPlus.BezierShape_GetBoundingBox(self, *args)

    def ShallowCopy(self, *args):
        """ShallowCopy(BezierShape self, BezierShape ashape, ChannelMask channels)"""
        return _MaxPlus.BezierShape_ShallowCopy(self, *args)

    def DeepCopy(self, *args):
        """DeepCopy(BezierShape self, BezierShape ashape, ChannelMask channels)"""
        return _MaxPlus.BezierShape_DeepCopy(self, *args)

    def NewAndCopyChannels(self, *args):
        """NewAndCopyChannels(BezierShape self, ChannelMask channels)"""
        return _MaxPlus.BezierShape_NewAndCopyChannels(self, *args)

    def FreeChannels(self, *args):
        """
        FreeChannels(BezierShape self, ChannelMask channels, int zeroOthers=1)
        FreeChannels(BezierShape self, ChannelMask channels)
        """
        return _MaxPlus.BezierShape_FreeChannels(self, *args)

    def SetDispFlag(self, *args):
        """SetDispFlag(BezierShape self, DWORD f)"""
        return _MaxPlus.BezierShape_SetDispFlag(self, *args)

    def GetDispFlag(self, *args):
        """GetDispFlag(BezierShape self, DWORD f) -> DWORD"""
        return _MaxPlus.BezierShape_GetDispFlag(self, *args)

    def ClearDispFlag(self, *args):
        """ClearDispFlag(BezierShape self, DWORD f)"""
        return _MaxPlus.BezierShape_ClearDispFlag(self, *args)

    def VertexTempSel(self, *args):
        """
        VertexTempSel(BezierShape self, int poly, int level=-1) -> BitArray
        VertexTempSel(BezierShape self, int poly) -> BitArray
        """
        return _MaxPlus.BezierShape_VertexTempSel(self, *args)

    def VertexTempSelAll(self, *args):
        """
        VertexTempSelAll(BezierShape self, int poly=-1, bool includeVecs=True, int level=0, bool forceSel=True) -> BitArray
        VertexTempSelAll(BezierShape self, int poly=-1, bool includeVecs=True, int level=0) -> BitArray
        VertexTempSelAll(BezierShape self, int poly=-1, bool includeVecs=True) -> BitArray
        VertexTempSelAll(BezierShape self, int poly=-1) -> BitArray
        VertexTempSelAll(BezierShape self) -> BitArray
        """
        return _MaxPlus.BezierShape_VertexTempSelAll(self, *args)

    def VertexFlagSel(self, *args):
        """VertexFlagSel(BezierShape self, int poly, DWORD flag) -> BitArray"""
        return _MaxPlus.BezierShape_VertexFlagSel(self, *args)

    def GetNumSplines(self):
        """GetNumSplines(BezierShape self) -> int"""
        return _MaxPlus.BezierShape_GetNumSplines(self)

    def NewShape(self):
        """NewShape(BezierShape self)"""
        return _MaxPlus.BezierShape_NewShape(self)

    def GetNumVerts(self):
        """GetNumVerts(BezierShape self) -> int"""
        return _MaxPlus.BezierShape_GetNumVerts(self)

    def GetNumSegs(self):
        """GetNumSegs(BezierShape self) -> int"""
        return _MaxPlus.BezierShape_GetNumSegs(self)

    def GetDeformBBox(self, *args):
        """
        GetDeformBBox(BezierShape self, Matrix3 tm, bool useSel, TimeValue t=Autodesk::Max::Now()) -> Box3
        GetDeformBBox(BezierShape self, Matrix3 tm, bool useSel) -> Box3
        """
        return _MaxPlus.BezierShape_GetDeformBBox(self, *args)

    def UpdateSels(self, save=True):
        """
        UpdateSels(BezierShape self, bool save=True)
        UpdateSels(BezierShape self)
        """
        return _MaxPlus.BezierShape_UpdateSels(self, save)

    def GetClosures(self, *args):
        """GetClosures(BezierShape self, BitArray array)"""
        return _MaxPlus.BezierShape_GetClosures(self, *args)

    def SetClosures(self, *args):
        """SetClosures(BezierShape self, BitArray array)"""
        return _MaxPlus.BezierShape_SetClosures(self, *args)

    def Reverse(self, *args):
        """
        Reverse(BezierShape self, int poly, bool keepZero=True)
        Reverse(BezierShape self, int poly)
        Reverse(BezierShape self, BitArray reverse, bool keepZero=True)
        Reverse(BezierShape self, BitArray reverse)
        """
        return _MaxPlus.BezierShape_Reverse(self, *args)

    def MakePolyShape(self, *args):
        """
        MakePolyShape(BezierShape self, PolyShape pshp, int steps=-1, bool optimize=True)
        MakePolyShape(BezierShape self, PolyShape pshp, int steps=-1)
        MakePolyShape(BezierShape self, PolyShape pshp)
        """
        return _MaxPlus.BezierShape_MakePolyShape(self, *args)

    def MakeFirst(self, *args):
        """MakeFirst(BezierShape self, int poly, int vertex)"""
        return _MaxPlus.BezierShape_MakeFirst(self, *args)

    def Transform(self, *args):
        """Transform(BezierShape self, Matrix3 tm)"""
        return _MaxPlus.BezierShape_Transform(self, *args)

    def Append(self, *args):
        """Append(BezierShape self, BezierShape other)"""
        return _MaxPlus.BezierShape_Append(self, *args)

    def AddAndWeld(self, *args):
        """AddAndWeld(BezierShape self, BezierShape other, float weldThreshold)"""
        return _MaxPlus.BezierShape_AddAndWeld(self, *args)

    def ReadyCachedPolyShape(self):
        """ReadyCachedPolyShape(BezierShape self)"""
        return _MaxPlus.BezierShape_ReadyCachedPolyShape(self)

    def GetReadyPatchCap(self):
        """GetReadyPatchCap(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_GetReadyPatchCap(self)

    def CopyShapeDataFrom(self, *args):
        """CopyShapeDataFrom(BezierShape self, BezierShape fromShape)"""
        return _MaxPlus.BezierShape_CopyShapeDataFrom(self, *args)

    def PrepVertBaseIndex(self):
        """PrepVertBaseIndex(BezierShape self)"""
        return _MaxPlus.BezierShape_PrepVertBaseIndex(self)

    def GetVertIndex(self, *args):
        """GetVertIndex(BezierShape self, int poly, int vert) -> int"""
        return _MaxPlus.BezierShape_GetVertIndex(self, *args)

    def GetPolyAndVert(self, *args):
        """GetPolyAndVert(BezierShape self, int index, int & polyOut, int & vertOut)"""
        return _MaxPlus.BezierShape_GetPolyAndVert(self, *args)

    def GetTotalVerts(self):
        """GetTotalVerts(BezierShape self) -> int"""
        return _MaxPlus.BezierShape_GetTotalVerts(self)

    def GetVert(self, *args):
        """
        GetVert(BezierShape self, int poly, int i) -> Point3
        GetVert(BezierShape self, int index) -> Point3
        """
        return _MaxPlus.BezierShape_GetVert(self, *args)

    def SetVert(self, *args):
        """
        SetVert(BezierShape self, int poly, int i, Point3 xyz)
        SetVert(BezierShape self, int index, Point3 xyz)
        """
        return _MaxPlus.BezierShape_SetVert(self, *args)

    def PrepKnotBaseIndex(self):
        """PrepKnotBaseIndex(BezierShape self)"""
        return _MaxPlus.BezierShape_PrepKnotBaseIndex(self)

    def GetKnotIndex(self, *args):
        """GetKnotIndex(BezierShape self, int poly, int knot) -> int"""
        return _MaxPlus.BezierShape_GetKnotIndex(self, *args)

    def GetPolyAndKnot(self, *args):
        """GetPolyAndKnot(BezierShape self, int index, int & polyOut, int & knotOut)"""
        return _MaxPlus.BezierShape_GetPolyAndKnot(self, *args)

    def GetTotalKnots(self):
        """GetTotalKnots(BezierShape self) -> int"""
        return _MaxPlus.BezierShape_GetTotalKnots(self)

    def DeleteSelVerts(self, *args):
        """DeleteSelVerts(BezierShape self, int poly) -> bool"""
        return _MaxPlus.BezierShape_DeleteSelVerts(self, *args)

    def DeleteSelSegs(self, *args):
        """DeleteSelSegs(BezierShape self, int poly) -> bool"""
        return _MaxPlus.BezierShape_DeleteSelSegs(self, *args)

    def DeleteSelectedVerts(self):
        """DeleteSelectedVerts(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_DeleteSelectedVerts(self)

    def DeleteSelectedSegs(self):
        """DeleteSelectedSegs(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_DeleteSelectedSegs(self)

    def DeleteSelectedPolys(self):
        """DeleteSelectedPolys(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_DeleteSelectedPolys(self)

    def CloneSelectedParts(self, reverse=True):
        """
        CloneSelectedParts(BezierShape self, bool reverse=True) -> bool
        CloneSelectedParts(BezierShape self) -> bool
        """
        return _MaxPlus.BezierShape_CloneSelectedParts(self, reverse)

    def RecordTopologyTags(self, channel=0):
        """
        RecordTopologyTags(BezierShape self, int channel=0) -> bool
        RecordTopologyTags(BezierShape self) -> bool
        """
        return _MaxPlus.BezierShape_RecordTopologyTags(self, channel)

    def InterpCurve3D(self, *args):
        """
        InterpCurve3D(BezierShape self, int poly, float param, int ptype=PARAM_SIMPLE) -> Point3
        InterpCurve3D(BezierShape self, int poly, float param) -> Point3
        """
        return _MaxPlus.BezierShape_InterpCurve3D(self, *args)

    def TangentCurve3D(self, *args):
        """
        TangentCurve3D(BezierShape self, int poly, float param, int ptype=PARAM_SIMPLE) -> Point3
        TangentCurve3D(BezierShape self, int poly, float param) -> Point3
        """
        return _MaxPlus.BezierShape_TangentCurve3D(self, *args)

    def InterpPiece3D(self, *args):
        """
        InterpPiece3D(BezierShape self, int poly, int piece, float param, int ptype=PARAM_SIMPLE) -> Point3
        InterpPiece3D(BezierShape self, int poly, int piece, float param) -> Point3
        """
        return _MaxPlus.BezierShape_InterpPiece3D(self, *args)

    def TangentPiece3D(self, *args):
        """
        TangentPiece3D(BezierShape self, int poly, int piece, float param, int ptype=PARAM_SIMPLE) -> Point3
        TangentPiece3D(BezierShape self, int poly, int piece, float param) -> Point3
        """
        return _MaxPlus.BezierShape_TangentPiece3D(self, *args)

    def GetMatID(self, *args):
        """GetMatID(BezierShape self, int poly, int piece) -> MtlID"""
        return _MaxPlus.BezierShape_GetMatID(self, *args)

    def GetLengthOfCurve(self, *args):
        """GetLengthOfCurve(BezierShape self, int poly) -> float"""
        return _MaxPlus.BezierShape_GetLengthOfCurve(self, *args)

    def GetTopology(self, *args):
        """GetTopology(BezierShape self, BezierShapeTopology topo)"""
        return _MaxPlus.BezierShape_GetTopology(self, *args)

    def SelVertsSameType(self):
        """SelVertsSameType(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_SelVertsSameType(self)

    def SelSegsSameType(self):
        """SelSegsSameType(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_SelSegsSameType(self)

    def SelSplinesSameType(self):
        """SelSplinesSameType(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_SelSplinesSameType(self)

    def BindKnot(self, *args):
        """BindKnot(BezierShape self, bool isEnd, int segIndex, int splineSegID, int splinePointID)"""
        return _MaxPlus.BezierShape_BindKnot(self, *args)

    def UnbindKnot(self, *args):
        """UnbindKnot(BezierShape self, int splineID, bool isEnd) -> bool"""
        return _MaxPlus.BezierShape_UnbindKnot(self, *args)

    def UpdateBindList(self, useGeometricTracking=True):
        """
        UpdateBindList(BezierShape self, bool useGeometricTracking=True)
        UpdateBindList(BezierShape self)
        """
        return _MaxPlus.BezierShape_UpdateBindList(self, useGeometricTracking)

    def HideSelectedSegs(self):
        """HideSelectedSegs(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_HideSelectedSegs(self)

    def HideSelectedVerts(self):
        """HideSelectedVerts(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_HideSelectedVerts(self)

    def HideSelectedSplines(self):
        """HideSelectedSplines(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_HideSelectedSplines(self)

    def UnhideSegs(self):
        """UnhideSegs(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_UnhideSegs(self)

    def UnselectHiddenVerts(self):
        """UnselectHiddenVerts(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_UnselectHiddenVerts(self)

    def UnselectHiddenSegs(self):
        """UnselectHiddenSegs(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_UnselectHiddenSegs(self)

    def UnselectHiddenSplines(self):
        """UnselectHiddenSplines(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_UnselectHiddenSplines(self)

    def SetVertexWeightCount(self, *args):
        """SetVertexWeightCount(BezierShape self, int i)"""
        return _MaxPlus.BezierShape_SetVertexWeightCount(self, *args)

    def SetVertexWeight(self, *args):
        """SetVertexWeight(BezierShape self, int i, float w)"""
        return _MaxPlus.BezierShape_SetVertexWeight(self, *args)

    def GetVertexWeight(self, *args):
        """GetVertexWeight(BezierShape self, int i) -> float"""
        return _MaxPlus.BezierShape_GetVertexWeight(self, *args)

    def IsVertexWeightSupported(self):
        """IsVertexWeightSupported(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_IsVertexWeightSupported(self)

    def SetSupportVSelectionWeights(self):
        """SetSupportVSelectionWeights(BezierShape self)"""
        return _MaxPlus.BezierShape_SetSupportVSelectionWeights(self)

    def GetUseEdgeDists(self):
        """GetUseEdgeDists(BezierShape self) -> int"""
        return _MaxPlus.BezierShape_GetUseEdgeDists(self)

    def SetUseEdgeDists(self, *args):
        """SetUseEdgeDists(BezierShape self, int edgeDist)"""
        return _MaxPlus.BezierShape_SetUseEdgeDists(self, *args)

    def GetEdgeDist(self):
        """GetEdgeDist(BezierShape self) -> int"""
        return _MaxPlus.BezierShape_GetEdgeDist(self)

    def SetEdgeDist(self, *args):
        """SetEdgeDist(BezierShape self, int edgeDist)"""
        return _MaxPlus.BezierShape_SetEdgeDist(self, *args)

    def GetUseSoftSelections(self):
        """GetUseSoftSelections(BezierShape self) -> int"""
        return _MaxPlus.BezierShape_GetUseSoftSelections(self)

    def SetUseSoftSelections(self, *args):
        """SetUseSoftSelections(BezierShape self, int useSoftSelections)"""
        return _MaxPlus.BezierShape_SetUseSoftSelections(self, *args)

    def GetAffectBackface(self):
        """GetAffectBackface(BezierShape self) -> int"""
        return _MaxPlus.BezierShape_GetAffectBackface(self)

    def SetAffectBackface(self, *args):
        """SetAffectBackface(BezierShape self, int affectBackface)"""
        return _MaxPlus.BezierShape_SetAffectBackface(self, *args)

    def GetFalloff(self):
        """GetFalloff(BezierShape self) -> float"""
        return _MaxPlus.BezierShape_GetFalloff(self)

    def SetFalloff(self, *args):
        """SetFalloff(BezierShape self, float falloff)"""
        return _MaxPlus.BezierShape_SetFalloff(self, *args)

    def GetPinch(self):
        """GetPinch(BezierShape self) -> float"""
        return _MaxPlus.BezierShape_GetPinch(self)

    def SetPinch(self, *args):
        """SetPinch(BezierShape self, float pinch)"""
        return _MaxPlus.BezierShape_SetPinch(self, *args)

    def GetBubble(self):
        """GetBubble(BezierShape self) -> float"""
        return _MaxPlus.BezierShape_GetBubble(self)

    def SetBubble(self, *args):
        """SetBubble(BezierShape self, float bubble)"""
        return _MaxPlus.BezierShape_SetBubble(self, *args)

    def InvalidateVertexWeights(self):
        """InvalidateVertexWeights(BezierShape self)"""
        return _MaxPlus.BezierShape_InvalidateVertexWeights(self)

    def UpdateVertexDists(self):
        """UpdateVertexDists(BezierShape self)"""
        return _MaxPlus.BezierShape_UpdateVertexDists(self)

    def UpdateEdgeDists(self):
        """UpdateEdgeDists(BezierShape self)"""
        return _MaxPlus.BezierShape_UpdateEdgeDists(self)

    def UpdateVertexWeights(self):
        """UpdateVertexWeights(BezierShape self)"""
        return _MaxPlus.BezierShape_UpdateVertexWeights(self)

    def DeleteSpline(self, *args):
        """
        DeleteSpline(BezierShape self, int index) -> int
        DeleteSpline(BezierShape self, unsigned int index) -> bool
        """
        return _MaxPlus.BezierShape_DeleteSpline(self, *args)

    def GetSteps(self):
        """GetSteps(BezierShape self) -> int"""
        return _MaxPlus.BezierShape_GetSteps(self)

    def GetOptimize(self):
        """GetOptimize(BezierShape self) -> bool"""
        return _MaxPlus.BezierShape_GetOptimize(self)

    def SetSteps(self, *args):
        """SetSteps(BezierShape self, int value)"""
        return _MaxPlus.BezierShape_SetSteps(self, *args)

    def SetOptimize(self, *args):
        """SetOptimize(BezierShape self, bool value)"""
        return _MaxPlus.BezierShape_SetOptimize(self, *args)

    __swig_destroy__ = _MaxPlus.delete_BezierShape
    __del__ = lambda self : None;
BezierShape_swigregister = _MaxPlus.BezierShape_swigregister
BezierShape_swigregister(BezierShape)

def BezierShape__CastFrom(*args):
  """BezierShape__CastFrom(InterfaceServer b) -> BezierShape"""
  return _MaxPlus.BezierShape__CastFrom(*args)

class PolyObject(GeomObject):
    """A polygon-based mesh object."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> PolyObject"""
        return _MaxPlus.PolyObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(PolyObject self, Wrapper w) -> bool"""
        return _MaxPlus.PolyObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(PolyObject self, Wrapper w) -> bool"""
        return _MaxPlus.PolyObject___ne__(self, *args)

    __swig_destroy__ = _MaxPlus.delete_PolyObject
    __del__ = lambda self : None;
PolyObject_swigregister = _MaxPlus.PolyObject_swigregister
PolyObject_swigregister(PolyObject)

def PolyObject__CastFrom(*args):
  """PolyObject__CastFrom(InterfaceServer b) -> PolyObject"""
  return _MaxPlus.PolyObject__CastFrom(*args)

class SplinePoint(Wrapper):
    """Provides the vertex-level point information for the Spline3D class."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::SplinePoint self, Point3 p, int a1=-1, int a2=-1, int a3=-1) -> SplinePoint
        __init__(Autodesk::Max::SplinePoint self, Point3 p, int a1=-1, int a2=-1) -> SplinePoint
        __init__(Autodesk::Max::SplinePoint self, Point3 p, int a1=-1) -> SplinePoint
        __init__(Autodesk::Max::SplinePoint self, Point3 p) -> SplinePoint
        """
        this = _MaxPlus.new_SplinePoint(*args)
        try: self.this.append(this)
        except: self.this = this
    def CopyFrom(self, *args):
        """CopyFrom(SplinePoint self, SplinePoint fromSP)"""
        return _MaxPlus.SplinePoint_CopyFrom(self, *args)

    def GetPoint(self):
        """GetPoint(SplinePoint self) -> Point3"""
        return _MaxPlus.SplinePoint_GetPoint(self)

    def GetAux(self, *args):
        """GetAux(SplinePoint self, int index) -> int"""
        return _MaxPlus.SplinePoint_GetAux(self, *args)

    def SetPoint(self, *args):
        """SetPoint(SplinePoint self, Point3 p)"""
        return _MaxPlus.SplinePoint_SetPoint(self, *args)

    def SetAux(self, *args):
        """SetAux(SplinePoint self, int index, int a)"""
        return _MaxPlus.SplinePoint_SetAux(self, *args)

    __swig_destroy__ = _MaxPlus.delete_SplinePoint
    __del__ = lambda self : None;
SplinePoint_swigregister = _MaxPlus.SplinePoint_swigregister
SplinePoint_swigregister(SplinePoint)

class SplineKnot(Wrapper):
    """A single knot in a spline."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec, int a1=-1, int a2=-1, int a3=-1, 
            int Ia1=-1, int Ia2=-1, int Ia3=-1, int Oa1=-1, int Oa2=-1, int Oa3=-1, 
            DWORD f=0) -> SplineKnot
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec, int a1=-1, int a2=-1, int a3=-1, 
            int Ia1=-1, int Ia2=-1, int Ia3=-1, int Oa1=-1, int Oa2=-1, int Oa3=-1) -> SplineKnot
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec, int a1=-1, int a2=-1, int a3=-1, 
            int Ia1=-1, int Ia2=-1, int Ia3=-1, int Oa1=-1, int Oa2=-1) -> SplineKnot
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec, int a1=-1, int a2=-1, int a3=-1, 
            int Ia1=-1, int Ia2=-1, int Ia3=-1, int Oa1=-1) -> SplineKnot
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec, int a1=-1, int a2=-1, int a3=-1, 
            int Ia1=-1, int Ia2=-1, int Ia3=-1) -> SplineKnot
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec, int a1=-1, int a2=-1, int a3=-1, 
            int Ia1=-1, int Ia2=-1) -> SplineKnot
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec, int a1=-1, int a2=-1, int a3=-1, 
            int Ia1=-1) -> SplineKnot
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec, int a1=-1, int a2=-1, int a3=-1) -> SplineKnot
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec, int a1=-1, int a2=-1) -> SplineKnot
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec, int a1=-1) -> SplineKnot
        __init__(Autodesk::Max::SplineKnot self, int k, int l, Point3 p, Point3 inVec, Point3 outVec) -> SplineKnot
        """
        this = _MaxPlus.new_SplineKnot(*args)
        try: self.this.append(this)
        except: self.this = this
    def GetKtype(self):
        """GetKtype(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetKtype(self)

    def SetKtype(self, *args):
        """SetKtype(SplineKnot self, int t)"""
        return _MaxPlus.SplineKnot_SetKtype(self, *args)

    def GetLtype(self):
        """GetLtype(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetLtype(self)

    def SetLtype(self, *args):
        """SetLtype(SplineKnot self, int t)"""
        return _MaxPlus.SplineKnot_SetLtype(self, *args)

    def GetAux(self):
        """GetAux(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetAux(self)

    def SetAux(self, *args):
        """SetAux(SplineKnot self, int a)"""
        return _MaxPlus.SplineKnot_SetAux(self, *args)

    def GetAux2(self):
        """GetAux2(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetAux2(self)

    def SetAux2(self, *args):
        """SetAux2(SplineKnot self, int a)"""
        return _MaxPlus.SplineKnot_SetAux2(self, *args)

    def GetAux3(self):
        """GetAux3(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetAux3(self)

    def SetAux3(self, *args):
        """SetAux3(SplineKnot self, int a)"""
        return _MaxPlus.SplineKnot_SetAux3(self, *args)

    def GetInAux(self):
        """GetInAux(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetInAux(self)

    def SetInAux(self, *args):
        """SetInAux(SplineKnot self, int a)"""
        return _MaxPlus.SplineKnot_SetInAux(self, *args)

    def GetInAux2(self):
        """GetInAux2(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetInAux2(self)

    def SetInAux2(self, *args):
        """SetInAux2(SplineKnot self, int a)"""
        return _MaxPlus.SplineKnot_SetInAux2(self, *args)

    def GetInAux3(self):
        """GetInAux3(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetInAux3(self)

    def SetInAux3(self, *args):
        """SetInAux3(SplineKnot self, int a)"""
        return _MaxPlus.SplineKnot_SetInAux3(self, *args)

    def GetOutAux(self):
        """GetOutAux(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetOutAux(self)

    def SetOutAux(self, *args):
        """SetOutAux(SplineKnot self, int a)"""
        return _MaxPlus.SplineKnot_SetOutAux(self, *args)

    def GetOutAux2(self):
        """GetOutAux2(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetOutAux2(self)

    def SetOutAux2(self, *args):
        """SetOutAux2(SplineKnot self, int a)"""
        return _MaxPlus.SplineKnot_SetOutAux2(self, *args)

    def GetOutAux3(self):
        """GetOutAux3(SplineKnot self) -> int"""
        return _MaxPlus.SplineKnot_GetOutAux3(self)

    def SetOutAux3(self, *args):
        """SetOutAux3(SplineKnot self, int a)"""
        return _MaxPlus.SplineKnot_SetOutAux3(self, *args)

    def SetKnot(self, *args):
        """SetKnot(SplineKnot self, Point3 p)"""
        return _MaxPlus.SplineKnot_SetKnot(self, *args)

    def GetInVec(self):
        """GetInVec(SplineKnot self) -> Point3"""
        return _MaxPlus.SplineKnot_GetInVec(self)

    def SetInVec(self, *args):
        """SetInVec(SplineKnot self, Point3 p)"""
        return _MaxPlus.SplineKnot_SetInVec(self, *args)

    def GetOutVec(self):
        """GetOutVec(SplineKnot self) -> Point3"""
        return _MaxPlus.SplineKnot_GetOutVec(self)

    def SetOutVec(self, *args):
        """SetOutVec(SplineKnot self, Point3 p)"""
        return _MaxPlus.SplineKnot_SetOutVec(self, *args)

    def GetMatID(self):
        """GetMatID(SplineKnot self) -> MtlID"""
        return _MaxPlus.SplineKnot_GetMatID(self)

    def SetMatID(self, *args):
        """SetMatID(SplineKnot self, MtlID id)"""
        return _MaxPlus.SplineKnot_SetMatID(self, *args)

    def GetFlags(self):
        """GetFlags(SplineKnot self) -> DWORD"""
        return _MaxPlus.SplineKnot_GetFlags(self)

    def IsHidden(self):
        """IsHidden(SplineKnot self) -> bool"""
        return _MaxPlus.SplineKnot_IsHidden(self)

    def Hide(self):
        """Hide(SplineKnot self)"""
        return _MaxPlus.SplineKnot_Hide(self)

    def Unhide(self):
        """Unhide(SplineKnot self)"""
        return _MaxPlus.SplineKnot_Unhide(self)

    def IsNoSnap(self):
        """IsNoSnap(SplineKnot self) -> bool"""
        return _MaxPlus.SplineKnot_IsNoSnap(self)

    def SetNoSnap(self):
        """SetNoSnap(SplineKnot self)"""
        return _MaxPlus.SplineKnot_SetNoSnap(self)

    def ClearNoSnap(self):
        """ClearNoSnap(SplineKnot self)"""
        return _MaxPlus.SplineKnot_ClearNoSnap(self)

    def GetFlag(self, *args):
        """GetFlag(SplineKnot self, DWORD fl) -> bool"""
        return _MaxPlus.SplineKnot_GetFlag(self, *args)

    def SetFlag(self, *args):
        """
        SetFlag(SplineKnot self, DWORD fl, bool val=TRUE)
        SetFlag(SplineKnot self, DWORD fl)
        """
        return _MaxPlus.SplineKnot_SetFlag(self, *args)

    def ClearFlag(self, *args):
        """ClearFlag(SplineKnot self, DWORD fl)"""
        return _MaxPlus.SplineKnot_ClearFlag(self, *args)

    __swig_destroy__ = _MaxPlus.delete_SplineKnot
    __del__ = lambda self : None;
SplineKnot_swigregister = _MaxPlus.SplineKnot_swigregister
SplineKnot_swigregister(SplineKnot)

class ShapeObject(GeomObject):
    """An open or closed hierarchical shape made up of one or more parts such as bezier splines or poly lines."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> ShapeObject"""
        return _MaxPlus.ShapeObject__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(ShapeObject self, Wrapper w) -> bool"""
        return _MaxPlus.ShapeObject___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(ShapeObject self, Wrapper w) -> bool"""
        return _MaxPlus.ShapeObject___ne__(self, *args)

    def GetObjectDisplayRequirement(self):
        """GetObjectDisplayRequirement(ShapeObject self) -> unsigned long"""
        return _MaxPlus.ShapeObject_GetObjectDisplayRequirement(self)

    def PrepareDisplay(self, *args):
        """PrepareDisplay(ShapeObject self, MaxSDK::Graphics::UpdateDisplayContext const & prepareDisplayContext) -> bool"""
        return _MaxPlus.ShapeObject_PrepareDisplay(self, *args)

    def UpdatePerNodeItems(self, *args):
        """
        UpdatePerNodeItems(ShapeObject self, MaxSDK::Graphics::UpdateDisplayContext const & updateDisplayContext, MaxSDK::Graphics::UpdateNodeContext & nodeContext, 
            MaxSDK::Graphics::IRenderItemContainer & targetRenderItemContainer) -> bool
        """
        return _MaxPlus.ShapeObject_UpdatePerNodeItems(self, *args)

    def UpdatePerViewItems(self, *args):
        """
        UpdatePerViewItems(ShapeObject self, MaxSDK::Graphics::UpdateDisplayContext const & updateDisplayContext, MaxSDK::Graphics::UpdateNodeContext & nodeContext, 
            MaxSDK::Graphics::UpdateViewContext & viewContext, 
            MaxSDK::Graphics::IRenderItemContainer & targetRenderItemContainer) -> bool
        """
        return _MaxPlus.ShapeObject_UpdatePerViewItems(self, *args)

    def CopyBaseData(self, *args):
        """CopyBaseData(ShapeObject self, ShapeObject other)"""
        return _MaxPlus.ShapeObject_CopyBaseData(self, *args)

    def GetThickness(self, *args):
        """
        GetThickness(ShapeObject self, Interval ivalid=Autodesk::Max::Forever(), TimeValue t=Autodesk::Max::Now()) -> float
        GetThickness(ShapeObject self, Interval ivalid=Autodesk::Max::Forever()) -> float
        GetThickness(ShapeObject self) -> float
        """
        return _MaxPlus.ShapeObject_GetThickness(self, *args)

    def GetSides(self, *args):
        """
        GetSides(ShapeObject self, Interval ivalid=Autodesk::Max::Forever(), TimeValue t=Autodesk::Max::Now()) -> int
        GetSides(ShapeObject self, Interval ivalid=Autodesk::Max::Forever()) -> int
        GetSides(ShapeObject self) -> int
        """
        return _MaxPlus.ShapeObject_GetSides(self, *args)

    def GetAngle(self, *args):
        """
        GetAngle(ShapeObject self, Interval ivalid=Autodesk::Max::Forever(), TimeValue t=Autodesk::Max::Now()) -> float
        GetAngle(ShapeObject self, Interval ivalid=Autodesk::Max::Forever()) -> float
        GetAngle(ShapeObject self) -> float
        """
        return _MaxPlus.ShapeObject_GetAngle(self, *args)

    def GetViewportThickness(self):
        """GetViewportThickness(ShapeObject self) -> float"""
        return _MaxPlus.ShapeObject_GetViewportThickness(self)

    def GetViewportSides(self):
        """GetViewportSides(ShapeObject self) -> int"""
        return _MaxPlus.ShapeObject_GetViewportSides(self)

    def GetViewportAngle(self):
        """GetViewportAngle(ShapeObject self) -> float"""
        return _MaxPlus.ShapeObject_GetViewportAngle(self)

    def GetRenderable(self):
        """GetRenderable(ShapeObject self) -> bool"""
        return _MaxPlus.ShapeObject_GetRenderable(self)

    def GetGenUVs(self):
        """GetGenUVs(ShapeObject self) -> bool"""
        return _MaxPlus.ShapeObject_GetGenUVs(self)

    def GetDispRenderMesh(self):
        """GetDispRenderMesh(ShapeObject self) -> bool"""
        return _MaxPlus.ShapeObject_GetDispRenderMesh(self)

    def GetUseViewport(self):
        """GetUseViewport(ShapeObject self) -> bool"""
        return _MaxPlus.ShapeObject_GetUseViewport(self)

    def GetViewportOrRenderer(self):
        """GetViewportOrRenderer(ShapeObject self) -> bool"""
        return _MaxPlus.ShapeObject_GetViewportOrRenderer(self)

    def SetThickness(self, *args):
        """
        SetThickness(ShapeObject self, float thick, TimeValue t=Autodesk::Max::Now())
        SetThickness(ShapeObject self, float thick)
        """
        return _MaxPlus.ShapeObject_SetThickness(self, *args)

    def SetSides(self, *args):
        """
        SetSides(ShapeObject self, int s, TimeValue t=Autodesk::Max::Now())
        SetSides(ShapeObject self, int s)
        """
        return _MaxPlus.ShapeObject_SetSides(self, *args)

    def SetAngle(self, *args):
        """
        SetAngle(ShapeObject self, float a, TimeValue t=Autodesk::Max::Now())
        SetAngle(ShapeObject self, float a)
        """
        return _MaxPlus.ShapeObject_SetAngle(self, *args)

    def SetViewportThickness(self, *args):
        """SetViewportThickness(ShapeObject self, float thick)"""
        return _MaxPlus.ShapeObject_SetViewportThickness(self, *args)

    def SetViewportSides(self, *args):
        """SetViewportSides(ShapeObject self, int s)"""
        return _MaxPlus.ShapeObject_SetViewportSides(self, *args)

    def SetViewportAngle(self, *args):
        """SetViewportAngle(ShapeObject self, float a)"""
        return _MaxPlus.ShapeObject_SetViewportAngle(self, *args)

    def SetRenderable(self, *args):
        """SetRenderable(ShapeObject self, bool sw)"""
        return _MaxPlus.ShapeObject_SetRenderable(self, *args)

    def SetGenUVs(self, *args):
        """SetGenUVs(ShapeObject self, bool sw)"""
        return _MaxPlus.ShapeObject_SetGenUVs(self, *args)

    def SetDispRenderMesh(self, *args):
        """SetDispRenderMesh(ShapeObject self, bool sw)"""
        return _MaxPlus.ShapeObject_SetDispRenderMesh(self, *args)

    def SetUseViewport(self, *args):
        """SetUseViewport(ShapeObject self, bool sw)"""
        return _MaxPlus.ShapeObject_SetUseViewport(self, *args)

    def SetViewportOrRenderer(self, *args):
        """SetViewportOrRenderer(ShapeObject self, bool sw)"""
        return _MaxPlus.ShapeObject_SetViewportOrRenderer(self, *args)

    def GenerateMesh(self, *args):
        """
        GenerateMesh(ShapeObject self, int option, Mesh mesh, TimeValue t=Autodesk::Max::Now())
        GenerateMesh(ShapeObject self, int option, Mesh mesh)
        """
        return _MaxPlus.ShapeObject_GenerateMesh(self, *args)

    def GetNumberOfVertices(self, *args):
        """
        GetNumberOfVertices(ShapeObject self, int curve=-1, TimeValue t=Autodesk::Max::Now()) -> int
        GetNumberOfVertices(ShapeObject self, int curve=-1) -> int
        GetNumberOfVertices(ShapeObject self) -> int
        """
        return _MaxPlus.ShapeObject_GetNumberOfVertices(self, *args)

    def GetNumberOfCurves(self):
        """GetNumberOfCurves(ShapeObject self) -> int"""
        return _MaxPlus.ShapeObject_GetNumberOfCurves(self)

    def CurveClosed(self, *args):
        """
        CurveClosed(ShapeObject self, int curve, TimeValue t=Autodesk::Max::Now()) -> bool
        CurveClosed(ShapeObject self, int curve) -> bool
        """
        return _MaxPlus.ShapeObject_CurveClosed(self, *args)

    def InterpCurve3D(self, *args):
        """
        InterpCurve3D(ShapeObject self, int curve, float param, int ptype=PARAM_SIMPLE, TimeValue t=Autodesk::Max::Now()) -> Point3
        InterpCurve3D(ShapeObject self, int curve, float param, int ptype=PARAM_SIMPLE) -> Point3
        InterpCurve3D(ShapeObject self, int curve, float param) -> Point3
        """
        return _MaxPlus.ShapeObject_InterpCurve3D(self, *args)

    def TangentCurve3D(self, *args):
        """
        TangentCurve3D(ShapeObject self, int curve, float param, int ptype=PARAM_SIMPLE, TimeValue t=Autodesk::Max::Now()) -> Point3
        TangentCurve3D(ShapeObject self, int curve, float param, int ptype=PARAM_SIMPLE) -> Point3
        TangentCurve3D(ShapeObject self, int curve, float param) -> Point3
        """
        return _MaxPlus.ShapeObject_TangentCurve3D(self, *args)

    def GetLengthOfCurve(self, *args):
        """
        GetLengthOfCurve(ShapeObject self, int curve, TimeValue t=Autodesk::Max::Now()) -> float
        GetLengthOfCurve(ShapeObject self, int curve) -> float
        """
        return _MaxPlus.ShapeObject_GetLengthOfCurve(self, *args)

    def GetNumberOfPieces(self, *args):
        """
        GetNumberOfPieces(ShapeObject self, int curve, TimeValue t=Autodesk::Max::Now()) -> int
        GetNumberOfPieces(ShapeObject self, int curve) -> int
        """
        return _MaxPlus.ShapeObject_GetNumberOfPieces(self, *args)

    def InterpPiece3D(self, *args):
        """
        InterpPiece3D(ShapeObject self, int curve, int piece, float param, int ptype=PARAM_SIMPLE, TimeValue t=Autodesk::Max::Now()) -> Point3
        InterpPiece3D(ShapeObject self, int curve, int piece, float param, int ptype=PARAM_SIMPLE) -> Point3
        InterpPiece3D(ShapeObject self, int curve, int piece, float param) -> Point3
        """
        return _MaxPlus.ShapeObject_InterpPiece3D(self, *args)

    def TangentPiece3D(self, *args):
        """
        TangentPiece3D(ShapeObject self, int curve, int piece, float param, int ptype=PARAM_SIMPLE, TimeValue t=Autodesk::Max::Now()) -> Point3
        TangentPiece3D(ShapeObject self, int curve, int piece, float param, int ptype=PARAM_SIMPLE) -> Point3
        TangentPiece3D(ShapeObject self, int curve, int piece, float param) -> Point3
        """
        return _MaxPlus.ShapeObject_TangentPiece3D(self, *args)

    def GetMatID(self, *args):
        """
        GetMatID(ShapeObject self, int curve, int piece, TimeValue t=Autodesk::Max::Now()) -> MtlID
        GetMatID(ShapeObject self, int curve, int piece) -> MtlID
        """
        return _MaxPlus.ShapeObject_GetMatID(self, *args)

    def CanMakeBezier(self):
        """CanMakeBezier(ShapeObject self) -> bool"""
        return _MaxPlus.ShapeObject_CanMakeBezier(self)

    def MakeBezier(self, *args):
        """
        MakeBezier(ShapeObject self, BezierShape shape, TimeValue t=Autodesk::Max::Now())
        MakeBezier(ShapeObject self, BezierShape shape)
        """
        return _MaxPlus.ShapeObject_MakeBezier(self, *args)

    def MakePolyShape(self, *args):
        """
        MakePolyShape(ShapeObject self, PolyShape shape, int steps=PSHAPE_BUILTIN_STEPS, bool optimize=True, TimeValue t=Autodesk::Max::Now())
        MakePolyShape(ShapeObject self, PolyShape shape, int steps=PSHAPE_BUILTIN_STEPS, bool optimize=True)
        MakePolyShape(ShapeObject self, PolyShape shape, int steps=PSHAPE_BUILTIN_STEPS)
        MakePolyShape(ShapeObject self, PolyShape shape)
        """
        return _MaxPlus.ShapeObject_MakePolyShape(self, *args)

    def AttachShape(self, *args):
        """
        AttachShape(ShapeObject self, INode thisNode, INode attachNode, bool weldEnds=True, float weldThreshold=0.0, TimeValue t=Autodesk::Max::Now()) -> bool
        AttachShape(ShapeObject self, INode thisNode, INode attachNode, bool weldEnds=True, float weldThreshold=0.0) -> bool
        AttachShape(ShapeObject self, INode thisNode, INode attachNode, bool weldEnds=True) -> bool
        AttachShape(ShapeObject self, INode thisNode, INode attachNode) -> bool
        """
        return _MaxPlus.ShapeObject_AttachShape(self, *args)

    def GetShapeObjValidity(self, *args):
        """
        GetShapeObjValidity(ShapeObject self, TimeValue t=Autodesk::Max::Now()) -> Interval
        GetShapeObjValidity(ShapeObject self) -> Interval
        """
        return _MaxPlus.ShapeObject_GetShapeObjValidity(self, *args)

    def GetUsePhysicalScaleUVs(self):
        """GetUsePhysicalScaleUVs(ShapeObject self) -> bool"""
        return _MaxPlus.ShapeObject_GetUsePhysicalScaleUVs(self)

    def SetUsePhysicalScaleUVs(self, *args):
        """SetUsePhysicalScaleUVs(ShapeObject self, bool flag)"""
        return _MaxPlus.ShapeObject_SetUsePhysicalScaleUVs(self, *args)

    __swig_destroy__ = _MaxPlus.delete_ShapeObject
    __del__ = lambda self : None;
ShapeObject_swigregister = _MaxPlus.ShapeObject_swigregister
ShapeObject_swigregister(ShapeObject)

def ShapeObject__CastFrom(*args):
  """ShapeObject__CastFrom(InterfaceServer b) -> ShapeObject"""
  return _MaxPlus.ShapeObject__CastFrom(*args)

class LinearShape(ShapeObject):
    """A linear shape scene element similar to a SplineShape except it uses a PolyShape instead of a BezierShape."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> LinearShape"""
        return _MaxPlus.LinearShape__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(LinearShape self, Wrapper w) -> bool"""
        return _MaxPlus.LinearShape___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(LinearShape self, Wrapper w) -> bool"""
        return _MaxPlus.LinearShape___ne__(self, *args)

    def CopyFrom(self, *args):
        """CopyFrom(LinearShape self, LinearShape other)"""
        return _MaxPlus.LinearShape_CopyFrom(self, *args)

    def GetShape(self):
        """GetShape(LinearShape self) -> PolyShape"""
        return _MaxPlus.LinearShape_GetShape(self)

    __swig_destroy__ = _MaxPlus.delete_LinearShape
    __del__ = lambda self : None;
LinearShape_swigregister = _MaxPlus.LinearShape_swigregister
LinearShape_swigregister(LinearShape)

def LinearShape__CastFrom(*args):
  """LinearShape__CastFrom(InterfaceServer b) -> LinearShape"""
  return _MaxPlus.LinearShape__CastFrom(*args)

class SplineShape(ShapeObject):
    """Proxy of C++ Autodesk::Max::SplineShape class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def _CastFrom(*args):
        """_CastFrom(InterfaceServer b) -> SplineShape"""
        return _MaxPlus.SplineShape__CastFrom(*args)

    _CastFrom = staticmethod(_CastFrom)
    def __eq__(self, *args):
        """__eq__(SplineShape self, Wrapper w) -> bool"""
        return _MaxPlus.SplineShape___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(SplineShape self, Wrapper w) -> bool"""
        return _MaxPlus.SplineShape___ne__(self, *args)

    def CopyFrom(self, *args):
        """CopyFrom(SplineShape self, SplineShape other)"""
        return _MaxPlus.SplineShape_CopyFrom(self, *args)

    def GetShape(self):
        """GetShape(SplineShape self) -> BezierShape"""
        return _MaxPlus.SplineShape_GetShape(self)

    __swig_destroy__ = _MaxPlus.delete_SplineShape
    __del__ = lambda self : None;
SplineShape_swigregister = _MaxPlus.SplineShape_swigregister
SplineShape_swigregister(SplineShape)

def SplineShape__CastFrom(*args):
  """SplineShape__CastFrom(InterfaceServer b) -> SplineShape"""
  return _MaxPlus.SplineShape__CastFrom(*args)

class FileManager(object):
    """Static functions for working with files. For example loading, saving, importing, exporting, merging and so forth."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Open(*args):
        """
        Open()
        Open(wchar_t const * name, bool NoPrompts=False, bool UseFileUnits=True, bool RefeshViewports=True, 
            bool SetCurrentFilePath=True) -> bool
        Open(wchar_t const * name, bool NoPrompts=False, bool UseFileUnits=True, bool RefeshViewports=True) -> bool
        Open(wchar_t const * name, bool NoPrompts=False, bool UseFileUnits=True) -> bool
        Open(wchar_t const * name, bool NoPrompts=False) -> bool
        Open(wchar_t const * name) -> bool
        """
        return _MaxPlus.FileManager_Open(*args)

    Open = staticmethod(Open)
    def Save(*args):
        """
        Save() -> bool
        Save(wchar_t const * name, bool clearNeedSaveFlag=True, bool useNewFile=True) -> bool
        Save(wchar_t const * name, bool clearNeedSaveFlag=True) -> bool
        Save(wchar_t const * name) -> bool
        """
        return _MaxPlus.FileManager_Save(*args)

    Save = staticmethod(Save)
    def SaveAs():
        """SaveAs() -> bool"""
        return _MaxPlus.FileManager_SaveAs()

    SaveAs = staticmethod(SaveAs)
    def SaveSelected(*args):
        """
        SaveSelected()
        SaveSelected(wchar_t const * fname)
        """
        return _MaxPlus.FileManager_SaveSelected(*args)

    SaveSelected = staticmethod(SaveSelected)
    def SaveNodes(*args):
        """SaveNodes(INodeTab nodes, wchar_t const * fname)"""
        return _MaxPlus.FileManager_SaveNodes(*args)

    SaveNodes = staticmethod(SaveNodes)
    def Export(*args):
        """
        Export() -> bool
        Export(wchar_t const * name, bool SuppressPrompts=False) -> bool
        Export(wchar_t const * name) -> bool
        """
        return _MaxPlus.FileManager_Export(*args)

    Export = staticmethod(Export)
    def ExportSelected(*args):
        """
        ExportSelected(wchar_t const * name, bool SuppressPrompts=False) -> bool
        ExportSelected(wchar_t const * name) -> bool
        """
        return _MaxPlus.FileManager_ExportSelected(*args)

    ExportSelected = staticmethod(ExportSelected)
    def Import(*args):
        """
        Import() -> bool
        Import(wchar_t const * name, bool SuppressPrompts=False) -> bool
        Import(wchar_t const * name) -> bool
        """
        return _MaxPlus.FileManager_Import(*args)

    Import = staticmethod(Import)
    def Merge(*args):
        """
        Merge()
        Merge(wchar_t const * name, bool mergeAll=False, bool selectMerged=False) -> bool
        Merge(wchar_t const * name, bool mergeAll=False) -> bool
        Merge(wchar_t const * name) -> bool
        """
        return _MaxPlus.FileManager_Merge(*args)

    Merge = staticmethod(Merge)
    def Reset(noPrompt=False):
        """
        Reset(bool noPrompt=False)
        Reset()
        """
        return _MaxPlus.FileManager_Reset(noPrompt)

    Reset = staticmethod(Reset)
    def Hold():
        """Hold()"""
        return _MaxPlus.FileManager_Hold()

    Hold = staticmethod(Hold)
    def Fetch():
        """Fetch()"""
        return _MaxPlus.FileManager_Fetch()

    Fetch = staticmethod(Fetch)
    def GetFileNameAndPath():
        """GetFileNameAndPath() -> WStr"""
        return _MaxPlus.FileManager_GetFileNameAndPath()

    GetFileNameAndPath = staticmethod(GetFileNameAndPath)
    def GetFileName():
        """GetFileName() -> WStr"""
        return _MaxPlus.FileManager_GetFileName()

    GetFileName = staticmethod(GetFileName)
    def IsMaxFile(*args):
        """IsMaxFile(wchar_t const * filename) -> bool"""
        return _MaxPlus.FileManager_IsMaxFile(*args)

    IsMaxFile = staticmethod(IsMaxFile)
    def IsSavingToFile():
        """IsSavingToFile() -> bool"""
        return _MaxPlus.FileManager_IsSavingToFile()

    IsSavingToFile = staticmethod(IsSavingToFile)
    def CheckForSave():
        """CheckForSave() -> bool"""
        return _MaxPlus.FileManager_CheckForSave()

    CheckForSave = staticmethod(CheckForSave)
    def CanImportFile(*args):
        """CanImportFile(wchar_t const * filename) -> bool"""
        return _MaxPlus.FileManager_CanImportFile(*args)

    CanImportFile = staticmethod(CanImportFile)
    def CanImportBitmap(*args):
        """CanImportBitmap(wchar_t const * filename) -> bool"""
        return _MaxPlus.FileManager_CanImportBitmap(*args)

    CanImportBitmap = staticmethod(CanImportBitmap)
    def SaveSceneAsVersion(*args):
        """
        SaveSceneAsVersion(wchar_t const * fname, bool clearNeedSaveFlag=True, bool useNewFile=True, unsigned long saveAsVersion=MAX_RELEASE) -> bool
        SaveSceneAsVersion(wchar_t const * fname, bool clearNeedSaveFlag=True, bool useNewFile=True) -> bool
        SaveSceneAsVersion(wchar_t const * fname, bool clearNeedSaveFlag=True) -> bool
        SaveSceneAsVersion(wchar_t const * fname) -> bool
        """
        return _MaxPlus.FileManager_SaveSceneAsVersion(*args)

    SaveSceneAsVersion = staticmethod(SaveSceneAsVersion)
    def SaveNodesAsVersion(*args):
        """
        SaveNodesAsVersion(wchar_t const * fname, INodeTab nodes, unsigned long saveAsVersion=MAX_RELEASE) -> bool
        SaveNodesAsVersion(wchar_t const * fname, INodeTab nodes) -> bool
        """
        return _MaxPlus.FileManager_SaveNodesAsVersion(*args)

    SaveNodesAsVersion = staticmethod(SaveNodesAsVersion)
    def SaveSelectedNodesAsVersion(*args):
        """
        SaveSelectedNodesAsVersion(wchar_t const * fname, unsigned long saveAsVersion=MAX_RELEASE) -> bool
        SaveSelectedNodesAsVersion(wchar_t const * fname) -> bool
        """
        return _MaxPlus.FileManager_SaveSelectedNodesAsVersion(*args)

    SaveSelectedNodesAsVersion = staticmethod(SaveSelectedNodesAsVersion)
    def ChooseDirectory(*args):
        """
        ChooseDirectory(HWND hWnd, wchar_t * title, wchar_t * dir, wchar_t * desc=None)
        ChooseDirectory(HWND hWnd, wchar_t * title, wchar_t * dir)
        """
        return _MaxPlus.FileManager_ChooseDirectory(*args)

    ChooseDirectory = staticmethod(ChooseDirectory)
    def DoMaxFileSaveAsDlg(*args):
        """
        DoMaxFileSaveAsDlg(WStr fileName, bool setAsCurrent=True) -> bool
        DoMaxFileSaveAsDlg(WStr fileName) -> bool
        """
        return _MaxPlus.FileManager_DoMaxFileSaveAsDlg(*args)

    DoMaxFileSaveAsDlg = staticmethod(DoMaxFileSaveAsDlg)
    def AppendToCurFilePath(*args):
        """AppendToCurFilePath(wchar_t const * toAppend) -> bool"""
        return _MaxPlus.FileManager_AppendToCurFilePath(*args)

    AppendToCurFilePath = staticmethod(AppendToCurFilePath)
    def DownloadUrl(*args):
        """
        DownloadUrl(HWND hwnd, wchar_t const * url, wchar_t const * filename, DWORD flags=0) -> bool
        DownloadUrl(HWND hwnd, wchar_t const * url, wchar_t const * filename) -> bool
        """
        return _MaxPlus.FileManager_DownloadUrl(*args)

    DownloadUrl = staticmethod(DownloadUrl)
    def IsInternetCachedFile(*args):
        """IsInternetCachedFile(wchar_t const * filename) -> bool"""
        return _MaxPlus.FileManager_IsInternetCachedFile(*args)

    IsInternetCachedFile = staticmethod(IsInternetCachedFile)
    def ConfigureBitmapPaths():
        """ConfigureBitmapPaths() -> int"""
        return _MaxPlus.FileManager_ConfigureBitmapPaths()

    ConfigureBitmapPaths = staticmethod(ConfigureBitmapPaths)
    def SetSaveRequiredFlag(*args):
        """
        SetSaveRequiredFlag(bool requireSave=TRUE, bool requireAutoBackupSave=TRUE)
        SetSaveRequiredFlag(bool requireSave=TRUE)
        SetSaveRequiredFlag()
        """
        return _MaxPlus.FileManager_SetSaveRequiredFlag(*args)

    SetSaveRequiredFlag = staticmethod(SetSaveRequiredFlag)
    def GetSaveRequiredFlag():
        """GetSaveRequiredFlag() -> bool"""
        return _MaxPlus.FileManager_GetSaveRequiredFlag()

    GetSaveRequiredFlag = staticmethod(GetSaveRequiredFlag)
    def IsSaveRequired():
        """IsSaveRequired() -> bool"""
        return _MaxPlus.FileManager_IsSaveRequired()

    IsSaveRequired = staticmethod(IsSaveRequired)
    def IsAutoSaveRequired():
        """IsAutoSaveRequired() -> bool"""
        return _MaxPlus.FileManager_IsAutoSaveRequired()

    IsAutoSaveRequired = staticmethod(IsAutoSaveRequired)
    def GetSavingVersion():
        """GetSavingVersion() -> DWORD"""
        return _MaxPlus.FileManager_GetSavingVersion()

    GetSavingVersion = staticmethod(GetSavingVersion)
    def SetSavingVersion(*args):
        """SetSavingVersion(DWORD version) -> DWORD"""
        return _MaxPlus.FileManager_SetSavingVersion(*args)

    SetSavingVersion = staticmethod(SetSavingVersion)
    def DoesFileExist(*args):
        """
        DoesFileExist(wchar_t const * file, bool allowDirectory=True) -> bool
        DoesFileExist(wchar_t const * file) -> bool
        """
        return _MaxPlus.FileManager_DoesFileExist(*args)

    DoesFileExist = staticmethod(DoesFileExist)
    __swig_destroy__ = _MaxPlus.delete_FileManager
    __del__ = lambda self : None;
FileManager_swigregister = _MaxPlus.FileManager_swigregister
FileManager_swigregister(FileManager)

def FileManager_Open(*args):
  """
    Open()
    Open(wchar_t const * name, bool NoPrompts=False, bool UseFileUnits=True, bool RefeshViewports=True, 
        bool SetCurrentFilePath=True) -> bool
    Open(wchar_t const * name, bool NoPrompts=False, bool UseFileUnits=True, bool RefeshViewports=True) -> bool
    Open(wchar_t const * name, bool NoPrompts=False, bool UseFileUnits=True) -> bool
    Open(wchar_t const * name, bool NoPrompts=False) -> bool
    FileManager_Open(wchar_t const * name) -> bool
    """
  return _MaxPlus.FileManager_Open(*args)

def FileManager_Save(*args):
  """
    Save() -> bool
    Save(wchar_t const * name, bool clearNeedSaveFlag=True, bool useNewFile=True) -> bool
    Save(wchar_t const * name, bool clearNeedSaveFlag=True) -> bool
    FileManager_Save(wchar_t const * name) -> bool
    """
  return _MaxPlus.FileManager_Save(*args)

def FileManager_SaveAs():
  """FileManager_SaveAs() -> bool"""
  return _MaxPlus.FileManager_SaveAs()

def FileManager_SaveSelected(*args):
  """
    SaveSelected()
    FileManager_SaveSelected(wchar_t const * fname)
    """
  return _MaxPlus.FileManager_SaveSelected(*args)

def FileManager_SaveNodes(*args):
  """FileManager_SaveNodes(INodeTab nodes, wchar_t const * fname)"""
  return _MaxPlus.FileManager_SaveNodes(*args)

def FileManager_Export(*args):
  """
    Export() -> bool
    Export(wchar_t const * name, bool SuppressPrompts=False) -> bool
    FileManager_Export(wchar_t const * name) -> bool
    """
  return _MaxPlus.FileManager_Export(*args)

def FileManager_ExportSelected(*args):
  """
    ExportSelected(wchar_t const * name, bool SuppressPrompts=False) -> bool
    FileManager_ExportSelected(wchar_t const * name) -> bool
    """
  return _MaxPlus.FileManager_ExportSelected(*args)

def FileManager_Import(*args):
  """
    Import() -> bool
    Import(wchar_t const * name, bool SuppressPrompts=False) -> bool
    FileManager_Import(wchar_t const * name) -> bool
    """
  return _MaxPlus.FileManager_Import(*args)

def FileManager_Merge(*args):
  """
    Merge()
    Merge(wchar_t const * name, bool mergeAll=False, bool selectMerged=False) -> bool
    Merge(wchar_t const * name, bool mergeAll=False) -> bool
    FileManager_Merge(wchar_t const * name) -> bool
    """
  return _MaxPlus.FileManager_Merge(*args)

def FileManager_Reset(noPrompt=False):
  """
    Reset(bool noPrompt=False)
    FileManager_Reset()
    """
  return _MaxPlus.FileManager_Reset(noPrompt)

def FileManager_Hold():
  """FileManager_Hold()"""
  return _MaxPlus.FileManager_Hold()

def FileManager_Fetch():
  """FileManager_Fetch()"""
  return _MaxPlus.FileManager_Fetch()

def FileManager_GetFileNameAndPath():
  """FileManager_GetFileNameAndPath() -> WStr"""
  return _MaxPlus.FileManager_GetFileNameAndPath()

def FileManager_GetFileName():
  """FileManager_GetFileName() -> WStr"""
  return _MaxPlus.FileManager_GetFileName()

def FileManager_IsMaxFile(*args):
  """FileManager_IsMaxFile(wchar_t const * filename) -> bool"""
  return _MaxPlus.FileManager_IsMaxFile(*args)

def FileManager_IsSavingToFile():
  """FileManager_IsSavingToFile() -> bool"""
  return _MaxPlus.FileManager_IsSavingToFile()

def FileManager_CheckForSave():
  """FileManager_CheckForSave() -> bool"""
  return _MaxPlus.FileManager_CheckForSave()

def FileManager_CanImportFile(*args):
  """FileManager_CanImportFile(wchar_t const * filename) -> bool"""
  return _MaxPlus.FileManager_CanImportFile(*args)

def FileManager_CanImportBitmap(*args):
  """FileManager_CanImportBitmap(wchar_t const * filename) -> bool"""
  return _MaxPlus.FileManager_CanImportBitmap(*args)

def FileManager_SaveSceneAsVersion(*args):
  """
    SaveSceneAsVersion(wchar_t const * fname, bool clearNeedSaveFlag=True, bool useNewFile=True, unsigned long saveAsVersion=MAX_RELEASE) -> bool
    SaveSceneAsVersion(wchar_t const * fname, bool clearNeedSaveFlag=True, bool useNewFile=True) -> bool
    SaveSceneAsVersion(wchar_t const * fname, bool clearNeedSaveFlag=True) -> bool
    FileManager_SaveSceneAsVersion(wchar_t const * fname) -> bool
    """
  return _MaxPlus.FileManager_SaveSceneAsVersion(*args)

def FileManager_SaveNodesAsVersion(*args):
  """
    SaveNodesAsVersion(wchar_t const * fname, INodeTab nodes, unsigned long saveAsVersion=MAX_RELEASE) -> bool
    FileManager_SaveNodesAsVersion(wchar_t const * fname, INodeTab nodes) -> bool
    """
  return _MaxPlus.FileManager_SaveNodesAsVersion(*args)

def FileManager_SaveSelectedNodesAsVersion(*args):
  """
    SaveSelectedNodesAsVersion(wchar_t const * fname, unsigned long saveAsVersion=MAX_RELEASE) -> bool
    FileManager_SaveSelectedNodesAsVersion(wchar_t const * fname) -> bool
    """
  return _MaxPlus.FileManager_SaveSelectedNodesAsVersion(*args)

def FileManager_ChooseDirectory(*args):
  """
    ChooseDirectory(HWND hWnd, wchar_t * title, wchar_t * dir, wchar_t * desc=None)
    FileManager_ChooseDirectory(HWND hWnd, wchar_t * title, wchar_t * dir)
    """
  return _MaxPlus.FileManager_ChooseDirectory(*args)

def FileManager_DoMaxFileSaveAsDlg(*args):
  """
    DoMaxFileSaveAsDlg(WStr fileName, bool setAsCurrent=True) -> bool
    FileManager_DoMaxFileSaveAsDlg(WStr fileName) -> bool
    """
  return _MaxPlus.FileManager_DoMaxFileSaveAsDlg(*args)

def FileManager_AppendToCurFilePath(*args):
  """FileManager_AppendToCurFilePath(wchar_t const * toAppend) -> bool"""
  return _MaxPlus.FileManager_AppendToCurFilePath(*args)

def FileManager_DownloadUrl(*args):
  """
    DownloadUrl(HWND hwnd, wchar_t const * url, wchar_t const * filename, DWORD flags=0) -> bool
    FileManager_DownloadUrl(HWND hwnd, wchar_t const * url, wchar_t const * filename) -> bool
    """
  return _MaxPlus.FileManager_DownloadUrl(*args)

def FileManager_IsInternetCachedFile(*args):
  """FileManager_IsInternetCachedFile(wchar_t const * filename) -> bool"""
  return _MaxPlus.FileManager_IsInternetCachedFile(*args)

def FileManager_ConfigureBitmapPaths():
  """FileManager_ConfigureBitmapPaths() -> int"""
  return _MaxPlus.FileManager_ConfigureBitmapPaths()

def FileManager_SetSaveRequiredFlag(*args):
  """
    SetSaveRequiredFlag(bool requireSave=TRUE, bool requireAutoBackupSave=TRUE)
    SetSaveRequiredFlag(bool requireSave=TRUE)
    FileManager_SetSaveRequiredFlag()
    """
  return _MaxPlus.FileManager_SetSaveRequiredFlag(*args)

def FileManager_GetSaveRequiredFlag():
  """FileManager_GetSaveRequiredFlag() -> bool"""
  return _MaxPlus.FileManager_GetSaveRequiredFlag()

def FileManager_IsSaveRequired():
  """FileManager_IsSaveRequired() -> bool"""
  return _MaxPlus.FileManager_IsSaveRequired()

def FileManager_IsAutoSaveRequired():
  """FileManager_IsAutoSaveRequired() -> bool"""
  return _MaxPlus.FileManager_IsAutoSaveRequired()

def FileManager_GetSavingVersion():
  """FileManager_GetSavingVersion() -> DWORD"""
  return _MaxPlus.FileManager_GetSavingVersion()

def FileManager_SetSavingVersion(*args):
  """FileManager_SetSavingVersion(DWORD version) -> DWORD"""
  return _MaxPlus.FileManager_SetSavingVersion(*args)

def FileManager_DoesFileExist(*args):
  """
    DoesFileExist(wchar_t const * file, bool allowDirectory=True) -> bool
    FileManager_DoesFileExist(wchar_t const * file) -> bool
    """
  return _MaxPlus.FileManager_DoesFileExist(*args)

class AssetType(object):
    """Represents the different kinds of assets"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    OtherAsset = _MaxPlus.AssetType_OtherAsset
    BitmapAsset = _MaxPlus.AssetType_BitmapAsset
    XRefAsset = _MaxPlus.AssetType_XRefAsset
    PhotometricAsset = _MaxPlus.AssetType_PhotometricAsset
    AnimationAsset = _MaxPlus.AssetType_AnimationAsset
    VideoPost = _MaxPlus.AssetType_VideoPost
    BatchRender = _MaxPlus.AssetType_BatchRender
    ExternalLink = _MaxPlus.AssetType_ExternalLink
    RenderOutput = _MaxPlus.AssetType_RenderOutput
    PreRenderScript = _MaxPlus.AssetType_PreRenderScript
    PostRenderScript = _MaxPlus.AssetType_PostRenderScript
    SoundAsset = _MaxPlus.AssetType_SoundAsset
    ContainerAsset = _MaxPlus.AssetType_ContainerAsset
    MaxCreationGraph = _MaxPlus.AssetType_MaxCreationGraph
    PredefinedAssetTypeCount = _MaxPlus.AssetType_PredefinedAssetTypeCount
    __swig_destroy__ = _MaxPlus.delete_AssetType
    __del__ = lambda self : None;
AssetType_swigregister = _MaxPlus.AssetType_swigregister
AssetType_swigregister(AssetType)

class Asset(Wrapper):
    """Represents an auxiliary file referenced by a 3ds Max scene or object. The specified file is the original file path (possibly a relative path) given to the asset while the resolved file name is the full path to the file resolved by 3ds Max."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetSpecifiedFileName(self):
        """GetSpecifiedFileName(Asset self) -> WStr"""
        return _MaxPlus.Asset_GetSpecifiedFileName(self)

    def GetResolvedFileName(self):
        """GetResolvedFileName(Asset self) -> WStr"""
        return _MaxPlus.Asset_GetResolvedFileName(self)

    def GetAssetType(self):
        """GetAssetType(Asset self) -> Autodesk::Max::AssetType::Type"""
        return _MaxPlus.Asset_GetAssetType(self)

    SpecifiedFileName = _swig_property(GetSpecifiedFileName)
    ResolvedFileName = _swig_property(GetResolvedFileName)

    Type = _swig_property(GetAssetType)




    __swig_destroy__ = _MaxPlus.delete_Asset
    __del__ = lambda self : None;
Asset_swigregister = _MaxPlus.Asset_swigregister
Asset_swigregister(Asset)

class AssetTuple(object):
    """Proxy of C++ Autodesk::Max::Tuple<(Autodesk::Max::Asset)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __len__(self):
        """__len__(AssetTuple self) -> int"""
        return _MaxPlus.AssetTuple___len__(self)

    def __getitem__(self, *args):
        """__getitem__(AssetTuple self, int n) -> Asset"""
        return _MaxPlus.AssetTuple___getitem__(self, *args)

    def GetCount(self):
        """GetCount(AssetTuple self) -> int"""
        return _MaxPlus.AssetTuple_GetCount(self)

    def At(self, *args):
        """At(AssetTuple self, int n) -> Asset"""
        return _MaxPlus.AssetTuple_At(self, *args)

    __swig_destroy__ = _MaxPlus.delete_AssetTuple
    __del__ = lambda self : None;
AssetTuple_swigregister = _MaxPlus.AssetTuple_swigregister
AssetTuple_swigregister(AssetTuple)

class AssetManager(object):
    """Allows creation of asset objects, and lists the assets currently used in the scene."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def CreateAsset(*args):
        """
        CreateAsset(wchar_t const * file=_T(""), Autodesk::Max::AssetType::Type type=OtherAsset) -> Asset
        CreateAsset(wchar_t const * file=_T("")) -> Asset
        CreateAsset() -> Asset
        """
        return _MaxPlus.AssetManager_CreateAsset(*args)

    CreateAsset = staticmethod(CreateAsset)
    def GetAssets(*args):
        """
        GetAssets(int const flags=FileEnumAll) -> AssetTuple
        GetAssets() -> AssetTuple
        """
        return _MaxPlus.AssetManager_GetAssets(*args)

    GetAssets = staticmethod(GetAssets)
    __swig_destroy__ = _MaxPlus.delete_AssetManager
    __del__ = lambda self : None;
AssetManager_swigregister = _MaxPlus.AssetManager_swigregister
AssetManager_swigregister(AssetManager)

def AssetManager_CreateAsset(*args):
  """
    CreateAsset(wchar_t const * file=_T(""), Autodesk::Max::AssetType::Type type=OtherAsset) -> Asset
    CreateAsset(wchar_t const * file=_T("")) -> Asset
    AssetManager_CreateAsset() -> Asset
    """
  return _MaxPlus.AssetManager_CreateAsset(*args)

def AssetManager_GetAssets(*args):
  """
    GetAssets(int const flags=FileEnumAll) -> AssetTuple
    AssetManager_GetAssets() -> AssetTuple
    """
  return _MaxPlus.AssetManager_GetAssets(*args)

class Core(object):
    """Provides access to commonly used global functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetRootNode():
        """GetRootNode() -> INode"""
        return _MaxPlus.Core_GetRootNode()

    GetRootNode = staticmethod(GetRootNode)
    def Print(*args):
        """Print(wchar_t const * x)"""
        return _MaxPlus.Core_Print(*args)

    Print = staticmethod(Print)
    def GetCurrentTime():
        """GetCurrentTime() -> TimeValue"""
        return _MaxPlus.Core_GetCurrentTime()

    GetCurrentTime = staticmethod(GetCurrentTime)
    def SetCurrentTime(*args):
        """SetCurrentTime(TimeValue t)"""
        return _MaxPlus.Core_SetCurrentTime(*args)

    SetCurrentTime = staticmethod(SetCurrentTime)
    def SetCurrentTimeContext(*args):
        """SetCurrentTimeContext(TimeValue t) -> TimeValue"""
        return _MaxPlus.Core_SetCurrentTimeContext(*args)

    SetCurrentTimeContext = staticmethod(SetCurrentTimeContext)
    def GetCurrentTimeContext():
        """GetCurrentTimeContext() -> TimeValue"""
        return _MaxPlus.Core_GetCurrentTimeContext()

    GetCurrentTimeContext = staticmethod(GetCurrentTimeContext)
    def ResetCurrentTimeContext():
        """ResetCurrentTimeContext()"""
        return _MaxPlus.Core_ResetCurrentTimeContext()

    ResetCurrentTimeContext = staticmethod(ResetCurrentTimeContext)
    def UseCurrentTimeContext():
        """UseCurrentTimeContext() -> bool"""
        return _MaxPlus.Core_UseCurrentTimeContext()

    UseCurrentTimeContext = staticmethod(UseCurrentTimeContext)
    def GetWindowHandle():
        """GetWindowHandle() -> int"""
        return _MaxPlus.Core_GetWindowHandle()

    GetWindowHandle = staticmethod(GetWindowHandle)
    def Write(*args):
        """Write(wchar_t const * x)"""
        return _MaxPlus.Core_Write(*args)

    Write = staticmethod(Write)
    def WriteLine(*args):
        """WriteLine(wchar_t const * x)"""
        return _MaxPlus.Core_WriteLine(*args)

    WriteLine = staticmethod(WriteLine)
    def EvalMAXScript(*args):
        """
        EvalMAXScript(wchar_t const * s, FPValue result) -> bool
        EvalMAXScript(wchar_t const * s) -> FPValue
        """
        return _MaxPlus.Core_EvalMAXScript(*args)

    EvalMAXScript = staticmethod(EvalMAXScript)
    def ExecuteMAXScript(*args):
        """ExecuteMAXScript(wchar_t const * s)"""
        return _MaxPlus.Core_ExecuteMAXScript(*args)

    ExecuteMAXScript = staticmethod(ExecuteMAXScript)
    def EditMAXScriptFile(*args):
        """EditMAXScriptFile(wchar_t const * fileName)"""
        return _MaxPlus.Core_EditMAXScriptFile(*args)

    EditMAXScriptFile = staticmethod(EditMAXScriptFile)
    def GetCOREInterface(*args):
        """GetCOREInterface(Interface_ID id) -> FPInterface"""
        return _MaxPlus.Core_GetCOREInterface(*args)

    GetCOREInterface = staticmethod(GetCOREInterface)
    def GetCOREInterfaceAt(*args):
        """GetCOREInterfaceAt(int i) -> FPInterface"""
        return _MaxPlus.Core_GetCOREInterfaceAt(*args)

    GetCOREInterfaceAt = staticmethod(GetCOREInterfaceAt)
    def GetInterface(*args):
        """GetInterface(SClass_ID super, Class_ID cls, Interface_ID id) -> FPInterface"""
        return _MaxPlus.Core_GetInterface(*args)

    GetInterface = staticmethod(GetInterface)
    def GetFPInterface(*args):
        """GetFPInterface(BaseInterface bi) -> FPInterface"""
        return _MaxPlus.Core_GetFPInterface(*args)

    GetFPInterface = staticmethod(GetFPInterface)
    def GetFPInterfaceDesc(*args):
        """GetFPInterfaceDesc(BaseInterface bi) -> FPInterfaceDesc"""
        return _MaxPlus.Core_GetFPInterfaceDesc(*args)

    GetFPInterfaceDesc = staticmethod(GetFPInterfaceDesc)
    __swig_destroy__ = _MaxPlus.delete_Core
    __del__ = lambda self : None;
Core_swigregister = _MaxPlus.Core_swigregister
Core_swigregister(Core)

def Core_GetRootNode():
  """Core_GetRootNode() -> INode"""
  return _MaxPlus.Core_GetRootNode()

def Core_Print(*args):
  """Core_Print(wchar_t const * x)"""
  return _MaxPlus.Core_Print(*args)

def Core_GetCurrentTime():
  """Core_GetCurrentTime() -> TimeValue"""
  return _MaxPlus.Core_GetCurrentTime()

def Core_SetCurrentTime(*args):
  """Core_SetCurrentTime(TimeValue t)"""
  return _MaxPlus.Core_SetCurrentTime(*args)

def Core_SetCurrentTimeContext(*args):
  """Core_SetCurrentTimeContext(TimeValue t) -> TimeValue"""
  return _MaxPlus.Core_SetCurrentTimeContext(*args)

def Core_GetCurrentTimeContext():
  """Core_GetCurrentTimeContext() -> TimeValue"""
  return _MaxPlus.Core_GetCurrentTimeContext()

def Core_ResetCurrentTimeContext():
  """Core_ResetCurrentTimeContext()"""
  return _MaxPlus.Core_ResetCurrentTimeContext()

def Core_UseCurrentTimeContext():
  """Core_UseCurrentTimeContext() -> bool"""
  return _MaxPlus.Core_UseCurrentTimeContext()

def Core_GetWindowHandle():
  """Core_GetWindowHandle() -> int"""
  return _MaxPlus.Core_GetWindowHandle()

def Core_Write(*args):
  """Core_Write(wchar_t const * x)"""
  return _MaxPlus.Core_Write(*args)

def Core_WriteLine(*args):
  """Core_WriteLine(wchar_t const * x)"""
  return _MaxPlus.Core_WriteLine(*args)

def Core_EvalMAXScript(*args):
  """
    EvalMAXScript(wchar_t const * s, FPValue result) -> bool
    Core_EvalMAXScript(wchar_t const * s) -> FPValue
    """
  return _MaxPlus.Core_EvalMAXScript(*args)

def Core_ExecuteMAXScript(*args):
  """Core_ExecuteMAXScript(wchar_t const * s)"""
  return _MaxPlus.Core_ExecuteMAXScript(*args)

def Core_EditMAXScriptFile(*args):
  """Core_EditMAXScriptFile(wchar_t const * fileName)"""
  return _MaxPlus.Core_EditMAXScriptFile(*args)

def Core_GetCOREInterface(*args):
  """Core_GetCOREInterface(Interface_ID id) -> FPInterface"""
  return _MaxPlus.Core_GetCOREInterface(*args)

def Core_GetCOREInterfaceAt(*args):
  """Core_GetCOREInterfaceAt(int i) -> FPInterface"""
  return _MaxPlus.Core_GetCOREInterfaceAt(*args)

def Core_GetInterface(*args):
  """Core_GetInterface(SClass_ID super, Class_ID cls, Interface_ID id) -> FPInterface"""
  return _MaxPlus.Core_GetInterface(*args)

def Core_GetFPInterface(*args):
  """Core_GetFPInterface(BaseInterface bi) -> FPInterface"""
  return _MaxPlus.Core_GetFPInterface(*args)

def Core_GetFPInterfaceDesc(*args):
  """Core_GetFPInterfaceDesc(BaseInterface bi) -> FPInterfaceDesc"""
  return _MaxPlus.Core_GetFPInterfaceDesc(*args)

kNodeProp_Material = _MaxPlus.kNodeProp_Material
kNodeProp_Layer = _MaxPlus.kNodeProp_Layer
kNodeProp_All = _MaxPlus.kNodeProp_All
mtlDlgMode_Basic = _MaxPlus.mtlDlgMode_Basic
mtlDlgMode_Advanced = _MaxPlus.mtlDlgMode_Advanced
kRefreshViewports = _MaxPlus.kRefreshViewports
kSuppressPrompts = _MaxPlus.kSuppressPrompts
kUseFileUnits = _MaxPlus.kUseFileUnits
kSetCurrentFilePath = _MaxPlus.kSetCurrentFilePath
class Application(object):
    """High-level utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Get3DSMAXVersion():
        """Get3DSMAXVersion() -> DWORD"""
        return _MaxPlus.Application_Get3DSMAXVersion()

    Get3DSMAXVersion = staticmethod(Get3DSMAXVersion)
    def GetProductVersion():
        """GetProductVersion() -> int"""
        return _MaxPlus.Application_GetProductVersion()

    GetProductVersion = staticmethod(GetProductVersion)
    def GetLicenseBehavior():
        """GetLicenseBehavior() -> int"""
        return _MaxPlus.Application_GetLicenseBehavior()

    GetLicenseBehavior = staticmethod(GetLicenseBehavior)
    def IsFeatureLicensed(*args):
        """IsFeatureLicensed(int subNum) -> bool"""
        return _MaxPlus.Application_IsFeatureLicensed(*args)

    IsFeatureLicensed = staticmethod(IsFeatureLicensed)
    def GetLicenseDaysLeft():
        """GetLicenseDaysLeft() -> int"""
        return _MaxPlus.Application_GetLicenseDaysLeft()

    GetLicenseDaysLeft = staticmethod(GetLicenseDaysLeft)
    def IsTrialLicense():
        """IsTrialLicense() -> bool"""
        return _MaxPlus.Application_IsTrialLicense()

    IsTrialLicense = staticmethod(IsTrialLicense)
    def IsNetworkLicense():
        """IsNetworkLicense() -> bool"""
        return _MaxPlus.Application_IsNetworkLicense()

    IsNetworkLicense = staticmethod(IsNetworkLicense)
    def CheckMAXMessages():
        """CheckMAXMessages() -> bool"""
        return _MaxPlus.Application_CheckMAXMessages()

    CheckMAXMessages = staticmethod(CheckMAXMessages)
    def DrawingEnabled():
        """DrawingEnabled() -> bool"""
        return _MaxPlus.Application_DrawingEnabled()

    DrawingEnabled = staticmethod(DrawingEnabled)
    def EnableDrawing(*args):
        """EnableDrawing(bool onOff)"""
        return _MaxPlus.Application_EnableDrawing(*args)

    EnableDrawing = staticmethod(EnableDrawing)
    def IsSceneResetting():
        """IsSceneResetting() -> bool"""
        return _MaxPlus.Application_IsSceneResetting()

    IsSceneResetting = staticmethod(IsSceneResetting)
    def IsQuitingApp():
        """IsQuitingApp() -> bool"""
        return _MaxPlus.Application_IsQuitingApp()

    IsQuitingApp = staticmethod(IsQuitingApp)
    def FlushUndoBuffer():
        """FlushUndoBuffer()"""
        return _MaxPlus.Application_FlushUndoBuffer()

    FlushUndoBuffer = staticmethod(FlushUndoBuffer)
    def ExecuteMAXCommand(*args):
        """ExecuteMAXCommand(int id)"""
        return _MaxPlus.Application_ExecuteMAXCommand(*args)

    ExecuteMAXCommand = staticmethod(ExecuteMAXCommand)
    def SetQuietMode(*args):
        """SetQuietMode(bool onOff) -> bool"""
        return _MaxPlus.Application_SetQuietMode(*args)

    SetQuietMode = staticmethod(SetQuietMode)
    def GetQuietMode(checkNetSlave=True):
        """
        GetQuietMode(bool checkNetSlave=True) -> bool
        GetQuietMode() -> bool
        """
        return _MaxPlus.Application_GetQuietMode(checkNetSlave)

    GetQuietMode = staticmethod(GetQuietMode)
    def GetInterface(*args):
        """GetInterface(Interface_ID id) -> BaseInterface"""
        return _MaxPlus.Application_GetInterface(*args)

    GetInterface = staticmethod(GetInterface)
    def RescaleWorldUnits(*args):
        """RescaleWorldUnits(float f, bool selected)"""
        return _MaxPlus.Application_RescaleWorldUnits(*args)

    RescaleWorldUnits = staticmethod(RescaleWorldUnits)
    def GetSoundObject():
        """GetSoundObject() -> SoundObj"""
        return _MaxPlus.Application_GetSoundObject()

    GetSoundObject = staticmethod(GetSoundObject)
    def SetSoundObject(*args):
        """SetSoundObject(SoundObj snd)"""
        return _MaxPlus.Application_SetSoundObject(*args)

    SetSoundObject = staticmethod(SetSoundObject)
    def GetAppID():
        """GetAppID() -> APPLICATION_ID"""
        return _MaxPlus.Application_GetAppID()

    GetAppID = staticmethod(GetAppID)
    def GetAutoBackupTime():
        """GetAutoBackupTime() -> float"""
        return _MaxPlus.Application_GetAutoBackupTime()

    GetAutoBackupTime = staticmethod(GetAutoBackupTime)
    def SetAutoBackupTime(*args):
        """SetAutoBackupTime(float minutes)"""
        return _MaxPlus.Application_SetAutoBackupTime(*args)

    SetAutoBackupTime = staticmethod(SetAutoBackupTime)
    def AutoBackupEnabled():
        """AutoBackupEnabled() -> bool"""
        return _MaxPlus.Application_AutoBackupEnabled()

    AutoBackupEnabled = staticmethod(AutoBackupEnabled)
    def EnableAutoBackup(*args):
        """EnableAutoBackup(bool onOff)"""
        return _MaxPlus.Application_EnableAutoBackup(*args)

    EnableAutoBackup = staticmethod(EnableAutoBackup)
    def IsDebugging():
        """IsDebugging() -> bool"""
        return _MaxPlus.Application_IsDebugging()

    IsDebugging = staticmethod(IsDebugging)
    def NumberOfProcessors():
        """NumberOfProcessors() -> int"""
        return _MaxPlus.Application_NumberOfProcessors()

    NumberOfProcessors = staticmethod(NumberOfProcessors)
    def GetScreenWidth():
        """GetScreenWidth() -> int"""
        return _MaxPlus.Application_GetScreenWidth()

    GetScreenWidth = staticmethod(GetScreenWidth)
    def GetScreenHeight():
        """GetScreenHeight() -> int"""
        return _MaxPlus.Application_GetScreenHeight()

    GetScreenHeight = staticmethod(GetScreenHeight)
    def IsUsingProfileDirectories():
        """IsUsingProfileDirectories() -> bool"""
        return _MaxPlus.Application_IsUsingProfileDirectories()

    IsUsingProfileDirectories = staticmethod(IsUsingProfileDirectories)
    def IsUsingRoamingProfiles():
        """IsUsingRoamingProfiles() -> bool"""
        return _MaxPlus.Application_IsUsingRoamingProfiles()

    IsUsingRoamingProfiles = staticmethod(IsUsingRoamingProfiles)
    __swig_destroy__ = _MaxPlus.delete_Application
    __del__ = lambda self : None;
Application_swigregister = _MaxPlus.Application_swigregister
Application_swigregister(Application)

def Application_Get3DSMAXVersion():
  """Application_Get3DSMAXVersion() -> DWORD"""
  return _MaxPlus.Application_Get3DSMAXVersion()

def Application_GetProductVersion():
  """Application_GetProductVersion() -> int"""
  return _MaxPlus.Application_GetProductVersion()

def Application_GetLicenseBehavior():
  """Application_GetLicenseBehavior() -> int"""
  return _MaxPlus.Application_GetLicenseBehavior()

def Application_IsFeatureLicensed(*args):
  """Application_IsFeatureLicensed(int subNum) -> bool"""
  return _MaxPlus.Application_IsFeatureLicensed(*args)

def Application_GetLicenseDaysLeft():
  """Application_GetLicenseDaysLeft() -> int"""
  return _MaxPlus.Application_GetLicenseDaysLeft()

def Application_IsTrialLicense():
  """Application_IsTrialLicense() -> bool"""
  return _MaxPlus.Application_IsTrialLicense()

def Application_IsNetworkLicense():
  """Application_IsNetworkLicense() -> bool"""
  return _MaxPlus.Application_IsNetworkLicense()

def Application_CheckMAXMessages():
  """Application_CheckMAXMessages() -> bool"""
  return _MaxPlus.Application_CheckMAXMessages()

def Application_DrawingEnabled():
  """Application_DrawingEnabled() -> bool"""
  return _MaxPlus.Application_DrawingEnabled()

def Application_EnableDrawing(*args):
  """Application_EnableDrawing(bool onOff)"""
  return _MaxPlus.Application_EnableDrawing(*args)

def Application_IsSceneResetting():
  """Application_IsSceneResetting() -> bool"""
  return _MaxPlus.Application_IsSceneResetting()

def Application_IsQuitingApp():
  """Application_IsQuitingApp() -> bool"""
  return _MaxPlus.Application_IsQuitingApp()

def Application_FlushUndoBuffer():
  """Application_FlushUndoBuffer()"""
  return _MaxPlus.Application_FlushUndoBuffer()

def Application_ExecuteMAXCommand(*args):
  """Application_ExecuteMAXCommand(int id)"""
  return _MaxPlus.Application_ExecuteMAXCommand(*args)

def Application_SetQuietMode(*args):
  """Application_SetQuietMode(bool onOff) -> bool"""
  return _MaxPlus.Application_SetQuietMode(*args)

def Application_GetQuietMode(checkNetSlave=True):
  """
    GetQuietMode(bool checkNetSlave=True) -> bool
    Application_GetQuietMode() -> bool
    """
  return _MaxPlus.Application_GetQuietMode(checkNetSlave)

def Application_GetInterface(*args):
  """Application_GetInterface(Interface_ID id) -> BaseInterface"""
  return _MaxPlus.Application_GetInterface(*args)

def Application_RescaleWorldUnits(*args):
  """Application_RescaleWorldUnits(float f, bool selected)"""
  return _MaxPlus.Application_RescaleWorldUnits(*args)

def Application_GetSoundObject():
  """Application_GetSoundObject() -> SoundObj"""
  return _MaxPlus.Application_GetSoundObject()

def Application_SetSoundObject(*args):
  """Application_SetSoundObject(SoundObj snd)"""
  return _MaxPlus.Application_SetSoundObject(*args)

def Application_GetAppID():
  """Application_GetAppID() -> APPLICATION_ID"""
  return _MaxPlus.Application_GetAppID()

def Application_GetAutoBackupTime():
  """Application_GetAutoBackupTime() -> float"""
  return _MaxPlus.Application_GetAutoBackupTime()

def Application_SetAutoBackupTime(*args):
  """Application_SetAutoBackupTime(float minutes)"""
  return _MaxPlus.Application_SetAutoBackupTime(*args)

def Application_AutoBackupEnabled():
  """Application_AutoBackupEnabled() -> bool"""
  return _MaxPlus.Application_AutoBackupEnabled()

def Application_EnableAutoBackup(*args):
  """Application_EnableAutoBackup(bool onOff)"""
  return _MaxPlus.Application_EnableAutoBackup(*args)

def Application_IsDebugging():
  """Application_IsDebugging() -> bool"""
  return _MaxPlus.Application_IsDebugging()

def Application_NumberOfProcessors():
  """Application_NumberOfProcessors() -> int"""
  return _MaxPlus.Application_NumberOfProcessors()

def Application_GetScreenWidth():
  """Application_GetScreenWidth() -> int"""
  return _MaxPlus.Application_GetScreenWidth()

def Application_GetScreenHeight():
  """Application_GetScreenHeight() -> int"""
  return _MaxPlus.Application_GetScreenHeight()

def Application_IsUsingProfileDirectories():
  """Application_IsUsingProfileDirectories() -> bool"""
  return _MaxPlus.Application_IsUsingProfileDirectories()

def Application_IsUsingRoamingProfiles():
  """Application_IsUsingRoamingProfiles() -> bool"""
  return _MaxPlus.Application_IsUsingRoamingProfiles()

class SchematicViews(object):
    """Schematic view related utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Open(*args):
        """Open(wchar_t const * sv_name) -> bool"""
        return _MaxPlus.SchematicViews_Open(*args)

    Open = staticmethod(Open)
    def ZoomSelected(*args):
        """ZoomSelected(wchar_t const * sv_name) -> bool"""
        return _MaxPlus.SchematicViews_ZoomSelected(*args)

    ZoomSelected = staticmethod(ZoomSelected)
    def Close(*args):
        """Close(wchar_t const * sv_name) -> bool"""
        return _MaxPlus.SchematicViews_Close(*args)

    Close = staticmethod(Close)
    def GetCount():
        """GetCount() -> int"""
        return _MaxPlus.SchematicViews_GetCount()

    GetCount = staticmethod(GetCount)
    def GetName(*args):
        """GetName(int i) -> wchar_t const *"""
        return _MaxPlus.SchematicViews_GetName(*args)

    GetName = staticmethod(GetName)
    def CloseAll():
        """CloseAll()"""
        return _MaxPlus.SchematicViews_CloseAll()

    CloseAll = staticmethod(CloseAll)
    def FlushAll():
        """FlushAll()"""
        return _MaxPlus.SchematicViews_FlushAll()

    FlushAll = staticmethod(FlushAll)
    def UnFlushAll():
        """UnFlushAll()"""
        return _MaxPlus.SchematicViews_UnFlushAll()

    UnFlushAll = staticmethod(UnFlushAll)
    __swig_destroy__ = _MaxPlus.delete_SchematicViews
    __del__ = lambda self : None;
SchematicViews_swigregister = _MaxPlus.SchematicViews_swigregister
SchematicViews_swigregister(SchematicViews)

def SchematicViews_Open(*args):
  """SchematicViews_Open(wchar_t const * sv_name) -> bool"""
  return _MaxPlus.SchematicViews_Open(*args)

def SchematicViews_ZoomSelected(*args):
  """SchematicViews_ZoomSelected(wchar_t const * sv_name) -> bool"""
  return _MaxPlus.SchematicViews_ZoomSelected(*args)

def SchematicViews_Close(*args):
  """SchematicViews_Close(wchar_t const * sv_name) -> bool"""
  return _MaxPlus.SchematicViews_Close(*args)

def SchematicViews_GetCount():
  """SchematicViews_GetCount() -> int"""
  return _MaxPlus.SchematicViews_GetCount()

def SchematicViews_GetName(*args):
  """SchematicViews_GetName(int i) -> wchar_t const *"""
  return _MaxPlus.SchematicViews_GetName(*args)

def SchematicViews_CloseAll():
  """SchematicViews_CloseAll()"""
  return _MaxPlus.SchematicViews_CloseAll()

def SchematicViews_FlushAll():
  """SchematicViews_FlushAll()"""
  return _MaxPlus.SchematicViews_FlushAll()

def SchematicViews_UnFlushAll():
  """SchematicViews_UnFlushAll()"""
  return _MaxPlus.SchematicViews_UnFlushAll()

class AssetDirectories(object):
    """Asset directory management functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Add(*args):
        """
        Add(wchar_t const * dir, Autodesk::Max::AssetType::Type assetType, int update=True) -> bool
        Add(wchar_t const * dir, Autodesk::Max::AssetType::Type assetType) -> bool
        """
        return _MaxPlus.AssetDirectories_Add(*args)

    Add = staticmethod(Add)
    def Delete(*args):
        """
        Delete(int i, Autodesk::Max::AssetType::Type assetType, int update=True) -> bool
        Delete(int i, Autodesk::Max::AssetType::Type assetType) -> bool
        """
        return _MaxPlus.AssetDirectories_Delete(*args)

    Delete = staticmethod(Delete)
    def GetCount(*args):
        """GetCount(Autodesk::Max::AssetType::Type assetType) -> int"""
        return _MaxPlus.AssetDirectories_GetCount(*args)

    GetCount = staticmethod(GetCount)
    def Get(*args):
        """Get(int i, Autodesk::Max::AssetType::Type assetType) -> wchar_t const *"""
        return _MaxPlus.AssetDirectories_Get(*args)

    Get = staticmethod(Get)
    def AddSession(*args):
        """
        AddSession(wchar_t const * dir, Autodesk::Max::AssetType::Type assetType, int update=True) -> bool
        AddSession(wchar_t const * dir, Autodesk::Max::AssetType::Type assetType) -> bool
        """
        return _MaxPlus.AssetDirectories_AddSession(*args)

    AddSession = staticmethod(AddSession)
    def DeleteSession(*args):
        """
        DeleteSession(int i, Autodesk::Max::AssetType::Type assetType, int update=True) -> bool
        DeleteSession(int i, Autodesk::Max::AssetType::Type assetType) -> bool
        """
        return _MaxPlus.AssetDirectories_DeleteSession(*args)

    DeleteSession = staticmethod(DeleteSession)
    def GetSessionCount(*args):
        """GetSessionCount(Autodesk::Max::AssetType::Type assetType) -> int"""
        return _MaxPlus.AssetDirectories_GetSessionCount(*args)

    GetSessionCount = staticmethod(GetSessionCount)
    def GetSession(*args):
        """GetSession(int i, Autodesk::Max::AssetType::Type assetType) -> wchar_t const *"""
        return _MaxPlus.AssetDirectories_GetSession(*args)

    GetSession = staticmethod(GetSession)
    def GetCurrentCount(*args):
        """GetCurrentCount(Autodesk::Max::AssetType::Type assetType) -> int"""
        return _MaxPlus.AssetDirectories_GetCurrentCount(*args)

    GetCurrentCount = staticmethod(GetCurrentCount)
    def GetCurrent(*args):
        """GetCurrent(int i, Autodesk::Max::AssetType::Type assetType) -> wchar_t const *"""
        return _MaxPlus.AssetDirectories_GetCurrent(*args)

    GetCurrent = staticmethod(GetCurrent)
    def UpdateSection(*args):
        """UpdateSection(Autodesk::Max::AssetType::Type assetType)"""
        return _MaxPlus.AssetDirectories_UpdateSection(*args)

    UpdateSection = staticmethod(UpdateSection)
    __swig_destroy__ = _MaxPlus.delete_AssetDirectories
    __del__ = lambda self : None;
AssetDirectories_swigregister = _MaxPlus.AssetDirectories_swigregister
AssetDirectories_swigregister(AssetDirectories)

def AssetDirectories_Add(*args):
  """
    Add(wchar_t const * dir, Autodesk::Max::AssetType::Type assetType, int update=True) -> bool
    AssetDirectories_Add(wchar_t const * dir, Autodesk::Max::AssetType::Type assetType) -> bool
    """
  return _MaxPlus.AssetDirectories_Add(*args)

def AssetDirectories_Delete(*args):
  """
    Delete(int i, Autodesk::Max::AssetType::Type assetType, int update=True) -> bool
    AssetDirectories_Delete(int i, Autodesk::Max::AssetType::Type assetType) -> bool
    """
  return _MaxPlus.AssetDirectories_Delete(*args)

def AssetDirectories_GetCount(*args):
  """AssetDirectories_GetCount(Autodesk::Max::AssetType::Type assetType) -> int"""
  return _MaxPlus.AssetDirectories_GetCount(*args)

def AssetDirectories_Get(*args):
  """AssetDirectories_Get(int i, Autodesk::Max::AssetType::Type assetType) -> wchar_t const *"""
  return _MaxPlus.AssetDirectories_Get(*args)

def AssetDirectories_AddSession(*args):
  """
    AddSession(wchar_t const * dir, Autodesk::Max::AssetType::Type assetType, int update=True) -> bool
    AssetDirectories_AddSession(wchar_t const * dir, Autodesk::Max::AssetType::Type assetType) -> bool
    """
  return _MaxPlus.AssetDirectories_AddSession(*args)

def AssetDirectories_DeleteSession(*args):
  """
    DeleteSession(int i, Autodesk::Max::AssetType::Type assetType, int update=True) -> bool
    AssetDirectories_DeleteSession(int i, Autodesk::Max::AssetType::Type assetType) -> bool
    """
  return _MaxPlus.AssetDirectories_DeleteSession(*args)

def AssetDirectories_GetSessionCount(*args):
  """AssetDirectories_GetSessionCount(Autodesk::Max::AssetType::Type assetType) -> int"""
  return _MaxPlus.AssetDirectories_GetSessionCount(*args)

def AssetDirectories_GetSession(*args):
  """AssetDirectories_GetSession(int i, Autodesk::Max::AssetType::Type assetType) -> wchar_t const *"""
  return _MaxPlus.AssetDirectories_GetSession(*args)

def AssetDirectories_GetCurrentCount(*args):
  """AssetDirectories_GetCurrentCount(Autodesk::Max::AssetType::Type assetType) -> int"""
  return _MaxPlus.AssetDirectories_GetCurrentCount(*args)

def AssetDirectories_GetCurrent(*args):
  """AssetDirectories_GetCurrent(int i, Autodesk::Max::AssetType::Type assetType) -> wchar_t const *"""
  return _MaxPlus.AssetDirectories_GetCurrent(*args)

def AssetDirectories_UpdateSection(*args):
  """AssetDirectories_UpdateSection(Autodesk::Max::AssetType::Type assetType)"""
  return _MaxPlus.AssetDirectories_UpdateSection(*args)

class Win32(object):
    """Win32 related general purpose functions"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetMAXHWnd():
        """GetMAXHWnd() -> HWND"""
        return _MaxPlus.Win32_GetMAXHWnd()

    GetMAXHWnd = staticmethod(GetMAXHWnd)
    def Set3dsMaxAsParentWindow(*args):
        """Set3dsMaxAsParentWindow(HWND h) -> bool"""
        return _MaxPlus.Win32_Set3dsMaxAsParentWindow(*args)

    Set3dsMaxAsParentWindow = staticmethod(Set3dsMaxAsParentWindow)
    def RegisterDialogWindow(*args):
        """RegisterDialogWindow(HWND hDlg)"""
        return _MaxPlus.Win32_RegisterDialogWindow(*args)

    RegisterDialogWindow = staticmethod(RegisterDialogWindow)
    def UnRegisterDialogWindow(*args):
        """UnRegisterDialogWindow(HWND hDlg) -> bool"""
        return _MaxPlus.Win32_UnRegisterDialogWindow(*args)

    UnRegisterDialogWindow = staticmethod(UnRegisterDialogWindow)
    def RevealInExplorer(*args):
        """RevealInExplorer(WStr path) -> bool"""
        return _MaxPlus.Win32_RevealInExplorer(*args)

    RevealInExplorer = staticmethod(RevealInExplorer)
    def GetStatusPanelHWnd():
        """GetStatusPanelHWnd() -> HWND"""
        return _MaxPlus.Win32_GetStatusPanelHWnd()

    GetStatusPanelHWnd = staticmethod(GetStatusPanelHWnd)
    def GetViewPortHWnd():
        """GetViewPortHWnd() -> HWND"""
        return _MaxPlus.Win32_GetViewPortHWnd()

    GetViewPortHWnd = staticmethod(GetViewPortHWnd)
    def IsVistaAeroEnabled():
        """IsVistaAeroEnabled() -> bool"""
        return _MaxPlus.Win32_IsVistaAeroEnabled()

    IsVistaAeroEnabled = staticmethod(IsVistaAeroEnabled)
    def IsThemeSupported():
        """IsThemeSupported() -> bool"""
        return _MaxPlus.Win32_IsThemeSupported()

    IsThemeSupported = staticmethod(IsThemeSupported)
    def IsHovering(*args):
        """
        IsHovering(HWND hWnd) -> bool
        IsHovering(HWND hWnd, int x, int y) -> bool
        """
        return _MaxPlus.Win32_IsHovering(*args)

    IsHovering = staticmethod(IsHovering)
    def MakeButton2State(*args):
        """MakeButton2State(HWND hCtrl)"""
        return _MaxPlus.Win32_MakeButton2State(*args)

    MakeButton2State = staticmethod(MakeButton2State)
    def MakeButton3State(*args):
        """MakeButton3State(HWND hCtrl)"""
        return _MaxPlus.Win32_MakeButton3State(*args)

    MakeButton3State = staticmethod(MakeButton3State)
    def GetCheckBox(*args):
        """GetCheckBox(HWND hw, int id) -> bool"""
        return _MaxPlus.Win32_GetCheckBox(*args)

    GetCheckBox = staticmethod(GetCheckBox)
    def SetCheckBox(*args):
        """SetCheckBox(HWND hw, int id, bool b)"""
        return _MaxPlus.Win32_SetCheckBox(*args)

    SetCheckBox = staticmethod(SetCheckBox)
    __swig_destroy__ = _MaxPlus.delete_Win32
    __del__ = lambda self : None;
Win32_swigregister = _MaxPlus.Win32_swigregister
Win32_swigregister(Win32)

def Win32_GetMAXHWnd():
  """Win32_GetMAXHWnd() -> HWND"""
  return _MaxPlus.Win32_GetMAXHWnd()

def Win32_Set3dsMaxAsParentWindow(*args):
  """Win32_Set3dsMaxAsParentWindow(HWND h) -> bool"""
  return _MaxPlus.Win32_Set3dsMaxAsParentWindow(*args)

def Win32_RegisterDialogWindow(*args):
  """Win32_RegisterDialogWindow(HWND hDlg)"""
  return _MaxPlus.Win32_RegisterDialogWindow(*args)

def Win32_UnRegisterDialogWindow(*args):
  """Win32_UnRegisterDialogWindow(HWND hDlg) -> bool"""
  return _MaxPlus.Win32_UnRegisterDialogWindow(*args)

def Win32_RevealInExplorer(*args):
  """Win32_RevealInExplorer(WStr path) -> bool"""
  return _MaxPlus.Win32_RevealInExplorer(*args)

def Win32_GetStatusPanelHWnd():
  """Win32_GetStatusPanelHWnd() -> HWND"""
  return _MaxPlus.Win32_GetStatusPanelHWnd()

def Win32_GetViewPortHWnd():
  """Win32_GetViewPortHWnd() -> HWND"""
  return _MaxPlus.Win32_GetViewPortHWnd()

def Win32_IsVistaAeroEnabled():
  """Win32_IsVistaAeroEnabled() -> bool"""
  return _MaxPlus.Win32_IsVistaAeroEnabled()

def Win32_IsThemeSupported():
  """Win32_IsThemeSupported() -> bool"""
  return _MaxPlus.Win32_IsThemeSupported()

def Win32_IsHovering(*args):
  """
    IsHovering(HWND hWnd) -> bool
    Win32_IsHovering(HWND hWnd, int x, int y) -> bool
    """
  return _MaxPlus.Win32_IsHovering(*args)

def Win32_MakeButton2State(*args):
  """Win32_MakeButton2State(HWND hCtrl)"""
  return _MaxPlus.Win32_MakeButton2State(*args)

def Win32_MakeButton3State(*args):
  """Win32_MakeButton3State(HWND hCtrl)"""
  return _MaxPlus.Win32_MakeButton3State(*args)

def Win32_GetCheckBox(*args):
  """Win32_GetCheckBox(HWND hw, int id) -> bool"""
  return _MaxPlus.Win32_GetCheckBox(*args)

def Win32_SetCheckBox(*args):
  """Win32_SetCheckBox(HWND hw, int id, bool b)"""
  return _MaxPlus.Win32_SetCheckBox(*args)

class StatusPanel(object):
    """Status panel related utility functions"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def ProgressStart(*args):
        """
        ProgressStart(wchar_t const * title, bool dispBar=True) -> bool
        ProgressStart(wchar_t const * title) -> bool
        """
        return _MaxPlus.StatusPanel_ProgressStart(*args)

    ProgressStart = staticmethod(ProgressStart)
    def ProgressUpdate(*args):
        """
        ProgressUpdate(int pct, bool showPct, wchar_t const * title)
        ProgressUpdate(int pct, bool showPct=True)
        ProgressUpdate(int pct)
        """
        return _MaxPlus.StatusPanel_ProgressUpdate(*args)

    ProgressUpdate = staticmethod(ProgressUpdate)
    def ProgressEnd():
        """ProgressEnd()"""
        return _MaxPlus.StatusPanel_ProgressEnd()

    ProgressEnd = staticmethod(ProgressEnd)
    def DisableStatusXYZ():
        """DisableStatusXYZ()"""
        return _MaxPlus.StatusPanel_DisableStatusXYZ()

    DisableStatusXYZ = staticmethod(DisableStatusXYZ)
    def EnableStatusXYZ():
        """EnableStatusXYZ()"""
        return _MaxPlus.StatusPanel_EnableStatusXYZ()

    EnableStatusXYZ = staticmethod(EnableStatusXYZ)
    def SetStatusXYZ(*args):
        """
        SetStatusXYZ(Point3 xyz, int type)
        SetStatusXYZ(AngAxis aa)
        """
        return _MaxPlus.StatusPanel_SetStatusXYZ(*args)

    SetStatusXYZ = staticmethod(SetStatusXYZ)
    def PushPrompt(*args):
        """PushPrompt(wchar_t const * s)"""
        return _MaxPlus.StatusPanel_PushPrompt(*args)

    PushPrompt = staticmethod(PushPrompt)
    def PopPrompt():
        """PopPrompt()"""
        return _MaxPlus.StatusPanel_PopPrompt()

    PopPrompt = staticmethod(PopPrompt)
    def GetPrompt():
        """GetPrompt() -> WStr"""
        return _MaxPlus.StatusPanel_GetPrompt()

    GetPrompt = staticmethod(GetPrompt)
    def ReplacePrompt(*args):
        """ReplacePrompt(wchar_t const * s)"""
        return _MaxPlus.StatusPanel_ReplacePrompt(*args)

    ReplacePrompt = staticmethod(ReplacePrompt)
    def DisplayTempPrompt(*args):
        """
        DisplayTempPrompt(wchar_t const * s, int msec=1000)
        DisplayTempPrompt(wchar_t const * s)
        """
        return _MaxPlus.StatusPanel_DisplayTempPrompt(*args)

    DisplayTempPrompt = staticmethod(DisplayTempPrompt)
    def RemoveTempPrompt():
        """RemoveTempPrompt()"""
        return _MaxPlus.StatusPanel_RemoveTempPrompt()

    RemoveTempPrompt = staticmethod(RemoveTempPrompt)
    def RepaintTimeSlider():
        """RepaintTimeSlider()"""
        return _MaxPlus.StatusPanel_RepaintTimeSlider()

    RepaintTimeSlider = staticmethod(RepaintTimeSlider)
    __swig_destroy__ = _MaxPlus.delete_StatusPanel
    __del__ = lambda self : None;
StatusPanel_swigregister = _MaxPlus.StatusPanel_swigregister
StatusPanel_swigregister(StatusPanel)

def StatusPanel_ProgressStart(*args):
  """
    ProgressStart(wchar_t const * title, bool dispBar=True) -> bool
    StatusPanel_ProgressStart(wchar_t const * title) -> bool
    """
  return _MaxPlus.StatusPanel_ProgressStart(*args)

def StatusPanel_ProgressUpdate(*args):
  """
    ProgressUpdate(int pct, bool showPct, wchar_t const * title)
    ProgressUpdate(int pct, bool showPct=True)
    StatusPanel_ProgressUpdate(int pct)
    """
  return _MaxPlus.StatusPanel_ProgressUpdate(*args)

def StatusPanel_ProgressEnd():
  """StatusPanel_ProgressEnd()"""
  return _MaxPlus.StatusPanel_ProgressEnd()

def StatusPanel_DisableStatusXYZ():
  """StatusPanel_DisableStatusXYZ()"""
  return _MaxPlus.StatusPanel_DisableStatusXYZ()

def StatusPanel_EnableStatusXYZ():
  """StatusPanel_EnableStatusXYZ()"""
  return _MaxPlus.StatusPanel_EnableStatusXYZ()

def StatusPanel_SetStatusXYZ(*args):
  """
    SetStatusXYZ(Point3 xyz, int type)
    StatusPanel_SetStatusXYZ(AngAxis aa)
    """
  return _MaxPlus.StatusPanel_SetStatusXYZ(*args)

def StatusPanel_PushPrompt(*args):
  """StatusPanel_PushPrompt(wchar_t const * s)"""
  return _MaxPlus.StatusPanel_PushPrompt(*args)

def StatusPanel_PopPrompt():
  """StatusPanel_PopPrompt()"""
  return _MaxPlus.StatusPanel_PopPrompt()

def StatusPanel_GetPrompt():
  """StatusPanel_GetPrompt() -> WStr"""
  return _MaxPlus.StatusPanel_GetPrompt()

def StatusPanel_ReplacePrompt(*args):
  """StatusPanel_ReplacePrompt(wchar_t const * s)"""
  return _MaxPlus.StatusPanel_ReplacePrompt(*args)

def StatusPanel_DisplayTempPrompt(*args):
  """
    DisplayTempPrompt(wchar_t const * s, int msec=1000)
    StatusPanel_DisplayTempPrompt(wchar_t const * s)
    """
  return _MaxPlus.StatusPanel_DisplayTempPrompt(*args)

def StatusPanel_RemoveTempPrompt():
  """StatusPanel_RemoveTempPrompt()"""
  return _MaxPlus.StatusPanel_RemoveTempPrompt()

def StatusPanel_RepaintTimeSlider():
  """StatusPanel_RepaintTimeSlider()"""
  return _MaxPlus.StatusPanel_RepaintTimeSlider()

class CommandPanel(object):
    """Command panel utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetIsOpen():
        """GetIsOpen() -> bool"""
        return _MaxPlus.CommandPanel_GetIsOpen()

    GetIsOpen = staticmethod(GetIsOpen)
    def SetOpen(*args):
        """SetOpen(bool openClose)"""
        return _MaxPlus.CommandPanel_SetOpen(*args)

    SetOpen = staticmethod(SetOpen)
    def SuspendEditing(*args):
        """
        SuspendEditing(DWORD whichPanels=(1 << TASK_MODE_MODIFY), bool alwaysSuspend=False)
        SuspendEditing(DWORD whichPanels=(1 << TASK_MODE_MODIFY))
        SuspendEditing()
        """
        return _MaxPlus.CommandPanel_SuspendEditing(*args)

    SuspendEditing = staticmethod(SuspendEditing)
    def ResumeEditing(*args):
        """
        ResumeEditing(DWORD whichPanels=(1 << TASK_MODE_MODIFY), bool alwaysSuspend=False)
        ResumeEditing(DWORD whichPanels=(1 << TASK_MODE_MODIFY))
        ResumeEditing()
        """
        return _MaxPlus.CommandPanel_ResumeEditing(*args)

    ResumeEditing = staticmethod(ResumeEditing)
    def SuspendMotionEditing():
        """SuspendMotionEditing()"""
        return _MaxPlus.CommandPanel_SuspendMotionEditing()

    SuspendMotionEditing = staticmethod(SuspendMotionEditing)
    def ResumeMotionEditing():
        """ResumeMotionEditing()"""
        return _MaxPlus.CommandPanel_ResumeMotionEditing()

    ResumeMotionEditing = staticmethod(ResumeMotionEditing)
    def SetCurrentEditObject(*args):
        """SetCurrentEditObject(BaseObject obj)"""
        return _MaxPlus.CommandPanel_SetCurrentEditObject(*args)

    SetCurrentEditObject = staticmethod(SetCurrentEditObject)
    def GetCurEditObject():
        """GetCurEditObject() -> BaseObject"""
        return _MaxPlus.CommandPanel_GetCurEditObject()

    GetCurEditObject = staticmethod(GetCurEditObject)
    def IsEditing():
        """IsEditing() -> bool"""
        return _MaxPlus.CommandPanel_IsEditing()

    IsEditing = staticmethod(IsEditing)
    __swig_destroy__ = _MaxPlus.delete_CommandPanel
    __del__ = lambda self : None;
CommandPanel_swigregister = _MaxPlus.CommandPanel_swigregister
CommandPanel_swigregister(CommandPanel)

def CommandPanel_GetIsOpen():
  """CommandPanel_GetIsOpen() -> bool"""
  return _MaxPlus.CommandPanel_GetIsOpen()

def CommandPanel_SetOpen(*args):
  """CommandPanel_SetOpen(bool openClose)"""
  return _MaxPlus.CommandPanel_SetOpen(*args)

def CommandPanel_SuspendEditing(*args):
  """
    SuspendEditing(DWORD whichPanels=(1 << TASK_MODE_MODIFY), bool alwaysSuspend=False)
    SuspendEditing(DWORD whichPanels=(1 << TASK_MODE_MODIFY))
    CommandPanel_SuspendEditing()
    """
  return _MaxPlus.CommandPanel_SuspendEditing(*args)

def CommandPanel_ResumeEditing(*args):
  """
    ResumeEditing(DWORD whichPanels=(1 << TASK_MODE_MODIFY), bool alwaysSuspend=False)
    ResumeEditing(DWORD whichPanels=(1 << TASK_MODE_MODIFY))
    CommandPanel_ResumeEditing()
    """
  return _MaxPlus.CommandPanel_ResumeEditing(*args)

def CommandPanel_SuspendMotionEditing():
  """CommandPanel_SuspendMotionEditing()"""
  return _MaxPlus.CommandPanel_SuspendMotionEditing()

def CommandPanel_ResumeMotionEditing():
  """CommandPanel_ResumeMotionEditing()"""
  return _MaxPlus.CommandPanel_ResumeMotionEditing()

def CommandPanel_SetCurrentEditObject(*args):
  """CommandPanel_SetCurrentEditObject(BaseObject obj)"""
  return _MaxPlus.CommandPanel_SetCurrentEditObject(*args)

def CommandPanel_GetCurEditObject():
  """CommandPanel_GetCurEditObject() -> BaseObject"""
  return _MaxPlus.CommandPanel_GetCurEditObject()

def CommandPanel_IsEditing():
  """CommandPanel_IsEditing() -> bool"""
  return _MaxPlus.CommandPanel_IsEditing()

class CUI(object):
    """Interface to CUI system functionality."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def LoadCUIConfig(*args):
        """LoadCUIConfig(wchar_t const * fileName)"""
        return _MaxPlus.CUI_LoadCUIConfig(*args)

    LoadCUIConfig = staticmethod(LoadCUIConfig)
    def WriteCUIConfig():
        """WriteCUIConfig()"""
        return _MaxPlus.CUI_WriteCUIConfig()

    WriteCUIConfig = staticmethod(WriteCUIConfig)
    def SaveCUIAs():
        """SaveCUIAs()"""
        return _MaxPlus.CUI_SaveCUIAs()

    SaveCUIAs = staticmethod(SaveCUIAs)
    def LoadCUI():
        """LoadCUI()"""
        return _MaxPlus.CUI_LoadCUI()

    LoadCUI = staticmethod(LoadCUI)
    def RevertToBackupCUI():
        """RevertToBackupCUI()"""
        return _MaxPlus.CUI_RevertToBackupCUI()

    RevertToBackupCUI = staticmethod(RevertToBackupCUI)
    def ResetToFactoryDefaultCUI():
        """ResetToFactoryDefaultCUI()"""
        return _MaxPlus.CUI_ResetToFactoryDefaultCUI()

    ResetToFactoryDefaultCUI = staticmethod(ResetToFactoryDefaultCUI)
    def DoUICustomization(*args):
        """DoUICustomization(int startPage)"""
        return _MaxPlus.CUI_DoUICustomization(*args)

    DoUICustomization = staticmethod(DoUICustomization)
    def GetCancel():
        """GetCancel() -> bool"""
        return _MaxPlus.CUI_GetCancel()

    GetCancel = staticmethod(GetCancel)
    def SetCancel(*args):
        """SetCancel(bool sw)"""
        return _MaxPlus.CUI_SetCancel(*args)

    SetCancel = staticmethod(SetCancel)
    def SetExpertMode(*args):
        """SetExpertMode(bool onOff)"""
        return _MaxPlus.CUI_SetExpertMode(*args)

    SetExpertMode = staticmethod(SetExpertMode)
    def GetExpertMode():
        """GetExpertMode() -> bool"""
        return _MaxPlus.CUI_GetExpertMode()

    GetExpertMode = staticmethod(GetExpertMode)
    def SetToolButtonState(*args):
        """SetToolButtonState(int button, bool state)"""
        return _MaxPlus.CUI_SetToolButtonState(*args)

    SetToolButtonState = staticmethod(SetToolButtonState)
    def GetToolButtonState(*args):
        """GetToolButtonState(int button) -> bool"""
        return _MaxPlus.CUI_GetToolButtonState(*args)

    GetToolButtonState = staticmethod(GetToolButtonState)
    def EnableToolButton(*args):
        """
        EnableToolButton(int button, bool enable=True)
        EnableToolButton(int button)
        """
        return _MaxPlus.CUI_EnableToolButton(*args)

    EnableToolButton = staticmethod(EnableToolButton)
    def SetFlyOffTime(*args):
        """SetFlyOffTime(int msecs)"""
        return _MaxPlus.CUI_SetFlyOffTime(*args)

    SetFlyOffTime = staticmethod(SetFlyOffTime)
    def GetFlyOffTime():
        """GetFlyOffTime() -> int"""
        return _MaxPlus.CUI_GetFlyOffTime()

    GetFlyOffTime = staticmethod(GetFlyOffTime)
    def EnableAccelerators():
        """EnableAccelerators()"""
        return _MaxPlus.CUI_EnableAccelerators()

    EnableAccelerators = staticmethod(EnableAccelerators)
    def DisableAccelerators():
        """DisableAccelerators()"""
        return _MaxPlus.CUI_DisableAccelerators()

    DisableAccelerators = staticmethod(DisableAccelerators)
    def AreAcceleratorsEnabled():
        """AreAcceleratorsEnabled() -> bool"""
        return _MaxPlus.CUI_AreAcceleratorsEnabled()

    AreAcceleratorsEnabled = staticmethod(AreAcceleratorsEnabled)
    def ShowCustomizeDialog():
        """ShowCustomizeDialog()"""
        return _MaxPlus.CUI_ShowCustomizeDialog()

    ShowCustomizeDialog = staticmethod(ShowCustomizeDialog)
    def AreAllFloatersHidden():
        """AreAllFloatersHidden() -> bool"""
        return _MaxPlus.CUI_AreAllFloatersHidden()

    AreAllFloatersHidden = staticmethod(AreAllFloatersHidden)
    def GetActionMainUITableId():
        """GetActionMainUITableId() -> ActionTableId"""
        return _MaxPlus.CUI_GetActionMainUITableId()

    GetActionMainUITableId = staticmethod(GetActionMainUITableId)
    def GetActionTrackViewTableId():
        """GetActionTrackViewTableId() -> ActionTableId"""
        return _MaxPlus.CUI_GetActionTrackViewTableId()

    GetActionTrackViewTableId = staticmethod(GetActionTrackViewTableId)
    def GetActionMaterialEditorTableId():
        """GetActionMaterialEditorTableId() -> ActionTableId"""
        return _MaxPlus.CUI_GetActionMaterialEditorTableId()

    GetActionMaterialEditorTableId = staticmethod(GetActionMaterialEditorTableId)
    def GetActionVideoPostTableId():
        """GetActionVideoPostTableId() -> ActionTableId"""
        return _MaxPlus.CUI_GetActionVideoPostTableId()

    GetActionVideoPostTableId = staticmethod(GetActionVideoPostTableId)
    def GetActionSchematicViewTableId():
        """GetActionSchematicViewTableId() -> ActionTableId"""
        return _MaxPlus.CUI_GetActionSchematicViewTableId()

    GetActionSchematicViewTableId = staticmethod(GetActionSchematicViewTableId)
    def GetActionCommonIReshadeTableId():
        """GetActionCommonIReshadeTableId() -> ActionTableId"""
        return _MaxPlus.CUI_GetActionCommonIReshadeTableId()

    GetActionCommonIReshadeTableId = staticmethod(GetActionCommonIReshadeTableId)
    def GetActionScanlineIReshadeTableId():
        """GetActionScanlineIReshadeTableId() -> ActionTableId"""
        return _MaxPlus.CUI_GetActionScanlineIReshadeTableId()

    GetActionScanlineIReshadeTableId = staticmethod(GetActionScanlineIReshadeTableId)
    def GetActionMainUIContext():
        """GetActionMainUIContext() -> ActionContextId"""
        return _MaxPlus.CUI_GetActionMainUIContext()

    GetActionMainUIContext = staticmethod(GetActionMainUIContext)
    def GetActionTrackViewContext():
        """GetActionTrackViewContext() -> ActionContextId"""
        return _MaxPlus.CUI_GetActionTrackViewContext()

    GetActionTrackViewContext = staticmethod(GetActionTrackViewContext)
    def GetActionMaterialEditorContext():
        """GetActionMaterialEditorContext() -> ActionContextId"""
        return _MaxPlus.CUI_GetActionMaterialEditorContext()

    GetActionMaterialEditorContext = staticmethod(GetActionMaterialEditorContext)
    def GetActionVideoPostContext():
        """GetActionVideoPostContext() -> ActionContextId"""
        return _MaxPlus.CUI_GetActionVideoPostContext()

    GetActionVideoPostContext = staticmethod(GetActionVideoPostContext)
    def GetActionSchematicViewContext():
        """GetActionSchematicViewContext() -> ActionContextId"""
        return _MaxPlus.CUI_GetActionSchematicViewContext()

    GetActionSchematicViewContext = staticmethod(GetActionSchematicViewContext)
    def GetActionIReshadeContext():
        """GetActionIReshadeContext() -> ActionContextId"""
        return _MaxPlus.CUI_GetActionIReshadeContext()

    GetActionIReshadeContext = staticmethod(GetActionIReshadeContext)
    __swig_destroy__ = _MaxPlus.delete_CUI
    __del__ = lambda self : None;
CUI_swigregister = _MaxPlus.CUI_swigregister
CUI_swigregister(CUI)

def CUI_LoadCUIConfig(*args):
  """CUI_LoadCUIConfig(wchar_t const * fileName)"""
  return _MaxPlus.CUI_LoadCUIConfig(*args)

def CUI_WriteCUIConfig():
  """CUI_WriteCUIConfig()"""
  return _MaxPlus.CUI_WriteCUIConfig()

def CUI_SaveCUIAs():
  """CUI_SaveCUIAs()"""
  return _MaxPlus.CUI_SaveCUIAs()

def CUI_LoadCUI():
  """CUI_LoadCUI()"""
  return _MaxPlus.CUI_LoadCUI()

def CUI_RevertToBackupCUI():
  """CUI_RevertToBackupCUI()"""
  return _MaxPlus.CUI_RevertToBackupCUI()

def CUI_ResetToFactoryDefaultCUI():
  """CUI_ResetToFactoryDefaultCUI()"""
  return _MaxPlus.CUI_ResetToFactoryDefaultCUI()

def CUI_DoUICustomization(*args):
  """CUI_DoUICustomization(int startPage)"""
  return _MaxPlus.CUI_DoUICustomization(*args)

def CUI_GetCancel():
  """CUI_GetCancel() -> bool"""
  return _MaxPlus.CUI_GetCancel()

def CUI_SetCancel(*args):
  """CUI_SetCancel(bool sw)"""
  return _MaxPlus.CUI_SetCancel(*args)

def CUI_SetExpertMode(*args):
  """CUI_SetExpertMode(bool onOff)"""
  return _MaxPlus.CUI_SetExpertMode(*args)

def CUI_GetExpertMode():
  """CUI_GetExpertMode() -> bool"""
  return _MaxPlus.CUI_GetExpertMode()

def CUI_SetToolButtonState(*args):
  """CUI_SetToolButtonState(int button, bool state)"""
  return _MaxPlus.CUI_SetToolButtonState(*args)

def CUI_GetToolButtonState(*args):
  """CUI_GetToolButtonState(int button) -> bool"""
  return _MaxPlus.CUI_GetToolButtonState(*args)

def CUI_EnableToolButton(*args):
  """
    EnableToolButton(int button, bool enable=True)
    CUI_EnableToolButton(int button)
    """
  return _MaxPlus.CUI_EnableToolButton(*args)

def CUI_SetFlyOffTime(*args):
  """CUI_SetFlyOffTime(int msecs)"""
  return _MaxPlus.CUI_SetFlyOffTime(*args)

def CUI_GetFlyOffTime():
  """CUI_GetFlyOffTime() -> int"""
  return _MaxPlus.CUI_GetFlyOffTime()

def CUI_EnableAccelerators():
  """CUI_EnableAccelerators()"""
  return _MaxPlus.CUI_EnableAccelerators()

def CUI_DisableAccelerators():
  """CUI_DisableAccelerators()"""
  return _MaxPlus.CUI_DisableAccelerators()

def CUI_AreAcceleratorsEnabled():
  """CUI_AreAcceleratorsEnabled() -> bool"""
  return _MaxPlus.CUI_AreAcceleratorsEnabled()

def CUI_ShowCustomizeDialog():
  """CUI_ShowCustomizeDialog()"""
  return _MaxPlus.CUI_ShowCustomizeDialog()

def CUI_AreAllFloatersHidden():
  """CUI_AreAllFloatersHidden() -> bool"""
  return _MaxPlus.CUI_AreAllFloatersHidden()

def CUI_GetActionMainUITableId():
  """CUI_GetActionMainUITableId() -> ActionTableId"""
  return _MaxPlus.CUI_GetActionMainUITableId()

def CUI_GetActionTrackViewTableId():
  """CUI_GetActionTrackViewTableId() -> ActionTableId"""
  return _MaxPlus.CUI_GetActionTrackViewTableId()

def CUI_GetActionMaterialEditorTableId():
  """CUI_GetActionMaterialEditorTableId() -> ActionTableId"""
  return _MaxPlus.CUI_GetActionMaterialEditorTableId()

def CUI_GetActionVideoPostTableId():
  """CUI_GetActionVideoPostTableId() -> ActionTableId"""
  return _MaxPlus.CUI_GetActionVideoPostTableId()

def CUI_GetActionSchematicViewTableId():
  """CUI_GetActionSchematicViewTableId() -> ActionTableId"""
  return _MaxPlus.CUI_GetActionSchematicViewTableId()

def CUI_GetActionCommonIReshadeTableId():
  """CUI_GetActionCommonIReshadeTableId() -> ActionTableId"""
  return _MaxPlus.CUI_GetActionCommonIReshadeTableId()

def CUI_GetActionScanlineIReshadeTableId():
  """CUI_GetActionScanlineIReshadeTableId() -> ActionTableId"""
  return _MaxPlus.CUI_GetActionScanlineIReshadeTableId()

def CUI_GetActionMainUIContext():
  """CUI_GetActionMainUIContext() -> ActionContextId"""
  return _MaxPlus.CUI_GetActionMainUIContext()

def CUI_GetActionTrackViewContext():
  """CUI_GetActionTrackViewContext() -> ActionContextId"""
  return _MaxPlus.CUI_GetActionTrackViewContext()

def CUI_GetActionMaterialEditorContext():
  """CUI_GetActionMaterialEditorContext() -> ActionContextId"""
  return _MaxPlus.CUI_GetActionMaterialEditorContext()

def CUI_GetActionVideoPostContext():
  """CUI_GetActionVideoPostContext() -> ActionContextId"""
  return _MaxPlus.CUI_GetActionVideoPostContext()

def CUI_GetActionSchematicViewContext():
  """CUI_GetActionSchematicViewContext() -> ActionContextId"""
  return _MaxPlus.CUI_GetActionSchematicViewContext()

def CUI_GetActionIReshadeContext():
  """CUI_GetActionIReshadeContext() -> ActionContextId"""
  return _MaxPlus.CUI_GetActionIReshadeContext()

class TrackView(object):
    """Track view utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Open(*args):
        """
        Open(wchar_t const * tv_name, wchar_t const * layoutName=None, Point2 pos=Autodesk::Max::Point2(-1.0f,-1.0f), 
            int width=-1, int height=-1, int dock=TV_FLOAT) -> bool
        Open(wchar_t const * tv_name, wchar_t const * layoutName=None, Point2 pos=Autodesk::Max::Point2(-1.0f,-1.0f), 
            int width=-1, int height=-1) -> bool
        Open(wchar_t const * tv_name, wchar_t const * layoutName=None, Point2 pos=Autodesk::Max::Point2(-1.0f,-1.0f), 
            int width=-1) -> bool
        Open(wchar_t const * tv_name, wchar_t const * layoutName=None, Point2 pos=Autodesk::Max::Point2(-1.0f,-1.0f)) -> bool
        Open(wchar_t const * tv_name, wchar_t const * layoutName=None) -> bool
        Open(wchar_t const * tv_name) -> bool
        """
        return _MaxPlus.TrackView_Open(*args)

    Open = staticmethod(Open)
    def Close(*args):
        """Close(wchar_t const * tv_name) -> bool"""
        return _MaxPlus.TrackView_Close(*args)

    Close = staticmethod(Close)
    def GetCount():
        """GetCount() -> int"""
        return _MaxPlus.TrackView_GetCount()

    GetCount = staticmethod(GetCount)
    def ZoomSelected(*args):
        """ZoomSelected(wchar_t const * tv_name) -> bool"""
        return _MaxPlus.TrackView_ZoomSelected(*args)

    ZoomSelected = staticmethod(ZoomSelected)
    def Zoom(*args):
        """Zoom(wchar_t const * tv_name, Animatable parent, int subNum) -> bool"""
        return _MaxPlus.TrackView_Zoom(*args)

    Zoom = staticmethod(Zoom)
    def GetName(*args):
        """GetName(int i) -> wchar_t const *"""
        return _MaxPlus.TrackView_GetName(*args)

    GetName = staticmethod(GetName)
    def SetFilter(*args):
        """
        SetFilter(wchar_t const * tv_name, DWORD mask, int which, bool redraw=True) -> bool
        SetFilter(wchar_t const * tv_name, DWORD mask, int which) -> bool
        """
        return _MaxPlus.TrackView_SetFilter(*args)

    SetFilter = staticmethod(SetFilter)
    def ClearFilter(*args):
        """
        ClearFilter(wchar_t const * tv_name, DWORD mask, int which, bool redraw=True) -> bool
        ClearFilter(wchar_t const * tv_name, DWORD mask, int which) -> bool
        """
        return _MaxPlus.TrackView_ClearFilter(*args)

    ClearFilter = staticmethod(ClearFilter)
    def TestFilter(*args):
        """TestFilter(wchar_t const * tv_name, DWORD mask, int which) -> DWORD"""
        return _MaxPlus.TrackView_TestFilter(*args)

    TestFilter = staticmethod(TestFilter)
    def SendToTop(*args):
        """SendToTop(wchar_t const * tv_name) -> bool"""
        return _MaxPlus.TrackView_SendToTop(*args)

    SendToTop = staticmethod(SendToTop)
    def FlushAll():
        """FlushAll()"""
        return _MaxPlus.TrackView_FlushAll()

    FlushAll = staticmethod(FlushAll)
    def UnFlush():
        """UnFlush()"""
        return _MaxPlus.TrackView_UnFlush()

    UnFlush = staticmethod(UnFlush)
    def CloseAll():
        """CloseAll()"""
        return _MaxPlus.TrackView_CloseAll()

    CloseAll = staticmethod(CloseAll)
    __swig_destroy__ = _MaxPlus.delete_TrackView
    __del__ = lambda self : None;
TrackView_swigregister = _MaxPlus.TrackView_swigregister
TrackView_swigregister(TrackView)

def TrackView_Open(*args):
  """
    Open(wchar_t const * tv_name, wchar_t const * layoutName=None, Point2 pos=Autodesk::Max::Point2(-1.0f,-1.0f), 
        int width=-1, int height=-1, int dock=TV_FLOAT) -> bool
    Open(wchar_t const * tv_name, wchar_t const * layoutName=None, Point2 pos=Autodesk::Max::Point2(-1.0f,-1.0f), 
        int width=-1, int height=-1) -> bool
    Open(wchar_t const * tv_name, wchar_t const * layoutName=None, Point2 pos=Autodesk::Max::Point2(-1.0f,-1.0f), 
        int width=-1) -> bool
    Open(wchar_t const * tv_name, wchar_t const * layoutName=None, Point2 pos=Autodesk::Max::Point2(-1.0f,-1.0f)) -> bool
    Open(wchar_t const * tv_name, wchar_t const * layoutName=None) -> bool
    TrackView_Open(wchar_t const * tv_name) -> bool
    """
  return _MaxPlus.TrackView_Open(*args)

def TrackView_Close(*args):
  """TrackView_Close(wchar_t const * tv_name) -> bool"""
  return _MaxPlus.TrackView_Close(*args)

def TrackView_GetCount():
  """TrackView_GetCount() -> int"""
  return _MaxPlus.TrackView_GetCount()

def TrackView_ZoomSelected(*args):
  """TrackView_ZoomSelected(wchar_t const * tv_name) -> bool"""
  return _MaxPlus.TrackView_ZoomSelected(*args)

def TrackView_Zoom(*args):
  """TrackView_Zoom(wchar_t const * tv_name, Animatable parent, int subNum) -> bool"""
  return _MaxPlus.TrackView_Zoom(*args)

def TrackView_GetName(*args):
  """TrackView_GetName(int i) -> wchar_t const *"""
  return _MaxPlus.TrackView_GetName(*args)

def TrackView_SetFilter(*args):
  """
    SetFilter(wchar_t const * tv_name, DWORD mask, int which, bool redraw=True) -> bool
    TrackView_SetFilter(wchar_t const * tv_name, DWORD mask, int which) -> bool
    """
  return _MaxPlus.TrackView_SetFilter(*args)

def TrackView_ClearFilter(*args):
  """
    ClearFilter(wchar_t const * tv_name, DWORD mask, int which, bool redraw=True) -> bool
    TrackView_ClearFilter(wchar_t const * tv_name, DWORD mask, int which) -> bool
    """
  return _MaxPlus.TrackView_ClearFilter(*args)

def TrackView_TestFilter(*args):
  """TrackView_TestFilter(wchar_t const * tv_name, DWORD mask, int which) -> DWORD"""
  return _MaxPlus.TrackView_TestFilter(*args)

def TrackView_SendToTop(*args):
  """TrackView_SendToTop(wchar_t const * tv_name) -> bool"""
  return _MaxPlus.TrackView_SendToTop(*args)

def TrackView_FlushAll():
  """TrackView_FlushAll()"""
  return _MaxPlus.TrackView_FlushAll()

def TrackView_UnFlush():
  """TrackView_UnFlush()"""
  return _MaxPlus.TrackView_UnFlush()

def TrackView_CloseAll():
  """TrackView_CloseAll()"""
  return _MaxPlus.TrackView_CloseAll()

class Environment(object):
    """Environment related utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetMap():
        """GetMap() -> Texmap"""
        return _MaxPlus.Environment_GetMap()

    GetMap = staticmethod(GetMap)
    def SetMap(*args):
        """SetMap(Texmap map)"""
        return _MaxPlus.Environment_SetMap(*args)

    SetMap = staticmethod(SetMap)
    def GetMapEnabled():
        """GetMapEnabled() -> bool"""
        return _MaxPlus.Environment_GetMapEnabled()

    GetMapEnabled = staticmethod(GetMapEnabled)
    def SetMapEnabled(*args):
        """SetMapEnabled(bool onOff)"""
        return _MaxPlus.Environment_SetMapEnabled(*args)

    SetMapEnabled = staticmethod(SetMapEnabled)
    def GetAmbient(*args):
        """
        GetAmbient(TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Forever()) -> Point3
        GetAmbient(TimeValue t=Autodesk::Max::Now()) -> Point3
        GetAmbient() -> Point3
        """
        return _MaxPlus.Environment_GetAmbient(*args)

    GetAmbient = staticmethod(GetAmbient)
    def SetAmbient(*args):
        """
        SetAmbient(Point3 col, TimeValue t=Autodesk::Max::Now())
        SetAmbient(Point3 col)
        """
        return _MaxPlus.Environment_SetAmbient(*args)

    SetAmbient = staticmethod(SetAmbient)
    def GetAmbientController():
        """GetAmbientController() -> Control"""
        return _MaxPlus.Environment_GetAmbientController()

    GetAmbientController = staticmethod(GetAmbientController)
    def SetAmbientController(*args):
        """SetAmbientController(Control c)"""
        return _MaxPlus.Environment_SetAmbientController(*args)

    SetAmbientController = staticmethod(SetAmbientController)
    def GetLightTint(*args):
        """
        GetLightTint(TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Forever()) -> Point3
        GetLightTint(TimeValue t=Autodesk::Max::Now()) -> Point3
        GetLightTint() -> Point3
        """
        return _MaxPlus.Environment_GetLightTint(*args)

    GetLightTint = staticmethod(GetLightTint)
    def SetLightTint(*args):
        """
        SetLightTint(Point3 col, TimeValue t=Autodesk::Max::Now())
        SetLightTint(Point3 col)
        """
        return _MaxPlus.Environment_SetLightTint(*args)

    SetLightTint = staticmethod(SetLightTint)
    def GetLightTintController():
        """GetLightTintController() -> Control"""
        return _MaxPlus.Environment_GetLightTintController()

    GetLightTintController = staticmethod(GetLightTintController)
    def SetLightTintController(*args):
        """SetLightTintController(Control c)"""
        return _MaxPlus.Environment_SetLightTintController(*args)

    SetLightTintController = staticmethod(SetLightTintController)
    def GetLightLevel(*args):
        """
        GetLightLevel(TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Forever()) -> float
        GetLightLevel(TimeValue t=Autodesk::Max::Now()) -> float
        GetLightLevel() -> float
        """
        return _MaxPlus.Environment_GetLightLevel(*args)

    GetLightLevel = staticmethod(GetLightLevel)
    def SetLightLevel(*args):
        """
        SetLightLevel(float lev, TimeValue t=Autodesk::Max::Now())
        SetLightLevel(float lev)
        """
        return _MaxPlus.Environment_SetLightLevel(*args)

    SetLightLevel = staticmethod(SetLightLevel)
    def GetLightLevelController():
        """GetLightLevelController() -> Control"""
        return _MaxPlus.Environment_GetLightLevelController()

    GetLightLevelController = staticmethod(GetLightLevelController)
    def SetLightLevelController(*args):
        """SetLightLevelController(Control c)"""
        return _MaxPlus.Environment_SetLightLevelController(*args)

    SetLightLevelController = staticmethod(SetLightLevelController)
    def AddLightToScene(*args):
        """AddLightToScene(INode node)"""
        return _MaxPlus.Environment_AddLightToScene(*args)

    AddLightToScene = staticmethod(AddLightToScene)
    def GetLightConeConstraint():
        """GetLightConeConstraint() -> float"""
        return _MaxPlus.Environment_GetLightConeConstraint()

    GetLightConeConstraint = staticmethod(GetLightConeConstraint)
    __swig_destroy__ = _MaxPlus.delete_Environment
    __del__ = lambda self : None;
Environment_swigregister = _MaxPlus.Environment_swigregister
Environment_swigregister(Environment)

def Environment_GetMap():
  """Environment_GetMap() -> Texmap"""
  return _MaxPlus.Environment_GetMap()

def Environment_SetMap(*args):
  """Environment_SetMap(Texmap map)"""
  return _MaxPlus.Environment_SetMap(*args)

def Environment_GetMapEnabled():
  """Environment_GetMapEnabled() -> bool"""
  return _MaxPlus.Environment_GetMapEnabled()

def Environment_SetMapEnabled(*args):
  """Environment_SetMapEnabled(bool onOff)"""
  return _MaxPlus.Environment_SetMapEnabled(*args)

def Environment_GetAmbient(*args):
  """
    GetAmbient(TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Forever()) -> Point3
    GetAmbient(TimeValue t=Autodesk::Max::Now()) -> Point3
    Environment_GetAmbient() -> Point3
    """
  return _MaxPlus.Environment_GetAmbient(*args)

def Environment_SetAmbient(*args):
  """
    SetAmbient(Point3 col, TimeValue t=Autodesk::Max::Now())
    Environment_SetAmbient(Point3 col)
    """
  return _MaxPlus.Environment_SetAmbient(*args)

def Environment_GetAmbientController():
  """Environment_GetAmbientController() -> Control"""
  return _MaxPlus.Environment_GetAmbientController()

def Environment_SetAmbientController(*args):
  """Environment_SetAmbientController(Control c)"""
  return _MaxPlus.Environment_SetAmbientController(*args)

def Environment_GetLightTint(*args):
  """
    GetLightTint(TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Forever()) -> Point3
    GetLightTint(TimeValue t=Autodesk::Max::Now()) -> Point3
    Environment_GetLightTint() -> Point3
    """
  return _MaxPlus.Environment_GetLightTint(*args)

def Environment_SetLightTint(*args):
  """
    SetLightTint(Point3 col, TimeValue t=Autodesk::Max::Now())
    Environment_SetLightTint(Point3 col)
    """
  return _MaxPlus.Environment_SetLightTint(*args)

def Environment_GetLightTintController():
  """Environment_GetLightTintController() -> Control"""
  return _MaxPlus.Environment_GetLightTintController()

def Environment_SetLightTintController(*args):
  """Environment_SetLightTintController(Control c)"""
  return _MaxPlus.Environment_SetLightTintController(*args)

def Environment_GetLightLevel(*args):
  """
    GetLightLevel(TimeValue t=Autodesk::Max::Now(), Interval valid=Autodesk::Max::Forever()) -> float
    GetLightLevel(TimeValue t=Autodesk::Max::Now()) -> float
    Environment_GetLightLevel() -> float
    """
  return _MaxPlus.Environment_GetLightLevel(*args)

def Environment_SetLightLevel(*args):
  """
    SetLightLevel(float lev, TimeValue t=Autodesk::Max::Now())
    Environment_SetLightLevel(float lev)
    """
  return _MaxPlus.Environment_SetLightLevel(*args)

def Environment_GetLightLevelController():
  """Environment_GetLightLevelController() -> Control"""
  return _MaxPlus.Environment_GetLightLevelController()

def Environment_SetLightLevelController(*args):
  """Environment_SetLightLevelController(Control c)"""
  return _MaxPlus.Environment_SetLightLevelController(*args)

def Environment_AddLightToScene(*args):
  """Environment_AddLightToScene(INode node)"""
  return _MaxPlus.Environment_AddLightToScene(*args)

def Environment_GetLightConeConstraint():
  """Environment_GetLightConeConstraint() -> float"""
  return _MaxPlus.Environment_GetLightConeConstraint()

class Atomspherics(object):
    """Proxy of C++ Autodesk::Max::Atomspherics class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetCount():
        """GetCount() -> int"""
        return _MaxPlus.Atomspherics_GetCount()

    GetCount = staticmethod(GetCount)
    def Get(*args):
        """Get(int i) -> Atmospheric"""
        return _MaxPlus.Atomspherics_Get(*args)

    Get = staticmethod(Get)
    def Set(*args):
        """Set(int i, Atmospheric a)"""
        return _MaxPlus.Atomspherics_Set(*args)

    Set = staticmethod(Set)
    def Add(*args):
        """Add(Atmospheric atmos)"""
        return _MaxPlus.Atomspherics_Add(*args)

    Add = staticmethod(Add)
    def Delete(*args):
        """Delete(int i)"""
        return _MaxPlus.Atomspherics_Delete(*args)

    Delete = staticmethod(Delete)
    def Edit(*args):
        """
        Edit(Atmospheric a, INode gizmo=0)
        Edit(Atmospheric a)
        """
        return _MaxPlus.Atomspherics_Edit(*args)

    Edit = staticmethod(Edit)
    __swig_destroy__ = _MaxPlus.delete_Atomspherics
    __del__ = lambda self : None;
Atomspherics_swigregister = _MaxPlus.Atomspherics_swigregister
Atomspherics_swigregister(Atomspherics)

def Atomspherics_GetCount():
  """Atomspherics_GetCount() -> int"""
  return _MaxPlus.Atomspherics_GetCount()

def Atomspherics_Get(*args):
  """Atomspherics_Get(int i) -> Atmospheric"""
  return _MaxPlus.Atomspherics_Get(*args)

def Atomspherics_Set(*args):
  """Atomspherics_Set(int i, Atmospheric a)"""
  return _MaxPlus.Atomspherics_Set(*args)

def Atomspherics_Add(*args):
  """Atomspherics_Add(Atmospheric atmos)"""
  return _MaxPlus.Atomspherics_Add(*args)

def Atomspherics_Delete(*args):
  """Atomspherics_Delete(int i)"""
  return _MaxPlus.Atomspherics_Delete(*args)

def Atomspherics_Edit(*args):
  """
    Edit(Atmospheric a, INode gizmo=0)
    Atomspherics_Edit(Atmospheric a)
    """
  return _MaxPlus.Atomspherics_Edit(*args)

class Effects(object):
    """Render effect utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def OpenDialog():
        """OpenDialog() -> bool"""
        return _MaxPlus.Effects_OpenDialog()

    OpenDialog = staticmethod(OpenDialog)
    def CloseDialog():
        """CloseDialog()"""
        return _MaxPlus.Effects_CloseDialog()

    CloseDialog = staticmethod(CloseDialog)
    def GetCount():
        """GetCount() -> int"""
        return _MaxPlus.Effects_GetCount()

    GetCount = staticmethod(GetCount)
    def Get(*args):
        """Get(int i) -> Effect"""
        return _MaxPlus.Effects_Get(*args)

    Get = staticmethod(Get)
    def Set(*args):
        """Set(int i, Effect e)"""
        return _MaxPlus.Effects_Set(*args)

    Set = staticmethod(Set)
    def Add(*args):
        """Add(Effect e)"""
        return _MaxPlus.Effects_Add(*args)

    Add = staticmethod(Add)
    def Delete(*args):
        """Delete(int i)"""
        return _MaxPlus.Effects_Delete(*args)

    Delete = staticmethod(Delete)
    def Edit(*args):
        """
        Edit(Effect e, INode gizmo=0)
        Edit(Effect e)
        """
        return _MaxPlus.Effects_Edit(*args)

    Edit = staticmethod(Edit)
    __swig_destroy__ = _MaxPlus.delete_Effects
    __del__ = lambda self : None;
Effects_swigregister = _MaxPlus.Effects_swigregister
Effects_swigregister(Effects)

def Effects_OpenDialog():
  """Effects_OpenDialog() -> bool"""
  return _MaxPlus.Effects_OpenDialog()

def Effects_CloseDialog():
  """Effects_CloseDialog()"""
  return _MaxPlus.Effects_CloseDialog()

def Effects_GetCount():
  """Effects_GetCount() -> int"""
  return _MaxPlus.Effects_GetCount()

def Effects_Get(*args):
  """Effects_Get(int i) -> Effect"""
  return _MaxPlus.Effects_Get(*args)

def Effects_Set(*args):
  """Effects_Set(int i, Effect e)"""
  return _MaxPlus.Effects_Set(*args)

def Effects_Add(*args):
  """Effects_Add(Effect e)"""
  return _MaxPlus.Effects_Add(*args)

def Effects_Delete(*args):
  """Effects_Delete(int i)"""
  return _MaxPlus.Effects_Delete(*args)

def Effects_Edit(*args):
  """
    Edit(Effect e, INode gizmo=0)
    Effects_Edit(Effect e)
    """
  return _MaxPlus.Effects_Edit(*args)

class DisplayFilters(object):
    """Exposes functionality from the display Command Panel. Allows hiding by object category, such as geometry, shapes, lights, cameras etc."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetEnabled(*args):
        """GetEnabled(int index) -> bool"""
        return _MaxPlus.DisplayFilters_GetEnabled(*args)

    GetEnabled = staticmethod(GetEnabled)
    def SetEnabled(*args):
        """SetEnabled(int index, bool on)"""
        return _MaxPlus.DisplayFilters_SetEnabled(*args)

    SetEnabled = staticmethod(SetEnabled)
    def GetCount():
        """GetCount() -> int"""
        return _MaxPlus.DisplayFilters_GetCount()

    GetCount = staticmethod(GetCount)
    def IsNodeVisible(*args):
        """IsNodeVisible(int index, int sid, Class_ID cid, INode node) -> bool"""
        return _MaxPlus.DisplayFilters_IsNodeVisible(*args)

    IsNodeVisible = staticmethod(IsNodeVisible)
    def GetName(*args):
        """GetName(int index) -> wchar_t const *"""
        return _MaxPlus.DisplayFilters_GetName(*args)

    GetName = staticmethod(GetName)
    def GetHideFrozen():
        """GetHideFrozen() -> bool"""
        return _MaxPlus.DisplayFilters_GetHideFrozen()

    GetHideFrozen = staticmethod(GetHideFrozen)
    def SetSceneDisplayFlag(*args):
        """
        SetSceneDisplayFlag(DWORD flag, bool onOff, bool updateUI=True)
        SetSceneDisplayFlag(DWORD flag, bool onOff)
        """
        return _MaxPlus.DisplayFilters_SetSceneDisplayFlag(*args)

    SetSceneDisplayFlag = staticmethod(SetSceneDisplayFlag)
    def GetSceneDisplayFlag(*args):
        """GetSceneDisplayFlag(DWORD flag) -> bool"""
        return _MaxPlus.DisplayFilters_GetSceneDisplayFlag(*args)

    GetSceneDisplayFlag = staticmethod(GetSceneDisplayFlag)
    __swig_destroy__ = _MaxPlus.delete_DisplayFilters
    __del__ = lambda self : None;
DisplayFilters_swigregister = _MaxPlus.DisplayFilters_swigregister
DisplayFilters_swigregister(DisplayFilters)

def DisplayFilters_GetEnabled(*args):
  """DisplayFilters_GetEnabled(int index) -> bool"""
  return _MaxPlus.DisplayFilters_GetEnabled(*args)

def DisplayFilters_SetEnabled(*args):
  """DisplayFilters_SetEnabled(int index, bool on)"""
  return _MaxPlus.DisplayFilters_SetEnabled(*args)

def DisplayFilters_GetCount():
  """DisplayFilters_GetCount() -> int"""
  return _MaxPlus.DisplayFilters_GetCount()

def DisplayFilters_IsNodeVisible(*args):
  """DisplayFilters_IsNodeVisible(int index, int sid, Class_ID cid, INode node) -> bool"""
  return _MaxPlus.DisplayFilters_IsNodeVisible(*args)

def DisplayFilters_GetName(*args):
  """DisplayFilters_GetName(int index) -> wchar_t const *"""
  return _MaxPlus.DisplayFilters_GetName(*args)

def DisplayFilters_GetHideFrozen():
  """DisplayFilters_GetHideFrozen() -> bool"""
  return _MaxPlus.DisplayFilters_GetHideFrozen()

def DisplayFilters_SetSceneDisplayFlag(*args):
  """
    SetSceneDisplayFlag(DWORD flag, bool onOff, bool updateUI=True)
    DisplayFilters_SetSceneDisplayFlag(DWORD flag, bool onOff)
    """
  return _MaxPlus.DisplayFilters_SetSceneDisplayFlag(*args)

def DisplayFilters_GetSceneDisplayFlag(*args):
  """DisplayFilters_GetSceneDisplayFlag(DWORD flag) -> bool"""
  return _MaxPlus.DisplayFilters_GetSceneDisplayFlag(*args)

class MaterialEditor(object):
    """Material editor utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def SetSlot(*args):
        """SetSlot(int i, MtlBase m)"""
        return _MaxPlus.MaterialEditor_SetSlot(*args)

    SetSlot = staticmethod(SetSlot)
    def GetActiveSlot():
        """GetActiveSlot() -> int"""
        return _MaxPlus.MaterialEditor_GetActiveSlot()

    GetActiveSlot = staticmethod(GetActiveSlot)
    def SetActiveSlot(*args):
        """SetActiveSlot(int i)"""
        return _MaxPlus.MaterialEditor_SetActiveSlot(*args)

    SetActiveSlot = staticmethod(SetActiveSlot)
    def GetNumSlots():
        """GetNumSlots() -> int"""
        return _MaxPlus.MaterialEditor_GetNumSlots()

    GetNumSlots = staticmethod(GetNumSlots)
    def FlushMtlDlg():
        """FlushMtlDlg()"""
        return _MaxPlus.MaterialEditor_FlushMtlDlg()

    FlushMtlDlg = staticmethod(FlushMtlDlg)
    def UnFlushMtlDlg():
        """UnFlushMtlDlg()"""
        return _MaxPlus.MaterialEditor_UnFlushMtlDlg()

    UnFlushMtlDlg = staticmethod(UnFlushMtlDlg)
    def IsMtlInstanced(*args):
        """IsMtlInstanced(MtlBase m) -> bool"""
        return _MaxPlus.MaterialEditor_IsMtlInstanced(*args)

    IsMtlInstanced = staticmethod(IsMtlInstanced)
    def FindMtlNameInScene(*args):
        """FindMtlNameInScene(WStr name) -> Mtl"""
        return _MaxPlus.MaterialEditor_FindMtlNameInScene(*args)

    FindMtlNameInScene = staticmethod(FindMtlNameInScene)
    def PutMaterial(*args):
        """
        PutMaterial(MtlBase mtl, MtlBase oldMtl, bool delOld=1)
        PutMaterial(MtlBase mtl, MtlBase oldMtl)
        """
        return _MaxPlus.MaterialEditor_PutMaterial(*args)

    PutMaterial = staticmethod(PutMaterial)
    def IsMtlDlgShowing(*args):
        """IsMtlDlgShowing(int mode) -> bool"""
        return _MaxPlus.MaterialEditor_IsMtlDlgShowing(*args)

    IsMtlDlgShowing = staticmethod(IsMtlDlgShowing)
    def OpenMtlDlg(*args):
        """OpenMtlDlg(int mode)"""
        return _MaxPlus.MaterialEditor_OpenMtlDlg(*args)

    OpenMtlDlg = staticmethod(OpenMtlDlg)
    def CloseMtlDlg(*args):
        """CloseMtlDlg(int mode)"""
        return _MaxPlus.MaterialEditor_CloseMtlDlg(*args)

    CloseMtlDlg = staticmethod(CloseMtlDlg)
    def GetMtlDlgMode():
        """GetMtlDlgMode() -> int"""
        return _MaxPlus.MaterialEditor_GetMtlDlgMode()

    GetMtlDlgMode = staticmethod(GetMtlDlgMode)
    def SetMtlDlgMode(*args):
        """SetMtlDlgMode(int mode)"""
        return _MaxPlus.MaterialEditor_SetMtlDlgMode(*args)

    SetMtlDlgMode = staticmethod(SetMtlDlgMode)
    def LoadMaterialLibrary(*args):
        """LoadMaterialLibrary(wchar_t const * name) -> int"""
        return _MaxPlus.MaterialEditor_LoadMaterialLibrary(*args)

    LoadMaterialLibrary = staticmethod(LoadMaterialLibrary)
    def SaveMaterialLibrary(*args):
        """SaveMaterialLibrary(wchar_t const * name) -> int"""
        return _MaxPlus.MaterialEditor_SaveMaterialLibrary(*args)

    SaveMaterialLibrary = staticmethod(SaveMaterialLibrary)
    def UpdateMtlEditorBrackets():
        """UpdateMtlEditorBrackets()"""
        return _MaxPlus.MaterialEditor_UpdateMtlEditorBrackets()

    UpdateMtlEditorBrackets = staticmethod(UpdateMtlEditorBrackets)
    __swig_destroy__ = _MaxPlus.delete_MaterialEditor
    __del__ = lambda self : None;
MaterialEditor_swigregister = _MaxPlus.MaterialEditor_swigregister
MaterialEditor_swigregister(MaterialEditor)

def MaterialEditor_SetSlot(*args):
  """MaterialEditor_SetSlot(int i, MtlBase m)"""
  return _MaxPlus.MaterialEditor_SetSlot(*args)

def MaterialEditor_GetActiveSlot():
  """MaterialEditor_GetActiveSlot() -> int"""
  return _MaxPlus.MaterialEditor_GetActiveSlot()

def MaterialEditor_SetActiveSlot(*args):
  """MaterialEditor_SetActiveSlot(int i)"""
  return _MaxPlus.MaterialEditor_SetActiveSlot(*args)

def MaterialEditor_GetNumSlots():
  """MaterialEditor_GetNumSlots() -> int"""
  return _MaxPlus.MaterialEditor_GetNumSlots()

def MaterialEditor_FlushMtlDlg():
  """MaterialEditor_FlushMtlDlg()"""
  return _MaxPlus.MaterialEditor_FlushMtlDlg()

def MaterialEditor_UnFlushMtlDlg():
  """MaterialEditor_UnFlushMtlDlg()"""
  return _MaxPlus.MaterialEditor_UnFlushMtlDlg()

def MaterialEditor_IsMtlInstanced(*args):
  """MaterialEditor_IsMtlInstanced(MtlBase m) -> bool"""
  return _MaxPlus.MaterialEditor_IsMtlInstanced(*args)

def MaterialEditor_FindMtlNameInScene(*args):
  """MaterialEditor_FindMtlNameInScene(WStr name) -> Mtl"""
  return _MaxPlus.MaterialEditor_FindMtlNameInScene(*args)

def MaterialEditor_PutMaterial(*args):
  """
    PutMaterial(MtlBase mtl, MtlBase oldMtl, bool delOld=1)
    MaterialEditor_PutMaterial(MtlBase mtl, MtlBase oldMtl)
    """
  return _MaxPlus.MaterialEditor_PutMaterial(*args)

def MaterialEditor_IsMtlDlgShowing(*args):
  """MaterialEditor_IsMtlDlgShowing(int mode) -> bool"""
  return _MaxPlus.MaterialEditor_IsMtlDlgShowing(*args)

def MaterialEditor_OpenMtlDlg(*args):
  """MaterialEditor_OpenMtlDlg(int mode)"""
  return _MaxPlus.MaterialEditor_OpenMtlDlg(*args)

def MaterialEditor_CloseMtlDlg(*args):
  """MaterialEditor_CloseMtlDlg(int mode)"""
  return _MaxPlus.MaterialEditor_CloseMtlDlg(*args)

def MaterialEditor_GetMtlDlgMode():
  """MaterialEditor_GetMtlDlgMode() -> int"""
  return _MaxPlus.MaterialEditor_GetMtlDlgMode()

def MaterialEditor_SetMtlDlgMode(*args):
  """MaterialEditor_SetMtlDlgMode(int mode)"""
  return _MaxPlus.MaterialEditor_SetMtlDlgMode(*args)

def MaterialEditor_LoadMaterialLibrary(*args):
  """MaterialEditor_LoadMaterialLibrary(wchar_t const * name) -> int"""
  return _MaxPlus.MaterialEditor_LoadMaterialLibrary(*args)

def MaterialEditor_SaveMaterialLibrary(*args):
  """MaterialEditor_SaveMaterialLibrary(wchar_t const * name) -> int"""
  return _MaxPlus.MaterialEditor_SaveMaterialLibrary(*args)

def MaterialEditor_UpdateMtlEditorBrackets():
  """MaterialEditor_UpdateMtlEditorBrackets()"""
  return _MaxPlus.MaterialEditor_UpdateMtlEditorBrackets()

class TransformGizmos(object):
    """Transform gizmo utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetEnabled():
        """GetEnabled() -> bool"""
        return _MaxPlus.TransformGizmos_GetEnabled()

    GetEnabled = staticmethod(GetEnabled)
    def SetEnabled(*args):
        """SetEnabled(bool onOff)"""
        return _MaxPlus.TransformGizmos_SetEnabled(*args)

    SetEnabled = staticmethod(SetEnabled)
    def SetRestoreAxis(*args):
        """SetRestoreAxis(bool bOnOff)"""
        return _MaxPlus.TransformGizmos_SetRestoreAxis(*args)

    SetRestoreAxis = staticmethod(SetRestoreAxis)
    def GetRestoreAxis():
        """GetRestoreAxis() -> bool"""
        return _MaxPlus.TransformGizmos_GetRestoreAxis()

    GetRestoreAxis = staticmethod(GetRestoreAxis)
    def Deactivate():
        """Deactivate()"""
        return _MaxPlus.TransformGizmos_Deactivate()

    Deactivate = staticmethod(Deactivate)
    def GetTransformMatrix():
        """GetTransformMatrix() -> Matrix3"""
        return _MaxPlus.TransformGizmos_GetTransformMatrix()

    GetTransformMatrix = staticmethod(GetTransformMatrix)
    __swig_destroy__ = _MaxPlus.delete_TransformGizmos
    __del__ = lambda self : None;
TransformGizmos_swigregister = _MaxPlus.TransformGizmos_swigregister
TransformGizmos_swigregister(TransformGizmos)

def TransformGizmos_GetEnabled():
  """TransformGizmos_GetEnabled() -> bool"""
  return _MaxPlus.TransformGizmos_GetEnabled()

def TransformGizmos_SetEnabled(*args):
  """TransformGizmos_SetEnabled(bool onOff)"""
  return _MaxPlus.TransformGizmos_SetEnabled(*args)

def TransformGizmos_SetRestoreAxis(*args):
  """TransformGizmos_SetRestoreAxis(bool bOnOff)"""
  return _MaxPlus.TransformGizmos_SetRestoreAxis(*args)

def TransformGizmos_GetRestoreAxis():
  """TransformGizmos_GetRestoreAxis() -> bool"""
  return _MaxPlus.TransformGizmos_GetRestoreAxis()

def TransformGizmos_Deactivate():
  """TransformGizmos_Deactivate()"""
  return _MaxPlus.TransformGizmos_Deactivate()

def TransformGizmos_GetTransformMatrix():
  """TransformGizmos_GetTransformMatrix() -> Matrix3"""
  return _MaxPlus.TransformGizmos_GetTransformMatrix()

class ModifierPanel(object):
    """Modifier panel utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetContexts(*args):
        """GetContexts(INodeTab nodes) -> ModContextList"""
        return _MaxPlus.ModifierPanel_GetContexts(*args)

    GetContexts = staticmethod(GetContexts)
    def IsValid(*args):
        """IsValid(INode node, Modifier mod) -> bool"""
        return _MaxPlus.ModifierPanel_IsValid(*args)

    IsValid = staticmethod(IsValid)
    def Add(*args):
        """
        Add(INode node, Modifier mod, int beforeIdx=0) -> Autodesk::Max::ResCode::Type
        Add(INode node, Modifier mod) -> Autodesk::Max::ResCode::Type
        """
        return _MaxPlus.ModifierPanel_Add(*args)

    Add = staticmethod(Add)
    def Delete(*args):
        """
        Delete(INode node, Modifier mod) -> Autodesk::Max::ResCode::Type
        Delete(INode node, IDerivedObject derivedObj, int idx) -> Autodesk::Max::ResCode::Type
        """
        return _MaxPlus.ModifierPanel_Delete(*args)

    Delete = staticmethod(Delete)
    def GetReplaceableObjRef(*args):
        """GetReplaceableObjRef(INode node) -> Object"""
        return _MaxPlus.ModifierPanel_GetReplaceableObjRef(*args)

    GetReplaceableObjRef = staticmethod(GetReplaceableObjRef)
    def EnableShowEndResult(*args):
        """EnableShowEndResult(bool enabled)"""
        return _MaxPlus.ModifierPanel_EnableShowEndResult(*args)

    EnableShowEndResult = staticmethod(EnableShowEndResult)
    def GetShowEndResult():
        """GetShowEndResult() -> bool"""
        return _MaxPlus.ModifierPanel_GetShowEndResult()

    GetShowEndResult = staticmethod(GetShowEndResult)
    def SetShowEndResult(*args):
        """SetShowEndResult(bool show)"""
        return _MaxPlus.ModifierPanel_SetShowEndResult(*args)

    SetShowEndResult = staticmethod(SetShowEndResult)
    def AddToSelection(*args):
        """AddToSelection(Modifier mod)"""
        return _MaxPlus.ModifierPanel_AddToSelection(*args)

    AddToSelection = staticmethod(AddToSelection)
    __swig_destroy__ = _MaxPlus.delete_ModifierPanel
    __del__ = lambda self : None;
ModifierPanel_swigregister = _MaxPlus.ModifierPanel_swigregister
ModifierPanel_swigregister(ModifierPanel)

def ModifierPanel_GetContexts(*args):
  """ModifierPanel_GetContexts(INodeTab nodes) -> ModContextList"""
  return _MaxPlus.ModifierPanel_GetContexts(*args)

def ModifierPanel_IsValid(*args):
  """ModifierPanel_IsValid(INode node, Modifier mod) -> bool"""
  return _MaxPlus.ModifierPanel_IsValid(*args)

def ModifierPanel_Add(*args):
  """
    Add(INode node, Modifier mod, int beforeIdx=0) -> Autodesk::Max::ResCode::Type
    ModifierPanel_Add(INode node, Modifier mod) -> Autodesk::Max::ResCode::Type
    """
  return _MaxPlus.ModifierPanel_Add(*args)

def ModifierPanel_Delete(*args):
  """
    Delete(INode node, Modifier mod) -> Autodesk::Max::ResCode::Type
    ModifierPanel_Delete(INode node, IDerivedObject derivedObj, int idx) -> Autodesk::Max::ResCode::Type
    """
  return _MaxPlus.ModifierPanel_Delete(*args)

def ModifierPanel_GetReplaceableObjRef(*args):
  """ModifierPanel_GetReplaceableObjRef(INode node) -> Object"""
  return _MaxPlus.ModifierPanel_GetReplaceableObjRef(*args)

def ModifierPanel_EnableShowEndResult(*args):
  """ModifierPanel_EnableShowEndResult(bool enabled)"""
  return _MaxPlus.ModifierPanel_EnableShowEndResult(*args)

def ModifierPanel_GetShowEndResult():
  """ModifierPanel_GetShowEndResult() -> bool"""
  return _MaxPlus.ModifierPanel_GetShowEndResult()

def ModifierPanel_SetShowEndResult(*args):
  """ModifierPanel_SetShowEndResult(bool show)"""
  return _MaxPlus.ModifierPanel_SetShowEndResult(*args)

def ModifierPanel_AddToSelection(*args):
  """ModifierPanel_AddToSelection(Modifier mod)"""
  return _MaxPlus.ModifierPanel_AddToSelection(*args)

class Names(object):
    """Name related utility functions"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def AssignNew(*args):
        """
        AssignNew(Mtl m)
        AssignNew(Texmap m)
        """
        return _MaxPlus.Names_AssignNew(*args)

    AssignNew = staticmethod(AssignNew)
    def SetSuffixLength(*args):
        """SetSuffixLength(unsigned short suffixLength)"""
        return _MaxPlus.Names_SetSuffixLength(*args)

    SetSuffixLength = staticmethod(SetSuffixLength)
    def GetSuffixLength():
        """GetSuffixLength() -> unsigned short"""
        return _MaxPlus.Names_GetSuffixLength()

    GetSuffixLength = staticmethod(GetSuffixLength)
    def MakeNodeNameUnique(*args):
        """MakeNodeNameUnique(WStr name) -> WStr"""
        return _MaxPlus.Names_MakeNodeNameUnique(*args)

    MakeNodeNameUnique = staticmethod(MakeNodeNameUnique)
    __swig_destroy__ = _MaxPlus.delete_Names
    __del__ = lambda self : None;
Names_swigregister = _MaxPlus.Names_swigregister
Names_swigregister(Names)

def Names_AssignNew(*args):
  """
    AssignNew(Mtl m)
    Names_AssignNew(Texmap m)
    """
  return _MaxPlus.Names_AssignNew(*args)

def Names_SetSuffixLength(*args):
  """Names_SetSuffixLength(unsigned short suffixLength)"""
  return _MaxPlus.Names_SetSuffixLength(*args)

def Names_GetSuffixLength():
  """Names_GetSuffixLength() -> unsigned short"""
  return _MaxPlus.Names_GetSuffixLength()

def Names_MakeNodeNameUnique(*args):
  """Names_MakeNodeNameUnique(WStr name) -> WStr"""
  return _MaxPlus.Names_MakeNodeNameUnique(*args)

class Axis(object):
    """Axis related utility functions."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetConstraints():
        """GetConstraints() -> int"""
        return _MaxPlus.Axis_GetConstraints()

    GetConstraints = staticmethod(GetConstraints)
    def SetConstraints(*args):
        """SetConstraints(int c)"""
        return _MaxPlus.Axis_SetConstraints(*args)

    SetConstraints = staticmethod(SetConstraints)
    def EnableConstraints(*args):
        """EnableConstraints(int c, bool enabled)"""
        return _MaxPlus.Axis_EnableConstraints(*args)

    EnableConstraints = staticmethod(EnableConstraints)
    def PushConstraints(*args):
        """PushConstraints(int c)"""
        return _MaxPlus.Axis_PushConstraints(*args)

    PushConstraints = staticmethod(PushConstraints)
    def PopConstraints():
        """PopConstraints()"""
        return _MaxPlus.Axis_PopConstraints()

    PopConstraints = staticmethod(PopConstraints)
    def GetTransformAxis(*args):
        """GetTransformAxis(INode node, int subIndex) -> Matrix3"""
        return _MaxPlus.Axis_GetTransformAxis(*args)

    GetTransformAxis = staticmethod(GetTransformAxis)
    def GetCount():
        """GetCount() -> int"""
        return _MaxPlus.Axis_GetCount()

    GetCount = staticmethod(GetCount)
    def SetLockTripods(*args):
        """SetLockTripods(bool onOff)"""
        return _MaxPlus.Axis_SetLockTripods(*args)

    SetLockTripods = staticmethod(SetLockTripods)
    def GetTripodLocked():
        """GetTripodLocked() -> bool"""
        return _MaxPlus.Axis_GetTripodLocked()

    GetTripodLocked = staticmethod(GetTripodLocked)
    def GetConstantRestriction():
        """GetConstantRestriction() -> bool"""
        return _MaxPlus.Axis_GetConstantRestriction()

    GetConstantRestriction = staticmethod(GetConstantRestriction)
    def SetConstantRestriction(*args):
        """SetConstantRestriction(bool onOff)"""
        return _MaxPlus.Axis_SetConstantRestriction(*args)

    SetConstantRestriction = staticmethod(SetConstantRestriction)
    __swig_destroy__ = _MaxPlus.delete_Axis
    __del__ = lambda self : None;
Axis_swigregister = _MaxPlus.Axis_swigregister
Axis_swigregister(Axis)

def Axis_GetConstraints():
  """Axis_GetConstraints() -> int"""
  return _MaxPlus.Axis_GetConstraints()

def Axis_SetConstraints(*args):
  """Axis_SetConstraints(int c)"""
  return _MaxPlus.Axis_SetConstraints(*args)

def Axis_EnableConstraints(*args):
  """Axis_EnableConstraints(int c, bool enabled)"""
  return _MaxPlus.Axis_EnableConstraints(*args)

def Axis_PushConstraints(*args):
  """Axis_PushConstraints(int c)"""
  return _MaxPlus.Axis_PushConstraints(*args)

def Axis_PopConstraints():
  """Axis_PopConstraints()"""
  return _MaxPlus.Axis_PopConstraints()

def Axis_GetTransformAxis(*args):
  """Axis_GetTransformAxis(INode node, int subIndex) -> Matrix3"""
  return _MaxPlus.Axis_GetTransformAxis(*args)

def Axis_GetCount():
  """Axis_GetCount() -> int"""
  return _MaxPlus.Axis_GetCount()

def Axis_SetLockTripods(*args):
  """Axis_SetLockTripods(bool onOff)"""
  return _MaxPlus.Axis_SetLockTripods(*args)

def Axis_GetTripodLocked():
  """Axis_GetTripodLocked() -> bool"""
  return _MaxPlus.Axis_GetTripodLocked()

def Axis_GetConstantRestriction():
  """Axis_GetConstantRestriction() -> bool"""
  return _MaxPlus.Axis_GetConstantRestriction()

def Axis_SetConstantRestriction(*args):
  """Axis_SetConstantRestriction(bool onOff)"""
  return _MaxPlus.Axis_SetConstantRestriction(*args)

class Snaps(object):
    """Snap related functions"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def InvalidateOsnapdraw():
        """InvalidateOsnapdraw()"""
        return _MaxPlus.Snaps_InvalidateOsnapdraw()

    InvalidateOsnapdraw = staticmethod(InvalidateOsnapdraw)
    def SnapAngle(*args):
        """
        SnapAngle(float angleIn, bool fastSnap=True, bool forceSnap=False) -> float
        SnapAngle(float angleIn, bool fastSnap=True) -> float
        SnapAngle(float angleIn) -> float
        """
        return _MaxPlus.Snaps_SnapAngle(*args)

    SnapAngle = staticmethod(SnapAngle)
    def SnapPercent(*args):
        """SnapPercent(float percentIn) -> float"""
        return _MaxPlus.Snaps_SnapPercent(*args)

    SnapPercent = staticmethod(SnapPercent)
    def GetSnapState():
        """GetSnapState() -> bool"""
        return _MaxPlus.Snaps_GetSnapState()

    GetSnapState = staticmethod(GetSnapState)
    def GetSnapMode():
        """GetSnapMode() -> int"""
        return _MaxPlus.Snaps_GetSnapMode()

    GetSnapMode = staticmethod(GetSnapMode)
    def SetSnapMode(*args):
        """SetSnapMode(int mode) -> bool"""
        return _MaxPlus.Snaps_SetSnapMode(*args)

    SetSnapMode = staticmethod(SetSnapMode)
    def GetSnapActive():
        """GetSnapActive() -> bool"""
        return _MaxPlus.Snaps_GetSnapActive()

    GetSnapActive = staticmethod(GetSnapActive)
    def SetSnapActive(*args):
        """SetSnapActive(bool onOff)"""
        return _MaxPlus.Snaps_SetSnapActive(*args)

    SetSnapActive = staticmethod(SetSnapActive)
    def GetSnapType():
        """GetSnapType() -> int"""
        return _MaxPlus.Snaps_GetSnapType()

    GetSnapType = staticmethod(GetSnapType)
    def SetSnapType(*args):
        """SetSnapType(int type)"""
        return _MaxPlus.Snaps_SetSnapType(*args)

    SetSnapType = staticmethod(SetSnapType)
    def ToggleAngleSnap():
        """ToggleAngleSnap()"""
        return _MaxPlus.Snaps_ToggleAngleSnap()

    ToggleAngleSnap = staticmethod(ToggleAngleSnap)
    def GetAngleSnapStatus():
        """GetAngleSnapStatus() -> bool"""
        return _MaxPlus.Snaps_GetAngleSnapStatus()

    GetAngleSnapStatus = staticmethod(GetAngleSnapStatus)
    def TogglePercentSnap():
        """TogglePercentSnap()"""
        return _MaxPlus.Snaps_TogglePercentSnap()

    TogglePercentSnap = staticmethod(TogglePercentSnap)
    def GetPercentSnapStatus():
        """GetPercentSnapStatus() -> bool"""
        return _MaxPlus.Snaps_GetPercentSnapStatus()

    GetPercentSnapStatus = staticmethod(GetPercentSnapStatus)
    def GetSnapAngle():
        """GetSnapAngle() -> float"""
        return _MaxPlus.Snaps_GetSnapAngle()

    GetSnapAngle = staticmethod(GetSnapAngle)
    def SetSnapAngle(*args):
        """SetSnapAngle(float newVal)"""
        return _MaxPlus.Snaps_SetSnapAngle(*args)

    SetSnapAngle = staticmethod(SetSnapAngle)
    def GetSnapPercent():
        """GetSnapPercent() -> float"""
        return _MaxPlus.Snaps_GetSnapPercent()

    GetSnapPercent = staticmethod(GetSnapPercent)
    def SetSnapPercent(*args):
        """SetSnapPercent(float newVal)"""
        return _MaxPlus.Snaps_SetSnapPercent(*args)

    SetSnapPercent = staticmethod(SetSnapPercent)
    __swig_destroy__ = _MaxPlus.delete_Snaps
    __del__ = lambda self : None;
Snaps_swigregister = _MaxPlus.Snaps_swigregister
Snaps_swigregister(Snaps)

def Snaps_InvalidateOsnapdraw():
  """Snaps_InvalidateOsnapdraw()"""
  return _MaxPlus.Snaps_InvalidateOsnapdraw()

def Snaps_SnapAngle(*args):
  """
    SnapAngle(float angleIn, bool fastSnap=True, bool forceSnap=False) -> float
    SnapAngle(float angleIn, bool fastSnap=True) -> float
    Snaps_SnapAngle(float angleIn) -> float
    """
  return _MaxPlus.Snaps_SnapAngle(*args)

def Snaps_SnapPercent(*args):
  """Snaps_SnapPercent(float percentIn) -> float"""
  return _MaxPlus.Snaps_SnapPercent(*args)

def Snaps_GetSnapState():
  """Snaps_GetSnapState() -> bool"""
  return _MaxPlus.Snaps_GetSnapState()

def Snaps_GetSnapMode():
  """Snaps_GetSnapMode() -> int"""
  return _MaxPlus.Snaps_GetSnapMode()

def Snaps_SetSnapMode(*args):
  """Snaps_SetSnapMode(int mode) -> bool"""
  return _MaxPlus.Snaps_SetSnapMode(*args)

def Snaps_GetSnapActive():
  """Snaps_GetSnapActive() -> bool"""
  return _MaxPlus.Snaps_GetSnapActive()

def Snaps_SetSnapActive(*args):
  """Snaps_SetSnapActive(bool onOff)"""
  return _MaxPlus.Snaps_SetSnapActive(*args)

def Snaps_GetSnapType():
  """Snaps_GetSnapType() -> int"""
  return _MaxPlus.Snaps_GetSnapType()

def Snaps_SetSnapType(*args):
  """Snaps_SetSnapType(int type)"""
  return _MaxPlus.Snaps_SetSnapType(*args)

def Snaps_ToggleAngleSnap():
  """Snaps_ToggleAngleSnap()"""
  return _MaxPlus.Snaps_ToggleAngleSnap()

def Snaps_GetAngleSnapStatus():
  """Snaps_GetAngleSnapStatus() -> bool"""
  return _MaxPlus.Snaps_GetAngleSnapStatus()

def Snaps_TogglePercentSnap():
  """Snaps_TogglePercentSnap()"""
  return _MaxPlus.Snaps_TogglePercentSnap()

def Snaps_GetPercentSnapStatus():
  """Snaps_GetPercentSnapStatus() -> bool"""
  return _MaxPlus.Snaps_GetPercentSnapStatus()

def Snaps_GetSnapAngle():
  """Snaps_GetSnapAngle() -> float"""
  return _MaxPlus.Snaps_GetSnapAngle()

def Snaps_SetSnapAngle(*args):
  """Snaps_SetSnapAngle(float newVal)"""
  return _MaxPlus.Snaps_SetSnapAngle(*args)

def Snaps_GetSnapPercent():
  """Snaps_GetSnapPercent() -> float"""
  return _MaxPlus.Snaps_GetSnapPercent()

def Snaps_SetSnapPercent(*args):
  """Snaps_SetSnapPercent(float newVal)"""
  return _MaxPlus.Snaps_SetSnapPercent(*args)

class XRefs(object):
    """XRef utility functions"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def SetIncludeInHierarchy(*args):
        """SetIncludeInHierarchy(bool onOff)"""
        return _MaxPlus.XRefs_SetIncludeInHierarchy(*args)

    SetIncludeInHierarchy = staticmethod(SetIncludeInHierarchy)
    def GetIncludeInHierarchy():
        """GetIncludeInHierarchy() -> bool"""
        return _MaxPlus.XRefs_GetIncludeInHierarchy()

    GetIncludeInHierarchy = staticmethod(GetIncludeInHierarchy)
    def IsAutoUpdateSuspended():
        """IsAutoUpdateSuspended() -> bool"""
        return _MaxPlus.XRefs_IsAutoUpdateSuspended()

    IsAutoUpdateSuspended = staticmethod(IsAutoUpdateSuspended)
    def SetAutoUpdateSuspended(*args):
        """SetAutoUpdateSuspended(bool onOff)"""
        return _MaxPlus.XRefs_SetAutoUpdateSuspended(*args)

    SetAutoUpdateSuspended = staticmethod(SetAutoUpdateSuspended)
    def SceneSetIgnoreFlag(*args):
        """SceneSetIgnoreFlag(int index, DWORD f, bool onOff)"""
        return _MaxPlus.XRefs_SceneSetIgnoreFlag(*args)

    SceneSetIgnoreFlag = staticmethod(SceneSetIgnoreFlag)
    def UpdateSceneXRefState():
        """UpdateSceneXRefState()"""
        return _MaxPlus.XRefs_UpdateSceneXRefState()

    UpdateSceneXRefState = staticmethod(UpdateSceneXRefState)
    __swig_destroy__ = _MaxPlus.delete_XRefs
    __del__ = lambda self : None;
XRefs_swigregister = _MaxPlus.XRefs_swigregister
XRefs_swigregister(XRefs)

def XRefs_SetIncludeInHierarchy(*args):
  """XRefs_SetIncludeInHierarchy(bool onOff)"""
  return _MaxPlus.XRefs_SetIncludeInHierarchy(*args)

def XRefs_GetIncludeInHierarchy():
  """XRefs_GetIncludeInHierarchy() -> bool"""
  return _MaxPlus.XRefs_GetIncludeInHierarchy()

def XRefs_IsAutoUpdateSuspended():
  """XRefs_IsAutoUpdateSuspended() -> bool"""
  return _MaxPlus.XRefs_IsAutoUpdateSuspended()

def XRefs_SetAutoUpdateSuspended(*args):
  """XRefs_SetAutoUpdateSuspended(bool onOff)"""
  return _MaxPlus.XRefs_SetAutoUpdateSuspended(*args)

def XRefs_SceneSetIgnoreFlag(*args):
  """XRefs_SceneSetIgnoreFlag(int index, DWORD f, bool onOff)"""
  return _MaxPlus.XRefs_SceneSetIgnoreFlag(*args)

def XRefs_UpdateSceneXRefState():
  """XRefs_UpdateSceneXRefState()"""
  return _MaxPlus.XRefs_UpdateSceneXRefState()

class CoordinateSystem(object):
    """Coordinate system utility functions"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetCurrent(*args):
        """GetCurrent(WStr name)"""
        return _MaxPlus.CoordinateSystem_GetCurrent(*args)

    GetCurrent = staticmethod(GetCurrent)
    def AddReferencedNode(*args):
        """AddReferencedNode(INode node)"""
        return _MaxPlus.CoordinateSystem_AddReferencedNode(*args)

    AddReferencedNode = staticmethod(AddReferencedNode)
    def GetReferenceNode():
        """GetReferenceNode() -> INode"""
        return _MaxPlus.CoordinateSystem_GetReferenceNode()

    GetReferenceNode = staticmethod(GetReferenceNode)
    def GetCenter():
        """GetCenter() -> int"""
        return _MaxPlus.CoordinateSystem_GetCenter()

    GetCenter = staticmethod(GetCenter)
    def SetCenter(*args):
        """SetCenter(int c)"""
        return _MaxPlus.CoordinateSystem_SetCenter(*args)

    SetCenter = staticmethod(SetCenter)
    def EnableCenter(*args):
        """EnableCenter(bool enabled)"""
        return _MaxPlus.CoordinateSystem_EnableCenter(*args)

    EnableCenter = staticmethod(EnableCenter)
    def GetReferenceSystem():
        """GetReferenceSystem() -> int"""
        return _MaxPlus.CoordinateSystem_GetReferenceSystem()

    GetReferenceSystem = staticmethod(GetReferenceSystem)
    def SetReferenceSystem(*args):
        """SetReferenceSystem(int c)"""
        return _MaxPlus.CoordinateSystem_SetReferenceSystem(*args)

    SetReferenceSystem = staticmethod(SetReferenceSystem)
    def EnableReferenceSystem(*args):
        """EnableReferenceSystem(bool enabled)"""
        return _MaxPlus.CoordinateSystem_EnableReferenceSystem(*args)

    EnableReferenceSystem = staticmethod(EnableReferenceSystem)
    __swig_destroy__ = _MaxPlus.delete_CoordinateSystem
    __del__ = lambda self : None;
CoordinateSystem_swigregister = _MaxPlus.CoordinateSystem_swigregister
CoordinateSystem_swigregister(CoordinateSystem)

def CoordinateSystem_GetCurrent(*args):
  """CoordinateSystem_GetCurrent(WStr name)"""
  return _MaxPlus.CoordinateSystem_GetCurrent(*args)

def CoordinateSystem_AddReferencedNode(*args):
  """CoordinateSystem_AddReferencedNode(INode node)"""
  return _MaxPlus.CoordinateSystem_AddReferencedNode(*args)

def CoordinateSystem_GetReferenceNode():
  """CoordinateSystem_GetReferenceNode() -> INode"""
  return _MaxPlus.CoordinateSystem_GetReferenceNode()

def CoordinateSystem_GetCenter():
  """CoordinateSystem_GetCenter() -> int"""
  return _MaxPlus.CoordinateSystem_GetCenter()

def CoordinateSystem_SetCenter(*args):
  """CoordinateSystem_SetCenter(int c)"""
  return _MaxPlus.CoordinateSystem_SetCenter(*args)

def CoordinateSystem_EnableCenter(*args):
  """CoordinateSystem_EnableCenter(bool enabled)"""
  return _MaxPlus.CoordinateSystem_EnableCenter(*args)

def CoordinateSystem_GetReferenceSystem():
  """CoordinateSystem_GetReferenceSystem() -> int"""
  return _MaxPlus.CoordinateSystem_GetReferenceSystem()

def CoordinateSystem_SetReferenceSystem(*args):
  """CoordinateSystem_SetReferenceSystem(int c)"""
  return _MaxPlus.CoordinateSystem_SetReferenceSystem(*args)

def CoordinateSystem_EnableReferenceSystem(*args):
  """CoordinateSystem_EnableReferenceSystem(bool enabled)"""
  return _MaxPlus.CoordinateSystem_EnableReferenceSystem(*args)

class Grid(object):
    """Grid utility functions"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def GetIntensity():
        """GetIntensity() -> float"""
        return _MaxPlus.Grid_GetIntensity()

    GetIntensity = staticmethod(GetIntensity)
    def SetIntensity(*args):
        """SetIntensity(float f)"""
        return _MaxPlus.Grid_SetIntensity(*args)

    SetIntensity = staticmethod(SetIntensity)
    def GetWhiteOrigin():
        """GetWhiteOrigin() -> bool"""
        return _MaxPlus.Grid_GetWhiteOrigin()

    GetWhiteOrigin = staticmethod(GetWhiteOrigin)
    def SetWhiteOrigin(*args):
        """SetWhiteOrigin(bool b)"""
        return _MaxPlus.Grid_SetWhiteOrigin(*args)

    SetWhiteOrigin = staticmethod(SetWhiteOrigin)
    def GetUseGridColor():
        """GetUseGridColor() -> bool"""
        return _MaxPlus.Grid_GetUseGridColor()

    GetUseGridColor = staticmethod(GetUseGridColor)
    def SetUseGridColor(*args):
        """SetUseGridColor(bool b)"""
        return _MaxPlus.Grid_SetUseGridColor(*args)

    SetUseGridColor = staticmethod(SetUseGridColor)
    def Add(*args):
        """Add(INode node)"""
        return _MaxPlus.Grid_Add(*args)

    Add = staticmethod(Add)
    def SetActive(*args):
        """SetActive(INode node)"""
        return _MaxPlus.Grid_SetActive(*args)

    SetActive = staticmethod(SetActive)
    def GetActive():
        """GetActive() -> INode"""
        return _MaxPlus.Grid_GetActive()

    GetActive = staticmethod(GetActive)
    def GetSpacing():
        """GetSpacing() -> float"""
        return _MaxPlus.Grid_GetSpacing()

    GetSpacing = staticmethod(GetSpacing)
    def SetSpacing(*args):
        """SetSpacing(float newVal)"""
        return _MaxPlus.Grid_SetSpacing(*args)

    SetSpacing = staticmethod(SetSpacing)
    def GetMajorLines():
        """GetMajorLines() -> int"""
        return _MaxPlus.Grid_GetMajorLines()

    GetMajorLines = staticmethod(GetMajorLines)
    def SetMajorLines(*args):
        """SetMajorLines(float newVal)"""
        return _MaxPlus.Grid_SetMajorLines(*args)

    SetMajorLines = staticmethod(SetMajorLines)
    __swig_destroy__ = _MaxPlus.delete_Grid
    __del__ = lambda self : None;
Grid_swigregister = _MaxPlus.Grid_swigregister
Grid_swigregister(Grid)

def Grid_GetIntensity():
  """Grid_GetIntensity() -> float"""
  return _MaxPlus.Grid_GetIntensity()

def Grid_SetIntensity(*args):
  """Grid_SetIntensity(float f)"""
  return _MaxPlus.Grid_SetIntensity(*args)

def Grid_GetWhiteOrigin():
  """Grid_GetWhiteOrigin() -> bool"""
  return _MaxPlus.Grid_GetWhiteOrigin()

def Grid_SetWhiteOrigin(*args):
  """Grid_SetWhiteOrigin(bool b)"""
  return _MaxPlus.Grid_SetWhiteOrigin(*args)

def Grid_GetUseGridColor():
  """Grid_GetUseGridColor() -> bool"""
  return _MaxPlus.Grid_GetUseGridColor()

def Grid_SetUseGridColor(*args):
  """Grid_SetUseGridColor(bool b)"""
  return _MaxPlus.Grid_SetUseGridColor(*args)

def Grid_Add(*args):
  """Grid_Add(INode node)"""
  return _MaxPlus.Grid_Add(*args)

def Grid_SetActive(*args):
  """Grid_SetActive(INode node)"""
  return _MaxPlus.Grid_SetActive(*args)

def Grid_GetActive():
  """Grid_GetActive() -> INode"""
  return _MaxPlus.Grid_GetActive()

def Grid_GetSpacing():
  """Grid_GetSpacing() -> float"""
  return _MaxPlus.Grid_GetSpacing()

def Grid_SetSpacing(*args):
  """Grid_SetSpacing(float newVal)"""
  return _MaxPlus.Grid_SetSpacing(*args)

def Grid_GetMajorLines():
  """Grid_GetMajorLines() -> int"""
  return _MaxPlus.Grid_GetMajorLines()

def Grid_SetMajorLines(*args):
  """Grid_SetMajorLines(float newVal)"""
  return _MaxPlus.Grid_SetMajorLines(*args)

# The following classes expose the notification system to Python in a safe way.

class _NotificationHandler(AbstractNotificationHandler):
    ''' Wraps a callback function as a notification handler '''
    def __init__(self, notifyCallback):
        AbstractNotificationHandler.__init__(self)
        self.callback = notifyCallback
    def OnNotify(self, notifyCode):
        self.callback(notifyCode)

class NotificationManager(object):
    ''' Allows callback functions to be registered with notifications. '''
    Handlers = [] # This assures that Python garbage collection does not delete our handlers.

    @staticmethod
    def Register(notifyCode, notifyCallback):
       ''' Registers a callback function with the particular notification code.
           The returned handler object will not be collected, until it is unregistered. '''
       handler = _NotificationHandler(notifyCallback)
       NotificationManager.Handlers.append(handler)
       _INTERNAL_NotificationManager.AddHandler(notifyCode, handler)
       return handler

    @staticmethod
    def Unregister(handler):
       ''' Unregisters a handler. '''
       _INTERNAL_NotificationManager.RemoveHandler(handler)
       NotificationManager.Handlers.remove(handler)

class _CustomActionItem(AbstractCustomActionItem):
    ''' Wraps a custom user action. '''
    def __init__(self, category, name, fxn):
        try:
            AbstractCustomActionItem.__init__(self)
            self.category = category
            self.name = name
            self.fxn = fxn
            self.id = hash('Python_' + category + '_' + name)
        except:
            print 'Error occured creating custom user action'
    def GetMenuText(self):
        return self.name
    def GetId(self):
        return self.id
    def GetCategoryText(self):
        return self.category
    def Execute(self):
        try:
            self.fxn()
        except:
            print 'Error occured executing user action'

class ActionFactory(object):
    ''' Creates basic action items.  '''
    ActionItems = [] # This assures that Python garbage collection does not delete our action items
    CustomActionItems = []  # This assures that Python garbage collection does not delete our action items

    @staticmethod
    def CreateFromAbstract(item):
        ''' Creates a new action item from an AbstractCustomActionItem '''
        try:
            r = _INTERNAL_CustomActionCallback.AddAction(item)
            ActionFactory.ActionItems.append(r)
            return r
        except:
            print 'An error occurred creating an abstract action item'

    @staticmethod
    def Create(category, name, fxn):
        ''' Creates a new action item from the category, name and function. '''
        try:
            item = _CustomActionItem(category, name, fxn)
            ActionFactory.CustomActionItems.append(item)
            return ActionFactory.CreateFromAbstract(item)
        except:
            print 'An error occurred creating an action item'

# \TODO: Add handling of Point, FPValue, and Value.
_FPValueGetters = {
    FPTypeConstants.Float : FPValue.GetFloat,
    FPTypeConstants.Int : FPValue.GetInt,
    FPTypeConstants.Rgb : FPValue.GetColor,
    FPTypeConstants.Point3 : FPValue.GetPoint3,
    FPTypeConstants.BOOL : FPValue.GetBool,
    FPTypeConstants.Angle : FPValue.GetFloat,
    FPTypeConstants.PercentFraction : FPValue.GetFloat,
    FPTypeConstants.World : FPValue.GetFloat,
    FPTypeConstants.String : FPValue.GetPChar,
    FPTypeConstants.FileName : FPValue.GetPChar,
    FPTypeConstants.Hsv : FPValue.GetPoint3,
    FPTypeConstants.ColorChannel : FPValue.GetFloat,
    FPTypeConstants.TimeValue : FPValue.GetInt,
    FPTypeConstants.RadioButtonIndex : FPValue.GetInt,
    FPTypeConstants.Mtl : FPValue.GetMtl,
    FPTypeConstants.Texmap : FPValue.GetTexmap,
    FPTypeConstants.Bitmap : FPValue.GetBitmap,
    FPTypeConstants.Node : FPValue.GetNode,
    FPTypeConstants.RefTarg : FPValue.GetReferenceTarget,
    FPTypeConstants.Index : FPValue.GetInt,
    FPTypeConstants.Matrix3 : FPValue.GetMatrix3,
    FPTypeConstants.PBlock2 : FPValue.GetReferenceTarget,
    FPTypeConstants.Point4 : FPValue.GetPoint4,
    FPTypeConstants.FRgb : FPValue.GetAColor,
    FPTypeConstants.Enum : FPValue.GetInt,
    # FPTypeConstants.Void : FPValue.GetVoid,
    FPTypeConstants.Interval : FPValue.GetInterval,
    FPTypeConstants.AngAxis : FPValue.GetAngAxis,
    FPTypeConstants.Quat : FPValue.GetQuat,
    FPTypeConstants.Ray : FPValue.GetRay,
    FPTypeConstants.Point2 : FPValue.GetPoint2,
    FPTypeConstants.BitArray : FPValue.GetBitArray,
    FPTypeConstants.ClassDesc : FPValue.GetClassDesc,
    FPTypeConstants.Mesh : FPValue.GetMesh,
    FPTypeConstants.Object : FPValue.GetObject,
    FPTypeConstants.Control : FPValue.GetControl,
    FPTypeConstants.Point : FPValue.GetIPoint2,
    FPTypeConstants.Str : FPValue.GetStr,
    FPTypeConstants.IObject : FPValue.GetIObject,
    FPTypeConstants.FPInterface : FPValue.GetFPInterface,
    FPTypeConstants.HWND : FPValue.GetInt64,
    FPTypeConstants.Name : FPValue.GetPChar,
    FPTypeConstants.Color : FPValue.GetColor,
    # FPTypeConstants.FPValue : FPValue.GetFPValue,
    # FPTypeConstants.Value : FPValue.GetValue,
    FPTypeConstants.DWORD : FPValue.GetDWORD,
    FPTypeConstants.Bool : FPValue.GetBool,
    FPTypeConstants.IntPtr : FPValue.GetInt64,
    FPTypeConstants.Int64 : FPValue.GetInt64,
    FPTypeConstants.Double : FPValue.GetDouble,
    FPTypeConstants.MSFloat : FPValue.GetFloat,

    FPTypeConstants.FloatTab : FPValue.GetFloatList,
    FPTypeConstants.IntTab : FPValue.GetIntList,
    FPTypeConstants.RgbTab : FPValue.GetColorList,
    FPTypeConstants.Point3Tab : FPValue.GetPoint3List,
    FPTypeConstants.BOOLTab : FPValue.GetBoolList,
    FPTypeConstants.AngleTab : FPValue.GetFloatList,
    FPTypeConstants.PercentFractionTab : FPValue.GetFloatList,
    FPTypeConstants.WorldTab : FPValue.GetFloatList,
    FPTypeConstants.StringTab : FPValue.GetPCharList,
    FPTypeConstants.FileNameTab : FPValue.GetPCharList,
    FPTypeConstants.HsvTab : FPValue.GetPoint3List,
    FPTypeConstants.ColorChannelTab : FPValue.GetFloatList,
    FPTypeConstants.TimeValueTab : FPValue.GetIntList,
    FPTypeConstants.RadioButtonIndexTab : FPValue.GetIntList,
    FPTypeConstants.MtlTab : FPValue.GetMtlList,
    FPTypeConstants.TexmapTab : FPValue.GetTexmapList,
    FPTypeConstants.BitmapTab : FPValue.GetBitmapList,
    FPTypeConstants.NodeTab : FPValue.GetNodeList,
    FPTypeConstants.RefTargTab : FPValue.GetReferenceTargetList,
    FPTypeConstants.IndexTab : FPValue.GetIntList,
    FPTypeConstants.Matrix3Tab : FPValue.GetMatrix3List,
    FPTypeConstants.PBlock2Tab : FPValue.GetReferenceTargetList,
    FPTypeConstants.Point4Tab : FPValue.GetPoint4List,
    FPTypeConstants.FRgbTab : FPValue.GetAColorList,
    FPTypeConstants.EnumTab : FPValue.GetIntList,
    # FPTypeConstants.VoidTab : FPValue.GetVoidList,
    FPTypeConstants.IntervalTab : FPValue.GetIntervalList,
    FPTypeConstants.AngAxisTab : FPValue.GetAngAxisList,
    FPTypeConstants.QuatTab : FPValue.GetQuatList,
    FPTypeConstants.RayTab : FPValue.GetRayList,
    FPTypeConstants.Point2Tab : FPValue.GetPoint2List,
    FPTypeConstants.BitArrayTab : FPValue.GetBitArrayList,
    FPTypeConstants.ClassDescTab : FPValue.GetClassDescList,
    FPTypeConstants.MeshTab : FPValue.GetMeshList,
    FPTypeConstants.ObjectTab : FPValue.GetObjectList,
    FPTypeConstants.ControlTab : FPValue.GetControlList,
    FPTypeConstants.PointTab : FPValue.GetIPoint2List,
    FPTypeConstants.StrTab : FPValue.GetStrList,
    FPTypeConstants.IObjectTab : FPValue.GetIObjectList,
    FPTypeConstants.FPInterfaceTab : FPValue.GetFPInterfaceList,
    FPTypeConstants.HWNDTab : FPValue.GetInt64List,
    FPTypeConstants.NameTab : FPValue.GetPCharList,
    FPTypeConstants.ColorTab : FPValue.GetColorList,
    # FPTypeConstants.FPValueTab : FPValue.GetFPValueList,
    # FPTypeConstants.ValueTab : FPValue.GetValueList,
    FPTypeConstants.DWORDTab : FPValue.GetDWORDList,
    FPTypeConstants.BoolTab : FPValue.GetBoolList,
    FPTypeConstants.IntPtrTab : FPValue.GetInt64List,
    FPTypeConstants.Int64Tab : FPValue.GetInt64List,
    FPTypeConstants.DoubleTab : FPValue.GetDoubleList,
}

FPTypeNames = {}
for k in dir(FPTypeConstants):
    v = getattr(FPTypeConstants, k)
    if type(v) == int:
        FPTypeNames[v] = k

def FPTypeGetName(type):
    ''' Returns the name associated with the FPValue type, 'unknown' if type not valid. '''
    return FPTypeNames.get(type, 'unknown')

def FPValue_Get(self):
    ''' Returns the value stored in FPValue of the correct type. '''
    t = self.Type
    t = t & ~FPTypeConstants._ValueIsByValueOrReferenceOrPointer
    if not t in _FPValueGetters:
        raise RuntimeError('unable to find an appropriate get function for type {0}'.format(t))
    return _FPValueGetters[t](self, True)

# Add a new function to the FPValue class.
if not hasattr(FPValue, "Get"):
    FPValue.Get = FPValue_Get

# Create a new function for getting the value from a parameter as the actual type: not just an FPValue
def Parameter_GetValue_Typed(self):
    ''' Gets the value from a Parameter as the actual type, not as an FPValue '''
    fpv = self._GetValue()
    return fpv.Get()

# We are renaming the original 'GetValue' function on Parameter (which returns an FPValue) to '_GetValue'
# and replacing with a new typed version
if not hasattr(Parameter, "_GetValue"):
    Parameter._GetValue = Parameter.GetValue
    Parameter.GetValue = Parameter_GetValue_Typed

# Create a new function for setting the value of a parameter from the actual type: not just an FPValue
def Parameter_SetValue_Typed(self, x):
    ''' Sets the value from a Parameter as the actual type, not as an FPValue '''
    fpv = FPValue()
    type = self.Type
    if type == FPTypeConstants.MSFloat:
        type = FPTypeConstants.Float
    if type == FPTypeConstants.BOOL:
        type = FPTypeConstants.Bool
    if type == FPTypeConstants.BOOLTab:
        type = FPTypeConstants.BoolTab
    fpv.Set(x, type, True)
    self._SetValue(fpv)

# Rename the original SetValue function to _SetValue
# and replacing with a new typed version
if not hasattr(Parameter, "_SetValue"):
    Parameter._SetValue = Parameter.SetValue
    Parameter.SetValue = Parameter_SetValue_Typed

# Make sure the property is updated
Parameter.Value = _swig_property(Parameter.GetValue, Parameter.SetValue)

# Create a new function for getting the value from an ArrayParameter as the actual type: not just an FPValue
def ArrayParameter_GetValue_Typed(self):
    ''' Gets the value from an ArrayParameter as the actual type, not as an FPValue '''
    fpv = self._GetValue()
    return fpv.Get()

# We are renaming the original 'GetValue' function on ArrayParameter (which returns an FPValue) to '_GetValue'
# and replacing with a new typed version
if not hasattr(ArrayParameter, "_GetValue"):
    ArrayParameter._GetValue = ArrayParameter.GetValue
    ArrayParameter.GetValue = ArrayParameter_GetValue_Typed

# Create a new function for setting the value of an ArrayParameter from the actual type: not just an FPValue
def ArrayParameter_SetValue_Typed(self, x):
    ''' Sets the value from an ArrayParameter as the actual type, not as an FPValue '''
    fpv = FPValue()
    type = self.Type
    fpv.Set(x, type)
    self._SetValue(fpv)

# Rename the original SetValue function to _SetValue
# and replacing with a new typed version
if not hasattr(ArrayParameter, "_SetValue"):
    ArrayParameter._SetValue = ArrayParameter.SetValue
    ArrayParameter.SetValue = ArrayParameter_SetValue_Typed

# Make sure the property is updated
ArrayParameter.Value = _swig_property(ArrayParameter.GetValue, ArrayParameter.SetValue)




